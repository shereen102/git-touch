// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'schema.schema.gql.dart';

// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

const GAccessLevelEnum _$gAccessLevelEnumNO_ACCESS =
    const GAccessLevelEnum._('NO_ACCESS');
const GAccessLevelEnum _$gAccessLevelEnumMINIMAL_ACCESS =
    const GAccessLevelEnum._('MINIMAL_ACCESS');
const GAccessLevelEnum _$gAccessLevelEnumGUEST =
    const GAccessLevelEnum._('GUEST');
const GAccessLevelEnum _$gAccessLevelEnumREPORTER =
    const GAccessLevelEnum._('REPORTER');
const GAccessLevelEnum _$gAccessLevelEnumDEVELOPER =
    const GAccessLevelEnum._('DEVELOPER');
const GAccessLevelEnum _$gAccessLevelEnumMAINTAINER =
    const GAccessLevelEnum._('MAINTAINER');
const GAccessLevelEnum _$gAccessLevelEnumOWNER =
    const GAccessLevelEnum._('OWNER');

GAccessLevelEnum _$gAccessLevelEnumValueOf(String name) {
  switch (name) {
    case 'NO_ACCESS':
      return _$gAccessLevelEnumNO_ACCESS;
    case 'MINIMAL_ACCESS':
      return _$gAccessLevelEnumMINIMAL_ACCESS;
    case 'GUEST':
      return _$gAccessLevelEnumGUEST;
    case 'REPORTER':
      return _$gAccessLevelEnumREPORTER;
    case 'DEVELOPER':
      return _$gAccessLevelEnumDEVELOPER;
    case 'MAINTAINER':
      return _$gAccessLevelEnumMAINTAINER;
    case 'OWNER':
      return _$gAccessLevelEnumOWNER;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAccessLevelEnum> _$gAccessLevelEnumValues =
    new BuiltSet<GAccessLevelEnum>(const <GAccessLevelEnum>[
  _$gAccessLevelEnumNO_ACCESS,
  _$gAccessLevelEnumMINIMAL_ACCESS,
  _$gAccessLevelEnumGUEST,
  _$gAccessLevelEnumREPORTER,
  _$gAccessLevelEnumDEVELOPER,
  _$gAccessLevelEnumMAINTAINER,
  _$gAccessLevelEnumOWNER,
]);

const GAgentTokenStatus _$gAgentTokenStatusACTIVE =
    const GAgentTokenStatus._('ACTIVE');
const GAgentTokenStatus _$gAgentTokenStatusREVOKED =
    const GAgentTokenStatus._('REVOKED');

GAgentTokenStatus _$gAgentTokenStatusValueOf(String name) {
  switch (name) {
    case 'ACTIVE':
      return _$gAgentTokenStatusACTIVE;
    case 'REVOKED':
      return _$gAgentTokenStatusREVOKED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAgentTokenStatus> _$gAgentTokenStatusValues =
    new BuiltSet<GAgentTokenStatus>(const <GAgentTokenStatus>[
  _$gAgentTokenStatusACTIVE,
  _$gAgentTokenStatusREVOKED,
]);

const GAlertManagementAlertSort _$gAlertManagementAlertSortSTARTED_AT_ASC =
    const GAlertManagementAlertSort._('STARTED_AT_ASC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortSTARTED_AT_DESC =
    const GAlertManagementAlertSort._('STARTED_AT_DESC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortENDED_AT_ASC =
    const GAlertManagementAlertSort._('ENDED_AT_ASC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortENDED_AT_DESC =
    const GAlertManagementAlertSort._('ENDED_AT_DESC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortCREATED_TIME_ASC =
    const GAlertManagementAlertSort._('CREATED_TIME_ASC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortCREATED_TIME_DESC =
    const GAlertManagementAlertSort._('CREATED_TIME_DESC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortUPDATED_TIME_ASC =
    const GAlertManagementAlertSort._('UPDATED_TIME_ASC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortUPDATED_TIME_DESC =
    const GAlertManagementAlertSort._('UPDATED_TIME_DESC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortEVENT_COUNT_ASC =
    const GAlertManagementAlertSort._('EVENT_COUNT_ASC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortEVENT_COUNT_DESC =
    const GAlertManagementAlertSort._('EVENT_COUNT_DESC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortSEVERITY_ASC =
    const GAlertManagementAlertSort._('SEVERITY_ASC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortSEVERITY_DESC =
    const GAlertManagementAlertSort._('SEVERITY_DESC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortSTATUS_ASC =
    const GAlertManagementAlertSort._('STATUS_ASC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortSTATUS_DESC =
    const GAlertManagementAlertSort._('STATUS_DESC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortupdated_desc =
    const GAlertManagementAlertSort._('updated_desc');
const GAlertManagementAlertSort _$gAlertManagementAlertSortupdated_asc =
    const GAlertManagementAlertSort._('updated_asc');
const GAlertManagementAlertSort _$gAlertManagementAlertSortcreated_desc =
    const GAlertManagementAlertSort._('created_desc');
const GAlertManagementAlertSort _$gAlertManagementAlertSortcreated_asc =
    const GAlertManagementAlertSort._('created_asc');
const GAlertManagementAlertSort _$gAlertManagementAlertSortUPDATED_DESC =
    const GAlertManagementAlertSort._('UPDATED_DESC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortUPDATED_ASC =
    const GAlertManagementAlertSort._('UPDATED_ASC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortCREATED_DESC =
    const GAlertManagementAlertSort._('CREATED_DESC');
const GAlertManagementAlertSort _$gAlertManagementAlertSortCREATED_ASC =
    const GAlertManagementAlertSort._('CREATED_ASC');

GAlertManagementAlertSort _$gAlertManagementAlertSortValueOf(String name) {
  switch (name) {
    case 'STARTED_AT_ASC':
      return _$gAlertManagementAlertSortSTARTED_AT_ASC;
    case 'STARTED_AT_DESC':
      return _$gAlertManagementAlertSortSTARTED_AT_DESC;
    case 'ENDED_AT_ASC':
      return _$gAlertManagementAlertSortENDED_AT_ASC;
    case 'ENDED_AT_DESC':
      return _$gAlertManagementAlertSortENDED_AT_DESC;
    case 'CREATED_TIME_ASC':
      return _$gAlertManagementAlertSortCREATED_TIME_ASC;
    case 'CREATED_TIME_DESC':
      return _$gAlertManagementAlertSortCREATED_TIME_DESC;
    case 'UPDATED_TIME_ASC':
      return _$gAlertManagementAlertSortUPDATED_TIME_ASC;
    case 'UPDATED_TIME_DESC':
      return _$gAlertManagementAlertSortUPDATED_TIME_DESC;
    case 'EVENT_COUNT_ASC':
      return _$gAlertManagementAlertSortEVENT_COUNT_ASC;
    case 'EVENT_COUNT_DESC':
      return _$gAlertManagementAlertSortEVENT_COUNT_DESC;
    case 'SEVERITY_ASC':
      return _$gAlertManagementAlertSortSEVERITY_ASC;
    case 'SEVERITY_DESC':
      return _$gAlertManagementAlertSortSEVERITY_DESC;
    case 'STATUS_ASC':
      return _$gAlertManagementAlertSortSTATUS_ASC;
    case 'STATUS_DESC':
      return _$gAlertManagementAlertSortSTATUS_DESC;
    case 'updated_desc':
      return _$gAlertManagementAlertSortupdated_desc;
    case 'updated_asc':
      return _$gAlertManagementAlertSortupdated_asc;
    case 'created_desc':
      return _$gAlertManagementAlertSortcreated_desc;
    case 'created_asc':
      return _$gAlertManagementAlertSortcreated_asc;
    case 'UPDATED_DESC':
      return _$gAlertManagementAlertSortUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gAlertManagementAlertSortUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gAlertManagementAlertSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gAlertManagementAlertSortCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAlertManagementAlertSort> _$gAlertManagementAlertSortValues =
    new BuiltSet<GAlertManagementAlertSort>(const <GAlertManagementAlertSort>[
  _$gAlertManagementAlertSortSTARTED_AT_ASC,
  _$gAlertManagementAlertSortSTARTED_AT_DESC,
  _$gAlertManagementAlertSortENDED_AT_ASC,
  _$gAlertManagementAlertSortENDED_AT_DESC,
  _$gAlertManagementAlertSortCREATED_TIME_ASC,
  _$gAlertManagementAlertSortCREATED_TIME_DESC,
  _$gAlertManagementAlertSortUPDATED_TIME_ASC,
  _$gAlertManagementAlertSortUPDATED_TIME_DESC,
  _$gAlertManagementAlertSortEVENT_COUNT_ASC,
  _$gAlertManagementAlertSortEVENT_COUNT_DESC,
  _$gAlertManagementAlertSortSEVERITY_ASC,
  _$gAlertManagementAlertSortSEVERITY_DESC,
  _$gAlertManagementAlertSortSTATUS_ASC,
  _$gAlertManagementAlertSortSTATUS_DESC,
  _$gAlertManagementAlertSortupdated_desc,
  _$gAlertManagementAlertSortupdated_asc,
  _$gAlertManagementAlertSortcreated_desc,
  _$gAlertManagementAlertSortcreated_asc,
  _$gAlertManagementAlertSortUPDATED_DESC,
  _$gAlertManagementAlertSortUPDATED_ASC,
  _$gAlertManagementAlertSortCREATED_DESC,
  _$gAlertManagementAlertSortCREATED_ASC,
]);

const GAlertManagementDomainFilter _$gAlertManagementDomainFilteroperations =
    const GAlertManagementDomainFilter._('operations');
const GAlertManagementDomainFilter
    _$gAlertManagementDomainFilterthreat_monitoring =
    const GAlertManagementDomainFilter._('threat_monitoring');

GAlertManagementDomainFilter _$gAlertManagementDomainFilterValueOf(
    String name) {
  switch (name) {
    case 'operations':
      return _$gAlertManagementDomainFilteroperations;
    case 'threat_monitoring':
      return _$gAlertManagementDomainFilterthreat_monitoring;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAlertManagementDomainFilter>
    _$gAlertManagementDomainFilterValues = new BuiltSet<
        GAlertManagementDomainFilter>(const <GAlertManagementDomainFilter>[
  _$gAlertManagementDomainFilteroperations,
  _$gAlertManagementDomainFilterthreat_monitoring,
]);

const GAlertManagementIntegrationType
    _$gAlertManagementIntegrationTypePROMETHEUS =
    const GAlertManagementIntegrationType._('PROMETHEUS');
const GAlertManagementIntegrationType _$gAlertManagementIntegrationTypeHTTP =
    const GAlertManagementIntegrationType._('HTTP');

GAlertManagementIntegrationType _$gAlertManagementIntegrationTypeValueOf(
    String name) {
  switch (name) {
    case 'PROMETHEUS':
      return _$gAlertManagementIntegrationTypePROMETHEUS;
    case 'HTTP':
      return _$gAlertManagementIntegrationTypeHTTP;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAlertManagementIntegrationType>
    _$gAlertManagementIntegrationTypeValues =
    new BuiltSet<GAlertManagementIntegrationType>(const <
        GAlertManagementIntegrationType>[
  _$gAlertManagementIntegrationTypePROMETHEUS,
  _$gAlertManagementIntegrationTypeHTTP,
]);

const GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameTITLE =
    const GAlertManagementPayloadAlertFieldName._('TITLE');
const GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameDESCRIPTION =
    const GAlertManagementPayloadAlertFieldName._('DESCRIPTION');
const GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameSTART_TIME =
    const GAlertManagementPayloadAlertFieldName._('START_TIME');
const GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameEND_TIME =
    const GAlertManagementPayloadAlertFieldName._('END_TIME');
const GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameSERVICE =
    const GAlertManagementPayloadAlertFieldName._('SERVICE');
const GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameMONITORING_TOOL =
    const GAlertManagementPayloadAlertFieldName._('MONITORING_TOOL');
const GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameHOSTS =
    const GAlertManagementPayloadAlertFieldName._('HOSTS');
const GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameSEVERITY =
    const GAlertManagementPayloadAlertFieldName._('SEVERITY');
const GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameFINGERPRINT =
    const GAlertManagementPayloadAlertFieldName._('FINGERPRINT');
const GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameGITLAB_ENVIRONMENT_NAME =
    const GAlertManagementPayloadAlertFieldName._('GITLAB_ENVIRONMENT_NAME');

GAlertManagementPayloadAlertFieldName
    _$gAlertManagementPayloadAlertFieldNameValueOf(String name) {
  switch (name) {
    case 'TITLE':
      return _$gAlertManagementPayloadAlertFieldNameTITLE;
    case 'DESCRIPTION':
      return _$gAlertManagementPayloadAlertFieldNameDESCRIPTION;
    case 'START_TIME':
      return _$gAlertManagementPayloadAlertFieldNameSTART_TIME;
    case 'END_TIME':
      return _$gAlertManagementPayloadAlertFieldNameEND_TIME;
    case 'SERVICE':
      return _$gAlertManagementPayloadAlertFieldNameSERVICE;
    case 'MONITORING_TOOL':
      return _$gAlertManagementPayloadAlertFieldNameMONITORING_TOOL;
    case 'HOSTS':
      return _$gAlertManagementPayloadAlertFieldNameHOSTS;
    case 'SEVERITY':
      return _$gAlertManagementPayloadAlertFieldNameSEVERITY;
    case 'FINGERPRINT':
      return _$gAlertManagementPayloadAlertFieldNameFINGERPRINT;
    case 'GITLAB_ENVIRONMENT_NAME':
      return _$gAlertManagementPayloadAlertFieldNameGITLAB_ENVIRONMENT_NAME;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAlertManagementPayloadAlertFieldName>
    _$gAlertManagementPayloadAlertFieldNameValues =
    new BuiltSet<GAlertManagementPayloadAlertFieldName>(const <
        GAlertManagementPayloadAlertFieldName>[
  _$gAlertManagementPayloadAlertFieldNameTITLE,
  _$gAlertManagementPayloadAlertFieldNameDESCRIPTION,
  _$gAlertManagementPayloadAlertFieldNameSTART_TIME,
  _$gAlertManagementPayloadAlertFieldNameEND_TIME,
  _$gAlertManagementPayloadAlertFieldNameSERVICE,
  _$gAlertManagementPayloadAlertFieldNameMONITORING_TOOL,
  _$gAlertManagementPayloadAlertFieldNameHOSTS,
  _$gAlertManagementPayloadAlertFieldNameSEVERITY,
  _$gAlertManagementPayloadAlertFieldNameFINGERPRINT,
  _$gAlertManagementPayloadAlertFieldNameGITLAB_ENVIRONMENT_NAME,
]);

const GAlertManagementPayloadAlertFieldType
    _$gAlertManagementPayloadAlertFieldTypeARRAY =
    const GAlertManagementPayloadAlertFieldType._('ARRAY');
const GAlertManagementPayloadAlertFieldType
    _$gAlertManagementPayloadAlertFieldTypeDATETIME =
    const GAlertManagementPayloadAlertFieldType._('DATETIME');
const GAlertManagementPayloadAlertFieldType
    _$gAlertManagementPayloadAlertFieldTypeSTRING =
    const GAlertManagementPayloadAlertFieldType._('STRING');

GAlertManagementPayloadAlertFieldType
    _$gAlertManagementPayloadAlertFieldTypeValueOf(String name) {
  switch (name) {
    case 'ARRAY':
      return _$gAlertManagementPayloadAlertFieldTypeARRAY;
    case 'DATETIME':
      return _$gAlertManagementPayloadAlertFieldTypeDATETIME;
    case 'STRING':
      return _$gAlertManagementPayloadAlertFieldTypeSTRING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAlertManagementPayloadAlertFieldType>
    _$gAlertManagementPayloadAlertFieldTypeValues =
    new BuiltSet<GAlertManagementPayloadAlertFieldType>(const <
        GAlertManagementPayloadAlertFieldType>[
  _$gAlertManagementPayloadAlertFieldTypeARRAY,
  _$gAlertManagementPayloadAlertFieldTypeDATETIME,
  _$gAlertManagementPayloadAlertFieldTypeSTRING,
]);

const GAlertManagementSeverity _$gAlertManagementSeverityCRITICAL =
    const GAlertManagementSeverity._('CRITICAL');
const GAlertManagementSeverity _$gAlertManagementSeverityHIGH =
    const GAlertManagementSeverity._('HIGH');
const GAlertManagementSeverity _$gAlertManagementSeverityMEDIUM =
    const GAlertManagementSeverity._('MEDIUM');
const GAlertManagementSeverity _$gAlertManagementSeverityLOW =
    const GAlertManagementSeverity._('LOW');
const GAlertManagementSeverity _$gAlertManagementSeverityINFO =
    const GAlertManagementSeverity._('INFO');
const GAlertManagementSeverity _$gAlertManagementSeverityUNKNOWN =
    const GAlertManagementSeverity._('UNKNOWN');

GAlertManagementSeverity _$gAlertManagementSeverityValueOf(String name) {
  switch (name) {
    case 'CRITICAL':
      return _$gAlertManagementSeverityCRITICAL;
    case 'HIGH':
      return _$gAlertManagementSeverityHIGH;
    case 'MEDIUM':
      return _$gAlertManagementSeverityMEDIUM;
    case 'LOW':
      return _$gAlertManagementSeverityLOW;
    case 'INFO':
      return _$gAlertManagementSeverityINFO;
    case 'UNKNOWN':
      return _$gAlertManagementSeverityUNKNOWN;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAlertManagementSeverity> _$gAlertManagementSeverityValues =
    new BuiltSet<GAlertManagementSeverity>(const <GAlertManagementSeverity>[
  _$gAlertManagementSeverityCRITICAL,
  _$gAlertManagementSeverityHIGH,
  _$gAlertManagementSeverityMEDIUM,
  _$gAlertManagementSeverityLOW,
  _$gAlertManagementSeverityINFO,
  _$gAlertManagementSeverityUNKNOWN,
]);

const GAlertManagementStatus _$gAlertManagementStatusTRIGGERED =
    const GAlertManagementStatus._('TRIGGERED');
const GAlertManagementStatus _$gAlertManagementStatusACKNOWLEDGED =
    const GAlertManagementStatus._('ACKNOWLEDGED');
const GAlertManagementStatus _$gAlertManagementStatusRESOLVED =
    const GAlertManagementStatus._('RESOLVED');
const GAlertManagementStatus _$gAlertManagementStatusIGNORED =
    const GAlertManagementStatus._('IGNORED');

GAlertManagementStatus _$gAlertManagementStatusValueOf(String name) {
  switch (name) {
    case 'TRIGGERED':
      return _$gAlertManagementStatusTRIGGERED;
    case 'ACKNOWLEDGED':
      return _$gAlertManagementStatusACKNOWLEDGED;
    case 'RESOLVED':
      return _$gAlertManagementStatusRESOLVED;
    case 'IGNORED':
      return _$gAlertManagementStatusIGNORED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAlertManagementStatus> _$gAlertManagementStatusValues =
    new BuiltSet<GAlertManagementStatus>(const <GAlertManagementStatus>[
  _$gAlertManagementStatusTRIGGERED,
  _$gAlertManagementStatusACKNOWLEDGED,
  _$gAlertManagementStatusRESOLVED,
  _$gAlertManagementStatusIGNORED,
]);

const GApiFuzzingScanMode _$gApiFuzzingScanModeHAR =
    const GApiFuzzingScanMode._('HAR');
const GApiFuzzingScanMode _$gApiFuzzingScanModeOPENAPI =
    const GApiFuzzingScanMode._('OPENAPI');
const GApiFuzzingScanMode _$gApiFuzzingScanModePOSTMAN =
    const GApiFuzzingScanMode._('POSTMAN');

GApiFuzzingScanMode _$gApiFuzzingScanModeValueOf(String name) {
  switch (name) {
    case 'HAR':
      return _$gApiFuzzingScanModeHAR;
    case 'OPENAPI':
      return _$gApiFuzzingScanModeOPENAPI;
    case 'POSTMAN':
      return _$gApiFuzzingScanModePOSTMAN;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GApiFuzzingScanMode> _$gApiFuzzingScanModeValues =
    new BuiltSet<GApiFuzzingScanMode>(const <GApiFuzzingScanMode>[
  _$gApiFuzzingScanModeHAR,
  _$gApiFuzzingScanModeOPENAPI,
  _$gApiFuzzingScanModePOSTMAN,
]);

const GApprovalRuleType _$gApprovalRuleTypeREGULAR =
    const GApprovalRuleType._('REGULAR');
const GApprovalRuleType _$gApprovalRuleTypeCODE_OWNER =
    const GApprovalRuleType._('CODE_OWNER');
const GApprovalRuleType _$gApprovalRuleTypeREPORT_APPROVER =
    const GApprovalRuleType._('REPORT_APPROVER');
const GApprovalRuleType _$gApprovalRuleTypeANY_APPROVER =
    const GApprovalRuleType._('ANY_APPROVER');

GApprovalRuleType _$gApprovalRuleTypeValueOf(String name) {
  switch (name) {
    case 'REGULAR':
      return _$gApprovalRuleTypeREGULAR;
    case 'CODE_OWNER':
      return _$gApprovalRuleTypeCODE_OWNER;
    case 'REPORT_APPROVER':
      return _$gApprovalRuleTypeREPORT_APPROVER;
    case 'ANY_APPROVER':
      return _$gApprovalRuleTypeANY_APPROVER;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GApprovalRuleType> _$gApprovalRuleTypeValues =
    new BuiltSet<GApprovalRuleType>(const <GApprovalRuleType>[
  _$gApprovalRuleTypeREGULAR,
  _$gApprovalRuleTypeCODE_OWNER,
  _$gApprovalRuleTypeREPORT_APPROVER,
  _$gApprovalRuleTypeANY_APPROVER,
]);

const GAssigneeWildcardId _$gAssigneeWildcardIdNONE =
    const GAssigneeWildcardId._('NONE');
const GAssigneeWildcardId _$gAssigneeWildcardIdANY =
    const GAssigneeWildcardId._('ANY');

GAssigneeWildcardId _$gAssigneeWildcardIdValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gAssigneeWildcardIdNONE;
    case 'ANY':
      return _$gAssigneeWildcardIdANY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAssigneeWildcardId> _$gAssigneeWildcardIdValues =
    new BuiltSet<GAssigneeWildcardId>(const <GAssigneeWildcardId>[
  _$gAssigneeWildcardIdNONE,
  _$gAssigneeWildcardIdANY,
]);

const GAvailabilityEnum _$gAvailabilityEnumNOT_SET =
    const GAvailabilityEnum._('NOT_SET');
const GAvailabilityEnum _$gAvailabilityEnumBUSY =
    const GAvailabilityEnum._('BUSY');

GAvailabilityEnum _$gAvailabilityEnumValueOf(String name) {
  switch (name) {
    case 'NOT_SET':
      return _$gAvailabilityEnumNOT_SET;
    case 'BUSY':
      return _$gAvailabilityEnumBUSY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAvailabilityEnum> _$gAvailabilityEnumValues =
    new BuiltSet<GAvailabilityEnum>(const <GAvailabilityEnum>[
  _$gAvailabilityEnumNOT_SET,
  _$gAvailabilityEnumBUSY,
]);

const GBlobViewersType _$gBlobViewersTyperich =
    const GBlobViewersType._('rich');
const GBlobViewersType _$gBlobViewersTypesimple =
    const GBlobViewersType._('simple');
const GBlobViewersType _$gBlobViewersTypeauxiliary =
    const GBlobViewersType._('auxiliary');

GBlobViewersType _$gBlobViewersTypeValueOf(String name) {
  switch (name) {
    case 'rich':
      return _$gBlobViewersTyperich;
    case 'simple':
      return _$gBlobViewersTypesimple;
    case 'auxiliary':
      return _$gBlobViewersTypeauxiliary;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GBlobViewersType> _$gBlobViewersTypeValues =
    new BuiltSet<GBlobViewersType>(const <GBlobViewersType>[
  _$gBlobViewersTyperich,
  _$gBlobViewersTypesimple,
  _$gBlobViewersTypeauxiliary,
]);

const GCiConfigIncludeType _$gCiConfigIncludeTyperemote =
    const GCiConfigIncludeType._('remote');
const GCiConfigIncludeType _$gCiConfigIncludeTypelocal =
    const GCiConfigIncludeType._('local');
const GCiConfigIncludeType _$gCiConfigIncludeTypefile =
    const GCiConfigIncludeType._('file');
const GCiConfigIncludeType _$gCiConfigIncludeTypetemplate =
    const GCiConfigIncludeType._('template');

GCiConfigIncludeType _$gCiConfigIncludeTypeValueOf(String name) {
  switch (name) {
    case 'remote':
      return _$gCiConfigIncludeTyperemote;
    case 'local':
      return _$gCiConfigIncludeTypelocal;
    case 'file':
      return _$gCiConfigIncludeTypefile;
    case 'template':
      return _$gCiConfigIncludeTypetemplate;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiConfigIncludeType> _$gCiConfigIncludeTypeValues =
    new BuiltSet<GCiConfigIncludeType>(const <GCiConfigIncludeType>[
  _$gCiConfigIncludeTyperemote,
  _$gCiConfigIncludeTypelocal,
  _$gCiConfigIncludeTypefile,
  _$gCiConfigIncludeTypetemplate,
]);

const GCiConfigStatus _$gCiConfigStatusVALID = const GCiConfigStatus._('VALID');
const GCiConfigStatus _$gCiConfigStatusINVALID =
    const GCiConfigStatus._('INVALID');

GCiConfigStatus _$gCiConfigStatusValueOf(String name) {
  switch (name) {
    case 'VALID':
      return _$gCiConfigStatusVALID;
    case 'INVALID':
      return _$gCiConfigStatusINVALID;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiConfigStatus> _$gCiConfigStatusValues =
    new BuiltSet<GCiConfigStatus>(const <GCiConfigStatus>[
  _$gCiConfigStatusVALID,
  _$gCiConfigStatusINVALID,
]);

const GCiJobKind _$gCiJobKindBUILD = const GCiJobKind._('BUILD');
const GCiJobKind _$gCiJobKindBRIDGE = const GCiJobKind._('BRIDGE');

GCiJobKind _$gCiJobKindValueOf(String name) {
  switch (name) {
    case 'BUILD':
      return _$gCiJobKindBUILD;
    case 'BRIDGE':
      return _$gCiJobKindBRIDGE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiJobKind> _$gCiJobKindValues =
    new BuiltSet<GCiJobKind>(const <GCiJobKind>[
  _$gCiJobKindBUILD,
  _$gCiJobKindBRIDGE,
]);

const GCiJobStatus _$gCiJobStatusCREATED = const GCiJobStatus._('CREATED');
const GCiJobStatus _$gCiJobStatusWAITING_FOR_RESOURCE =
    const GCiJobStatus._('WAITING_FOR_RESOURCE');
const GCiJobStatus _$gCiJobStatusPREPARING = const GCiJobStatus._('PREPARING');
const GCiJobStatus _$gCiJobStatusPENDING = const GCiJobStatus._('PENDING');
const GCiJobStatus _$gCiJobStatusRUNNING = const GCiJobStatus._('RUNNING');
const GCiJobStatus _$gCiJobStatusSUCCESS = const GCiJobStatus._('SUCCESS');
const GCiJobStatus _$gCiJobStatusFAILED = const GCiJobStatus._('FAILED');
const GCiJobStatus _$gCiJobStatusCANCELED = const GCiJobStatus._('CANCELED');
const GCiJobStatus _$gCiJobStatusSKIPPED = const GCiJobStatus._('SKIPPED');
const GCiJobStatus _$gCiJobStatusMANUAL = const GCiJobStatus._('MANUAL');
const GCiJobStatus _$gCiJobStatusSCHEDULED = const GCiJobStatus._('SCHEDULED');

GCiJobStatus _$gCiJobStatusValueOf(String name) {
  switch (name) {
    case 'CREATED':
      return _$gCiJobStatusCREATED;
    case 'WAITING_FOR_RESOURCE':
      return _$gCiJobStatusWAITING_FOR_RESOURCE;
    case 'PREPARING':
      return _$gCiJobStatusPREPARING;
    case 'PENDING':
      return _$gCiJobStatusPENDING;
    case 'RUNNING':
      return _$gCiJobStatusRUNNING;
    case 'SUCCESS':
      return _$gCiJobStatusSUCCESS;
    case 'FAILED':
      return _$gCiJobStatusFAILED;
    case 'CANCELED':
      return _$gCiJobStatusCANCELED;
    case 'SKIPPED':
      return _$gCiJobStatusSKIPPED;
    case 'MANUAL':
      return _$gCiJobStatusMANUAL;
    case 'SCHEDULED':
      return _$gCiJobStatusSCHEDULED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiJobStatus> _$gCiJobStatusValues =
    new BuiltSet<GCiJobStatus>(const <GCiJobStatus>[
  _$gCiJobStatusCREATED,
  _$gCiJobStatusWAITING_FOR_RESOURCE,
  _$gCiJobStatusPREPARING,
  _$gCiJobStatusPENDING,
  _$gCiJobStatusRUNNING,
  _$gCiJobStatusSUCCESS,
  _$gCiJobStatusFAILED,
  _$gCiJobStatusCANCELED,
  _$gCiJobStatusSKIPPED,
  _$gCiJobStatusMANUAL,
  _$gCiJobStatusSCHEDULED,
]);

const GCiRunnerAccessLevel _$gCiRunnerAccessLevelNOT_PROTECTED =
    const GCiRunnerAccessLevel._('NOT_PROTECTED');
const GCiRunnerAccessLevel _$gCiRunnerAccessLevelREF_PROTECTED =
    const GCiRunnerAccessLevel._('REF_PROTECTED');

GCiRunnerAccessLevel _$gCiRunnerAccessLevelValueOf(String name) {
  switch (name) {
    case 'NOT_PROTECTED':
      return _$gCiRunnerAccessLevelNOT_PROTECTED;
    case 'REF_PROTECTED':
      return _$gCiRunnerAccessLevelREF_PROTECTED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiRunnerAccessLevel> _$gCiRunnerAccessLevelValues =
    new BuiltSet<GCiRunnerAccessLevel>(const <GCiRunnerAccessLevel>[
  _$gCiRunnerAccessLevelNOT_PROTECTED,
  _$gCiRunnerAccessLevelREF_PROTECTED,
]);

const GCiRunnerMembershipFilter _$gCiRunnerMembershipFilterDIRECT =
    const GCiRunnerMembershipFilter._('DIRECT');
const GCiRunnerMembershipFilter _$gCiRunnerMembershipFilterDESCENDANTS =
    const GCiRunnerMembershipFilter._('DESCENDANTS');
const GCiRunnerMembershipFilter _$gCiRunnerMembershipFilterALL_AVAILABLE =
    const GCiRunnerMembershipFilter._('ALL_AVAILABLE');

GCiRunnerMembershipFilter _$gCiRunnerMembershipFilterValueOf(String name) {
  switch (name) {
    case 'DIRECT':
      return _$gCiRunnerMembershipFilterDIRECT;
    case 'DESCENDANTS':
      return _$gCiRunnerMembershipFilterDESCENDANTS;
    case 'ALL_AVAILABLE':
      return _$gCiRunnerMembershipFilterALL_AVAILABLE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiRunnerMembershipFilter> _$gCiRunnerMembershipFilterValues =
    new BuiltSet<GCiRunnerMembershipFilter>(const <GCiRunnerMembershipFilter>[
  _$gCiRunnerMembershipFilterDIRECT,
  _$gCiRunnerMembershipFilterDESCENDANTS,
  _$gCiRunnerMembershipFilterALL_AVAILABLE,
]);

const GCiRunnerSort _$gCiRunnerSortCONTACTED_ASC =
    const GCiRunnerSort._('CONTACTED_ASC');
const GCiRunnerSort _$gCiRunnerSortCONTACTED_DESC =
    const GCiRunnerSort._('CONTACTED_DESC');
const GCiRunnerSort _$gCiRunnerSortCREATED_ASC =
    const GCiRunnerSort._('CREATED_ASC');
const GCiRunnerSort _$gCiRunnerSortCREATED_DESC =
    const GCiRunnerSort._('CREATED_DESC');
const GCiRunnerSort _$gCiRunnerSortTOKEN_EXPIRES_AT_ASC =
    const GCiRunnerSort._('TOKEN_EXPIRES_AT_ASC');
const GCiRunnerSort _$gCiRunnerSortTOKEN_EXPIRES_AT_DESC =
    const GCiRunnerSort._('TOKEN_EXPIRES_AT_DESC');

GCiRunnerSort _$gCiRunnerSortValueOf(String name) {
  switch (name) {
    case 'CONTACTED_ASC':
      return _$gCiRunnerSortCONTACTED_ASC;
    case 'CONTACTED_DESC':
      return _$gCiRunnerSortCONTACTED_DESC;
    case 'CREATED_ASC':
      return _$gCiRunnerSortCREATED_ASC;
    case 'CREATED_DESC':
      return _$gCiRunnerSortCREATED_DESC;
    case 'TOKEN_EXPIRES_AT_ASC':
      return _$gCiRunnerSortTOKEN_EXPIRES_AT_ASC;
    case 'TOKEN_EXPIRES_AT_DESC':
      return _$gCiRunnerSortTOKEN_EXPIRES_AT_DESC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiRunnerSort> _$gCiRunnerSortValues =
    new BuiltSet<GCiRunnerSort>(const <GCiRunnerSort>[
  _$gCiRunnerSortCONTACTED_ASC,
  _$gCiRunnerSortCONTACTED_DESC,
  _$gCiRunnerSortCREATED_ASC,
  _$gCiRunnerSortCREATED_DESC,
  _$gCiRunnerSortTOKEN_EXPIRES_AT_ASC,
  _$gCiRunnerSortTOKEN_EXPIRES_AT_DESC,
]);

const GCiRunnerStatus _$gCiRunnerStatusACTIVE =
    const GCiRunnerStatus._('ACTIVE');
const GCiRunnerStatus _$gCiRunnerStatusPAUSED =
    const GCiRunnerStatus._('PAUSED');
const GCiRunnerStatus _$gCiRunnerStatusONLINE =
    const GCiRunnerStatus._('ONLINE');
const GCiRunnerStatus _$gCiRunnerStatusOFFLINE =
    const GCiRunnerStatus._('OFFLINE');
const GCiRunnerStatus _$gCiRunnerStatusSTALE = const GCiRunnerStatus._('STALE');
const GCiRunnerStatus _$gCiRunnerStatusNEVER_CONTACTED =
    const GCiRunnerStatus._('NEVER_CONTACTED');

GCiRunnerStatus _$gCiRunnerStatusValueOf(String name) {
  switch (name) {
    case 'ACTIVE':
      return _$gCiRunnerStatusACTIVE;
    case 'PAUSED':
      return _$gCiRunnerStatusPAUSED;
    case 'ONLINE':
      return _$gCiRunnerStatusONLINE;
    case 'OFFLINE':
      return _$gCiRunnerStatusOFFLINE;
    case 'STALE':
      return _$gCiRunnerStatusSTALE;
    case 'NEVER_CONTACTED':
      return _$gCiRunnerStatusNEVER_CONTACTED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiRunnerStatus> _$gCiRunnerStatusValues =
    new BuiltSet<GCiRunnerStatus>(const <GCiRunnerStatus>[
  _$gCiRunnerStatusACTIVE,
  _$gCiRunnerStatusPAUSED,
  _$gCiRunnerStatusONLINE,
  _$gCiRunnerStatusOFFLINE,
  _$gCiRunnerStatusSTALE,
  _$gCiRunnerStatusNEVER_CONTACTED,
]);

const GCiRunnerType _$gCiRunnerTypeINSTANCE_TYPE =
    const GCiRunnerType._('INSTANCE_TYPE');
const GCiRunnerType _$gCiRunnerTypeGROUP_TYPE =
    const GCiRunnerType._('GROUP_TYPE');
const GCiRunnerType _$gCiRunnerTypePROJECT_TYPE =
    const GCiRunnerType._('PROJECT_TYPE');

GCiRunnerType _$gCiRunnerTypeValueOf(String name) {
  switch (name) {
    case 'INSTANCE_TYPE':
      return _$gCiRunnerTypeINSTANCE_TYPE;
    case 'GROUP_TYPE':
      return _$gCiRunnerTypeGROUP_TYPE;
    case 'PROJECT_TYPE':
      return _$gCiRunnerTypePROJECT_TYPE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiRunnerType> _$gCiRunnerTypeValues =
    new BuiltSet<GCiRunnerType>(const <GCiRunnerType>[
  _$gCiRunnerTypeINSTANCE_TYPE,
  _$gCiRunnerTypeGROUP_TYPE,
  _$gCiRunnerTypePROJECT_TYPE,
]);

const GCiRunnerUpgradeStatus _$gCiRunnerUpgradeStatusINVALID =
    const GCiRunnerUpgradeStatus._('INVALID');
const GCiRunnerUpgradeStatus _$gCiRunnerUpgradeStatusNOT_AVAILABLE =
    const GCiRunnerUpgradeStatus._('NOT_AVAILABLE');
const GCiRunnerUpgradeStatus _$gCiRunnerUpgradeStatusAVAILABLE =
    const GCiRunnerUpgradeStatus._('AVAILABLE');
const GCiRunnerUpgradeStatus _$gCiRunnerUpgradeStatusRECOMMENDED =
    const GCiRunnerUpgradeStatus._('RECOMMENDED');

GCiRunnerUpgradeStatus _$gCiRunnerUpgradeStatusValueOf(String name) {
  switch (name) {
    case 'INVALID':
      return _$gCiRunnerUpgradeStatusINVALID;
    case 'NOT_AVAILABLE':
      return _$gCiRunnerUpgradeStatusNOT_AVAILABLE;
    case 'AVAILABLE':
      return _$gCiRunnerUpgradeStatusAVAILABLE;
    case 'RECOMMENDED':
      return _$gCiRunnerUpgradeStatusRECOMMENDED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiRunnerUpgradeStatus> _$gCiRunnerUpgradeStatusValues =
    new BuiltSet<GCiRunnerUpgradeStatus>(const <GCiRunnerUpgradeStatus>[
  _$gCiRunnerUpgradeStatusINVALID,
  _$gCiRunnerUpgradeStatusNOT_AVAILABLE,
  _$gCiRunnerUpgradeStatusAVAILABLE,
  _$gCiRunnerUpgradeStatusRECOMMENDED,
]);

const GCiVariableType _$gCiVariableTypeENV_VAR =
    const GCiVariableType._('ENV_VAR');
const GCiVariableType _$gCiVariableTypeFILE = const GCiVariableType._('FILE');

GCiVariableType _$gCiVariableTypeValueOf(String name) {
  switch (name) {
    case 'ENV_VAR':
      return _$gCiVariableTypeENV_VAR;
    case 'FILE':
      return _$gCiVariableTypeFILE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCiVariableType> _$gCiVariableTypeValues =
    new BuiltSet<GCiVariableType>(const <GCiVariableType>[
  _$gCiVariableTypeENV_VAR,
  _$gCiVariableTypeFILE,
]);

const GCodeQualityDegradationSeverity _$gCodeQualityDegradationSeverityBLOCKER =
    const GCodeQualityDegradationSeverity._('BLOCKER');
const GCodeQualityDegradationSeverity
    _$gCodeQualityDegradationSeverityCRITICAL =
    const GCodeQualityDegradationSeverity._('CRITICAL');
const GCodeQualityDegradationSeverity _$gCodeQualityDegradationSeverityMAJOR =
    const GCodeQualityDegradationSeverity._('MAJOR');
const GCodeQualityDegradationSeverity _$gCodeQualityDegradationSeverityMINOR =
    const GCodeQualityDegradationSeverity._('MINOR');
const GCodeQualityDegradationSeverity _$gCodeQualityDegradationSeverityINFO =
    const GCodeQualityDegradationSeverity._('INFO');
const GCodeQualityDegradationSeverity _$gCodeQualityDegradationSeverityUNKNOWN =
    const GCodeQualityDegradationSeverity._('UNKNOWN');

GCodeQualityDegradationSeverity _$gCodeQualityDegradationSeverityValueOf(
    String name) {
  switch (name) {
    case 'BLOCKER':
      return _$gCodeQualityDegradationSeverityBLOCKER;
    case 'CRITICAL':
      return _$gCodeQualityDegradationSeverityCRITICAL;
    case 'MAJOR':
      return _$gCodeQualityDegradationSeverityMAJOR;
    case 'MINOR':
      return _$gCodeQualityDegradationSeverityMINOR;
    case 'INFO':
      return _$gCodeQualityDegradationSeverityINFO;
    case 'UNKNOWN':
      return _$gCodeQualityDegradationSeverityUNKNOWN;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCodeQualityDegradationSeverity>
    _$gCodeQualityDegradationSeverityValues =
    new BuiltSet<GCodeQualityDegradationSeverity>(const <
        GCodeQualityDegradationSeverity>[
  _$gCodeQualityDegradationSeverityBLOCKER,
  _$gCodeQualityDegradationSeverityCRITICAL,
  _$gCodeQualityDegradationSeverityMAJOR,
  _$gCodeQualityDegradationSeverityMINOR,
  _$gCodeQualityDegradationSeverityINFO,
  _$gCodeQualityDegradationSeverityUNKNOWN,
]);

const GCommitActionMode _$gCommitActionModeCREATE =
    const GCommitActionMode._('CREATE');
const GCommitActionMode _$gCommitActionModeDELETE =
    const GCommitActionMode._('DELETE');
const GCommitActionMode _$gCommitActionModeMOVE =
    const GCommitActionMode._('MOVE');
const GCommitActionMode _$gCommitActionModeUPDATE =
    const GCommitActionMode._('UPDATE');
const GCommitActionMode _$gCommitActionModeCHMOD =
    const GCommitActionMode._('CHMOD');

GCommitActionMode _$gCommitActionModeValueOf(String name) {
  switch (name) {
    case 'CREATE':
      return _$gCommitActionModeCREATE;
    case 'DELETE':
      return _$gCommitActionModeDELETE;
    case 'MOVE':
      return _$gCommitActionModeMOVE;
    case 'UPDATE':
      return _$gCommitActionModeUPDATE;
    case 'CHMOD':
      return _$gCommitActionModeCHMOD;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCommitActionMode> _$gCommitActionModeValues =
    new BuiltSet<GCommitActionMode>(const <GCommitActionMode>[
  _$gCommitActionModeCREATE,
  _$gCommitActionModeDELETE,
  _$gCommitActionModeMOVE,
  _$gCommitActionModeUPDATE,
  _$gCommitActionModeCHMOD,
]);

const GCommitEncoding _$gCommitEncodingTEXT = const GCommitEncoding._('TEXT');
const GCommitEncoding _$gCommitEncodingBASE64 =
    const GCommitEncoding._('BASE64');

GCommitEncoding _$gCommitEncodingValueOf(String name) {
  switch (name) {
    case 'TEXT':
      return _$gCommitEncodingTEXT;
    case 'BASE64':
      return _$gCommitEncodingBASE64;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCommitEncoding> _$gCommitEncodingValues =
    new BuiltSet<GCommitEncoding>(const <GCommitEncoding>[
  _$gCommitEncodingTEXT,
  _$gCommitEncodingBASE64,
]);

const GComplianceViolationReason
    _$gComplianceViolationReasonAPPROVED_BY_MERGE_REQUEST_AUTHOR =
    const GComplianceViolationReason._('APPROVED_BY_MERGE_REQUEST_AUTHOR');
const GComplianceViolationReason
    _$gComplianceViolationReasonAPPROVED_BY_COMMITTER =
    const GComplianceViolationReason._('APPROVED_BY_COMMITTER');
const GComplianceViolationReason
    _$gComplianceViolationReasonAPPROVED_BY_INSUFFICIENT_USERS =
    const GComplianceViolationReason._('APPROVED_BY_INSUFFICIENT_USERS');

GComplianceViolationReason _$gComplianceViolationReasonValueOf(String name) {
  switch (name) {
    case 'APPROVED_BY_MERGE_REQUEST_AUTHOR':
      return _$gComplianceViolationReasonAPPROVED_BY_MERGE_REQUEST_AUTHOR;
    case 'APPROVED_BY_COMMITTER':
      return _$gComplianceViolationReasonAPPROVED_BY_COMMITTER;
    case 'APPROVED_BY_INSUFFICIENT_USERS':
      return _$gComplianceViolationReasonAPPROVED_BY_INSUFFICIENT_USERS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GComplianceViolationReason> _$gComplianceViolationReasonValues =
    new BuiltSet<GComplianceViolationReason>(const <GComplianceViolationReason>[
  _$gComplianceViolationReasonAPPROVED_BY_MERGE_REQUEST_AUTHOR,
  _$gComplianceViolationReasonAPPROVED_BY_COMMITTER,
  _$gComplianceViolationReasonAPPROVED_BY_INSUFFICIENT_USERS,
]);

const GComplianceViolationSeverity _$gComplianceViolationSeverityINFO =
    const GComplianceViolationSeverity._('INFO');
const GComplianceViolationSeverity _$gComplianceViolationSeverityLOW =
    const GComplianceViolationSeverity._('LOW');
const GComplianceViolationSeverity _$gComplianceViolationSeverityMEDIUM =
    const GComplianceViolationSeverity._('MEDIUM');
const GComplianceViolationSeverity _$gComplianceViolationSeverityHIGH =
    const GComplianceViolationSeverity._('HIGH');
const GComplianceViolationSeverity _$gComplianceViolationSeverityCRITICAL =
    const GComplianceViolationSeverity._('CRITICAL');

GComplianceViolationSeverity _$gComplianceViolationSeverityValueOf(
    String name) {
  switch (name) {
    case 'INFO':
      return _$gComplianceViolationSeverityINFO;
    case 'LOW':
      return _$gComplianceViolationSeverityLOW;
    case 'MEDIUM':
      return _$gComplianceViolationSeverityMEDIUM;
    case 'HIGH':
      return _$gComplianceViolationSeverityHIGH;
    case 'CRITICAL':
      return _$gComplianceViolationSeverityCRITICAL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GComplianceViolationSeverity>
    _$gComplianceViolationSeverityValues = new BuiltSet<
        GComplianceViolationSeverity>(const <GComplianceViolationSeverity>[
  _$gComplianceViolationSeverityINFO,
  _$gComplianceViolationSeverityLOW,
  _$gComplianceViolationSeverityMEDIUM,
  _$gComplianceViolationSeverityHIGH,
  _$gComplianceViolationSeverityCRITICAL,
]);

const GComplianceViolationSort _$gComplianceViolationSortSEVERITY_LEVEL_DESC =
    const GComplianceViolationSort._('SEVERITY_LEVEL_DESC');
const GComplianceViolationSort _$gComplianceViolationSortSEVERITY_LEVEL_ASC =
    const GComplianceViolationSort._('SEVERITY_LEVEL_ASC');
const GComplianceViolationSort _$gComplianceViolationSortVIOLATION_REASON_DESC =
    const GComplianceViolationSort._('VIOLATION_REASON_DESC');
const GComplianceViolationSort _$gComplianceViolationSortVIOLATION_REASON_ASC =
    const GComplianceViolationSort._('VIOLATION_REASON_ASC');
const GComplianceViolationSort
    _$gComplianceViolationSortMERGE_REQUEST_TITLE_DESC =
    const GComplianceViolationSort._('MERGE_REQUEST_TITLE_DESC');
const GComplianceViolationSort
    _$gComplianceViolationSortMERGE_REQUEST_TITLE_ASC =
    const GComplianceViolationSort._('MERGE_REQUEST_TITLE_ASC');
const GComplianceViolationSort _$gComplianceViolationSortMERGED_AT_DESC =
    const GComplianceViolationSort._('MERGED_AT_DESC');
const GComplianceViolationSort _$gComplianceViolationSortMERGED_AT_ASC =
    const GComplianceViolationSort._('MERGED_AT_ASC');

GComplianceViolationSort _$gComplianceViolationSortValueOf(String name) {
  switch (name) {
    case 'SEVERITY_LEVEL_DESC':
      return _$gComplianceViolationSortSEVERITY_LEVEL_DESC;
    case 'SEVERITY_LEVEL_ASC':
      return _$gComplianceViolationSortSEVERITY_LEVEL_ASC;
    case 'VIOLATION_REASON_DESC':
      return _$gComplianceViolationSortVIOLATION_REASON_DESC;
    case 'VIOLATION_REASON_ASC':
      return _$gComplianceViolationSortVIOLATION_REASON_ASC;
    case 'MERGE_REQUEST_TITLE_DESC':
      return _$gComplianceViolationSortMERGE_REQUEST_TITLE_DESC;
    case 'MERGE_REQUEST_TITLE_ASC':
      return _$gComplianceViolationSortMERGE_REQUEST_TITLE_ASC;
    case 'MERGED_AT_DESC':
      return _$gComplianceViolationSortMERGED_AT_DESC;
    case 'MERGED_AT_ASC':
      return _$gComplianceViolationSortMERGED_AT_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GComplianceViolationSort> _$gComplianceViolationSortValues =
    new BuiltSet<GComplianceViolationSort>(const <GComplianceViolationSort>[
  _$gComplianceViolationSortSEVERITY_LEVEL_DESC,
  _$gComplianceViolationSortSEVERITY_LEVEL_ASC,
  _$gComplianceViolationSortVIOLATION_REASON_DESC,
  _$gComplianceViolationSortVIOLATION_REASON_ASC,
  _$gComplianceViolationSortMERGE_REQUEST_TITLE_DESC,
  _$gComplianceViolationSortMERGE_REQUEST_TITLE_ASC,
  _$gComplianceViolationSortMERGED_AT_DESC,
  _$gComplianceViolationSortMERGED_AT_ASC,
]);

const GConanMetadatumFileTypeEnum _$gConanMetadatumFileTypeEnumRECIPE_FILE =
    const GConanMetadatumFileTypeEnum._('RECIPE_FILE');
const GConanMetadatumFileTypeEnum _$gConanMetadatumFileTypeEnumPACKAGE_FILE =
    const GConanMetadatumFileTypeEnum._('PACKAGE_FILE');

GConanMetadatumFileTypeEnum _$gConanMetadatumFileTypeEnumValueOf(String name) {
  switch (name) {
    case 'RECIPE_FILE':
      return _$gConanMetadatumFileTypeEnumRECIPE_FILE;
    case 'PACKAGE_FILE':
      return _$gConanMetadatumFileTypeEnumPACKAGE_FILE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GConanMetadatumFileTypeEnum>
    _$gConanMetadatumFileTypeEnumValues = new BuiltSet<
        GConanMetadatumFileTypeEnum>(const <GConanMetadatumFileTypeEnum>[
  _$gConanMetadatumFileTypeEnumRECIPE_FILE,
  _$gConanMetadatumFileTypeEnumPACKAGE_FILE,
]);

const GContactSort _$gContactSortFIRST_NAME_ASC =
    const GContactSort._('FIRST_NAME_ASC');
const GContactSort _$gContactSortFIRST_NAME_DESC =
    const GContactSort._('FIRST_NAME_DESC');
const GContactSort _$gContactSortLAST_NAME_ASC =
    const GContactSort._('LAST_NAME_ASC');
const GContactSort _$gContactSortLAST_NAME_DESC =
    const GContactSort._('LAST_NAME_DESC');
const GContactSort _$gContactSortEMAIL_ASC = const GContactSort._('EMAIL_ASC');
const GContactSort _$gContactSortEMAIL_DESC =
    const GContactSort._('EMAIL_DESC');
const GContactSort _$gContactSortPHONE_ASC = const GContactSort._('PHONE_ASC');
const GContactSort _$gContactSortPHONE_DESC =
    const GContactSort._('PHONE_DESC');
const GContactSort _$gContactSortDESCRIPTION_ASC =
    const GContactSort._('DESCRIPTION_ASC');
const GContactSort _$gContactSortDESCRIPTION_DESC =
    const GContactSort._('DESCRIPTION_DESC');
const GContactSort _$gContactSortORGANIZATION_ASC =
    const GContactSort._('ORGANIZATION_ASC');
const GContactSort _$gContactSortORGANIZATION_DESC =
    const GContactSort._('ORGANIZATION_DESC');
const GContactSort _$gContactSortupdated_desc =
    const GContactSort._('updated_desc');
const GContactSort _$gContactSortupdated_asc =
    const GContactSort._('updated_asc');
const GContactSort _$gContactSortcreated_desc =
    const GContactSort._('created_desc');
const GContactSort _$gContactSortcreated_asc =
    const GContactSort._('created_asc');
const GContactSort _$gContactSortUPDATED_DESC =
    const GContactSort._('UPDATED_DESC');
const GContactSort _$gContactSortUPDATED_ASC =
    const GContactSort._('UPDATED_ASC');
const GContactSort _$gContactSortCREATED_DESC =
    const GContactSort._('CREATED_DESC');
const GContactSort _$gContactSortCREATED_ASC =
    const GContactSort._('CREATED_ASC');

GContactSort _$gContactSortValueOf(String name) {
  switch (name) {
    case 'FIRST_NAME_ASC':
      return _$gContactSortFIRST_NAME_ASC;
    case 'FIRST_NAME_DESC':
      return _$gContactSortFIRST_NAME_DESC;
    case 'LAST_NAME_ASC':
      return _$gContactSortLAST_NAME_ASC;
    case 'LAST_NAME_DESC':
      return _$gContactSortLAST_NAME_DESC;
    case 'EMAIL_ASC':
      return _$gContactSortEMAIL_ASC;
    case 'EMAIL_DESC':
      return _$gContactSortEMAIL_DESC;
    case 'PHONE_ASC':
      return _$gContactSortPHONE_ASC;
    case 'PHONE_DESC':
      return _$gContactSortPHONE_DESC;
    case 'DESCRIPTION_ASC':
      return _$gContactSortDESCRIPTION_ASC;
    case 'DESCRIPTION_DESC':
      return _$gContactSortDESCRIPTION_DESC;
    case 'ORGANIZATION_ASC':
      return _$gContactSortORGANIZATION_ASC;
    case 'ORGANIZATION_DESC':
      return _$gContactSortORGANIZATION_DESC;
    case 'updated_desc':
      return _$gContactSortupdated_desc;
    case 'updated_asc':
      return _$gContactSortupdated_asc;
    case 'created_desc':
      return _$gContactSortcreated_desc;
    case 'created_asc':
      return _$gContactSortcreated_asc;
    case 'UPDATED_DESC':
      return _$gContactSortUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gContactSortUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gContactSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gContactSortCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GContactSort> _$gContactSortValues =
    new BuiltSet<GContactSort>(const <GContactSort>[
  _$gContactSortFIRST_NAME_ASC,
  _$gContactSortFIRST_NAME_DESC,
  _$gContactSortLAST_NAME_ASC,
  _$gContactSortLAST_NAME_DESC,
  _$gContactSortEMAIL_ASC,
  _$gContactSortEMAIL_DESC,
  _$gContactSortPHONE_ASC,
  _$gContactSortPHONE_DESC,
  _$gContactSortDESCRIPTION_ASC,
  _$gContactSortDESCRIPTION_DESC,
  _$gContactSortORGANIZATION_ASC,
  _$gContactSortORGANIZATION_DESC,
  _$gContactSortupdated_desc,
  _$gContactSortupdated_asc,
  _$gContactSortcreated_desc,
  _$gContactSortcreated_asc,
  _$gContactSortUPDATED_DESC,
  _$gContactSortUPDATED_ASC,
  _$gContactSortCREATED_DESC,
  _$gContactSortCREATED_ASC,
]);

const GContainerExpirationPolicyCadenceEnum
    _$gContainerExpirationPolicyCadenceEnumEVERY_DAY =
    const GContainerExpirationPolicyCadenceEnum._('EVERY_DAY');
const GContainerExpirationPolicyCadenceEnum
    _$gContainerExpirationPolicyCadenceEnumEVERY_WEEK =
    const GContainerExpirationPolicyCadenceEnum._('EVERY_WEEK');
const GContainerExpirationPolicyCadenceEnum
    _$gContainerExpirationPolicyCadenceEnumEVERY_TWO_WEEKS =
    const GContainerExpirationPolicyCadenceEnum._('EVERY_TWO_WEEKS');
const GContainerExpirationPolicyCadenceEnum
    _$gContainerExpirationPolicyCadenceEnumEVERY_MONTH =
    const GContainerExpirationPolicyCadenceEnum._('EVERY_MONTH');
const GContainerExpirationPolicyCadenceEnum
    _$gContainerExpirationPolicyCadenceEnumEVERY_THREE_MONTHS =
    const GContainerExpirationPolicyCadenceEnum._('EVERY_THREE_MONTHS');

GContainerExpirationPolicyCadenceEnum
    _$gContainerExpirationPolicyCadenceEnumValueOf(String name) {
  switch (name) {
    case 'EVERY_DAY':
      return _$gContainerExpirationPolicyCadenceEnumEVERY_DAY;
    case 'EVERY_WEEK':
      return _$gContainerExpirationPolicyCadenceEnumEVERY_WEEK;
    case 'EVERY_TWO_WEEKS':
      return _$gContainerExpirationPolicyCadenceEnumEVERY_TWO_WEEKS;
    case 'EVERY_MONTH':
      return _$gContainerExpirationPolicyCadenceEnumEVERY_MONTH;
    case 'EVERY_THREE_MONTHS':
      return _$gContainerExpirationPolicyCadenceEnumEVERY_THREE_MONTHS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GContainerExpirationPolicyCadenceEnum>
    _$gContainerExpirationPolicyCadenceEnumValues =
    new BuiltSet<GContainerExpirationPolicyCadenceEnum>(const <
        GContainerExpirationPolicyCadenceEnum>[
  _$gContainerExpirationPolicyCadenceEnumEVERY_DAY,
  _$gContainerExpirationPolicyCadenceEnumEVERY_WEEK,
  _$gContainerExpirationPolicyCadenceEnumEVERY_TWO_WEEKS,
  _$gContainerExpirationPolicyCadenceEnumEVERY_MONTH,
  _$gContainerExpirationPolicyCadenceEnumEVERY_THREE_MONTHS,
]);

const GContainerExpirationPolicyKeepEnum
    _$gContainerExpirationPolicyKeepEnumONE_TAG =
    const GContainerExpirationPolicyKeepEnum._('ONE_TAG');
const GContainerExpirationPolicyKeepEnum
    _$gContainerExpirationPolicyKeepEnumFIVE_TAGS =
    const GContainerExpirationPolicyKeepEnum._('FIVE_TAGS');
const GContainerExpirationPolicyKeepEnum
    _$gContainerExpirationPolicyKeepEnumTEN_TAGS =
    const GContainerExpirationPolicyKeepEnum._('TEN_TAGS');
const GContainerExpirationPolicyKeepEnum
    _$gContainerExpirationPolicyKeepEnumTWENTY_FIVE_TAGS =
    const GContainerExpirationPolicyKeepEnum._('TWENTY_FIVE_TAGS');
const GContainerExpirationPolicyKeepEnum
    _$gContainerExpirationPolicyKeepEnumFIFTY_TAGS =
    const GContainerExpirationPolicyKeepEnum._('FIFTY_TAGS');
const GContainerExpirationPolicyKeepEnum
    _$gContainerExpirationPolicyKeepEnumONE_HUNDRED_TAGS =
    const GContainerExpirationPolicyKeepEnum._('ONE_HUNDRED_TAGS');

GContainerExpirationPolicyKeepEnum _$gContainerExpirationPolicyKeepEnumValueOf(
    String name) {
  switch (name) {
    case 'ONE_TAG':
      return _$gContainerExpirationPolicyKeepEnumONE_TAG;
    case 'FIVE_TAGS':
      return _$gContainerExpirationPolicyKeepEnumFIVE_TAGS;
    case 'TEN_TAGS':
      return _$gContainerExpirationPolicyKeepEnumTEN_TAGS;
    case 'TWENTY_FIVE_TAGS':
      return _$gContainerExpirationPolicyKeepEnumTWENTY_FIVE_TAGS;
    case 'FIFTY_TAGS':
      return _$gContainerExpirationPolicyKeepEnumFIFTY_TAGS;
    case 'ONE_HUNDRED_TAGS':
      return _$gContainerExpirationPolicyKeepEnumONE_HUNDRED_TAGS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GContainerExpirationPolicyKeepEnum>
    _$gContainerExpirationPolicyKeepEnumValues =
    new BuiltSet<GContainerExpirationPolicyKeepEnum>(const <
        GContainerExpirationPolicyKeepEnum>[
  _$gContainerExpirationPolicyKeepEnumONE_TAG,
  _$gContainerExpirationPolicyKeepEnumFIVE_TAGS,
  _$gContainerExpirationPolicyKeepEnumTEN_TAGS,
  _$gContainerExpirationPolicyKeepEnumTWENTY_FIVE_TAGS,
  _$gContainerExpirationPolicyKeepEnumFIFTY_TAGS,
  _$gContainerExpirationPolicyKeepEnumONE_HUNDRED_TAGS,
]);

const GContainerExpirationPolicyOlderThanEnum
    _$gContainerExpirationPolicyOlderThanEnumSEVEN_DAYS =
    const GContainerExpirationPolicyOlderThanEnum._('SEVEN_DAYS');
const GContainerExpirationPolicyOlderThanEnum
    _$gContainerExpirationPolicyOlderThanEnumFOURTEEN_DAYS =
    const GContainerExpirationPolicyOlderThanEnum._('FOURTEEN_DAYS');
const GContainerExpirationPolicyOlderThanEnum
    _$gContainerExpirationPolicyOlderThanEnumTHIRTY_DAYS =
    const GContainerExpirationPolicyOlderThanEnum._('THIRTY_DAYS');
const GContainerExpirationPolicyOlderThanEnum
    _$gContainerExpirationPolicyOlderThanEnumSIXTY_DAYS =
    const GContainerExpirationPolicyOlderThanEnum._('SIXTY_DAYS');
const GContainerExpirationPolicyOlderThanEnum
    _$gContainerExpirationPolicyOlderThanEnumNINETY_DAYS =
    const GContainerExpirationPolicyOlderThanEnum._('NINETY_DAYS');

GContainerExpirationPolicyOlderThanEnum
    _$gContainerExpirationPolicyOlderThanEnumValueOf(String name) {
  switch (name) {
    case 'SEVEN_DAYS':
      return _$gContainerExpirationPolicyOlderThanEnumSEVEN_DAYS;
    case 'FOURTEEN_DAYS':
      return _$gContainerExpirationPolicyOlderThanEnumFOURTEEN_DAYS;
    case 'THIRTY_DAYS':
      return _$gContainerExpirationPolicyOlderThanEnumTHIRTY_DAYS;
    case 'SIXTY_DAYS':
      return _$gContainerExpirationPolicyOlderThanEnumSIXTY_DAYS;
    case 'NINETY_DAYS':
      return _$gContainerExpirationPolicyOlderThanEnumNINETY_DAYS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GContainerExpirationPolicyOlderThanEnum>
    _$gContainerExpirationPolicyOlderThanEnumValues =
    new BuiltSet<GContainerExpirationPolicyOlderThanEnum>(const <
        GContainerExpirationPolicyOlderThanEnum>[
  _$gContainerExpirationPolicyOlderThanEnumSEVEN_DAYS,
  _$gContainerExpirationPolicyOlderThanEnumFOURTEEN_DAYS,
  _$gContainerExpirationPolicyOlderThanEnumTHIRTY_DAYS,
  _$gContainerExpirationPolicyOlderThanEnumSIXTY_DAYS,
  _$gContainerExpirationPolicyOlderThanEnumNINETY_DAYS,
]);

const GContainerRepositoryCleanupStatus
    _$gContainerRepositoryCleanupStatusUNSCHEDULED =
    const GContainerRepositoryCleanupStatus._('UNSCHEDULED');
const GContainerRepositoryCleanupStatus
    _$gContainerRepositoryCleanupStatusSCHEDULED =
    const GContainerRepositoryCleanupStatus._('SCHEDULED');
const GContainerRepositoryCleanupStatus
    _$gContainerRepositoryCleanupStatusUNFINISHED =
    const GContainerRepositoryCleanupStatus._('UNFINISHED');
const GContainerRepositoryCleanupStatus
    _$gContainerRepositoryCleanupStatusONGOING =
    const GContainerRepositoryCleanupStatus._('ONGOING');

GContainerRepositoryCleanupStatus _$gContainerRepositoryCleanupStatusValueOf(
    String name) {
  switch (name) {
    case 'UNSCHEDULED':
      return _$gContainerRepositoryCleanupStatusUNSCHEDULED;
    case 'SCHEDULED':
      return _$gContainerRepositoryCleanupStatusSCHEDULED;
    case 'UNFINISHED':
      return _$gContainerRepositoryCleanupStatusUNFINISHED;
    case 'ONGOING':
      return _$gContainerRepositoryCleanupStatusONGOING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GContainerRepositoryCleanupStatus>
    _$gContainerRepositoryCleanupStatusValues =
    new BuiltSet<GContainerRepositoryCleanupStatus>(const <
        GContainerRepositoryCleanupStatus>[
  _$gContainerRepositoryCleanupStatusUNSCHEDULED,
  _$gContainerRepositoryCleanupStatusSCHEDULED,
  _$gContainerRepositoryCleanupStatusUNFINISHED,
  _$gContainerRepositoryCleanupStatusONGOING,
]);

const GContainerRepositorySort _$gContainerRepositorySortNAME_ASC =
    const GContainerRepositorySort._('NAME_ASC');
const GContainerRepositorySort _$gContainerRepositorySortNAME_DESC =
    const GContainerRepositorySort._('NAME_DESC');
const GContainerRepositorySort _$gContainerRepositorySortupdated_desc =
    const GContainerRepositorySort._('updated_desc');
const GContainerRepositorySort _$gContainerRepositorySortupdated_asc =
    const GContainerRepositorySort._('updated_asc');
const GContainerRepositorySort _$gContainerRepositorySortcreated_desc =
    const GContainerRepositorySort._('created_desc');
const GContainerRepositorySort _$gContainerRepositorySortcreated_asc =
    const GContainerRepositorySort._('created_asc');
const GContainerRepositorySort _$gContainerRepositorySortUPDATED_DESC =
    const GContainerRepositorySort._('UPDATED_DESC');
const GContainerRepositorySort _$gContainerRepositorySortUPDATED_ASC =
    const GContainerRepositorySort._('UPDATED_ASC');
const GContainerRepositorySort _$gContainerRepositorySortCREATED_DESC =
    const GContainerRepositorySort._('CREATED_DESC');
const GContainerRepositorySort _$gContainerRepositorySortCREATED_ASC =
    const GContainerRepositorySort._('CREATED_ASC');

GContainerRepositorySort _$gContainerRepositorySortValueOf(String name) {
  switch (name) {
    case 'NAME_ASC':
      return _$gContainerRepositorySortNAME_ASC;
    case 'NAME_DESC':
      return _$gContainerRepositorySortNAME_DESC;
    case 'updated_desc':
      return _$gContainerRepositorySortupdated_desc;
    case 'updated_asc':
      return _$gContainerRepositorySortupdated_asc;
    case 'created_desc':
      return _$gContainerRepositorySortcreated_desc;
    case 'created_asc':
      return _$gContainerRepositorySortcreated_asc;
    case 'UPDATED_DESC':
      return _$gContainerRepositorySortUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gContainerRepositorySortUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gContainerRepositorySortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gContainerRepositorySortCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GContainerRepositorySort> _$gContainerRepositorySortValues =
    new BuiltSet<GContainerRepositorySort>(const <GContainerRepositorySort>[
  _$gContainerRepositorySortNAME_ASC,
  _$gContainerRepositorySortNAME_DESC,
  _$gContainerRepositorySortupdated_desc,
  _$gContainerRepositorySortupdated_asc,
  _$gContainerRepositorySortcreated_desc,
  _$gContainerRepositorySortcreated_asc,
  _$gContainerRepositorySortUPDATED_DESC,
  _$gContainerRepositorySortUPDATED_ASC,
  _$gContainerRepositorySortCREATED_DESC,
  _$gContainerRepositorySortCREATED_ASC,
]);

const GContainerRepositoryStatus _$gContainerRepositoryStatusDELETE_SCHEDULED =
    const GContainerRepositoryStatus._('DELETE_SCHEDULED');
const GContainerRepositoryStatus _$gContainerRepositoryStatusDELETE_FAILED =
    const GContainerRepositoryStatus._('DELETE_FAILED');

GContainerRepositoryStatus _$gContainerRepositoryStatusValueOf(String name) {
  switch (name) {
    case 'DELETE_SCHEDULED':
      return _$gContainerRepositoryStatusDELETE_SCHEDULED;
    case 'DELETE_FAILED':
      return _$gContainerRepositoryStatusDELETE_FAILED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GContainerRepositoryStatus> _$gContainerRepositoryStatusValues =
    new BuiltSet<GContainerRepositoryStatus>(const <GContainerRepositoryStatus>[
  _$gContainerRepositoryStatusDELETE_SCHEDULED,
  _$gContainerRepositoryStatusDELETE_FAILED,
]);

const GContainerRepositoryTagSort _$gContainerRepositoryTagSortNAME_ASC =
    const GContainerRepositoryTagSort._('NAME_ASC');
const GContainerRepositoryTagSort _$gContainerRepositoryTagSortNAME_DESC =
    const GContainerRepositoryTagSort._('NAME_DESC');

GContainerRepositoryTagSort _$gContainerRepositoryTagSortValueOf(String name) {
  switch (name) {
    case 'NAME_ASC':
      return _$gContainerRepositoryTagSortNAME_ASC;
    case 'NAME_DESC':
      return _$gContainerRepositoryTagSortNAME_DESC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GContainerRepositoryTagSort>
    _$gContainerRepositoryTagSortValues = new BuiltSet<
        GContainerRepositoryTagSort>(const <GContainerRepositoryTagSort>[
  _$gContainerRepositoryTagSortNAME_ASC,
  _$gContainerRepositoryTagSortNAME_DESC,
]);

const GCustomerRelationsContactState _$gCustomerRelationsContactStateall =
    const GCustomerRelationsContactState._('all');
const GCustomerRelationsContactState _$gCustomerRelationsContactStateactive =
    const GCustomerRelationsContactState._('active');
const GCustomerRelationsContactState _$gCustomerRelationsContactStateinactive =
    const GCustomerRelationsContactState._('inactive');

GCustomerRelationsContactState _$gCustomerRelationsContactStateValueOf(
    String name) {
  switch (name) {
    case 'all':
      return _$gCustomerRelationsContactStateall;
    case 'active':
      return _$gCustomerRelationsContactStateactive;
    case 'inactive':
      return _$gCustomerRelationsContactStateinactive;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCustomerRelationsContactState>
    _$gCustomerRelationsContactStateValues = new BuiltSet<
        GCustomerRelationsContactState>(const <GCustomerRelationsContactState>[
  _$gCustomerRelationsContactStateall,
  _$gCustomerRelationsContactStateactive,
  _$gCustomerRelationsContactStateinactive,
]);

const GCustomerRelationsOrganizationState
    _$gCustomerRelationsOrganizationStateall =
    const GCustomerRelationsOrganizationState._('all');
const GCustomerRelationsOrganizationState
    _$gCustomerRelationsOrganizationStateactive =
    const GCustomerRelationsOrganizationState._('active');
const GCustomerRelationsOrganizationState
    _$gCustomerRelationsOrganizationStateinactive =
    const GCustomerRelationsOrganizationState._('inactive');

GCustomerRelationsOrganizationState
    _$gCustomerRelationsOrganizationStateValueOf(String name) {
  switch (name) {
    case 'all':
      return _$gCustomerRelationsOrganizationStateall;
    case 'active':
      return _$gCustomerRelationsOrganizationStateactive;
    case 'inactive':
      return _$gCustomerRelationsOrganizationStateinactive;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCustomerRelationsOrganizationState>
    _$gCustomerRelationsOrganizationStateValues =
    new BuiltSet<GCustomerRelationsOrganizationState>(const <
        GCustomerRelationsOrganizationState>[
  _$gCustomerRelationsOrganizationStateall,
  _$gCustomerRelationsOrganizationStateactive,
  _$gCustomerRelationsOrganizationStateinactive,
]);

const GDastProfileCadenceUnit _$gDastProfileCadenceUnitDAY =
    const GDastProfileCadenceUnit._('DAY');
const GDastProfileCadenceUnit _$gDastProfileCadenceUnitWEEK =
    const GDastProfileCadenceUnit._('WEEK');
const GDastProfileCadenceUnit _$gDastProfileCadenceUnitMONTH =
    const GDastProfileCadenceUnit._('MONTH');
const GDastProfileCadenceUnit _$gDastProfileCadenceUnitYEAR =
    const GDastProfileCadenceUnit._('YEAR');

GDastProfileCadenceUnit _$gDastProfileCadenceUnitValueOf(String name) {
  switch (name) {
    case 'DAY':
      return _$gDastProfileCadenceUnitDAY;
    case 'WEEK':
      return _$gDastProfileCadenceUnitWEEK;
    case 'MONTH':
      return _$gDastProfileCadenceUnitMONTH;
    case 'YEAR':
      return _$gDastProfileCadenceUnitYEAR;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDastProfileCadenceUnit> _$gDastProfileCadenceUnitValues =
    new BuiltSet<GDastProfileCadenceUnit>(const <GDastProfileCadenceUnit>[
  _$gDastProfileCadenceUnitDAY,
  _$gDastProfileCadenceUnitWEEK,
  _$gDastProfileCadenceUnitMONTH,
  _$gDastProfileCadenceUnitYEAR,
]);

const GDastScanMethodType _$gDastScanMethodTypeWEBSITE =
    const GDastScanMethodType._('WEBSITE');
const GDastScanMethodType _$gDastScanMethodTypeOPENAPI =
    const GDastScanMethodType._('OPENAPI');
const GDastScanMethodType _$gDastScanMethodTypeHAR =
    const GDastScanMethodType._('HAR');
const GDastScanMethodType _$gDastScanMethodTypePOSTMAN_COLLECTION =
    const GDastScanMethodType._('POSTMAN_COLLECTION');

GDastScanMethodType _$gDastScanMethodTypeValueOf(String name) {
  switch (name) {
    case 'WEBSITE':
      return _$gDastScanMethodTypeWEBSITE;
    case 'OPENAPI':
      return _$gDastScanMethodTypeOPENAPI;
    case 'HAR':
      return _$gDastScanMethodTypeHAR;
    case 'POSTMAN_COLLECTION':
      return _$gDastScanMethodTypePOSTMAN_COLLECTION;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDastScanMethodType> _$gDastScanMethodTypeValues =
    new BuiltSet<GDastScanMethodType>(const <GDastScanMethodType>[
  _$gDastScanMethodTypeWEBSITE,
  _$gDastScanMethodTypeOPENAPI,
  _$gDastScanMethodTypeHAR,
  _$gDastScanMethodTypePOSTMAN_COLLECTION,
]);

const GDastScanTypeEnum _$gDastScanTypeEnumPASSIVE =
    const GDastScanTypeEnum._('PASSIVE');
const GDastScanTypeEnum _$gDastScanTypeEnumACTIVE =
    const GDastScanTypeEnum._('ACTIVE');

GDastScanTypeEnum _$gDastScanTypeEnumValueOf(String name) {
  switch (name) {
    case 'PASSIVE':
      return _$gDastScanTypeEnumPASSIVE;
    case 'ACTIVE':
      return _$gDastScanTypeEnumACTIVE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDastScanTypeEnum> _$gDastScanTypeEnumValues =
    new BuiltSet<GDastScanTypeEnum>(const <GDastScanTypeEnum>[
  _$gDastScanTypeEnumPASSIVE,
  _$gDastScanTypeEnumACTIVE,
]);

const GDastSiteProfileValidationStatusEnum
    _$gDastSiteProfileValidationStatusEnumNONE =
    const GDastSiteProfileValidationStatusEnum._('NONE');
const GDastSiteProfileValidationStatusEnum
    _$gDastSiteProfileValidationStatusEnumPENDING_VALIDATION =
    const GDastSiteProfileValidationStatusEnum._('PENDING_VALIDATION');
const GDastSiteProfileValidationStatusEnum
    _$gDastSiteProfileValidationStatusEnumINPROGRESS_VALIDATION =
    const GDastSiteProfileValidationStatusEnum._('INPROGRESS_VALIDATION');
const GDastSiteProfileValidationStatusEnum
    _$gDastSiteProfileValidationStatusEnumPASSED_VALIDATION =
    const GDastSiteProfileValidationStatusEnum._('PASSED_VALIDATION');
const GDastSiteProfileValidationStatusEnum
    _$gDastSiteProfileValidationStatusEnumFAILED_VALIDATION =
    const GDastSiteProfileValidationStatusEnum._('FAILED_VALIDATION');

GDastSiteProfileValidationStatusEnum
    _$gDastSiteProfileValidationStatusEnumValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gDastSiteProfileValidationStatusEnumNONE;
    case 'PENDING_VALIDATION':
      return _$gDastSiteProfileValidationStatusEnumPENDING_VALIDATION;
    case 'INPROGRESS_VALIDATION':
      return _$gDastSiteProfileValidationStatusEnumINPROGRESS_VALIDATION;
    case 'PASSED_VALIDATION':
      return _$gDastSiteProfileValidationStatusEnumPASSED_VALIDATION;
    case 'FAILED_VALIDATION':
      return _$gDastSiteProfileValidationStatusEnumFAILED_VALIDATION;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDastSiteProfileValidationStatusEnum>
    _$gDastSiteProfileValidationStatusEnumValues =
    new BuiltSet<GDastSiteProfileValidationStatusEnum>(const <
        GDastSiteProfileValidationStatusEnum>[
  _$gDastSiteProfileValidationStatusEnumNONE,
  _$gDastSiteProfileValidationStatusEnumPENDING_VALIDATION,
  _$gDastSiteProfileValidationStatusEnumINPROGRESS_VALIDATION,
  _$gDastSiteProfileValidationStatusEnumPASSED_VALIDATION,
  _$gDastSiteProfileValidationStatusEnumFAILED_VALIDATION,
]);

const GDastSiteValidationStatusEnum
    _$gDastSiteValidationStatusEnumPENDING_VALIDATION =
    const GDastSiteValidationStatusEnum._('PENDING_VALIDATION');
const GDastSiteValidationStatusEnum
    _$gDastSiteValidationStatusEnumINPROGRESS_VALIDATION =
    const GDastSiteValidationStatusEnum._('INPROGRESS_VALIDATION');
const GDastSiteValidationStatusEnum
    _$gDastSiteValidationStatusEnumPASSED_VALIDATION =
    const GDastSiteValidationStatusEnum._('PASSED_VALIDATION');
const GDastSiteValidationStatusEnum
    _$gDastSiteValidationStatusEnumFAILED_VALIDATION =
    const GDastSiteValidationStatusEnum._('FAILED_VALIDATION');

GDastSiteValidationStatusEnum _$gDastSiteValidationStatusEnumValueOf(
    String name) {
  switch (name) {
    case 'PENDING_VALIDATION':
      return _$gDastSiteValidationStatusEnumPENDING_VALIDATION;
    case 'INPROGRESS_VALIDATION':
      return _$gDastSiteValidationStatusEnumINPROGRESS_VALIDATION;
    case 'PASSED_VALIDATION':
      return _$gDastSiteValidationStatusEnumPASSED_VALIDATION;
    case 'FAILED_VALIDATION':
      return _$gDastSiteValidationStatusEnumFAILED_VALIDATION;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDastSiteValidationStatusEnum>
    _$gDastSiteValidationStatusEnumValues = new BuiltSet<
        GDastSiteValidationStatusEnum>(const <GDastSiteValidationStatusEnum>[
  _$gDastSiteValidationStatusEnumPENDING_VALIDATION,
  _$gDastSiteValidationStatusEnumINPROGRESS_VALIDATION,
  _$gDastSiteValidationStatusEnumPASSED_VALIDATION,
  _$gDastSiteValidationStatusEnumFAILED_VALIDATION,
]);

const GDastSiteValidationStrategyEnum
    _$gDastSiteValidationStrategyEnumTEXT_FILE =
    const GDastSiteValidationStrategyEnum._('TEXT_FILE');
const GDastSiteValidationStrategyEnum _$gDastSiteValidationStrategyEnumHEADER =
    const GDastSiteValidationStrategyEnum._('HEADER');
const GDastSiteValidationStrategyEnum
    _$gDastSiteValidationStrategyEnumMETA_TAG =
    const GDastSiteValidationStrategyEnum._('META_TAG');

GDastSiteValidationStrategyEnum _$gDastSiteValidationStrategyEnumValueOf(
    String name) {
  switch (name) {
    case 'TEXT_FILE':
      return _$gDastSiteValidationStrategyEnumTEXT_FILE;
    case 'HEADER':
      return _$gDastSiteValidationStrategyEnumHEADER;
    case 'META_TAG':
      return _$gDastSiteValidationStrategyEnumMETA_TAG;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDastSiteValidationStrategyEnum>
    _$gDastSiteValidationStrategyEnumValues =
    new BuiltSet<GDastSiteValidationStrategyEnum>(const <
        GDastSiteValidationStrategyEnum>[
  _$gDastSiteValidationStrategyEnumTEXT_FILE,
  _$gDastSiteValidationStrategyEnumHEADER,
  _$gDastSiteValidationStrategyEnumMETA_TAG,
]);

const GDastTargetTypeEnum _$gDastTargetTypeEnumWEBSITE =
    const GDastTargetTypeEnum._('WEBSITE');
const GDastTargetTypeEnum _$gDastTargetTypeEnumAPI =
    const GDastTargetTypeEnum._('API');

GDastTargetTypeEnum _$gDastTargetTypeEnumValueOf(String name) {
  switch (name) {
    case 'WEBSITE':
      return _$gDastTargetTypeEnumWEBSITE;
    case 'API':
      return _$gDastTargetTypeEnumAPI;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDastTargetTypeEnum> _$gDastTargetTypeEnumValues =
    new BuiltSet<GDastTargetTypeEnum>(const <GDastTargetTypeEnum>[
  _$gDastTargetTypeEnumWEBSITE,
  _$gDastTargetTypeEnumAPI,
]);

const GDataVisualizationColorEnum _$gDataVisualizationColorEnumBLUE =
    const GDataVisualizationColorEnum._('BLUE');
const GDataVisualizationColorEnum _$gDataVisualizationColorEnumORANGE =
    const GDataVisualizationColorEnum._('ORANGE');
const GDataVisualizationColorEnum _$gDataVisualizationColorEnumAQUA =
    const GDataVisualizationColorEnum._('AQUA');
const GDataVisualizationColorEnum _$gDataVisualizationColorEnumGREEN =
    const GDataVisualizationColorEnum._('GREEN');
const GDataVisualizationColorEnum _$gDataVisualizationColorEnumMAGENTA =
    const GDataVisualizationColorEnum._('MAGENTA');

GDataVisualizationColorEnum _$gDataVisualizationColorEnumValueOf(String name) {
  switch (name) {
    case 'BLUE':
      return _$gDataVisualizationColorEnumBLUE;
    case 'ORANGE':
      return _$gDataVisualizationColorEnumORANGE;
    case 'AQUA':
      return _$gDataVisualizationColorEnumAQUA;
    case 'GREEN':
      return _$gDataVisualizationColorEnumGREEN;
    case 'MAGENTA':
      return _$gDataVisualizationColorEnumMAGENTA;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDataVisualizationColorEnum>
    _$gDataVisualizationColorEnumValues = new BuiltSet<
        GDataVisualizationColorEnum>(const <GDataVisualizationColorEnum>[
  _$gDataVisualizationColorEnumBLUE,
  _$gDataVisualizationColorEnumORANGE,
  _$gDataVisualizationColorEnumAQUA,
  _$gDataVisualizationColorEnumGREEN,
  _$gDataVisualizationColorEnumMAGENTA,
]);

const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_50 =
    const GDataVisualizationWeightEnum._('WEIGHT_50');
const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_100 =
    const GDataVisualizationWeightEnum._('WEIGHT_100');
const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_200 =
    const GDataVisualizationWeightEnum._('WEIGHT_200');
const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_300 =
    const GDataVisualizationWeightEnum._('WEIGHT_300');
const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_400 =
    const GDataVisualizationWeightEnum._('WEIGHT_400');
const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_500 =
    const GDataVisualizationWeightEnum._('WEIGHT_500');
const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_600 =
    const GDataVisualizationWeightEnum._('WEIGHT_600');
const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_700 =
    const GDataVisualizationWeightEnum._('WEIGHT_700');
const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_800 =
    const GDataVisualizationWeightEnum._('WEIGHT_800');
const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_900 =
    const GDataVisualizationWeightEnum._('WEIGHT_900');
const GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumWEIGHT_950 =
    const GDataVisualizationWeightEnum._('WEIGHT_950');

GDataVisualizationWeightEnum _$gDataVisualizationWeightEnumValueOf(
    String name) {
  switch (name) {
    case 'WEIGHT_50':
      return _$gDataVisualizationWeightEnumWEIGHT_50;
    case 'WEIGHT_100':
      return _$gDataVisualizationWeightEnumWEIGHT_100;
    case 'WEIGHT_200':
      return _$gDataVisualizationWeightEnumWEIGHT_200;
    case 'WEIGHT_300':
      return _$gDataVisualizationWeightEnumWEIGHT_300;
    case 'WEIGHT_400':
      return _$gDataVisualizationWeightEnumWEIGHT_400;
    case 'WEIGHT_500':
      return _$gDataVisualizationWeightEnumWEIGHT_500;
    case 'WEIGHT_600':
      return _$gDataVisualizationWeightEnumWEIGHT_600;
    case 'WEIGHT_700':
      return _$gDataVisualizationWeightEnumWEIGHT_700;
    case 'WEIGHT_800':
      return _$gDataVisualizationWeightEnumWEIGHT_800;
    case 'WEIGHT_900':
      return _$gDataVisualizationWeightEnumWEIGHT_900;
    case 'WEIGHT_950':
      return _$gDataVisualizationWeightEnumWEIGHT_950;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDataVisualizationWeightEnum>
    _$gDataVisualizationWeightEnumValues = new BuiltSet<
        GDataVisualizationWeightEnum>(const <GDataVisualizationWeightEnum>[
  _$gDataVisualizationWeightEnumWEIGHT_50,
  _$gDataVisualizationWeightEnumWEIGHT_100,
  _$gDataVisualizationWeightEnumWEIGHT_200,
  _$gDataVisualizationWeightEnumWEIGHT_300,
  _$gDataVisualizationWeightEnumWEIGHT_400,
  _$gDataVisualizationWeightEnumWEIGHT_500,
  _$gDataVisualizationWeightEnumWEIGHT_600,
  _$gDataVisualizationWeightEnumWEIGHT_700,
  _$gDataVisualizationWeightEnumWEIGHT_800,
  _$gDataVisualizationWeightEnumWEIGHT_900,
  _$gDataVisualizationWeightEnumWEIGHT_950,
]);

const GDependencyProxyManifestStatus _$gDependencyProxyManifestStatusDEFAULT =
    const GDependencyProxyManifestStatus._('DEFAULT');
const GDependencyProxyManifestStatus
    _$gDependencyProxyManifestStatusPENDING_DESTRUCTION =
    const GDependencyProxyManifestStatus._('PENDING_DESTRUCTION');
const GDependencyProxyManifestStatus
    _$gDependencyProxyManifestStatusPROCESSING =
    const GDependencyProxyManifestStatus._('PROCESSING');
const GDependencyProxyManifestStatus _$gDependencyProxyManifestStatusERROR =
    const GDependencyProxyManifestStatus._('ERROR');

GDependencyProxyManifestStatus _$gDependencyProxyManifestStatusValueOf(
    String name) {
  switch (name) {
    case 'DEFAULT':
      return _$gDependencyProxyManifestStatusDEFAULT;
    case 'PENDING_DESTRUCTION':
      return _$gDependencyProxyManifestStatusPENDING_DESTRUCTION;
    case 'PROCESSING':
      return _$gDependencyProxyManifestStatusPROCESSING;
    case 'ERROR':
      return _$gDependencyProxyManifestStatusERROR;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDependencyProxyManifestStatus>
    _$gDependencyProxyManifestStatusValues = new BuiltSet<
        GDependencyProxyManifestStatus>(const <GDependencyProxyManifestStatus>[
  _$gDependencyProxyManifestStatusDEFAULT,
  _$gDependencyProxyManifestStatusPENDING_DESTRUCTION,
  _$gDependencyProxyManifestStatusPROCESSING,
  _$gDependencyProxyManifestStatusERROR,
]);

const GDeploymentStatus _$gDeploymentStatusCREATED =
    const GDeploymentStatus._('CREATED');
const GDeploymentStatus _$gDeploymentStatusRUNNING =
    const GDeploymentStatus._('RUNNING');
const GDeploymentStatus _$gDeploymentStatusSUCCESS =
    const GDeploymentStatus._('SUCCESS');
const GDeploymentStatus _$gDeploymentStatusFAILED =
    const GDeploymentStatus._('FAILED');
const GDeploymentStatus _$gDeploymentStatusCANCELED =
    const GDeploymentStatus._('CANCELED');
const GDeploymentStatus _$gDeploymentStatusSKIPPED =
    const GDeploymentStatus._('SKIPPED');
const GDeploymentStatus _$gDeploymentStatusBLOCKED =
    const GDeploymentStatus._('BLOCKED');

GDeploymentStatus _$gDeploymentStatusValueOf(String name) {
  switch (name) {
    case 'CREATED':
      return _$gDeploymentStatusCREATED;
    case 'RUNNING':
      return _$gDeploymentStatusRUNNING;
    case 'SUCCESS':
      return _$gDeploymentStatusSUCCESS;
    case 'FAILED':
      return _$gDeploymentStatusFAILED;
    case 'CANCELED':
      return _$gDeploymentStatusCANCELED;
    case 'SKIPPED':
      return _$gDeploymentStatusSKIPPED;
    case 'BLOCKED':
      return _$gDeploymentStatusBLOCKED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDeploymentStatus> _$gDeploymentStatusValues =
    new BuiltSet<GDeploymentStatus>(const <GDeploymentStatus>[
  _$gDeploymentStatusCREATED,
  _$gDeploymentStatusRUNNING,
  _$gDeploymentStatusSUCCESS,
  _$gDeploymentStatusFAILED,
  _$gDeploymentStatusCANCELED,
  _$gDeploymentStatusSKIPPED,
  _$gDeploymentStatusBLOCKED,
]);

const GDeploymentTier _$gDeploymentTierPRODUCTION =
    const GDeploymentTier._('PRODUCTION');
const GDeploymentTier _$gDeploymentTierSTAGING =
    const GDeploymentTier._('STAGING');
const GDeploymentTier _$gDeploymentTierTESTING =
    const GDeploymentTier._('TESTING');
const GDeploymentTier _$gDeploymentTierDEVELOPMENT =
    const GDeploymentTier._('DEVELOPMENT');
const GDeploymentTier _$gDeploymentTierOTHER = const GDeploymentTier._('OTHER');

GDeploymentTier _$gDeploymentTierValueOf(String name) {
  switch (name) {
    case 'PRODUCTION':
      return _$gDeploymentTierPRODUCTION;
    case 'STAGING':
      return _$gDeploymentTierSTAGING;
    case 'TESTING':
      return _$gDeploymentTierTESTING;
    case 'DEVELOPMENT':
      return _$gDeploymentTierDEVELOPMENT;
    case 'OTHER':
      return _$gDeploymentTierOTHER;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDeploymentTier> _$gDeploymentTierValues =
    new BuiltSet<GDeploymentTier>(const <GDeploymentTier>[
  _$gDeploymentTierPRODUCTION,
  _$gDeploymentTierSTAGING,
  _$gDeploymentTierTESTING,
  _$gDeploymentTierDEVELOPMENT,
  _$gDeploymentTierOTHER,
]);

const GDesignCollectionCopyState _$gDesignCollectionCopyStateREADY =
    const GDesignCollectionCopyState._('READY');
const GDesignCollectionCopyState _$gDesignCollectionCopyStateIN_PROGRESS =
    const GDesignCollectionCopyState._('IN_PROGRESS');
const GDesignCollectionCopyState _$gDesignCollectionCopyStateERROR =
    const GDesignCollectionCopyState._('ERROR');

GDesignCollectionCopyState _$gDesignCollectionCopyStateValueOf(String name) {
  switch (name) {
    case 'READY':
      return _$gDesignCollectionCopyStateREADY;
    case 'IN_PROGRESS':
      return _$gDesignCollectionCopyStateIN_PROGRESS;
    case 'ERROR':
      return _$gDesignCollectionCopyStateERROR;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDesignCollectionCopyState> _$gDesignCollectionCopyStateValues =
    new BuiltSet<GDesignCollectionCopyState>(const <GDesignCollectionCopyState>[
  _$gDesignCollectionCopyStateREADY,
  _$gDesignCollectionCopyStateIN_PROGRESS,
  _$gDesignCollectionCopyStateERROR,
]);

const GDesignVersionEvent _$gDesignVersionEventNONE =
    const GDesignVersionEvent._('NONE');
const GDesignVersionEvent _$gDesignVersionEventCREATION =
    const GDesignVersionEvent._('CREATION');
const GDesignVersionEvent _$gDesignVersionEventMODIFICATION =
    const GDesignVersionEvent._('MODIFICATION');
const GDesignVersionEvent _$gDesignVersionEventDELETION =
    const GDesignVersionEvent._('DELETION');

GDesignVersionEvent _$gDesignVersionEventValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gDesignVersionEventNONE;
    case 'CREATION':
      return _$gDesignVersionEventCREATION;
    case 'MODIFICATION':
      return _$gDesignVersionEventMODIFICATION;
    case 'DELETION':
      return _$gDesignVersionEventDELETION;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDesignVersionEvent> _$gDesignVersionEventValues =
    new BuiltSet<GDesignVersionEvent>(const <GDesignVersionEvent>[
  _$gDesignVersionEventNONE,
  _$gDesignVersionEventCREATION,
  _$gDesignVersionEventMODIFICATION,
  _$gDesignVersionEventDELETION,
]);

const GDetailedMergeStatus _$gDetailedMergeStatusUNCHECKED =
    const GDetailedMergeStatus._('UNCHECKED');
const GDetailedMergeStatus _$gDetailedMergeStatusCHECKING =
    const GDetailedMergeStatus._('CHECKING');
const GDetailedMergeStatus _$gDetailedMergeStatusMERGEABLE =
    const GDetailedMergeStatus._('MERGEABLE');
const GDetailedMergeStatus _$gDetailedMergeStatusBROKEN_STATUS =
    const GDetailedMergeStatus._('BROKEN_STATUS');
const GDetailedMergeStatus _$gDetailedMergeStatusCI_MUST_PASS =
    const GDetailedMergeStatus._('CI_MUST_PASS');
const GDetailedMergeStatus _$gDetailedMergeStatusCI_STILL_RUNNING =
    const GDetailedMergeStatus._('CI_STILL_RUNNING');
const GDetailedMergeStatus _$gDetailedMergeStatusDISCUSSIONS_NOT_RESOLVED =
    const GDetailedMergeStatus._('DISCUSSIONS_NOT_RESOLVED');
const GDetailedMergeStatus _$gDetailedMergeStatusDRAFT_STATUS =
    const GDetailedMergeStatus._('DRAFT_STATUS');
const GDetailedMergeStatus _$gDetailedMergeStatusNOT_OPEN =
    const GDetailedMergeStatus._('NOT_OPEN');
const GDetailedMergeStatus _$gDetailedMergeStatusNOT_APPROVED =
    const GDetailedMergeStatus._('NOT_APPROVED');
const GDetailedMergeStatus _$gDetailedMergeStatusBLOCKED_STATUS =
    const GDetailedMergeStatus._('BLOCKED_STATUS');
const GDetailedMergeStatus _$gDetailedMergeStatusPOLICIES_DENIED =
    const GDetailedMergeStatus._('POLICIES_DENIED');

GDetailedMergeStatus _$gDetailedMergeStatusValueOf(String name) {
  switch (name) {
    case 'UNCHECKED':
      return _$gDetailedMergeStatusUNCHECKED;
    case 'CHECKING':
      return _$gDetailedMergeStatusCHECKING;
    case 'MERGEABLE':
      return _$gDetailedMergeStatusMERGEABLE;
    case 'BROKEN_STATUS':
      return _$gDetailedMergeStatusBROKEN_STATUS;
    case 'CI_MUST_PASS':
      return _$gDetailedMergeStatusCI_MUST_PASS;
    case 'CI_STILL_RUNNING':
      return _$gDetailedMergeStatusCI_STILL_RUNNING;
    case 'DISCUSSIONS_NOT_RESOLVED':
      return _$gDetailedMergeStatusDISCUSSIONS_NOT_RESOLVED;
    case 'DRAFT_STATUS':
      return _$gDetailedMergeStatusDRAFT_STATUS;
    case 'NOT_OPEN':
      return _$gDetailedMergeStatusNOT_OPEN;
    case 'NOT_APPROVED':
      return _$gDetailedMergeStatusNOT_APPROVED;
    case 'BLOCKED_STATUS':
      return _$gDetailedMergeStatusBLOCKED_STATUS;
    case 'POLICIES_DENIED':
      return _$gDetailedMergeStatusPOLICIES_DENIED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDetailedMergeStatus> _$gDetailedMergeStatusValues =
    new BuiltSet<GDetailedMergeStatus>(const <GDetailedMergeStatus>[
  _$gDetailedMergeStatusUNCHECKED,
  _$gDetailedMergeStatusCHECKING,
  _$gDetailedMergeStatusMERGEABLE,
  _$gDetailedMergeStatusBROKEN_STATUS,
  _$gDetailedMergeStatusCI_MUST_PASS,
  _$gDetailedMergeStatusCI_STILL_RUNNING,
  _$gDetailedMergeStatusDISCUSSIONS_NOT_RESOLVED,
  _$gDetailedMergeStatusDRAFT_STATUS,
  _$gDetailedMergeStatusNOT_OPEN,
  _$gDetailedMergeStatusNOT_APPROVED,
  _$gDetailedMergeStatusBLOCKED_STATUS,
  _$gDetailedMergeStatusPOLICIES_DENIED,
]);

const GDiffPositionType _$gDiffPositionTypetext =
    const GDiffPositionType._('text');
const GDiffPositionType _$gDiffPositionTypeimage =
    const GDiffPositionType._('image');

GDiffPositionType _$gDiffPositionTypeValueOf(String name) {
  switch (name) {
    case 'text':
      return _$gDiffPositionTypetext;
    case 'image':
      return _$gDiffPositionTypeimage;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDiffPositionType> _$gDiffPositionTypeValues =
    new BuiltSet<GDiffPositionType>(const <GDiffPositionType>[
  _$gDiffPositionTypetext,
  _$gDiffPositionTypeimage,
]);

const GDoraMetricBucketingInterval _$gDoraMetricBucketingIntervalALL =
    const GDoraMetricBucketingInterval._('ALL');
const GDoraMetricBucketingInterval _$gDoraMetricBucketingIntervalMONTHLY =
    const GDoraMetricBucketingInterval._('MONTHLY');
const GDoraMetricBucketingInterval _$gDoraMetricBucketingIntervalDAILY =
    const GDoraMetricBucketingInterval._('DAILY');

GDoraMetricBucketingInterval _$gDoraMetricBucketingIntervalValueOf(
    String name) {
  switch (name) {
    case 'ALL':
      return _$gDoraMetricBucketingIntervalALL;
    case 'MONTHLY':
      return _$gDoraMetricBucketingIntervalMONTHLY;
    case 'DAILY':
      return _$gDoraMetricBucketingIntervalDAILY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDoraMetricBucketingInterval>
    _$gDoraMetricBucketingIntervalValues = new BuiltSet<
        GDoraMetricBucketingInterval>(const <GDoraMetricBucketingInterval>[
  _$gDoraMetricBucketingIntervalALL,
  _$gDoraMetricBucketingIntervalMONTHLY,
  _$gDoraMetricBucketingIntervalDAILY,
]);

const GDoraMetricType _$gDoraMetricTypeDEPLOYMENT_FREQUENCY =
    const GDoraMetricType._('DEPLOYMENT_FREQUENCY');
const GDoraMetricType _$gDoraMetricTypeLEAD_TIME_FOR_CHANGES =
    const GDoraMetricType._('LEAD_TIME_FOR_CHANGES');
const GDoraMetricType _$gDoraMetricTypeTIME_TO_RESTORE_SERVICE =
    const GDoraMetricType._('TIME_TO_RESTORE_SERVICE');
const GDoraMetricType _$gDoraMetricTypeCHANGE_FAILURE_RATE =
    const GDoraMetricType._('CHANGE_FAILURE_RATE');

GDoraMetricType _$gDoraMetricTypeValueOf(String name) {
  switch (name) {
    case 'DEPLOYMENT_FREQUENCY':
      return _$gDoraMetricTypeDEPLOYMENT_FREQUENCY;
    case 'LEAD_TIME_FOR_CHANGES':
      return _$gDoraMetricTypeLEAD_TIME_FOR_CHANGES;
    case 'TIME_TO_RESTORE_SERVICE':
      return _$gDoraMetricTypeTIME_TO_RESTORE_SERVICE;
    case 'CHANGE_FAILURE_RATE':
      return _$gDoraMetricTypeCHANGE_FAILURE_RATE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDoraMetricType> _$gDoraMetricTypeValues =
    new BuiltSet<GDoraMetricType>(const <GDoraMetricType>[
  _$gDoraMetricTypeDEPLOYMENT_FREQUENCY,
  _$gDoraMetricTypeLEAD_TIME_FOR_CHANGES,
  _$gDoraMetricTypeTIME_TO_RESTORE_SERVICE,
  _$gDoraMetricTypeCHANGE_FAILURE_RATE,
]);

const GEntryType _$gEntryTypetree = const GEntryType._('tree');
const GEntryType _$gEntryTypeblob = const GEntryType._('blob');
const GEntryType _$gEntryTypecommit = const GEntryType._('commit');

GEntryType _$gEntryTypeValueOf(String name) {
  switch (name) {
    case 'tree':
      return _$gEntryTypetree;
    case 'blob':
      return _$gEntryTypeblob;
    case 'commit':
      return _$gEntryTypecommit;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GEntryType> _$gEntryTypeValues =
    new BuiltSet<GEntryType>(const <GEntryType>[
  _$gEntryTypetree,
  _$gEntryTypeblob,
  _$gEntryTypecommit,
]);

const GEpicSort _$gEpicSortstart_date_desc =
    const GEpicSort._('start_date_desc');
const GEpicSort _$gEpicSortstart_date_asc = const GEpicSort._('start_date_asc');
const GEpicSort _$gEpicSortend_date_desc = const GEpicSort._('end_date_desc');
const GEpicSort _$gEpicSortend_date_asc = const GEpicSort._('end_date_asc');
const GEpicSort _$gEpicSortSTART_DATE_DESC =
    const GEpicSort._('START_DATE_DESC');
const GEpicSort _$gEpicSortSTART_DATE_ASC = const GEpicSort._('START_DATE_ASC');
const GEpicSort _$gEpicSortEND_DATE_DESC = const GEpicSort._('END_DATE_DESC');
const GEpicSort _$gEpicSortEND_DATE_ASC = const GEpicSort._('END_DATE_ASC');
const GEpicSort _$gEpicSortTITLE_DESC = const GEpicSort._('TITLE_DESC');
const GEpicSort _$gEpicSortTITLE_ASC = const GEpicSort._('TITLE_ASC');
const GEpicSort _$gEpicSortCREATED_AT_ASC = const GEpicSort._('CREATED_AT_ASC');
const GEpicSort _$gEpicSortCREATED_AT_DESC =
    const GEpicSort._('CREATED_AT_DESC');
const GEpicSort _$gEpicSortUPDATED_AT_ASC = const GEpicSort._('UPDATED_AT_ASC');
const GEpicSort _$gEpicSortUPDATED_AT_DESC =
    const GEpicSort._('UPDATED_AT_DESC');

GEpicSort _$gEpicSortValueOf(String name) {
  switch (name) {
    case 'start_date_desc':
      return _$gEpicSortstart_date_desc;
    case 'start_date_asc':
      return _$gEpicSortstart_date_asc;
    case 'end_date_desc':
      return _$gEpicSortend_date_desc;
    case 'end_date_asc':
      return _$gEpicSortend_date_asc;
    case 'START_DATE_DESC':
      return _$gEpicSortSTART_DATE_DESC;
    case 'START_DATE_ASC':
      return _$gEpicSortSTART_DATE_ASC;
    case 'END_DATE_DESC':
      return _$gEpicSortEND_DATE_DESC;
    case 'END_DATE_ASC':
      return _$gEpicSortEND_DATE_ASC;
    case 'TITLE_DESC':
      return _$gEpicSortTITLE_DESC;
    case 'TITLE_ASC':
      return _$gEpicSortTITLE_ASC;
    case 'CREATED_AT_ASC':
      return _$gEpicSortCREATED_AT_ASC;
    case 'CREATED_AT_DESC':
      return _$gEpicSortCREATED_AT_DESC;
    case 'UPDATED_AT_ASC':
      return _$gEpicSortUPDATED_AT_ASC;
    case 'UPDATED_AT_DESC':
      return _$gEpicSortUPDATED_AT_DESC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GEpicSort> _$gEpicSortValues =
    new BuiltSet<GEpicSort>(const <GEpicSort>[
  _$gEpicSortstart_date_desc,
  _$gEpicSortstart_date_asc,
  _$gEpicSortend_date_desc,
  _$gEpicSortend_date_asc,
  _$gEpicSortSTART_DATE_DESC,
  _$gEpicSortSTART_DATE_ASC,
  _$gEpicSortEND_DATE_DESC,
  _$gEpicSortEND_DATE_ASC,
  _$gEpicSortTITLE_DESC,
  _$gEpicSortTITLE_ASC,
  _$gEpicSortCREATED_AT_ASC,
  _$gEpicSortCREATED_AT_DESC,
  _$gEpicSortUPDATED_AT_ASC,
  _$gEpicSortUPDATED_AT_DESC,
]);

const GEpicState _$gEpicStateall = const GEpicState._('all');
const GEpicState _$gEpicStateopened = const GEpicState._('opened');
const GEpicState _$gEpicStateclosed = const GEpicState._('closed');

GEpicState _$gEpicStateValueOf(String name) {
  switch (name) {
    case 'all':
      return _$gEpicStateall;
    case 'opened':
      return _$gEpicStateopened;
    case 'closed':
      return _$gEpicStateclosed;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GEpicState> _$gEpicStateValues =
    new BuiltSet<GEpicState>(const <GEpicState>[
  _$gEpicStateall,
  _$gEpicStateopened,
  _$gEpicStateclosed,
]);

const GEpicStateEvent _$gEpicStateEventREOPEN =
    const GEpicStateEvent._('REOPEN');
const GEpicStateEvent _$gEpicStateEventCLOSE = const GEpicStateEvent._('CLOSE');

GEpicStateEvent _$gEpicStateEventValueOf(String name) {
  switch (name) {
    case 'REOPEN':
      return _$gEpicStateEventREOPEN;
    case 'CLOSE':
      return _$gEpicStateEventCLOSE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GEpicStateEvent> _$gEpicStateEventValues =
    new BuiltSet<GEpicStateEvent>(const <GEpicStateEvent>[
  _$gEpicStateEventREOPEN,
  _$gEpicStateEventCLOSE,
]);

const GEpicWildcardId _$gEpicWildcardIdNONE = const GEpicWildcardId._('NONE');
const GEpicWildcardId _$gEpicWildcardIdANY = const GEpicWildcardId._('ANY');

GEpicWildcardId _$gEpicWildcardIdValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gEpicWildcardIdNONE;
    case 'ANY':
      return _$gEpicWildcardIdANY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GEpicWildcardId> _$gEpicWildcardIdValues =
    new BuiltSet<GEpicWildcardId>(const <GEpicWildcardId>[
  _$gEpicWildcardIdNONE,
  _$gEpicWildcardIdANY,
]);

const GEscalationRuleStatus _$gEscalationRuleStatusACKNOWLEDGED =
    const GEscalationRuleStatus._('ACKNOWLEDGED');
const GEscalationRuleStatus _$gEscalationRuleStatusRESOLVED =
    const GEscalationRuleStatus._('RESOLVED');

GEscalationRuleStatus _$gEscalationRuleStatusValueOf(String name) {
  switch (name) {
    case 'ACKNOWLEDGED':
      return _$gEscalationRuleStatusACKNOWLEDGED;
    case 'RESOLVED':
      return _$gEscalationRuleStatusRESOLVED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GEscalationRuleStatus> _$gEscalationRuleStatusValues =
    new BuiltSet<GEscalationRuleStatus>(const <GEscalationRuleStatus>[
  _$gEscalationRuleStatusACKNOWLEDGED,
  _$gEscalationRuleStatusRESOLVED,
]);

const GEventAction _$gEventActionCREATED = const GEventAction._('CREATED');
const GEventAction _$gEventActionUPDATED = const GEventAction._('UPDATED');
const GEventAction _$gEventActionCLOSED = const GEventAction._('CLOSED');
const GEventAction _$gEventActionREOPENED = const GEventAction._('REOPENED');
const GEventAction _$gEventActionPUSHED = const GEventAction._('PUSHED');
const GEventAction _$gEventActionCOMMENTED = const GEventAction._('COMMENTED');
const GEventAction _$gEventActionMERGED = const GEventAction._('MERGED');
const GEventAction _$gEventActionJOINED = const GEventAction._('JOINED');
const GEventAction _$gEventActionLEFT = const GEventAction._('LEFT');
const GEventAction _$gEventActionDESTROYED = const GEventAction._('DESTROYED');
const GEventAction _$gEventActionEXPIRED = const GEventAction._('EXPIRED');
const GEventAction _$gEventActionAPPROVED = const GEventAction._('APPROVED');

GEventAction _$gEventActionValueOf(String name) {
  switch (name) {
    case 'CREATED':
      return _$gEventActionCREATED;
    case 'UPDATED':
      return _$gEventActionUPDATED;
    case 'CLOSED':
      return _$gEventActionCLOSED;
    case 'REOPENED':
      return _$gEventActionREOPENED;
    case 'PUSHED':
      return _$gEventActionPUSHED;
    case 'COMMENTED':
      return _$gEventActionCOMMENTED;
    case 'MERGED':
      return _$gEventActionMERGED;
    case 'JOINED':
      return _$gEventActionJOINED;
    case 'LEFT':
      return _$gEventActionLEFT;
    case 'DESTROYED':
      return _$gEventActionDESTROYED;
    case 'EXPIRED':
      return _$gEventActionEXPIRED;
    case 'APPROVED':
      return _$gEventActionAPPROVED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GEventAction> _$gEventActionValues =
    new BuiltSet<GEventAction>(const <GEventAction>[
  _$gEventActionCREATED,
  _$gEventActionUPDATED,
  _$gEventActionCLOSED,
  _$gEventActionREOPENED,
  _$gEventActionPUSHED,
  _$gEventActionCOMMENTED,
  _$gEventActionMERGED,
  _$gEventActionJOINED,
  _$gEventActionLEFT,
  _$gEventActionDESTROYED,
  _$gEventActionEXPIRED,
  _$gEventActionAPPROVED,
]);

const GGroupMemberRelation _$gGroupMemberRelationDIRECT =
    const GGroupMemberRelation._('DIRECT');
const GGroupMemberRelation _$gGroupMemberRelationINHERITED =
    const GGroupMemberRelation._('INHERITED');
const GGroupMemberRelation _$gGroupMemberRelationDESCENDANTS =
    const GGroupMemberRelation._('DESCENDANTS');
const GGroupMemberRelation _$gGroupMemberRelationSHARED_FROM_GROUPS =
    const GGroupMemberRelation._('SHARED_FROM_GROUPS');

GGroupMemberRelation _$gGroupMemberRelationValueOf(String name) {
  switch (name) {
    case 'DIRECT':
      return _$gGroupMemberRelationDIRECT;
    case 'INHERITED':
      return _$gGroupMemberRelationINHERITED;
    case 'DESCENDANTS':
      return _$gGroupMemberRelationDESCENDANTS;
    case 'SHARED_FROM_GROUPS':
      return _$gGroupMemberRelationSHARED_FROM_GROUPS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GGroupMemberRelation> _$gGroupMemberRelationValues =
    new BuiltSet<GGroupMemberRelation>(const <GGroupMemberRelation>[
  _$gGroupMemberRelationDIRECT,
  _$gGroupMemberRelationINHERITED,
  _$gGroupMemberRelationDESCENDANTS,
  _$gGroupMemberRelationSHARED_FROM_GROUPS,
]);

const GGroupPermission _$gGroupPermissionCREATE_PROJECTS =
    const GGroupPermission._('CREATE_PROJECTS');
const GGroupPermission _$gGroupPermissionTRANSFER_PROJECTS =
    const GGroupPermission._('TRANSFER_PROJECTS');

GGroupPermission _$gGroupPermissionValueOf(String name) {
  switch (name) {
    case 'CREATE_PROJECTS':
      return _$gGroupPermissionCREATE_PROJECTS;
    case 'TRANSFER_PROJECTS':
      return _$gGroupPermissionTRANSFER_PROJECTS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GGroupPermission> _$gGroupPermissionValues =
    new BuiltSet<GGroupPermission>(const <GGroupPermission>[
  _$gGroupPermissionCREATE_PROJECTS,
  _$gGroupPermissionTRANSFER_PROJECTS,
]);

const GHealthStatus _$gHealthStatusonTrack = const GHealthStatus._('onTrack');
const GHealthStatus _$gHealthStatusneedsAttention =
    const GHealthStatus._('needsAttention');
const GHealthStatus _$gHealthStatusatRisk = const GHealthStatus._('atRisk');

GHealthStatus _$gHealthStatusValueOf(String name) {
  switch (name) {
    case 'onTrack':
      return _$gHealthStatusonTrack;
    case 'needsAttention':
      return _$gHealthStatusneedsAttention;
    case 'atRisk':
      return _$gHealthStatusatRisk;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GHealthStatus> _$gHealthStatusValues =
    new BuiltSet<GHealthStatus>(const <GHealthStatus>[
  _$gHealthStatusonTrack,
  _$gHealthStatusneedsAttention,
  _$gHealthStatusatRisk,
]);

const GHealthStatusFilter _$gHealthStatusFilterNONE =
    const GHealthStatusFilter._('NONE');
const GHealthStatusFilter _$gHealthStatusFilterANY =
    const GHealthStatusFilter._('ANY');
const GHealthStatusFilter _$gHealthStatusFilteronTrack =
    const GHealthStatusFilter._('onTrack');
const GHealthStatusFilter _$gHealthStatusFilterneedsAttention =
    const GHealthStatusFilter._('needsAttention');
const GHealthStatusFilter _$gHealthStatusFilteratRisk =
    const GHealthStatusFilter._('atRisk');

GHealthStatusFilter _$gHealthStatusFilterValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gHealthStatusFilterNONE;
    case 'ANY':
      return _$gHealthStatusFilterANY;
    case 'onTrack':
      return _$gHealthStatusFilteronTrack;
    case 'needsAttention':
      return _$gHealthStatusFilterneedsAttention;
    case 'atRisk':
      return _$gHealthStatusFilteratRisk;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GHealthStatusFilter> _$gHealthStatusFilterValues =
    new BuiltSet<GHealthStatusFilter>(const <GHealthStatusFilter>[
  _$gHealthStatusFilterNONE,
  _$gHealthStatusFilterANY,
  _$gHealthStatusFilteronTrack,
  _$gHealthStatusFilterneedsAttention,
  _$gHealthStatusFilteratRisk,
]);

const GIssuableResourceLinkType _$gIssuableResourceLinkTypegeneral =
    const GIssuableResourceLinkType._('general');
const GIssuableResourceLinkType _$gIssuableResourceLinkTypezoom =
    const GIssuableResourceLinkType._('zoom');
const GIssuableResourceLinkType _$gIssuableResourceLinkTypeslack =
    const GIssuableResourceLinkType._('slack');

GIssuableResourceLinkType _$gIssuableResourceLinkTypeValueOf(String name) {
  switch (name) {
    case 'general':
      return _$gIssuableResourceLinkTypegeneral;
    case 'zoom':
      return _$gIssuableResourceLinkTypezoom;
    case 'slack':
      return _$gIssuableResourceLinkTypeslack;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIssuableResourceLinkType> _$gIssuableResourceLinkTypeValues =
    new BuiltSet<GIssuableResourceLinkType>(const <GIssuableResourceLinkType>[
  _$gIssuableResourceLinkTypegeneral,
  _$gIssuableResourceLinkTypezoom,
  _$gIssuableResourceLinkTypeslack,
]);

const GIssuableSearchableField _$gIssuableSearchableFieldTITLE =
    const GIssuableSearchableField._('TITLE');
const GIssuableSearchableField _$gIssuableSearchableFieldDESCRIPTION =
    const GIssuableSearchableField._('DESCRIPTION');

GIssuableSearchableField _$gIssuableSearchableFieldValueOf(String name) {
  switch (name) {
    case 'TITLE':
      return _$gIssuableSearchableFieldTITLE;
    case 'DESCRIPTION':
      return _$gIssuableSearchableFieldDESCRIPTION;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIssuableSearchableField> _$gIssuableSearchableFieldValues =
    new BuiltSet<GIssuableSearchableField>(const <GIssuableSearchableField>[
  _$gIssuableSearchableFieldTITLE,
  _$gIssuableSearchableFieldDESCRIPTION,
]);

const GIssuableSeverity _$gIssuableSeverityUNKNOWN =
    const GIssuableSeverity._('UNKNOWN');
const GIssuableSeverity _$gIssuableSeverityLOW =
    const GIssuableSeverity._('LOW');
const GIssuableSeverity _$gIssuableSeverityMEDIUM =
    const GIssuableSeverity._('MEDIUM');
const GIssuableSeverity _$gIssuableSeverityHIGH =
    const GIssuableSeverity._('HIGH');
const GIssuableSeverity _$gIssuableSeverityCRITICAL =
    const GIssuableSeverity._('CRITICAL');

GIssuableSeverity _$gIssuableSeverityValueOf(String name) {
  switch (name) {
    case 'UNKNOWN':
      return _$gIssuableSeverityUNKNOWN;
    case 'LOW':
      return _$gIssuableSeverityLOW;
    case 'MEDIUM':
      return _$gIssuableSeverityMEDIUM;
    case 'HIGH':
      return _$gIssuableSeverityHIGH;
    case 'CRITICAL':
      return _$gIssuableSeverityCRITICAL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIssuableSeverity> _$gIssuableSeverityValues =
    new BuiltSet<GIssuableSeverity>(const <GIssuableSeverity>[
  _$gIssuableSeverityUNKNOWN,
  _$gIssuableSeverityLOW,
  _$gIssuableSeverityMEDIUM,
  _$gIssuableSeverityHIGH,
  _$gIssuableSeverityCRITICAL,
]);

const GIssuableState _$gIssuableStateopened = const GIssuableState._('opened');
const GIssuableState _$gIssuableStateclosed = const GIssuableState._('closed');
const GIssuableState _$gIssuableStatelocked = const GIssuableState._('locked');
const GIssuableState _$gIssuableStateall = const GIssuableState._('all');

GIssuableState _$gIssuableStateValueOf(String name) {
  switch (name) {
    case 'opened':
      return _$gIssuableStateopened;
    case 'closed':
      return _$gIssuableStateclosed;
    case 'locked':
      return _$gIssuableStatelocked;
    case 'all':
      return _$gIssuableStateall;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIssuableState> _$gIssuableStateValues =
    new BuiltSet<GIssuableState>(const <GIssuableState>[
  _$gIssuableStateopened,
  _$gIssuableStateclosed,
  _$gIssuableStatelocked,
  _$gIssuableStateall,
]);

const GIssueCreationIterationWildcardId
    _$gIssueCreationIterationWildcardIdCURRENT =
    const GIssueCreationIterationWildcardId._('CURRENT');

GIssueCreationIterationWildcardId _$gIssueCreationIterationWildcardIdValueOf(
    String name) {
  switch (name) {
    case 'CURRENT':
      return _$gIssueCreationIterationWildcardIdCURRENT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIssueCreationIterationWildcardId>
    _$gIssueCreationIterationWildcardIdValues =
    new BuiltSet<GIssueCreationIterationWildcardId>(const <
        GIssueCreationIterationWildcardId>[
  _$gIssueCreationIterationWildcardIdCURRENT,
]);

const GIssueEscalationStatus _$gIssueEscalationStatusTRIGGERED =
    const GIssueEscalationStatus._('TRIGGERED');
const GIssueEscalationStatus _$gIssueEscalationStatusACKNOWLEDGED =
    const GIssueEscalationStatus._('ACKNOWLEDGED');
const GIssueEscalationStatus _$gIssueEscalationStatusRESOLVED =
    const GIssueEscalationStatus._('RESOLVED');
const GIssueEscalationStatus _$gIssueEscalationStatusIGNORED =
    const GIssueEscalationStatus._('IGNORED');

GIssueEscalationStatus _$gIssueEscalationStatusValueOf(String name) {
  switch (name) {
    case 'TRIGGERED':
      return _$gIssueEscalationStatusTRIGGERED;
    case 'ACKNOWLEDGED':
      return _$gIssueEscalationStatusACKNOWLEDGED;
    case 'RESOLVED':
      return _$gIssueEscalationStatusRESOLVED;
    case 'IGNORED':
      return _$gIssueEscalationStatusIGNORED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIssueEscalationStatus> _$gIssueEscalationStatusValues =
    new BuiltSet<GIssueEscalationStatus>(const <GIssueEscalationStatus>[
  _$gIssueEscalationStatusTRIGGERED,
  _$gIssueEscalationStatusACKNOWLEDGED,
  _$gIssueEscalationStatusRESOLVED,
  _$gIssueEscalationStatusIGNORED,
]);

const GIssueSort _$gIssueSortDUE_DATE_ASC = const GIssueSort._('DUE_DATE_ASC');
const GIssueSort _$gIssueSortDUE_DATE_DESC =
    const GIssueSort._('DUE_DATE_DESC');
const GIssueSort _$gIssueSortRELATIVE_POSITION_ASC =
    const GIssueSort._('RELATIVE_POSITION_ASC');
const GIssueSort _$gIssueSortSEVERITY_ASC = const GIssueSort._('SEVERITY_ASC');
const GIssueSort _$gIssueSortSEVERITY_DESC =
    const GIssueSort._('SEVERITY_DESC');
const GIssueSort _$gIssueSortTITLE_ASC = const GIssueSort._('TITLE_ASC');
const GIssueSort _$gIssueSortTITLE_DESC = const GIssueSort._('TITLE_DESC');
const GIssueSort _$gIssueSortPOPULARITY_ASC =
    const GIssueSort._('POPULARITY_ASC');
const GIssueSort _$gIssueSortPOPULARITY_DESC =
    const GIssueSort._('POPULARITY_DESC');
const GIssueSort _$gIssueSortESCALATION_STATUS_ASC =
    const GIssueSort._('ESCALATION_STATUS_ASC');
const GIssueSort _$gIssueSortESCALATION_STATUS_DESC =
    const GIssueSort._('ESCALATION_STATUS_DESC');
const GIssueSort _$gIssueSortCLOSED_AT_ASC =
    const GIssueSort._('CLOSED_AT_ASC');
const GIssueSort _$gIssueSortCLOSED_AT_DESC =
    const GIssueSort._('CLOSED_AT_DESC');
const GIssueSort _$gIssueSortWEIGHT_ASC = const GIssueSort._('WEIGHT_ASC');
const GIssueSort _$gIssueSortWEIGHT_DESC = const GIssueSort._('WEIGHT_DESC');
const GIssueSort _$gIssueSortPUBLISHED_ASC =
    const GIssueSort._('PUBLISHED_ASC');
const GIssueSort _$gIssueSortPUBLISHED_DESC =
    const GIssueSort._('PUBLISHED_DESC');
const GIssueSort _$gIssueSortSLA_DUE_AT_ASC =
    const GIssueSort._('SLA_DUE_AT_ASC');
const GIssueSort _$gIssueSortSLA_DUE_AT_DESC =
    const GIssueSort._('SLA_DUE_AT_DESC');
const GIssueSort _$gIssueSortBLOCKING_ISSUES_ASC =
    const GIssueSort._('BLOCKING_ISSUES_ASC');
const GIssueSort _$gIssueSortBLOCKING_ISSUES_DESC =
    const GIssueSort._('BLOCKING_ISSUES_DESC');
const GIssueSort _$gIssueSortPRIORITY_ASC = const GIssueSort._('PRIORITY_ASC');
const GIssueSort _$gIssueSortPRIORITY_DESC =
    const GIssueSort._('PRIORITY_DESC');
const GIssueSort _$gIssueSortLABEL_PRIORITY_ASC =
    const GIssueSort._('LABEL_PRIORITY_ASC');
const GIssueSort _$gIssueSortLABEL_PRIORITY_DESC =
    const GIssueSort._('LABEL_PRIORITY_DESC');
const GIssueSort _$gIssueSortMILESTONE_DUE_ASC =
    const GIssueSort._('MILESTONE_DUE_ASC');
const GIssueSort _$gIssueSortMILESTONE_DUE_DESC =
    const GIssueSort._('MILESTONE_DUE_DESC');
const GIssueSort _$gIssueSortupdated_desc = const GIssueSort._('updated_desc');
const GIssueSort _$gIssueSortupdated_asc = const GIssueSort._('updated_asc');
const GIssueSort _$gIssueSortcreated_desc = const GIssueSort._('created_desc');
const GIssueSort _$gIssueSortcreated_asc = const GIssueSort._('created_asc');
const GIssueSort _$gIssueSortUPDATED_DESC = const GIssueSort._('UPDATED_DESC');
const GIssueSort _$gIssueSortUPDATED_ASC = const GIssueSort._('UPDATED_ASC');
const GIssueSort _$gIssueSortCREATED_DESC = const GIssueSort._('CREATED_DESC');
const GIssueSort _$gIssueSortCREATED_ASC = const GIssueSort._('CREATED_ASC');

GIssueSort _$gIssueSortValueOf(String name) {
  switch (name) {
    case 'DUE_DATE_ASC':
      return _$gIssueSortDUE_DATE_ASC;
    case 'DUE_DATE_DESC':
      return _$gIssueSortDUE_DATE_DESC;
    case 'RELATIVE_POSITION_ASC':
      return _$gIssueSortRELATIVE_POSITION_ASC;
    case 'SEVERITY_ASC':
      return _$gIssueSortSEVERITY_ASC;
    case 'SEVERITY_DESC':
      return _$gIssueSortSEVERITY_DESC;
    case 'TITLE_ASC':
      return _$gIssueSortTITLE_ASC;
    case 'TITLE_DESC':
      return _$gIssueSortTITLE_DESC;
    case 'POPULARITY_ASC':
      return _$gIssueSortPOPULARITY_ASC;
    case 'POPULARITY_DESC':
      return _$gIssueSortPOPULARITY_DESC;
    case 'ESCALATION_STATUS_ASC':
      return _$gIssueSortESCALATION_STATUS_ASC;
    case 'ESCALATION_STATUS_DESC':
      return _$gIssueSortESCALATION_STATUS_DESC;
    case 'CLOSED_AT_ASC':
      return _$gIssueSortCLOSED_AT_ASC;
    case 'CLOSED_AT_DESC':
      return _$gIssueSortCLOSED_AT_DESC;
    case 'WEIGHT_ASC':
      return _$gIssueSortWEIGHT_ASC;
    case 'WEIGHT_DESC':
      return _$gIssueSortWEIGHT_DESC;
    case 'PUBLISHED_ASC':
      return _$gIssueSortPUBLISHED_ASC;
    case 'PUBLISHED_DESC':
      return _$gIssueSortPUBLISHED_DESC;
    case 'SLA_DUE_AT_ASC':
      return _$gIssueSortSLA_DUE_AT_ASC;
    case 'SLA_DUE_AT_DESC':
      return _$gIssueSortSLA_DUE_AT_DESC;
    case 'BLOCKING_ISSUES_ASC':
      return _$gIssueSortBLOCKING_ISSUES_ASC;
    case 'BLOCKING_ISSUES_DESC':
      return _$gIssueSortBLOCKING_ISSUES_DESC;
    case 'PRIORITY_ASC':
      return _$gIssueSortPRIORITY_ASC;
    case 'PRIORITY_DESC':
      return _$gIssueSortPRIORITY_DESC;
    case 'LABEL_PRIORITY_ASC':
      return _$gIssueSortLABEL_PRIORITY_ASC;
    case 'LABEL_PRIORITY_DESC':
      return _$gIssueSortLABEL_PRIORITY_DESC;
    case 'MILESTONE_DUE_ASC':
      return _$gIssueSortMILESTONE_DUE_ASC;
    case 'MILESTONE_DUE_DESC':
      return _$gIssueSortMILESTONE_DUE_DESC;
    case 'updated_desc':
      return _$gIssueSortupdated_desc;
    case 'updated_asc':
      return _$gIssueSortupdated_asc;
    case 'created_desc':
      return _$gIssueSortcreated_desc;
    case 'created_asc':
      return _$gIssueSortcreated_asc;
    case 'UPDATED_DESC':
      return _$gIssueSortUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gIssueSortUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gIssueSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gIssueSortCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIssueSort> _$gIssueSortValues =
    new BuiltSet<GIssueSort>(const <GIssueSort>[
  _$gIssueSortDUE_DATE_ASC,
  _$gIssueSortDUE_DATE_DESC,
  _$gIssueSortRELATIVE_POSITION_ASC,
  _$gIssueSortSEVERITY_ASC,
  _$gIssueSortSEVERITY_DESC,
  _$gIssueSortTITLE_ASC,
  _$gIssueSortTITLE_DESC,
  _$gIssueSortPOPULARITY_ASC,
  _$gIssueSortPOPULARITY_DESC,
  _$gIssueSortESCALATION_STATUS_ASC,
  _$gIssueSortESCALATION_STATUS_DESC,
  _$gIssueSortCLOSED_AT_ASC,
  _$gIssueSortCLOSED_AT_DESC,
  _$gIssueSortWEIGHT_ASC,
  _$gIssueSortWEIGHT_DESC,
  _$gIssueSortPUBLISHED_ASC,
  _$gIssueSortPUBLISHED_DESC,
  _$gIssueSortSLA_DUE_AT_ASC,
  _$gIssueSortSLA_DUE_AT_DESC,
  _$gIssueSortBLOCKING_ISSUES_ASC,
  _$gIssueSortBLOCKING_ISSUES_DESC,
  _$gIssueSortPRIORITY_ASC,
  _$gIssueSortPRIORITY_DESC,
  _$gIssueSortLABEL_PRIORITY_ASC,
  _$gIssueSortLABEL_PRIORITY_DESC,
  _$gIssueSortMILESTONE_DUE_ASC,
  _$gIssueSortMILESTONE_DUE_DESC,
  _$gIssueSortupdated_desc,
  _$gIssueSortupdated_asc,
  _$gIssueSortcreated_desc,
  _$gIssueSortcreated_asc,
  _$gIssueSortUPDATED_DESC,
  _$gIssueSortUPDATED_ASC,
  _$gIssueSortCREATED_DESC,
  _$gIssueSortCREATED_ASC,
]);

const GIssueState _$gIssueStateopened = const GIssueState._('opened');
const GIssueState _$gIssueStateclosed = const GIssueState._('closed');
const GIssueState _$gIssueStatelocked = const GIssueState._('locked');
const GIssueState _$gIssueStateall = const GIssueState._('all');

GIssueState _$gIssueStateValueOf(String name) {
  switch (name) {
    case 'opened':
      return _$gIssueStateopened;
    case 'closed':
      return _$gIssueStateclosed;
    case 'locked':
      return _$gIssueStatelocked;
    case 'all':
      return _$gIssueStateall;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIssueState> _$gIssueStateValues =
    new BuiltSet<GIssueState>(const <GIssueState>[
  _$gIssueStateopened,
  _$gIssueStateclosed,
  _$gIssueStatelocked,
  _$gIssueStateall,
]);

const GIssueStateEvent _$gIssueStateEventREOPEN =
    const GIssueStateEvent._('REOPEN');
const GIssueStateEvent _$gIssueStateEventCLOSE =
    const GIssueStateEvent._('CLOSE');

GIssueStateEvent _$gIssueStateEventValueOf(String name) {
  switch (name) {
    case 'REOPEN':
      return _$gIssueStateEventREOPEN;
    case 'CLOSE':
      return _$gIssueStateEventCLOSE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIssueStateEvent> _$gIssueStateEventValues =
    new BuiltSet<GIssueStateEvent>(const <GIssueStateEvent>[
  _$gIssueStateEventREOPEN,
  _$gIssueStateEventCLOSE,
]);

const GIssueType _$gIssueTypeISSUE = const GIssueType._('ISSUE');
const GIssueType _$gIssueTypeINCIDENT = const GIssueType._('INCIDENT');
const GIssueType _$gIssueTypeTEST_CASE = const GIssueType._('TEST_CASE');
const GIssueType _$gIssueTypeREQUIREMENT = const GIssueType._('REQUIREMENT');
const GIssueType _$gIssueTypeTASK = const GIssueType._('TASK');

GIssueType _$gIssueTypeValueOf(String name) {
  switch (name) {
    case 'ISSUE':
      return _$gIssueTypeISSUE;
    case 'INCIDENT':
      return _$gIssueTypeINCIDENT;
    case 'TEST_CASE':
      return _$gIssueTypeTEST_CASE;
    case 'REQUIREMENT':
      return _$gIssueTypeREQUIREMENT;
    case 'TASK':
      return _$gIssueTypeTASK;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIssueType> _$gIssueTypeValues =
    new BuiltSet<GIssueType>(const <GIssueType>[
  _$gIssueTypeISSUE,
  _$gIssueTypeINCIDENT,
  _$gIssueTypeTEST_CASE,
  _$gIssueTypeREQUIREMENT,
  _$gIssueTypeTASK,
]);

const GIterationSearchableField _$gIterationSearchableFieldTITLE =
    const GIterationSearchableField._('TITLE');
const GIterationSearchableField _$gIterationSearchableFieldCADENCE_TITLE =
    const GIterationSearchableField._('CADENCE_TITLE');

GIterationSearchableField _$gIterationSearchableFieldValueOf(String name) {
  switch (name) {
    case 'TITLE':
      return _$gIterationSearchableFieldTITLE;
    case 'CADENCE_TITLE':
      return _$gIterationSearchableFieldCADENCE_TITLE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIterationSearchableField> _$gIterationSearchableFieldValues =
    new BuiltSet<GIterationSearchableField>(const <GIterationSearchableField>[
  _$gIterationSearchableFieldTITLE,
  _$gIterationSearchableFieldCADENCE_TITLE,
]);

const GIterationSort _$gIterationSortCADENCE_AND_DUE_DATE_ASC =
    const GIterationSort._('CADENCE_AND_DUE_DATE_ASC');

GIterationSort _$gIterationSortValueOf(String name) {
  switch (name) {
    case 'CADENCE_AND_DUE_DATE_ASC':
      return _$gIterationSortCADENCE_AND_DUE_DATE_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIterationSort> _$gIterationSortValues =
    new BuiltSet<GIterationSort>(const <GIterationSort>[
  _$gIterationSortCADENCE_AND_DUE_DATE_ASC,
]);

const GIterationState _$gIterationStateupcoming =
    const GIterationState._('upcoming');
const GIterationState _$gIterationStatestarted =
    const GIterationState._('started');
const GIterationState _$gIterationStatecurrent =
    const GIterationState._('current');
const GIterationState _$gIterationStateopened =
    const GIterationState._('opened');
const GIterationState _$gIterationStateclosed =
    const GIterationState._('closed');
const GIterationState _$gIterationStateall = const GIterationState._('all');

GIterationState _$gIterationStateValueOf(String name) {
  switch (name) {
    case 'upcoming':
      return _$gIterationStateupcoming;
    case 'started':
      return _$gIterationStatestarted;
    case 'current':
      return _$gIterationStatecurrent;
    case 'opened':
      return _$gIterationStateopened;
    case 'closed':
      return _$gIterationStateclosed;
    case 'all':
      return _$gIterationStateall;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIterationState> _$gIterationStateValues =
    new BuiltSet<GIterationState>(const <GIterationState>[
  _$gIterationStateupcoming,
  _$gIterationStatestarted,
  _$gIterationStatecurrent,
  _$gIterationStateopened,
  _$gIterationStateclosed,
  _$gIterationStateall,
]);

const GIterationWildcardId _$gIterationWildcardIdNONE =
    const GIterationWildcardId._('NONE');
const GIterationWildcardId _$gIterationWildcardIdANY =
    const GIterationWildcardId._('ANY');
const GIterationWildcardId _$gIterationWildcardIdCURRENT =
    const GIterationWildcardId._('CURRENT');

GIterationWildcardId _$gIterationWildcardIdValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gIterationWildcardIdNONE;
    case 'ANY':
      return _$gIterationWildcardIdANY;
    case 'CURRENT':
      return _$gIterationWildcardIdCURRENT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GIterationWildcardId> _$gIterationWildcardIdValues =
    new BuiltSet<GIterationWildcardId>(const <GIterationWildcardId>[
  _$gIterationWildcardIdNONE,
  _$gIterationWildcardIdANY,
  _$gIterationWildcardIdCURRENT,
]);

const GJobArtifactFileType _$gJobArtifactFileTypeARCHIVE =
    const GJobArtifactFileType._('ARCHIVE');
const GJobArtifactFileType _$gJobArtifactFileTypeMETADATA =
    const GJobArtifactFileType._('METADATA');
const GJobArtifactFileType _$gJobArtifactFileTypeTRACE =
    const GJobArtifactFileType._('TRACE');
const GJobArtifactFileType _$gJobArtifactFileTypeJUNIT =
    const GJobArtifactFileType._('JUNIT');
const GJobArtifactFileType _$gJobArtifactFileTypeMETRICS =
    const GJobArtifactFileType._('METRICS');
const GJobArtifactFileType _$gJobArtifactFileTypeMETRICS_REFEREE =
    const GJobArtifactFileType._('METRICS_REFEREE');
const GJobArtifactFileType _$gJobArtifactFileTypeNETWORK_REFEREE =
    const GJobArtifactFileType._('NETWORK_REFEREE');
const GJobArtifactFileType _$gJobArtifactFileTypeDOTENV =
    const GJobArtifactFileType._('DOTENV');
const GJobArtifactFileType _$gJobArtifactFileTypeCOBERTURA =
    const GJobArtifactFileType._('COBERTURA');
const GJobArtifactFileType _$gJobArtifactFileTypeCLUSTER_APPLICATIONS =
    const GJobArtifactFileType._('CLUSTER_APPLICATIONS');
const GJobArtifactFileType _$gJobArtifactFileTypeLSIF =
    const GJobArtifactFileType._('LSIF');
const GJobArtifactFileType _$gJobArtifactFileTypeCYCLONEDX =
    const GJobArtifactFileType._('CYCLONEDX');
const GJobArtifactFileType _$gJobArtifactFileTypeSAST =
    const GJobArtifactFileType._('SAST');
const GJobArtifactFileType _$gJobArtifactFileTypeSECRET_DETECTION =
    const GJobArtifactFileType._('SECRET_DETECTION');
const GJobArtifactFileType _$gJobArtifactFileTypeDEPENDENCY_SCANNING =
    const GJobArtifactFileType._('DEPENDENCY_SCANNING');
const GJobArtifactFileType _$gJobArtifactFileTypeCONTAINER_SCANNING =
    const GJobArtifactFileType._('CONTAINER_SCANNING');
const GJobArtifactFileType _$gJobArtifactFileTypeCLUSTER_IMAGE_SCANNING =
    const GJobArtifactFileType._('CLUSTER_IMAGE_SCANNING');
const GJobArtifactFileType _$gJobArtifactFileTypeDAST =
    const GJobArtifactFileType._('DAST');
const GJobArtifactFileType _$gJobArtifactFileTypeLICENSE_SCANNING =
    const GJobArtifactFileType._('LICENSE_SCANNING');
const GJobArtifactFileType _$gJobArtifactFileTypeACCESSIBILITY =
    const GJobArtifactFileType._('ACCESSIBILITY');
const GJobArtifactFileType _$gJobArtifactFileTypeCODEQUALITY =
    const GJobArtifactFileType._('CODEQUALITY');
const GJobArtifactFileType _$gJobArtifactFileTypePERFORMANCE =
    const GJobArtifactFileType._('PERFORMANCE');
const GJobArtifactFileType _$gJobArtifactFileTypeBROWSER_PERFORMANCE =
    const GJobArtifactFileType._('BROWSER_PERFORMANCE');
const GJobArtifactFileType _$gJobArtifactFileTypeLOAD_PERFORMANCE =
    const GJobArtifactFileType._('LOAD_PERFORMANCE');
const GJobArtifactFileType _$gJobArtifactFileTypeTERRAFORM =
    const GJobArtifactFileType._('TERRAFORM');
const GJobArtifactFileType _$gJobArtifactFileTypeREQUIREMENTS =
    const GJobArtifactFileType._('REQUIREMENTS');
const GJobArtifactFileType _$gJobArtifactFileTypeCOVERAGE_FUZZING =
    const GJobArtifactFileType._('COVERAGE_FUZZING');
const GJobArtifactFileType _$gJobArtifactFileTypeAPI_FUZZING =
    const GJobArtifactFileType._('API_FUZZING');

GJobArtifactFileType _$gJobArtifactFileTypeValueOf(String name) {
  switch (name) {
    case 'ARCHIVE':
      return _$gJobArtifactFileTypeARCHIVE;
    case 'METADATA':
      return _$gJobArtifactFileTypeMETADATA;
    case 'TRACE':
      return _$gJobArtifactFileTypeTRACE;
    case 'JUNIT':
      return _$gJobArtifactFileTypeJUNIT;
    case 'METRICS':
      return _$gJobArtifactFileTypeMETRICS;
    case 'METRICS_REFEREE':
      return _$gJobArtifactFileTypeMETRICS_REFEREE;
    case 'NETWORK_REFEREE':
      return _$gJobArtifactFileTypeNETWORK_REFEREE;
    case 'DOTENV':
      return _$gJobArtifactFileTypeDOTENV;
    case 'COBERTURA':
      return _$gJobArtifactFileTypeCOBERTURA;
    case 'CLUSTER_APPLICATIONS':
      return _$gJobArtifactFileTypeCLUSTER_APPLICATIONS;
    case 'LSIF':
      return _$gJobArtifactFileTypeLSIF;
    case 'CYCLONEDX':
      return _$gJobArtifactFileTypeCYCLONEDX;
    case 'SAST':
      return _$gJobArtifactFileTypeSAST;
    case 'SECRET_DETECTION':
      return _$gJobArtifactFileTypeSECRET_DETECTION;
    case 'DEPENDENCY_SCANNING':
      return _$gJobArtifactFileTypeDEPENDENCY_SCANNING;
    case 'CONTAINER_SCANNING':
      return _$gJobArtifactFileTypeCONTAINER_SCANNING;
    case 'CLUSTER_IMAGE_SCANNING':
      return _$gJobArtifactFileTypeCLUSTER_IMAGE_SCANNING;
    case 'DAST':
      return _$gJobArtifactFileTypeDAST;
    case 'LICENSE_SCANNING':
      return _$gJobArtifactFileTypeLICENSE_SCANNING;
    case 'ACCESSIBILITY':
      return _$gJobArtifactFileTypeACCESSIBILITY;
    case 'CODEQUALITY':
      return _$gJobArtifactFileTypeCODEQUALITY;
    case 'PERFORMANCE':
      return _$gJobArtifactFileTypePERFORMANCE;
    case 'BROWSER_PERFORMANCE':
      return _$gJobArtifactFileTypeBROWSER_PERFORMANCE;
    case 'LOAD_PERFORMANCE':
      return _$gJobArtifactFileTypeLOAD_PERFORMANCE;
    case 'TERRAFORM':
      return _$gJobArtifactFileTypeTERRAFORM;
    case 'REQUIREMENTS':
      return _$gJobArtifactFileTypeREQUIREMENTS;
    case 'COVERAGE_FUZZING':
      return _$gJobArtifactFileTypeCOVERAGE_FUZZING;
    case 'API_FUZZING':
      return _$gJobArtifactFileTypeAPI_FUZZING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GJobArtifactFileType> _$gJobArtifactFileTypeValues =
    new BuiltSet<GJobArtifactFileType>(const <GJobArtifactFileType>[
  _$gJobArtifactFileTypeARCHIVE,
  _$gJobArtifactFileTypeMETADATA,
  _$gJobArtifactFileTypeTRACE,
  _$gJobArtifactFileTypeJUNIT,
  _$gJobArtifactFileTypeMETRICS,
  _$gJobArtifactFileTypeMETRICS_REFEREE,
  _$gJobArtifactFileTypeNETWORK_REFEREE,
  _$gJobArtifactFileTypeDOTENV,
  _$gJobArtifactFileTypeCOBERTURA,
  _$gJobArtifactFileTypeCLUSTER_APPLICATIONS,
  _$gJobArtifactFileTypeLSIF,
  _$gJobArtifactFileTypeCYCLONEDX,
  _$gJobArtifactFileTypeSAST,
  _$gJobArtifactFileTypeSECRET_DETECTION,
  _$gJobArtifactFileTypeDEPENDENCY_SCANNING,
  _$gJobArtifactFileTypeCONTAINER_SCANNING,
  _$gJobArtifactFileTypeCLUSTER_IMAGE_SCANNING,
  _$gJobArtifactFileTypeDAST,
  _$gJobArtifactFileTypeLICENSE_SCANNING,
  _$gJobArtifactFileTypeACCESSIBILITY,
  _$gJobArtifactFileTypeCODEQUALITY,
  _$gJobArtifactFileTypePERFORMANCE,
  _$gJobArtifactFileTypeBROWSER_PERFORMANCE,
  _$gJobArtifactFileTypeLOAD_PERFORMANCE,
  _$gJobArtifactFileTypeTERRAFORM,
  _$gJobArtifactFileTypeREQUIREMENTS,
  _$gJobArtifactFileTypeCOVERAGE_FUZZING,
  _$gJobArtifactFileTypeAPI_FUZZING,
]);

const GListLimitMetric _$gListLimitMetricall_metrics =
    const GListLimitMetric._('all_metrics');
const GListLimitMetric _$gListLimitMetricissue_count =
    const GListLimitMetric._('issue_count');
const GListLimitMetric _$gListLimitMetricissue_weights =
    const GListLimitMetric._('issue_weights');

GListLimitMetric _$gListLimitMetricValueOf(String name) {
  switch (name) {
    case 'all_metrics':
      return _$gListLimitMetricall_metrics;
    case 'issue_count':
      return _$gListLimitMetricissue_count;
    case 'issue_weights':
      return _$gListLimitMetricissue_weights;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GListLimitMetric> _$gListLimitMetricValues =
    new BuiltSet<GListLimitMetric>(const <GListLimitMetric>[
  _$gListLimitMetricall_metrics,
  _$gListLimitMetricissue_count,
  _$gListLimitMetricissue_weights,
]);

const GMeasurementIdentifier _$gMeasurementIdentifierPROJECTS =
    const GMeasurementIdentifier._('PROJECTS');
const GMeasurementIdentifier _$gMeasurementIdentifierUSERS =
    const GMeasurementIdentifier._('USERS');
const GMeasurementIdentifier _$gMeasurementIdentifierISSUES =
    const GMeasurementIdentifier._('ISSUES');
const GMeasurementIdentifier _$gMeasurementIdentifierMERGE_REQUESTS =
    const GMeasurementIdentifier._('MERGE_REQUESTS');
const GMeasurementIdentifier _$gMeasurementIdentifierGROUPS =
    const GMeasurementIdentifier._('GROUPS');
const GMeasurementIdentifier _$gMeasurementIdentifierPIPELINES =
    const GMeasurementIdentifier._('PIPELINES');
const GMeasurementIdentifier _$gMeasurementIdentifierPIPELINES_SUCCEEDED =
    const GMeasurementIdentifier._('PIPELINES_SUCCEEDED');
const GMeasurementIdentifier _$gMeasurementIdentifierPIPELINES_FAILED =
    const GMeasurementIdentifier._('PIPELINES_FAILED');
const GMeasurementIdentifier _$gMeasurementIdentifierPIPELINES_CANCELED =
    const GMeasurementIdentifier._('PIPELINES_CANCELED');
const GMeasurementIdentifier _$gMeasurementIdentifierPIPELINES_SKIPPED =
    const GMeasurementIdentifier._('PIPELINES_SKIPPED');

GMeasurementIdentifier _$gMeasurementIdentifierValueOf(String name) {
  switch (name) {
    case 'PROJECTS':
      return _$gMeasurementIdentifierPROJECTS;
    case 'USERS':
      return _$gMeasurementIdentifierUSERS;
    case 'ISSUES':
      return _$gMeasurementIdentifierISSUES;
    case 'MERGE_REQUESTS':
      return _$gMeasurementIdentifierMERGE_REQUESTS;
    case 'GROUPS':
      return _$gMeasurementIdentifierGROUPS;
    case 'PIPELINES':
      return _$gMeasurementIdentifierPIPELINES;
    case 'PIPELINES_SUCCEEDED':
      return _$gMeasurementIdentifierPIPELINES_SUCCEEDED;
    case 'PIPELINES_FAILED':
      return _$gMeasurementIdentifierPIPELINES_FAILED;
    case 'PIPELINES_CANCELED':
      return _$gMeasurementIdentifierPIPELINES_CANCELED;
    case 'PIPELINES_SKIPPED':
      return _$gMeasurementIdentifierPIPELINES_SKIPPED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMeasurementIdentifier> _$gMeasurementIdentifierValues =
    new BuiltSet<GMeasurementIdentifier>(const <GMeasurementIdentifier>[
  _$gMeasurementIdentifierPROJECTS,
  _$gMeasurementIdentifierUSERS,
  _$gMeasurementIdentifierISSUES,
  _$gMeasurementIdentifierMERGE_REQUESTS,
  _$gMeasurementIdentifierGROUPS,
  _$gMeasurementIdentifierPIPELINES,
  _$gMeasurementIdentifierPIPELINES_SUCCEEDED,
  _$gMeasurementIdentifierPIPELINES_FAILED,
  _$gMeasurementIdentifierPIPELINES_CANCELED,
  _$gMeasurementIdentifierPIPELINES_SKIPPED,
]);

const GMemberSort _$gMemberSortACCESS_LEVEL_ASC =
    const GMemberSort._('ACCESS_LEVEL_ASC');
const GMemberSort _$gMemberSortACCESS_LEVEL_DESC =
    const GMemberSort._('ACCESS_LEVEL_DESC');
const GMemberSort _$gMemberSortUSER_FULL_NAME_ASC =
    const GMemberSort._('USER_FULL_NAME_ASC');
const GMemberSort _$gMemberSortUSER_FULL_NAME_DESC =
    const GMemberSort._('USER_FULL_NAME_DESC');
const GMemberSort _$gMemberSortupdated_desc =
    const GMemberSort._('updated_desc');
const GMemberSort _$gMemberSortupdated_asc = const GMemberSort._('updated_asc');
const GMemberSort _$gMemberSortcreated_desc =
    const GMemberSort._('created_desc');
const GMemberSort _$gMemberSortcreated_asc = const GMemberSort._('created_asc');
const GMemberSort _$gMemberSortUPDATED_DESC =
    const GMemberSort._('UPDATED_DESC');
const GMemberSort _$gMemberSortUPDATED_ASC = const GMemberSort._('UPDATED_ASC');
const GMemberSort _$gMemberSortCREATED_DESC =
    const GMemberSort._('CREATED_DESC');
const GMemberSort _$gMemberSortCREATED_ASC = const GMemberSort._('CREATED_ASC');

GMemberSort _$gMemberSortValueOf(String name) {
  switch (name) {
    case 'ACCESS_LEVEL_ASC':
      return _$gMemberSortACCESS_LEVEL_ASC;
    case 'ACCESS_LEVEL_DESC':
      return _$gMemberSortACCESS_LEVEL_DESC;
    case 'USER_FULL_NAME_ASC':
      return _$gMemberSortUSER_FULL_NAME_ASC;
    case 'USER_FULL_NAME_DESC':
      return _$gMemberSortUSER_FULL_NAME_DESC;
    case 'updated_desc':
      return _$gMemberSortupdated_desc;
    case 'updated_asc':
      return _$gMemberSortupdated_asc;
    case 'created_desc':
      return _$gMemberSortcreated_desc;
    case 'created_asc':
      return _$gMemberSortcreated_asc;
    case 'UPDATED_DESC':
      return _$gMemberSortUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gMemberSortUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gMemberSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gMemberSortCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMemberSort> _$gMemberSortValues =
    new BuiltSet<GMemberSort>(const <GMemberSort>[
  _$gMemberSortACCESS_LEVEL_ASC,
  _$gMemberSortACCESS_LEVEL_DESC,
  _$gMemberSortUSER_FULL_NAME_ASC,
  _$gMemberSortUSER_FULL_NAME_DESC,
  _$gMemberSortupdated_desc,
  _$gMemberSortupdated_asc,
  _$gMemberSortcreated_desc,
  _$gMemberSortcreated_asc,
  _$gMemberSortUPDATED_DESC,
  _$gMemberSortUPDATED_ASC,
  _$gMemberSortCREATED_DESC,
  _$gMemberSortCREATED_ASC,
]);

const GMergeRequestNewState _$gMergeRequestNewStateOPEN =
    const GMergeRequestNewState._('OPEN');
const GMergeRequestNewState _$gMergeRequestNewStateCLOSED =
    const GMergeRequestNewState._('CLOSED');

GMergeRequestNewState _$gMergeRequestNewStateValueOf(String name) {
  switch (name) {
    case 'OPEN':
      return _$gMergeRequestNewStateOPEN;
    case 'CLOSED':
      return _$gMergeRequestNewStateCLOSED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMergeRequestNewState> _$gMergeRequestNewStateValues =
    new BuiltSet<GMergeRequestNewState>(const <GMergeRequestNewState>[
  _$gMergeRequestNewStateOPEN,
  _$gMergeRequestNewStateCLOSED,
]);

const GMergeRequestReviewState _$gMergeRequestReviewStateUNREVIEWED =
    const GMergeRequestReviewState._('UNREVIEWED');
const GMergeRequestReviewState _$gMergeRequestReviewStateREVIEWED =
    const GMergeRequestReviewState._('REVIEWED');

GMergeRequestReviewState _$gMergeRequestReviewStateValueOf(String name) {
  switch (name) {
    case 'UNREVIEWED':
      return _$gMergeRequestReviewStateUNREVIEWED;
    case 'REVIEWED':
      return _$gMergeRequestReviewStateREVIEWED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMergeRequestReviewState> _$gMergeRequestReviewStateValues =
    new BuiltSet<GMergeRequestReviewState>(const <GMergeRequestReviewState>[
  _$gMergeRequestReviewStateUNREVIEWED,
  _$gMergeRequestReviewStateREVIEWED,
]);

const GMergeRequestSort _$gMergeRequestSortMERGED_AT_ASC =
    const GMergeRequestSort._('MERGED_AT_ASC');
const GMergeRequestSort _$gMergeRequestSortMERGED_AT_DESC =
    const GMergeRequestSort._('MERGED_AT_DESC');
const GMergeRequestSort _$gMergeRequestSortCLOSED_AT_ASC =
    const GMergeRequestSort._('CLOSED_AT_ASC');
const GMergeRequestSort _$gMergeRequestSortCLOSED_AT_DESC =
    const GMergeRequestSort._('CLOSED_AT_DESC');
const GMergeRequestSort _$gMergeRequestSortTITLE_ASC =
    const GMergeRequestSort._('TITLE_ASC');
const GMergeRequestSort _$gMergeRequestSortTITLE_DESC =
    const GMergeRequestSort._('TITLE_DESC');
const GMergeRequestSort _$gMergeRequestSortPRIORITY_ASC =
    const GMergeRequestSort._('PRIORITY_ASC');
const GMergeRequestSort _$gMergeRequestSortPRIORITY_DESC =
    const GMergeRequestSort._('PRIORITY_DESC');
const GMergeRequestSort _$gMergeRequestSortLABEL_PRIORITY_ASC =
    const GMergeRequestSort._('LABEL_PRIORITY_ASC');
const GMergeRequestSort _$gMergeRequestSortLABEL_PRIORITY_DESC =
    const GMergeRequestSort._('LABEL_PRIORITY_DESC');
const GMergeRequestSort _$gMergeRequestSortMILESTONE_DUE_ASC =
    const GMergeRequestSort._('MILESTONE_DUE_ASC');
const GMergeRequestSort _$gMergeRequestSortMILESTONE_DUE_DESC =
    const GMergeRequestSort._('MILESTONE_DUE_DESC');
const GMergeRequestSort _$gMergeRequestSortupdated_desc =
    const GMergeRequestSort._('updated_desc');
const GMergeRequestSort _$gMergeRequestSortupdated_asc =
    const GMergeRequestSort._('updated_asc');
const GMergeRequestSort _$gMergeRequestSortcreated_desc =
    const GMergeRequestSort._('created_desc');
const GMergeRequestSort _$gMergeRequestSortcreated_asc =
    const GMergeRequestSort._('created_asc');
const GMergeRequestSort _$gMergeRequestSortUPDATED_DESC =
    const GMergeRequestSort._('UPDATED_DESC');
const GMergeRequestSort _$gMergeRequestSortUPDATED_ASC =
    const GMergeRequestSort._('UPDATED_ASC');
const GMergeRequestSort _$gMergeRequestSortCREATED_DESC =
    const GMergeRequestSort._('CREATED_DESC');
const GMergeRequestSort _$gMergeRequestSortCREATED_ASC =
    const GMergeRequestSort._('CREATED_ASC');

GMergeRequestSort _$gMergeRequestSortValueOf(String name) {
  switch (name) {
    case 'MERGED_AT_ASC':
      return _$gMergeRequestSortMERGED_AT_ASC;
    case 'MERGED_AT_DESC':
      return _$gMergeRequestSortMERGED_AT_DESC;
    case 'CLOSED_AT_ASC':
      return _$gMergeRequestSortCLOSED_AT_ASC;
    case 'CLOSED_AT_DESC':
      return _$gMergeRequestSortCLOSED_AT_DESC;
    case 'TITLE_ASC':
      return _$gMergeRequestSortTITLE_ASC;
    case 'TITLE_DESC':
      return _$gMergeRequestSortTITLE_DESC;
    case 'PRIORITY_ASC':
      return _$gMergeRequestSortPRIORITY_ASC;
    case 'PRIORITY_DESC':
      return _$gMergeRequestSortPRIORITY_DESC;
    case 'LABEL_PRIORITY_ASC':
      return _$gMergeRequestSortLABEL_PRIORITY_ASC;
    case 'LABEL_PRIORITY_DESC':
      return _$gMergeRequestSortLABEL_PRIORITY_DESC;
    case 'MILESTONE_DUE_ASC':
      return _$gMergeRequestSortMILESTONE_DUE_ASC;
    case 'MILESTONE_DUE_DESC':
      return _$gMergeRequestSortMILESTONE_DUE_DESC;
    case 'updated_desc':
      return _$gMergeRequestSortupdated_desc;
    case 'updated_asc':
      return _$gMergeRequestSortupdated_asc;
    case 'created_desc':
      return _$gMergeRequestSortcreated_desc;
    case 'created_asc':
      return _$gMergeRequestSortcreated_asc;
    case 'UPDATED_DESC':
      return _$gMergeRequestSortUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gMergeRequestSortUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gMergeRequestSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gMergeRequestSortCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMergeRequestSort> _$gMergeRequestSortValues =
    new BuiltSet<GMergeRequestSort>(const <GMergeRequestSort>[
  _$gMergeRequestSortMERGED_AT_ASC,
  _$gMergeRequestSortMERGED_AT_DESC,
  _$gMergeRequestSortCLOSED_AT_ASC,
  _$gMergeRequestSortCLOSED_AT_DESC,
  _$gMergeRequestSortTITLE_ASC,
  _$gMergeRequestSortTITLE_DESC,
  _$gMergeRequestSortPRIORITY_ASC,
  _$gMergeRequestSortPRIORITY_DESC,
  _$gMergeRequestSortLABEL_PRIORITY_ASC,
  _$gMergeRequestSortLABEL_PRIORITY_DESC,
  _$gMergeRequestSortMILESTONE_DUE_ASC,
  _$gMergeRequestSortMILESTONE_DUE_DESC,
  _$gMergeRequestSortupdated_desc,
  _$gMergeRequestSortupdated_asc,
  _$gMergeRequestSortcreated_desc,
  _$gMergeRequestSortcreated_asc,
  _$gMergeRequestSortUPDATED_DESC,
  _$gMergeRequestSortUPDATED_ASC,
  _$gMergeRequestSortCREATED_DESC,
  _$gMergeRequestSortCREATED_ASC,
]);

const GMergeRequestState _$gMergeRequestStatemerged =
    const GMergeRequestState._('merged');
const GMergeRequestState _$gMergeRequestStateopened =
    const GMergeRequestState._('opened');
const GMergeRequestState _$gMergeRequestStateclosed =
    const GMergeRequestState._('closed');
const GMergeRequestState _$gMergeRequestStatelocked =
    const GMergeRequestState._('locked');
const GMergeRequestState _$gMergeRequestStateall =
    const GMergeRequestState._('all');

GMergeRequestState _$gMergeRequestStateValueOf(String name) {
  switch (name) {
    case 'merged':
      return _$gMergeRequestStatemerged;
    case 'opened':
      return _$gMergeRequestStateopened;
    case 'closed':
      return _$gMergeRequestStateclosed;
    case 'locked':
      return _$gMergeRequestStatelocked;
    case 'all':
      return _$gMergeRequestStateall;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMergeRequestState> _$gMergeRequestStateValues =
    new BuiltSet<GMergeRequestState>(const <GMergeRequestState>[
  _$gMergeRequestStatemerged,
  _$gMergeRequestStateopened,
  _$gMergeRequestStateclosed,
  _$gMergeRequestStatelocked,
  _$gMergeRequestStateall,
]);

const GMergeStatus _$gMergeStatusUNCHECKED = const GMergeStatus._('UNCHECKED');
const GMergeStatus _$gMergeStatusCHECKING = const GMergeStatus._('CHECKING');
const GMergeStatus _$gMergeStatusCAN_BE_MERGED =
    const GMergeStatus._('CAN_BE_MERGED');
const GMergeStatus _$gMergeStatusCANNOT_BE_MERGED =
    const GMergeStatus._('CANNOT_BE_MERGED');
const GMergeStatus _$gMergeStatusCANNOT_BE_MERGED_RECHECK =
    const GMergeStatus._('CANNOT_BE_MERGED_RECHECK');

GMergeStatus _$gMergeStatusValueOf(String name) {
  switch (name) {
    case 'UNCHECKED':
      return _$gMergeStatusUNCHECKED;
    case 'CHECKING':
      return _$gMergeStatusCHECKING;
    case 'CAN_BE_MERGED':
      return _$gMergeStatusCAN_BE_MERGED;
    case 'CANNOT_BE_MERGED':
      return _$gMergeStatusCANNOT_BE_MERGED;
    case 'CANNOT_BE_MERGED_RECHECK':
      return _$gMergeStatusCANNOT_BE_MERGED_RECHECK;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMergeStatus> _$gMergeStatusValues =
    new BuiltSet<GMergeStatus>(const <GMergeStatus>[
  _$gMergeStatusUNCHECKED,
  _$gMergeStatusCHECKING,
  _$gMergeStatusCAN_BE_MERGED,
  _$gMergeStatusCANNOT_BE_MERGED,
  _$gMergeStatusCANNOT_BE_MERGED_RECHECK,
]);

const GMergeStrategyEnum _$gMergeStrategyEnumMERGE_TRAIN =
    const GMergeStrategyEnum._('MERGE_TRAIN');
const GMergeStrategyEnum
    _$gMergeStrategyEnumADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS =
    const GMergeStrategyEnum._('ADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS');
const GMergeStrategyEnum _$gMergeStrategyEnumMERGE_WHEN_PIPELINE_SUCCEEDS =
    const GMergeStrategyEnum._('MERGE_WHEN_PIPELINE_SUCCEEDS');

GMergeStrategyEnum _$gMergeStrategyEnumValueOf(String name) {
  switch (name) {
    case 'MERGE_TRAIN':
      return _$gMergeStrategyEnumMERGE_TRAIN;
    case 'ADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS':
      return _$gMergeStrategyEnumADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS;
    case 'MERGE_WHEN_PIPELINE_SUCCEEDS':
      return _$gMergeStrategyEnumMERGE_WHEN_PIPELINE_SUCCEEDS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMergeStrategyEnum> _$gMergeStrategyEnumValues =
    new BuiltSet<GMergeStrategyEnum>(const <GMergeStrategyEnum>[
  _$gMergeStrategyEnumMERGE_TRAIN,
  _$gMergeStrategyEnumADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS,
  _$gMergeStrategyEnumMERGE_WHEN_PIPELINE_SUCCEEDS,
]);

const GMilestoneSort _$gMilestoneSortDUE_DATE_ASC =
    const GMilestoneSort._('DUE_DATE_ASC');
const GMilestoneSort _$gMilestoneSortDUE_DATE_DESC =
    const GMilestoneSort._('DUE_DATE_DESC');
const GMilestoneSort _$gMilestoneSortEXPIRED_LAST_DUE_DATE_ASC =
    const GMilestoneSort._('EXPIRED_LAST_DUE_DATE_ASC');
const GMilestoneSort _$gMilestoneSortEXPIRED_LAST_DUE_DATE_DESC =
    const GMilestoneSort._('EXPIRED_LAST_DUE_DATE_DESC');
const GMilestoneSort _$gMilestoneSortupdated_desc =
    const GMilestoneSort._('updated_desc');
const GMilestoneSort _$gMilestoneSortupdated_asc =
    const GMilestoneSort._('updated_asc');
const GMilestoneSort _$gMilestoneSortcreated_desc =
    const GMilestoneSort._('created_desc');
const GMilestoneSort _$gMilestoneSortcreated_asc =
    const GMilestoneSort._('created_asc');
const GMilestoneSort _$gMilestoneSortUPDATED_DESC =
    const GMilestoneSort._('UPDATED_DESC');
const GMilestoneSort _$gMilestoneSortUPDATED_ASC =
    const GMilestoneSort._('UPDATED_ASC');
const GMilestoneSort _$gMilestoneSortCREATED_DESC =
    const GMilestoneSort._('CREATED_DESC');
const GMilestoneSort _$gMilestoneSortCREATED_ASC =
    const GMilestoneSort._('CREATED_ASC');

GMilestoneSort _$gMilestoneSortValueOf(String name) {
  switch (name) {
    case 'DUE_DATE_ASC':
      return _$gMilestoneSortDUE_DATE_ASC;
    case 'DUE_DATE_DESC':
      return _$gMilestoneSortDUE_DATE_DESC;
    case 'EXPIRED_LAST_DUE_DATE_ASC':
      return _$gMilestoneSortEXPIRED_LAST_DUE_DATE_ASC;
    case 'EXPIRED_LAST_DUE_DATE_DESC':
      return _$gMilestoneSortEXPIRED_LAST_DUE_DATE_DESC;
    case 'updated_desc':
      return _$gMilestoneSortupdated_desc;
    case 'updated_asc':
      return _$gMilestoneSortupdated_asc;
    case 'created_desc':
      return _$gMilestoneSortcreated_desc;
    case 'created_asc':
      return _$gMilestoneSortcreated_asc;
    case 'UPDATED_DESC':
      return _$gMilestoneSortUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gMilestoneSortUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gMilestoneSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gMilestoneSortCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMilestoneSort> _$gMilestoneSortValues =
    new BuiltSet<GMilestoneSort>(const <GMilestoneSort>[
  _$gMilestoneSortDUE_DATE_ASC,
  _$gMilestoneSortDUE_DATE_DESC,
  _$gMilestoneSortEXPIRED_LAST_DUE_DATE_ASC,
  _$gMilestoneSortEXPIRED_LAST_DUE_DATE_DESC,
  _$gMilestoneSortupdated_desc,
  _$gMilestoneSortupdated_asc,
  _$gMilestoneSortcreated_desc,
  _$gMilestoneSortcreated_asc,
  _$gMilestoneSortUPDATED_DESC,
  _$gMilestoneSortUPDATED_ASC,
  _$gMilestoneSortCREATED_DESC,
  _$gMilestoneSortCREATED_ASC,
]);

const GMilestoneStateEnum _$gMilestoneStateEnumactive =
    const GMilestoneStateEnum._('active');
const GMilestoneStateEnum _$gMilestoneStateEnumclosed =
    const GMilestoneStateEnum._('closed');

GMilestoneStateEnum _$gMilestoneStateEnumValueOf(String name) {
  switch (name) {
    case 'active':
      return _$gMilestoneStateEnumactive;
    case 'closed':
      return _$gMilestoneStateEnumclosed;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMilestoneStateEnum> _$gMilestoneStateEnumValues =
    new BuiltSet<GMilestoneStateEnum>(const <GMilestoneStateEnum>[
  _$gMilestoneStateEnumactive,
  _$gMilestoneStateEnumclosed,
]);

const GMilestoneWildcardId _$gMilestoneWildcardIdNONE =
    const GMilestoneWildcardId._('NONE');
const GMilestoneWildcardId _$gMilestoneWildcardIdANY =
    const GMilestoneWildcardId._('ANY');
const GMilestoneWildcardId _$gMilestoneWildcardIdSTARTED =
    const GMilestoneWildcardId._('STARTED');
const GMilestoneWildcardId _$gMilestoneWildcardIdUPCOMING =
    const GMilestoneWildcardId._('UPCOMING');

GMilestoneWildcardId _$gMilestoneWildcardIdValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gMilestoneWildcardIdNONE;
    case 'ANY':
      return _$gMilestoneWildcardIdANY;
    case 'STARTED':
      return _$gMilestoneWildcardIdSTARTED;
    case 'UPCOMING':
      return _$gMilestoneWildcardIdUPCOMING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMilestoneWildcardId> _$gMilestoneWildcardIdValues =
    new BuiltSet<GMilestoneWildcardId>(const <GMilestoneWildcardId>[
  _$gMilestoneWildcardIdNONE,
  _$gMilestoneWildcardIdANY,
  _$gMilestoneWildcardIdSTARTED,
  _$gMilestoneWildcardIdUPCOMING,
]);

const GMoveType _$gMoveTypebefore = const GMoveType._('before');
const GMoveType _$gMoveTypeafter = const GMoveType._('after');

GMoveType _$gMoveTypeValueOf(String name) {
  switch (name) {
    case 'before':
      return _$gMoveTypebefore;
    case 'after':
      return _$gMoveTypeafter;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMoveType> _$gMoveTypeValues =
    new BuiltSet<GMoveType>(const <GMoveType>[
  _$gMoveTypebefore,
  _$gMoveTypeafter,
]);

const GMutationOperationMode _$gMutationOperationModeREPLACE =
    const GMutationOperationMode._('REPLACE');
const GMutationOperationMode _$gMutationOperationModeAPPEND =
    const GMutationOperationMode._('APPEND');
const GMutationOperationMode _$gMutationOperationModeREMOVE =
    const GMutationOperationMode._('REMOVE');

GMutationOperationMode _$gMutationOperationModeValueOf(String name) {
  switch (name) {
    case 'REPLACE':
      return _$gMutationOperationModeREPLACE;
    case 'APPEND':
      return _$gMutationOperationModeAPPEND;
    case 'REMOVE':
      return _$gMutationOperationModeREMOVE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMutationOperationMode> _$gMutationOperationModeValues =
    new BuiltSet<GMutationOperationMode>(const <GMutationOperationMode>[
  _$gMutationOperationModeREPLACE,
  _$gMutationOperationModeAPPEND,
  _$gMutationOperationModeREMOVE,
]);

const GNamespaceProjectSort _$gNamespaceProjectSortSIMILARITY =
    const GNamespaceProjectSort._('SIMILARITY');
const GNamespaceProjectSort _$gNamespaceProjectSortSTORAGE =
    const GNamespaceProjectSort._('STORAGE');

GNamespaceProjectSort _$gNamespaceProjectSortValueOf(String name) {
  switch (name) {
    case 'SIMILARITY':
      return _$gNamespaceProjectSortSIMILARITY;
    case 'STORAGE':
      return _$gNamespaceProjectSortSTORAGE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GNamespaceProjectSort> _$gNamespaceProjectSortValues =
    new BuiltSet<GNamespaceProjectSort>(const <GNamespaceProjectSort>[
  _$gNamespaceProjectSortSIMILARITY,
  _$gNamespaceProjectSortSTORAGE,
]);

const GNegatedIterationWildcardId _$gNegatedIterationWildcardIdCURRENT =
    const GNegatedIterationWildcardId._('CURRENT');

GNegatedIterationWildcardId _$gNegatedIterationWildcardIdValueOf(String name) {
  switch (name) {
    case 'CURRENT':
      return _$gNegatedIterationWildcardIdCURRENT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GNegatedIterationWildcardId>
    _$gNegatedIterationWildcardIdValues = new BuiltSet<
        GNegatedIterationWildcardId>(const <GNegatedIterationWildcardId>[
  _$gNegatedIterationWildcardIdCURRENT,
]);

const GNegatedMilestoneWildcardId _$gNegatedMilestoneWildcardIdSTARTED =
    const GNegatedMilestoneWildcardId._('STARTED');
const GNegatedMilestoneWildcardId _$gNegatedMilestoneWildcardIdUPCOMING =
    const GNegatedMilestoneWildcardId._('UPCOMING');

GNegatedMilestoneWildcardId _$gNegatedMilestoneWildcardIdValueOf(String name) {
  switch (name) {
    case 'STARTED':
      return _$gNegatedMilestoneWildcardIdSTARTED;
    case 'UPCOMING':
      return _$gNegatedMilestoneWildcardIdUPCOMING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GNegatedMilestoneWildcardId>
    _$gNegatedMilestoneWildcardIdValues = new BuiltSet<
        GNegatedMilestoneWildcardId>(const <GNegatedMilestoneWildcardId>[
  _$gNegatedMilestoneWildcardIdSTARTED,
  _$gNegatedMilestoneWildcardIdUPCOMING,
]);

const GNetworkPolicyKind _$gNetworkPolicyKindCiliumNetworkPolicy =
    const GNetworkPolicyKind._('CiliumNetworkPolicy');
const GNetworkPolicyKind _$gNetworkPolicyKindNetworkPolicy =
    const GNetworkPolicyKind._('NetworkPolicy');

GNetworkPolicyKind _$gNetworkPolicyKindValueOf(String name) {
  switch (name) {
    case 'CiliumNetworkPolicy':
      return _$gNetworkPolicyKindCiliumNetworkPolicy;
    case 'NetworkPolicy':
      return _$gNetworkPolicyKindNetworkPolicy;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GNetworkPolicyKind> _$gNetworkPolicyKindValues =
    new BuiltSet<GNetworkPolicyKind>(const <GNetworkPolicyKind>[
  _$gNetworkPolicyKindCiliumNetworkPolicy,
  _$gNetworkPolicyKindNetworkPolicy,
]);

const GOncallRotationUnitEnum _$gOncallRotationUnitEnumHOURS =
    const GOncallRotationUnitEnum._('HOURS');
const GOncallRotationUnitEnum _$gOncallRotationUnitEnumDAYS =
    const GOncallRotationUnitEnum._('DAYS');
const GOncallRotationUnitEnum _$gOncallRotationUnitEnumWEEKS =
    const GOncallRotationUnitEnum._('WEEKS');

GOncallRotationUnitEnum _$gOncallRotationUnitEnumValueOf(String name) {
  switch (name) {
    case 'HOURS':
      return _$gOncallRotationUnitEnumHOURS;
    case 'DAYS':
      return _$gOncallRotationUnitEnumDAYS;
    case 'WEEKS':
      return _$gOncallRotationUnitEnumWEEKS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOncallRotationUnitEnum> _$gOncallRotationUnitEnumValues =
    new BuiltSet<GOncallRotationUnitEnum>(const <GOncallRotationUnitEnum>[
  _$gOncallRotationUnitEnumHOURS,
  _$gOncallRotationUnitEnumDAYS,
  _$gOncallRotationUnitEnumWEEKS,
]);

const GOrganizationSort _$gOrganizationSortNAME_ASC =
    const GOrganizationSort._('NAME_ASC');
const GOrganizationSort _$gOrganizationSortNAME_DESC =
    const GOrganizationSort._('NAME_DESC');
const GOrganizationSort _$gOrganizationSortDESCRIPTION_ASC =
    const GOrganizationSort._('DESCRIPTION_ASC');
const GOrganizationSort _$gOrganizationSortDESCRIPTION_DESC =
    const GOrganizationSort._('DESCRIPTION_DESC');
const GOrganizationSort _$gOrganizationSortDEFAULT_RATE_ASC =
    const GOrganizationSort._('DEFAULT_RATE_ASC');
const GOrganizationSort _$gOrganizationSortDEFAULT_RATE_DESC =
    const GOrganizationSort._('DEFAULT_RATE_DESC');
const GOrganizationSort _$gOrganizationSortupdated_desc =
    const GOrganizationSort._('updated_desc');
const GOrganizationSort _$gOrganizationSortupdated_asc =
    const GOrganizationSort._('updated_asc');
const GOrganizationSort _$gOrganizationSortcreated_desc =
    const GOrganizationSort._('created_desc');
const GOrganizationSort _$gOrganizationSortcreated_asc =
    const GOrganizationSort._('created_asc');
const GOrganizationSort _$gOrganizationSortUPDATED_DESC =
    const GOrganizationSort._('UPDATED_DESC');
const GOrganizationSort _$gOrganizationSortUPDATED_ASC =
    const GOrganizationSort._('UPDATED_ASC');
const GOrganizationSort _$gOrganizationSortCREATED_DESC =
    const GOrganizationSort._('CREATED_DESC');
const GOrganizationSort _$gOrganizationSortCREATED_ASC =
    const GOrganizationSort._('CREATED_ASC');

GOrganizationSort _$gOrganizationSortValueOf(String name) {
  switch (name) {
    case 'NAME_ASC':
      return _$gOrganizationSortNAME_ASC;
    case 'NAME_DESC':
      return _$gOrganizationSortNAME_DESC;
    case 'DESCRIPTION_ASC':
      return _$gOrganizationSortDESCRIPTION_ASC;
    case 'DESCRIPTION_DESC':
      return _$gOrganizationSortDESCRIPTION_DESC;
    case 'DEFAULT_RATE_ASC':
      return _$gOrganizationSortDEFAULT_RATE_ASC;
    case 'DEFAULT_RATE_DESC':
      return _$gOrganizationSortDEFAULT_RATE_DESC;
    case 'updated_desc':
      return _$gOrganizationSortupdated_desc;
    case 'updated_asc':
      return _$gOrganizationSortupdated_asc;
    case 'created_desc':
      return _$gOrganizationSortcreated_desc;
    case 'created_asc':
      return _$gOrganizationSortcreated_asc;
    case 'UPDATED_DESC':
      return _$gOrganizationSortUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gOrganizationSortUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gOrganizationSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gOrganizationSortCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrganizationSort> _$gOrganizationSortValues =
    new BuiltSet<GOrganizationSort>(const <GOrganizationSort>[
  _$gOrganizationSortNAME_ASC,
  _$gOrganizationSortNAME_DESC,
  _$gOrganizationSortDESCRIPTION_ASC,
  _$gOrganizationSortDESCRIPTION_DESC,
  _$gOrganizationSortDEFAULT_RATE_ASC,
  _$gOrganizationSortDEFAULT_RATE_DESC,
  _$gOrganizationSortupdated_desc,
  _$gOrganizationSortupdated_asc,
  _$gOrganizationSortcreated_desc,
  _$gOrganizationSortcreated_asc,
  _$gOrganizationSortUPDATED_DESC,
  _$gOrganizationSortUPDATED_ASC,
  _$gOrganizationSortCREATED_DESC,
  _$gOrganizationSortCREATED_ASC,
]);

const GPackageDependencyType _$gPackageDependencyTypeDEPENDENCIES =
    const GPackageDependencyType._('DEPENDENCIES');
const GPackageDependencyType _$gPackageDependencyTypeDEV_DEPENDENCIES =
    const GPackageDependencyType._('DEV_DEPENDENCIES');
const GPackageDependencyType _$gPackageDependencyTypeBUNDLE_DEPENDENCIES =
    const GPackageDependencyType._('BUNDLE_DEPENDENCIES');
const GPackageDependencyType _$gPackageDependencyTypePEER_DEPENDENCIES =
    const GPackageDependencyType._('PEER_DEPENDENCIES');

GPackageDependencyType _$gPackageDependencyTypeValueOf(String name) {
  switch (name) {
    case 'DEPENDENCIES':
      return _$gPackageDependencyTypeDEPENDENCIES;
    case 'DEV_DEPENDENCIES':
      return _$gPackageDependencyTypeDEV_DEPENDENCIES;
    case 'BUNDLE_DEPENDENCIES':
      return _$gPackageDependencyTypeBUNDLE_DEPENDENCIES;
    case 'PEER_DEPENDENCIES':
      return _$gPackageDependencyTypePEER_DEPENDENCIES;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPackageDependencyType> _$gPackageDependencyTypeValues =
    new BuiltSet<GPackageDependencyType>(const <GPackageDependencyType>[
  _$gPackageDependencyTypeDEPENDENCIES,
  _$gPackageDependencyTypeDEV_DEPENDENCIES,
  _$gPackageDependencyTypeBUNDLE_DEPENDENCIES,
  _$gPackageDependencyTypePEER_DEPENDENCIES,
]);

const GPackageGroupSort _$gPackageGroupSortPROJECT_PATH_DESC =
    const GPackageGroupSort._('PROJECT_PATH_DESC');
const GPackageGroupSort _$gPackageGroupSortPROJECT_PATH_ASC =
    const GPackageGroupSort._('PROJECT_PATH_ASC');
const GPackageGroupSort _$gPackageGroupSortCREATED_DESC =
    const GPackageGroupSort._('CREATED_DESC');
const GPackageGroupSort _$gPackageGroupSortCREATED_ASC =
    const GPackageGroupSort._('CREATED_ASC');
const GPackageGroupSort _$gPackageGroupSortNAME_DESC =
    const GPackageGroupSort._('NAME_DESC');
const GPackageGroupSort _$gPackageGroupSortNAME_ASC =
    const GPackageGroupSort._('NAME_ASC');
const GPackageGroupSort _$gPackageGroupSortVERSION_DESC =
    const GPackageGroupSort._('VERSION_DESC');
const GPackageGroupSort _$gPackageGroupSortVERSION_ASC =
    const GPackageGroupSort._('VERSION_ASC');
const GPackageGroupSort _$gPackageGroupSortTYPE_DESC =
    const GPackageGroupSort._('TYPE_DESC');
const GPackageGroupSort _$gPackageGroupSortTYPE_ASC =
    const GPackageGroupSort._('TYPE_ASC');

GPackageGroupSort _$gPackageGroupSortValueOf(String name) {
  switch (name) {
    case 'PROJECT_PATH_DESC':
      return _$gPackageGroupSortPROJECT_PATH_DESC;
    case 'PROJECT_PATH_ASC':
      return _$gPackageGroupSortPROJECT_PATH_ASC;
    case 'CREATED_DESC':
      return _$gPackageGroupSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gPackageGroupSortCREATED_ASC;
    case 'NAME_DESC':
      return _$gPackageGroupSortNAME_DESC;
    case 'NAME_ASC':
      return _$gPackageGroupSortNAME_ASC;
    case 'VERSION_DESC':
      return _$gPackageGroupSortVERSION_DESC;
    case 'VERSION_ASC':
      return _$gPackageGroupSortVERSION_ASC;
    case 'TYPE_DESC':
      return _$gPackageGroupSortTYPE_DESC;
    case 'TYPE_ASC':
      return _$gPackageGroupSortTYPE_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPackageGroupSort> _$gPackageGroupSortValues =
    new BuiltSet<GPackageGroupSort>(const <GPackageGroupSort>[
  _$gPackageGroupSortPROJECT_PATH_DESC,
  _$gPackageGroupSortPROJECT_PATH_ASC,
  _$gPackageGroupSortCREATED_DESC,
  _$gPackageGroupSortCREATED_ASC,
  _$gPackageGroupSortNAME_DESC,
  _$gPackageGroupSortNAME_ASC,
  _$gPackageGroupSortVERSION_DESC,
  _$gPackageGroupSortVERSION_ASC,
  _$gPackageGroupSortTYPE_DESC,
  _$gPackageGroupSortTYPE_ASC,
]);

const GPackagesCleanupKeepDuplicatedPackageFilesEnum
    _$gPackagesCleanupKeepDuplicatedPackageFilesEnumALL_PACKAGE_FILES =
    const GPackagesCleanupKeepDuplicatedPackageFilesEnum._('ALL_PACKAGE_FILES');
const GPackagesCleanupKeepDuplicatedPackageFilesEnum
    _$gPackagesCleanupKeepDuplicatedPackageFilesEnumONE_PACKAGE_FILE =
    const GPackagesCleanupKeepDuplicatedPackageFilesEnum._('ONE_PACKAGE_FILE');
const GPackagesCleanupKeepDuplicatedPackageFilesEnum
    _$gPackagesCleanupKeepDuplicatedPackageFilesEnumTEN_PACKAGE_FILES =
    const GPackagesCleanupKeepDuplicatedPackageFilesEnum._('TEN_PACKAGE_FILES');
const GPackagesCleanupKeepDuplicatedPackageFilesEnum
    _$gPackagesCleanupKeepDuplicatedPackageFilesEnumTWENTY_PACKAGE_FILES =
    const GPackagesCleanupKeepDuplicatedPackageFilesEnum._(
        'TWENTY_PACKAGE_FILES');
const GPackagesCleanupKeepDuplicatedPackageFilesEnum
    _$gPackagesCleanupKeepDuplicatedPackageFilesEnumTHIRTY_PACKAGE_FILES =
    const GPackagesCleanupKeepDuplicatedPackageFilesEnum._(
        'THIRTY_PACKAGE_FILES');
const GPackagesCleanupKeepDuplicatedPackageFilesEnum
    _$gPackagesCleanupKeepDuplicatedPackageFilesEnumFORTY_PACKAGE_FILES =
    const GPackagesCleanupKeepDuplicatedPackageFilesEnum._(
        'FORTY_PACKAGE_FILES');
const GPackagesCleanupKeepDuplicatedPackageFilesEnum
    _$gPackagesCleanupKeepDuplicatedPackageFilesEnumFIFTY_PACKAGE_FILES =
    const GPackagesCleanupKeepDuplicatedPackageFilesEnum._(
        'FIFTY_PACKAGE_FILES');

GPackagesCleanupKeepDuplicatedPackageFilesEnum
    _$gPackagesCleanupKeepDuplicatedPackageFilesEnumValueOf(String name) {
  switch (name) {
    case 'ALL_PACKAGE_FILES':
      return _$gPackagesCleanupKeepDuplicatedPackageFilesEnumALL_PACKAGE_FILES;
    case 'ONE_PACKAGE_FILE':
      return _$gPackagesCleanupKeepDuplicatedPackageFilesEnumONE_PACKAGE_FILE;
    case 'TEN_PACKAGE_FILES':
      return _$gPackagesCleanupKeepDuplicatedPackageFilesEnumTEN_PACKAGE_FILES;
    case 'TWENTY_PACKAGE_FILES':
      return _$gPackagesCleanupKeepDuplicatedPackageFilesEnumTWENTY_PACKAGE_FILES;
    case 'THIRTY_PACKAGE_FILES':
      return _$gPackagesCleanupKeepDuplicatedPackageFilesEnumTHIRTY_PACKAGE_FILES;
    case 'FORTY_PACKAGE_FILES':
      return _$gPackagesCleanupKeepDuplicatedPackageFilesEnumFORTY_PACKAGE_FILES;
    case 'FIFTY_PACKAGE_FILES':
      return _$gPackagesCleanupKeepDuplicatedPackageFilesEnumFIFTY_PACKAGE_FILES;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPackagesCleanupKeepDuplicatedPackageFilesEnum>
    _$gPackagesCleanupKeepDuplicatedPackageFilesEnumValues =
    new BuiltSet<GPackagesCleanupKeepDuplicatedPackageFilesEnum>(const <
        GPackagesCleanupKeepDuplicatedPackageFilesEnum>[
  _$gPackagesCleanupKeepDuplicatedPackageFilesEnumALL_PACKAGE_FILES,
  _$gPackagesCleanupKeepDuplicatedPackageFilesEnumONE_PACKAGE_FILE,
  _$gPackagesCleanupKeepDuplicatedPackageFilesEnumTEN_PACKAGE_FILES,
  _$gPackagesCleanupKeepDuplicatedPackageFilesEnumTWENTY_PACKAGE_FILES,
  _$gPackagesCleanupKeepDuplicatedPackageFilesEnumTHIRTY_PACKAGE_FILES,
  _$gPackagesCleanupKeepDuplicatedPackageFilesEnumFORTY_PACKAGE_FILES,
  _$gPackagesCleanupKeepDuplicatedPackageFilesEnumFIFTY_PACKAGE_FILES,
]);

const GPackageSort _$gPackageSortCREATED_DESC =
    const GPackageSort._('CREATED_DESC');
const GPackageSort _$gPackageSortCREATED_ASC =
    const GPackageSort._('CREATED_ASC');
const GPackageSort _$gPackageSortNAME_DESC = const GPackageSort._('NAME_DESC');
const GPackageSort _$gPackageSortNAME_ASC = const GPackageSort._('NAME_ASC');
const GPackageSort _$gPackageSortVERSION_DESC =
    const GPackageSort._('VERSION_DESC');
const GPackageSort _$gPackageSortVERSION_ASC =
    const GPackageSort._('VERSION_ASC');
const GPackageSort _$gPackageSortTYPE_DESC = const GPackageSort._('TYPE_DESC');
const GPackageSort _$gPackageSortTYPE_ASC = const GPackageSort._('TYPE_ASC');

GPackageSort _$gPackageSortValueOf(String name) {
  switch (name) {
    case 'CREATED_DESC':
      return _$gPackageSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gPackageSortCREATED_ASC;
    case 'NAME_DESC':
      return _$gPackageSortNAME_DESC;
    case 'NAME_ASC':
      return _$gPackageSortNAME_ASC;
    case 'VERSION_DESC':
      return _$gPackageSortVERSION_DESC;
    case 'VERSION_ASC':
      return _$gPackageSortVERSION_ASC;
    case 'TYPE_DESC':
      return _$gPackageSortTYPE_DESC;
    case 'TYPE_ASC':
      return _$gPackageSortTYPE_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPackageSort> _$gPackageSortValues =
    new BuiltSet<GPackageSort>(const <GPackageSort>[
  _$gPackageSortCREATED_DESC,
  _$gPackageSortCREATED_ASC,
  _$gPackageSortNAME_DESC,
  _$gPackageSortNAME_ASC,
  _$gPackageSortVERSION_DESC,
  _$gPackageSortVERSION_ASC,
  _$gPackageSortTYPE_DESC,
  _$gPackageSortTYPE_ASC,
]);

const GPackageStatus _$gPackageStatusDEFAULT =
    const GPackageStatus._('DEFAULT');
const GPackageStatus _$gPackageStatusHIDDEN = const GPackageStatus._('HIDDEN');
const GPackageStatus _$gPackageStatusPROCESSING =
    const GPackageStatus._('PROCESSING');
const GPackageStatus _$gPackageStatusERROR = const GPackageStatus._('ERROR');
const GPackageStatus _$gPackageStatusPENDING_DESTRUCTION =
    const GPackageStatus._('PENDING_DESTRUCTION');

GPackageStatus _$gPackageStatusValueOf(String name) {
  switch (name) {
    case 'DEFAULT':
      return _$gPackageStatusDEFAULT;
    case 'HIDDEN':
      return _$gPackageStatusHIDDEN;
    case 'PROCESSING':
      return _$gPackageStatusPROCESSING;
    case 'ERROR':
      return _$gPackageStatusERROR;
    case 'PENDING_DESTRUCTION':
      return _$gPackageStatusPENDING_DESTRUCTION;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPackageStatus> _$gPackageStatusValues =
    new BuiltSet<GPackageStatus>(const <GPackageStatus>[
  _$gPackageStatusDEFAULT,
  _$gPackageStatusHIDDEN,
  _$gPackageStatusPROCESSING,
  _$gPackageStatusERROR,
  _$gPackageStatusPENDING_DESTRUCTION,
]);

const GPackageTypeEnum _$gPackageTypeEnumMAVEN =
    const GPackageTypeEnum._('MAVEN');
const GPackageTypeEnum _$gPackageTypeEnumNPM = const GPackageTypeEnum._('NPM');
const GPackageTypeEnum _$gPackageTypeEnumCONAN =
    const GPackageTypeEnum._('CONAN');
const GPackageTypeEnum _$gPackageTypeEnumNUGET =
    const GPackageTypeEnum._('NUGET');
const GPackageTypeEnum _$gPackageTypeEnumPYPI =
    const GPackageTypeEnum._('PYPI');
const GPackageTypeEnum _$gPackageTypeEnumCOMPOSER =
    const GPackageTypeEnum._('COMPOSER');
const GPackageTypeEnum _$gPackageTypeEnumGENERIC =
    const GPackageTypeEnum._('GENERIC');
const GPackageTypeEnum _$gPackageTypeEnumGOLANG =
    const GPackageTypeEnum._('GOLANG');
const GPackageTypeEnum _$gPackageTypeEnumDEBIAN =
    const GPackageTypeEnum._('DEBIAN');
const GPackageTypeEnum _$gPackageTypeEnumRUBYGEMS =
    const GPackageTypeEnum._('RUBYGEMS');
const GPackageTypeEnum _$gPackageTypeEnumHELM =
    const GPackageTypeEnum._('HELM');
const GPackageTypeEnum _$gPackageTypeEnumTERRAFORM_MODULE =
    const GPackageTypeEnum._('TERRAFORM_MODULE');
const GPackageTypeEnum _$gPackageTypeEnumRPM = const GPackageTypeEnum._('RPM');

GPackageTypeEnum _$gPackageTypeEnumValueOf(String name) {
  switch (name) {
    case 'MAVEN':
      return _$gPackageTypeEnumMAVEN;
    case 'NPM':
      return _$gPackageTypeEnumNPM;
    case 'CONAN':
      return _$gPackageTypeEnumCONAN;
    case 'NUGET':
      return _$gPackageTypeEnumNUGET;
    case 'PYPI':
      return _$gPackageTypeEnumPYPI;
    case 'COMPOSER':
      return _$gPackageTypeEnumCOMPOSER;
    case 'GENERIC':
      return _$gPackageTypeEnumGENERIC;
    case 'GOLANG':
      return _$gPackageTypeEnumGOLANG;
    case 'DEBIAN':
      return _$gPackageTypeEnumDEBIAN;
    case 'RUBYGEMS':
      return _$gPackageTypeEnumRUBYGEMS;
    case 'HELM':
      return _$gPackageTypeEnumHELM;
    case 'TERRAFORM_MODULE':
      return _$gPackageTypeEnumTERRAFORM_MODULE;
    case 'RPM':
      return _$gPackageTypeEnumRPM;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPackageTypeEnum> _$gPackageTypeEnumValues =
    new BuiltSet<GPackageTypeEnum>(const <GPackageTypeEnum>[
  _$gPackageTypeEnumMAVEN,
  _$gPackageTypeEnumNPM,
  _$gPackageTypeEnumCONAN,
  _$gPackageTypeEnumNUGET,
  _$gPackageTypeEnumPYPI,
  _$gPackageTypeEnumCOMPOSER,
  _$gPackageTypeEnumGENERIC,
  _$gPackageTypeEnumGOLANG,
  _$gPackageTypeEnumDEBIAN,
  _$gPackageTypeEnumRUBYGEMS,
  _$gPackageTypeEnumHELM,
  _$gPackageTypeEnumTERRAFORM_MODULE,
  _$gPackageTypeEnumRPM,
]);

const GPipelineConfigSourceEnum _$gPipelineConfigSourceEnumUNKNOWN_SOURCE =
    const GPipelineConfigSourceEnum._('UNKNOWN_SOURCE');
const GPipelineConfigSourceEnum _$gPipelineConfigSourceEnumREPOSITORY_SOURCE =
    const GPipelineConfigSourceEnum._('REPOSITORY_SOURCE');
const GPipelineConfigSourceEnum _$gPipelineConfigSourceEnumAUTO_DEVOPS_SOURCE =
    const GPipelineConfigSourceEnum._('AUTO_DEVOPS_SOURCE');
const GPipelineConfigSourceEnum _$gPipelineConfigSourceEnumWEBIDE_SOURCE =
    const GPipelineConfigSourceEnum._('WEBIDE_SOURCE');
const GPipelineConfigSourceEnum _$gPipelineConfigSourceEnumREMOTE_SOURCE =
    const GPipelineConfigSourceEnum._('REMOTE_SOURCE');
const GPipelineConfigSourceEnum
    _$gPipelineConfigSourceEnumEXTERNAL_PROJECT_SOURCE =
    const GPipelineConfigSourceEnum._('EXTERNAL_PROJECT_SOURCE');
const GPipelineConfigSourceEnum _$gPipelineConfigSourceEnumBRIDGE_SOURCE =
    const GPipelineConfigSourceEnum._('BRIDGE_SOURCE');
const GPipelineConfigSourceEnum _$gPipelineConfigSourceEnumPARAMETER_SOURCE =
    const GPipelineConfigSourceEnum._('PARAMETER_SOURCE');
const GPipelineConfigSourceEnum _$gPipelineConfigSourceEnumCOMPLIANCE_SOURCE =
    const GPipelineConfigSourceEnum._('COMPLIANCE_SOURCE');

GPipelineConfigSourceEnum _$gPipelineConfigSourceEnumValueOf(String name) {
  switch (name) {
    case 'UNKNOWN_SOURCE':
      return _$gPipelineConfigSourceEnumUNKNOWN_SOURCE;
    case 'REPOSITORY_SOURCE':
      return _$gPipelineConfigSourceEnumREPOSITORY_SOURCE;
    case 'AUTO_DEVOPS_SOURCE':
      return _$gPipelineConfigSourceEnumAUTO_DEVOPS_SOURCE;
    case 'WEBIDE_SOURCE':
      return _$gPipelineConfigSourceEnumWEBIDE_SOURCE;
    case 'REMOTE_SOURCE':
      return _$gPipelineConfigSourceEnumREMOTE_SOURCE;
    case 'EXTERNAL_PROJECT_SOURCE':
      return _$gPipelineConfigSourceEnumEXTERNAL_PROJECT_SOURCE;
    case 'BRIDGE_SOURCE':
      return _$gPipelineConfigSourceEnumBRIDGE_SOURCE;
    case 'PARAMETER_SOURCE':
      return _$gPipelineConfigSourceEnumPARAMETER_SOURCE;
    case 'COMPLIANCE_SOURCE':
      return _$gPipelineConfigSourceEnumCOMPLIANCE_SOURCE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPipelineConfigSourceEnum> _$gPipelineConfigSourceEnumValues =
    new BuiltSet<GPipelineConfigSourceEnum>(const <GPipelineConfigSourceEnum>[
  _$gPipelineConfigSourceEnumUNKNOWN_SOURCE,
  _$gPipelineConfigSourceEnumREPOSITORY_SOURCE,
  _$gPipelineConfigSourceEnumAUTO_DEVOPS_SOURCE,
  _$gPipelineConfigSourceEnumWEBIDE_SOURCE,
  _$gPipelineConfigSourceEnumREMOTE_SOURCE,
  _$gPipelineConfigSourceEnumEXTERNAL_PROJECT_SOURCE,
  _$gPipelineConfigSourceEnumBRIDGE_SOURCE,
  _$gPipelineConfigSourceEnumPARAMETER_SOURCE,
  _$gPipelineConfigSourceEnumCOMPLIANCE_SOURCE,
]);

const GPipelineMergeRequestEventType
    _$gPipelineMergeRequestEventTypeMERGED_RESULT =
    const GPipelineMergeRequestEventType._('MERGED_RESULT');
const GPipelineMergeRequestEventType _$gPipelineMergeRequestEventTypeDETACHED =
    const GPipelineMergeRequestEventType._('DETACHED');
const GPipelineMergeRequestEventType
    _$gPipelineMergeRequestEventTypeMERGE_TRAIN =
    const GPipelineMergeRequestEventType._('MERGE_TRAIN');

GPipelineMergeRequestEventType _$gPipelineMergeRequestEventTypeValueOf(
    String name) {
  switch (name) {
    case 'MERGED_RESULT':
      return _$gPipelineMergeRequestEventTypeMERGED_RESULT;
    case 'DETACHED':
      return _$gPipelineMergeRequestEventTypeDETACHED;
    case 'MERGE_TRAIN':
      return _$gPipelineMergeRequestEventTypeMERGE_TRAIN;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPipelineMergeRequestEventType>
    _$gPipelineMergeRequestEventTypeValues = new BuiltSet<
        GPipelineMergeRequestEventType>(const <GPipelineMergeRequestEventType>[
  _$gPipelineMergeRequestEventTypeMERGED_RESULT,
  _$gPipelineMergeRequestEventTypeDETACHED,
  _$gPipelineMergeRequestEventTypeMERGE_TRAIN,
]);

const GPipelineScheduleStatus _$gPipelineScheduleStatusACTIVE =
    const GPipelineScheduleStatus._('ACTIVE');
const GPipelineScheduleStatus _$gPipelineScheduleStatusINACTIVE =
    const GPipelineScheduleStatus._('INACTIVE');

GPipelineScheduleStatus _$gPipelineScheduleStatusValueOf(String name) {
  switch (name) {
    case 'ACTIVE':
      return _$gPipelineScheduleStatusACTIVE;
    case 'INACTIVE':
      return _$gPipelineScheduleStatusINACTIVE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPipelineScheduleStatus> _$gPipelineScheduleStatusValues =
    new BuiltSet<GPipelineScheduleStatus>(const <GPipelineScheduleStatus>[
  _$gPipelineScheduleStatusACTIVE,
  _$gPipelineScheduleStatusINACTIVE,
]);

const GPipelineScopeEnum _$gPipelineScopeEnumRUNNING =
    const GPipelineScopeEnum._('RUNNING');
const GPipelineScopeEnum _$gPipelineScopeEnumPENDING =
    const GPipelineScopeEnum._('PENDING');
const GPipelineScopeEnum _$gPipelineScopeEnumFINISHED =
    const GPipelineScopeEnum._('FINISHED');
const GPipelineScopeEnum _$gPipelineScopeEnumBRANCHES =
    const GPipelineScopeEnum._('BRANCHES');
const GPipelineScopeEnum _$gPipelineScopeEnumTAGS =
    const GPipelineScopeEnum._('TAGS');

GPipelineScopeEnum _$gPipelineScopeEnumValueOf(String name) {
  switch (name) {
    case 'RUNNING':
      return _$gPipelineScopeEnumRUNNING;
    case 'PENDING':
      return _$gPipelineScopeEnumPENDING;
    case 'FINISHED':
      return _$gPipelineScopeEnumFINISHED;
    case 'BRANCHES':
      return _$gPipelineScopeEnumBRANCHES;
    case 'TAGS':
      return _$gPipelineScopeEnumTAGS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPipelineScopeEnum> _$gPipelineScopeEnumValues =
    new BuiltSet<GPipelineScopeEnum>(const <GPipelineScopeEnum>[
  _$gPipelineScopeEnumRUNNING,
  _$gPipelineScopeEnumPENDING,
  _$gPipelineScopeEnumFINISHED,
  _$gPipelineScopeEnumBRANCHES,
  _$gPipelineScopeEnumTAGS,
]);

const GPipelineStatusEnum _$gPipelineStatusEnumCREATED =
    const GPipelineStatusEnum._('CREATED');
const GPipelineStatusEnum _$gPipelineStatusEnumWAITING_FOR_RESOURCE =
    const GPipelineStatusEnum._('WAITING_FOR_RESOURCE');
const GPipelineStatusEnum _$gPipelineStatusEnumPREPARING =
    const GPipelineStatusEnum._('PREPARING');
const GPipelineStatusEnum _$gPipelineStatusEnumPENDING =
    const GPipelineStatusEnum._('PENDING');
const GPipelineStatusEnum _$gPipelineStatusEnumRUNNING =
    const GPipelineStatusEnum._('RUNNING');
const GPipelineStatusEnum _$gPipelineStatusEnumFAILED =
    const GPipelineStatusEnum._('FAILED');
const GPipelineStatusEnum _$gPipelineStatusEnumSUCCESS =
    const GPipelineStatusEnum._('SUCCESS');
const GPipelineStatusEnum _$gPipelineStatusEnumCANCELED =
    const GPipelineStatusEnum._('CANCELED');
const GPipelineStatusEnum _$gPipelineStatusEnumSKIPPED =
    const GPipelineStatusEnum._('SKIPPED');
const GPipelineStatusEnum _$gPipelineStatusEnumMANUAL =
    const GPipelineStatusEnum._('MANUAL');
const GPipelineStatusEnum _$gPipelineStatusEnumSCHEDULED =
    const GPipelineStatusEnum._('SCHEDULED');

GPipelineStatusEnum _$gPipelineStatusEnumValueOf(String name) {
  switch (name) {
    case 'CREATED':
      return _$gPipelineStatusEnumCREATED;
    case 'WAITING_FOR_RESOURCE':
      return _$gPipelineStatusEnumWAITING_FOR_RESOURCE;
    case 'PREPARING':
      return _$gPipelineStatusEnumPREPARING;
    case 'PENDING':
      return _$gPipelineStatusEnumPENDING;
    case 'RUNNING':
      return _$gPipelineStatusEnumRUNNING;
    case 'FAILED':
      return _$gPipelineStatusEnumFAILED;
    case 'SUCCESS':
      return _$gPipelineStatusEnumSUCCESS;
    case 'CANCELED':
      return _$gPipelineStatusEnumCANCELED;
    case 'SKIPPED':
      return _$gPipelineStatusEnumSKIPPED;
    case 'MANUAL':
      return _$gPipelineStatusEnumMANUAL;
    case 'SCHEDULED':
      return _$gPipelineStatusEnumSCHEDULED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPipelineStatusEnum> _$gPipelineStatusEnumValues =
    new BuiltSet<GPipelineStatusEnum>(const <GPipelineStatusEnum>[
  _$gPipelineStatusEnumCREATED,
  _$gPipelineStatusEnumWAITING_FOR_RESOURCE,
  _$gPipelineStatusEnumPREPARING,
  _$gPipelineStatusEnumPENDING,
  _$gPipelineStatusEnumRUNNING,
  _$gPipelineStatusEnumFAILED,
  _$gPipelineStatusEnumSUCCESS,
  _$gPipelineStatusEnumCANCELED,
  _$gPipelineStatusEnumSKIPPED,
  _$gPipelineStatusEnumMANUAL,
  _$gPipelineStatusEnumSCHEDULED,
]);

const GProjectMemberRelation _$gProjectMemberRelationDIRECT =
    const GProjectMemberRelation._('DIRECT');
const GProjectMemberRelation _$gProjectMemberRelationINHERITED =
    const GProjectMemberRelation._('INHERITED');
const GProjectMemberRelation _$gProjectMemberRelationDESCENDANTS =
    const GProjectMemberRelation._('DESCENDANTS');
const GProjectMemberRelation _$gProjectMemberRelationINVITED_GROUPS =
    const GProjectMemberRelation._('INVITED_GROUPS');

GProjectMemberRelation _$gProjectMemberRelationValueOf(String name) {
  switch (name) {
    case 'DIRECT':
      return _$gProjectMemberRelationDIRECT;
    case 'INHERITED':
      return _$gProjectMemberRelationINHERITED;
    case 'DESCENDANTS':
      return _$gProjectMemberRelationDESCENDANTS;
    case 'INVITED_GROUPS':
      return _$gProjectMemberRelationINVITED_GROUPS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProjectMemberRelation> _$gProjectMemberRelationValues =
    new BuiltSet<GProjectMemberRelation>(const <GProjectMemberRelation>[
  _$gProjectMemberRelationDIRECT,
  _$gProjectMemberRelationINHERITED,
  _$gProjectMemberRelationDESCENDANTS,
  _$gProjectMemberRelationINVITED_GROUPS,
]);

const GRegistryState _$gRegistryStatePENDING =
    const GRegistryState._('PENDING');
const GRegistryState _$gRegistryStateSTARTED =
    const GRegistryState._('STARTED');
const GRegistryState _$gRegistryStateSYNCED = const GRegistryState._('SYNCED');
const GRegistryState _$gRegistryStateFAILED = const GRegistryState._('FAILED');

GRegistryState _$gRegistryStateValueOf(String name) {
  switch (name) {
    case 'PENDING':
      return _$gRegistryStatePENDING;
    case 'STARTED':
      return _$gRegistryStateSTARTED;
    case 'SYNCED':
      return _$gRegistryStateSYNCED;
    case 'FAILED':
      return _$gRegistryStateFAILED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GRegistryState> _$gRegistryStateValues =
    new BuiltSet<GRegistryState>(const <GRegistryState>[
  _$gRegistryStatePENDING,
  _$gRegistryStateSTARTED,
  _$gRegistryStateSYNCED,
  _$gRegistryStateFAILED,
]);

const GReleaseAssetLinkType _$gReleaseAssetLinkTypeOTHER =
    const GReleaseAssetLinkType._('OTHER');
const GReleaseAssetLinkType _$gReleaseAssetLinkTypeRUNBOOK =
    const GReleaseAssetLinkType._('RUNBOOK');
const GReleaseAssetLinkType _$gReleaseAssetLinkTypePACKAGE =
    const GReleaseAssetLinkType._('PACKAGE');
const GReleaseAssetLinkType _$gReleaseAssetLinkTypeIMAGE =
    const GReleaseAssetLinkType._('IMAGE');

GReleaseAssetLinkType _$gReleaseAssetLinkTypeValueOf(String name) {
  switch (name) {
    case 'OTHER':
      return _$gReleaseAssetLinkTypeOTHER;
    case 'RUNBOOK':
      return _$gReleaseAssetLinkTypeRUNBOOK;
    case 'PACKAGE':
      return _$gReleaseAssetLinkTypePACKAGE;
    case 'IMAGE':
      return _$gReleaseAssetLinkTypeIMAGE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GReleaseAssetLinkType> _$gReleaseAssetLinkTypeValues =
    new BuiltSet<GReleaseAssetLinkType>(const <GReleaseAssetLinkType>[
  _$gReleaseAssetLinkTypeOTHER,
  _$gReleaseAssetLinkTypeRUNBOOK,
  _$gReleaseAssetLinkTypePACKAGE,
  _$gReleaseAssetLinkTypeIMAGE,
]);

const GReleaseSort _$gReleaseSortCREATED_DESC =
    const GReleaseSort._('CREATED_DESC');
const GReleaseSort _$gReleaseSortCREATED_ASC =
    const GReleaseSort._('CREATED_ASC');
const GReleaseSort _$gReleaseSortRELEASED_AT_DESC =
    const GReleaseSort._('RELEASED_AT_DESC');
const GReleaseSort _$gReleaseSortRELEASED_AT_ASC =
    const GReleaseSort._('RELEASED_AT_ASC');

GReleaseSort _$gReleaseSortValueOf(String name) {
  switch (name) {
    case 'CREATED_DESC':
      return _$gReleaseSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gReleaseSortCREATED_ASC;
    case 'RELEASED_AT_DESC':
      return _$gReleaseSortRELEASED_AT_DESC;
    case 'RELEASED_AT_ASC':
      return _$gReleaseSortRELEASED_AT_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GReleaseSort> _$gReleaseSortValues =
    new BuiltSet<GReleaseSort>(const <GReleaseSort>[
  _$gReleaseSortCREATED_DESC,
  _$gReleaseSortCREATED_ASC,
  _$gReleaseSortRELEASED_AT_DESC,
  _$gReleaseSortRELEASED_AT_ASC,
]);

const GReleaseTagWildcardId _$gReleaseTagWildcardIdNONE =
    const GReleaseTagWildcardId._('NONE');
const GReleaseTagWildcardId _$gReleaseTagWildcardIdANY =
    const GReleaseTagWildcardId._('ANY');

GReleaseTagWildcardId _$gReleaseTagWildcardIdValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gReleaseTagWildcardIdNONE;
    case 'ANY':
      return _$gReleaseTagWildcardIdANY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GReleaseTagWildcardId> _$gReleaseTagWildcardIdValues =
    new BuiltSet<GReleaseTagWildcardId>(const <GReleaseTagWildcardId>[
  _$gReleaseTagWildcardIdNONE,
  _$gReleaseTagWildcardIdANY,
]);

const GReplicationStateEnum _$gReplicationStateEnumPENDING =
    const GReplicationStateEnum._('PENDING');
const GReplicationStateEnum _$gReplicationStateEnumSTARTED =
    const GReplicationStateEnum._('STARTED');
const GReplicationStateEnum _$gReplicationStateEnumSYNCED =
    const GReplicationStateEnum._('SYNCED');
const GReplicationStateEnum _$gReplicationStateEnumFAILED =
    const GReplicationStateEnum._('FAILED');

GReplicationStateEnum _$gReplicationStateEnumValueOf(String name) {
  switch (name) {
    case 'PENDING':
      return _$gReplicationStateEnumPENDING;
    case 'STARTED':
      return _$gReplicationStateEnumSTARTED;
    case 'SYNCED':
      return _$gReplicationStateEnumSYNCED;
    case 'FAILED':
      return _$gReplicationStateEnumFAILED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GReplicationStateEnum> _$gReplicationStateEnumValues =
    new BuiltSet<GReplicationStateEnum>(const <GReplicationStateEnum>[
  _$gReplicationStateEnumPENDING,
  _$gReplicationStateEnumSTARTED,
  _$gReplicationStateEnumSYNCED,
  _$gReplicationStateEnumFAILED,
]);

const GRequirementState _$gRequirementStateOPENED =
    const GRequirementState._('OPENED');
const GRequirementState _$gRequirementStateARCHIVED =
    const GRequirementState._('ARCHIVED');

GRequirementState _$gRequirementStateValueOf(String name) {
  switch (name) {
    case 'OPENED':
      return _$gRequirementStateOPENED;
    case 'ARCHIVED':
      return _$gRequirementStateARCHIVED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GRequirementState> _$gRequirementStateValues =
    new BuiltSet<GRequirementState>(const <GRequirementState>[
  _$gRequirementStateOPENED,
  _$gRequirementStateARCHIVED,
]);

const GRequirementStatusFilter _$gRequirementStatusFilterMISSING =
    const GRequirementStatusFilter._('MISSING');
const GRequirementStatusFilter _$gRequirementStatusFilterPASSED =
    const GRequirementStatusFilter._('PASSED');
const GRequirementStatusFilter _$gRequirementStatusFilterFAILED =
    const GRequirementStatusFilter._('FAILED');

GRequirementStatusFilter _$gRequirementStatusFilterValueOf(String name) {
  switch (name) {
    case 'MISSING':
      return _$gRequirementStatusFilterMISSING;
    case 'PASSED':
      return _$gRequirementStatusFilterPASSED;
    case 'FAILED':
      return _$gRequirementStatusFilterFAILED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GRequirementStatusFilter> _$gRequirementStatusFilterValues =
    new BuiltSet<GRequirementStatusFilter>(const <GRequirementStatusFilter>[
  _$gRequirementStatusFilterMISSING,
  _$gRequirementStatusFilterPASSED,
  _$gRequirementStatusFilterFAILED,
]);

const GSastUiComponentSize _$gSastUiComponentSizeSMALL =
    const GSastUiComponentSize._('SMALL');
const GSastUiComponentSize _$gSastUiComponentSizeMEDIUM =
    const GSastUiComponentSize._('MEDIUM');
const GSastUiComponentSize _$gSastUiComponentSizeLARGE =
    const GSastUiComponentSize._('LARGE');

GSastUiComponentSize _$gSastUiComponentSizeValueOf(String name) {
  switch (name) {
    case 'SMALL':
      return _$gSastUiComponentSizeSMALL;
    case 'MEDIUM':
      return _$gSastUiComponentSizeMEDIUM;
    case 'LARGE':
      return _$gSastUiComponentSizeLARGE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSastUiComponentSize> _$gSastUiComponentSizeValues =
    new BuiltSet<GSastUiComponentSize>(const <GSastUiComponentSize>[
  _$gSastUiComponentSizeSMALL,
  _$gSastUiComponentSizeMEDIUM,
  _$gSastUiComponentSizeLARGE,
]);

const GScanStatus _$gScanStatusCREATED = const GScanStatus._('CREATED');
const GScanStatus _$gScanStatusSUCCEEDED = const GScanStatus._('SUCCEEDED');
const GScanStatus _$gScanStatusJOB_FAILED = const GScanStatus._('JOB_FAILED');
const GScanStatus _$gScanStatusREPORT_ERROR =
    const GScanStatus._('REPORT_ERROR');
const GScanStatus _$gScanStatusPREPARING = const GScanStatus._('PREPARING');
const GScanStatus _$gScanStatusPREPARATION_FAILED =
    const GScanStatus._('PREPARATION_FAILED');
const GScanStatus _$gScanStatusPURGED = const GScanStatus._('PURGED');

GScanStatus _$gScanStatusValueOf(String name) {
  switch (name) {
    case 'CREATED':
      return _$gScanStatusCREATED;
    case 'SUCCEEDED':
      return _$gScanStatusSUCCEEDED;
    case 'JOB_FAILED':
      return _$gScanStatusJOB_FAILED;
    case 'REPORT_ERROR':
      return _$gScanStatusREPORT_ERROR;
    case 'PREPARING':
      return _$gScanStatusPREPARING;
    case 'PREPARATION_FAILED':
      return _$gScanStatusPREPARATION_FAILED;
    case 'PURGED':
      return _$gScanStatusPURGED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GScanStatus> _$gScanStatusValues =
    new BuiltSet<GScanStatus>(const <GScanStatus>[
  _$gScanStatusCREATED,
  _$gScanStatusSUCCEEDED,
  _$gScanStatusJOB_FAILED,
  _$gScanStatusREPORT_ERROR,
  _$gScanStatusPREPARING,
  _$gScanStatusPREPARATION_FAILED,
  _$gScanStatusPURGED,
]);

const GSecurityPolicyRelationType _$gSecurityPolicyRelationTypeDIRECT =
    const GSecurityPolicyRelationType._('DIRECT');
const GSecurityPolicyRelationType _$gSecurityPolicyRelationTypeINHERITED =
    const GSecurityPolicyRelationType._('INHERITED');
const GSecurityPolicyRelationType _$gSecurityPolicyRelationTypeINHERITED_ONLY =
    const GSecurityPolicyRelationType._('INHERITED_ONLY');

GSecurityPolicyRelationType _$gSecurityPolicyRelationTypeValueOf(String name) {
  switch (name) {
    case 'DIRECT':
      return _$gSecurityPolicyRelationTypeDIRECT;
    case 'INHERITED':
      return _$gSecurityPolicyRelationTypeINHERITED;
    case 'INHERITED_ONLY':
      return _$gSecurityPolicyRelationTypeINHERITED_ONLY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSecurityPolicyRelationType>
    _$gSecurityPolicyRelationTypeValues = new BuiltSet<
        GSecurityPolicyRelationType>(const <GSecurityPolicyRelationType>[
  _$gSecurityPolicyRelationTypeDIRECT,
  _$gSecurityPolicyRelationTypeINHERITED,
  _$gSecurityPolicyRelationTypeINHERITED_ONLY,
]);

const GSecurityReportTypeEnum _$gSecurityReportTypeEnumSAST =
    const GSecurityReportTypeEnum._('SAST');
const GSecurityReportTypeEnum _$gSecurityReportTypeEnumSAST_IAC =
    const GSecurityReportTypeEnum._('SAST_IAC');
const GSecurityReportTypeEnum _$gSecurityReportTypeEnumDAST =
    const GSecurityReportTypeEnum._('DAST');
const GSecurityReportTypeEnum _$gSecurityReportTypeEnumDEPENDENCY_SCANNING =
    const GSecurityReportTypeEnum._('DEPENDENCY_SCANNING');
const GSecurityReportTypeEnum _$gSecurityReportTypeEnumCONTAINER_SCANNING =
    const GSecurityReportTypeEnum._('CONTAINER_SCANNING');
const GSecurityReportTypeEnum _$gSecurityReportTypeEnumSECRET_DETECTION =
    const GSecurityReportTypeEnum._('SECRET_DETECTION');
const GSecurityReportTypeEnum _$gSecurityReportTypeEnumCOVERAGE_FUZZING =
    const GSecurityReportTypeEnum._('COVERAGE_FUZZING');
const GSecurityReportTypeEnum _$gSecurityReportTypeEnumAPI_FUZZING =
    const GSecurityReportTypeEnum._('API_FUZZING');
const GSecurityReportTypeEnum _$gSecurityReportTypeEnumCLUSTER_IMAGE_SCANNING =
    const GSecurityReportTypeEnum._('CLUSTER_IMAGE_SCANNING');

GSecurityReportTypeEnum _$gSecurityReportTypeEnumValueOf(String name) {
  switch (name) {
    case 'SAST':
      return _$gSecurityReportTypeEnumSAST;
    case 'SAST_IAC':
      return _$gSecurityReportTypeEnumSAST_IAC;
    case 'DAST':
      return _$gSecurityReportTypeEnumDAST;
    case 'DEPENDENCY_SCANNING':
      return _$gSecurityReportTypeEnumDEPENDENCY_SCANNING;
    case 'CONTAINER_SCANNING':
      return _$gSecurityReportTypeEnumCONTAINER_SCANNING;
    case 'SECRET_DETECTION':
      return _$gSecurityReportTypeEnumSECRET_DETECTION;
    case 'COVERAGE_FUZZING':
      return _$gSecurityReportTypeEnumCOVERAGE_FUZZING;
    case 'API_FUZZING':
      return _$gSecurityReportTypeEnumAPI_FUZZING;
    case 'CLUSTER_IMAGE_SCANNING':
      return _$gSecurityReportTypeEnumCLUSTER_IMAGE_SCANNING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSecurityReportTypeEnum> _$gSecurityReportTypeEnumValues =
    new BuiltSet<GSecurityReportTypeEnum>(const <GSecurityReportTypeEnum>[
  _$gSecurityReportTypeEnumSAST,
  _$gSecurityReportTypeEnumSAST_IAC,
  _$gSecurityReportTypeEnumDAST,
  _$gSecurityReportTypeEnumDEPENDENCY_SCANNING,
  _$gSecurityReportTypeEnumCONTAINER_SCANNING,
  _$gSecurityReportTypeEnumSECRET_DETECTION,
  _$gSecurityReportTypeEnumCOVERAGE_FUZZING,
  _$gSecurityReportTypeEnumAPI_FUZZING,
  _$gSecurityReportTypeEnumCLUSTER_IMAGE_SCANNING,
]);

const GSecurityScannerType _$gSecurityScannerTypeSAST =
    const GSecurityScannerType._('SAST');
const GSecurityScannerType _$gSecurityScannerTypeSAST_IAC =
    const GSecurityScannerType._('SAST_IAC');
const GSecurityScannerType _$gSecurityScannerTypeDAST =
    const GSecurityScannerType._('DAST');
const GSecurityScannerType _$gSecurityScannerTypeDEPENDENCY_SCANNING =
    const GSecurityScannerType._('DEPENDENCY_SCANNING');
const GSecurityScannerType _$gSecurityScannerTypeCONTAINER_SCANNING =
    const GSecurityScannerType._('CONTAINER_SCANNING');
const GSecurityScannerType _$gSecurityScannerTypeSECRET_DETECTION =
    const GSecurityScannerType._('SECRET_DETECTION');
const GSecurityScannerType _$gSecurityScannerTypeCOVERAGE_FUZZING =
    const GSecurityScannerType._('COVERAGE_FUZZING');
const GSecurityScannerType _$gSecurityScannerTypeAPI_FUZZING =
    const GSecurityScannerType._('API_FUZZING');
const GSecurityScannerType _$gSecurityScannerTypeCLUSTER_IMAGE_SCANNING =
    const GSecurityScannerType._('CLUSTER_IMAGE_SCANNING');

GSecurityScannerType _$gSecurityScannerTypeValueOf(String name) {
  switch (name) {
    case 'SAST':
      return _$gSecurityScannerTypeSAST;
    case 'SAST_IAC':
      return _$gSecurityScannerTypeSAST_IAC;
    case 'DAST':
      return _$gSecurityScannerTypeDAST;
    case 'DEPENDENCY_SCANNING':
      return _$gSecurityScannerTypeDEPENDENCY_SCANNING;
    case 'CONTAINER_SCANNING':
      return _$gSecurityScannerTypeCONTAINER_SCANNING;
    case 'SECRET_DETECTION':
      return _$gSecurityScannerTypeSECRET_DETECTION;
    case 'COVERAGE_FUZZING':
      return _$gSecurityScannerTypeCOVERAGE_FUZZING;
    case 'API_FUZZING':
      return _$gSecurityScannerTypeAPI_FUZZING;
    case 'CLUSTER_IMAGE_SCANNING':
      return _$gSecurityScannerTypeCLUSTER_IMAGE_SCANNING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSecurityScannerType> _$gSecurityScannerTypeValues =
    new BuiltSet<GSecurityScannerType>(const <GSecurityScannerType>[
  _$gSecurityScannerTypeSAST,
  _$gSecurityScannerTypeSAST_IAC,
  _$gSecurityScannerTypeDAST,
  _$gSecurityScannerTypeDEPENDENCY_SCANNING,
  _$gSecurityScannerTypeCONTAINER_SCANNING,
  _$gSecurityScannerTypeSECRET_DETECTION,
  _$gSecurityScannerTypeCOVERAGE_FUZZING,
  _$gSecurityScannerTypeAPI_FUZZING,
  _$gSecurityScannerTypeCLUSTER_IMAGE_SCANNING,
]);

const GSentryErrorStatus _$gSentryErrorStatusRESOLVED =
    const GSentryErrorStatus._('RESOLVED');
const GSentryErrorStatus _$gSentryErrorStatusRESOLVED_IN_NEXT_RELEASE =
    const GSentryErrorStatus._('RESOLVED_IN_NEXT_RELEASE');
const GSentryErrorStatus _$gSentryErrorStatusUNRESOLVED =
    const GSentryErrorStatus._('UNRESOLVED');
const GSentryErrorStatus _$gSentryErrorStatusIGNORED =
    const GSentryErrorStatus._('IGNORED');

GSentryErrorStatus _$gSentryErrorStatusValueOf(String name) {
  switch (name) {
    case 'RESOLVED':
      return _$gSentryErrorStatusRESOLVED;
    case 'RESOLVED_IN_NEXT_RELEASE':
      return _$gSentryErrorStatusRESOLVED_IN_NEXT_RELEASE;
    case 'UNRESOLVED':
      return _$gSentryErrorStatusUNRESOLVED;
    case 'IGNORED':
      return _$gSentryErrorStatusIGNORED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSentryErrorStatus> _$gSentryErrorStatusValues =
    new BuiltSet<GSentryErrorStatus>(const <GSentryErrorStatus>[
  _$gSentryErrorStatusRESOLVED,
  _$gSentryErrorStatusRESOLVED_IN_NEXT_RELEASE,
  _$gSentryErrorStatusUNRESOLVED,
  _$gSentryErrorStatusIGNORED,
]);

const GServiceType _$gServiceTypeASANA_SERVICE =
    const GServiceType._('ASANA_SERVICE');
const GServiceType _$gServiceTypeASSEMBLA_SERVICE =
    const GServiceType._('ASSEMBLA_SERVICE');
const GServiceType _$gServiceTypeBAMBOO_SERVICE =
    const GServiceType._('BAMBOO_SERVICE');
const GServiceType _$gServiceTypeBUGZILLA_SERVICE =
    const GServiceType._('BUGZILLA_SERVICE');
const GServiceType _$gServiceTypeBUILDKITE_SERVICE =
    const GServiceType._('BUILDKITE_SERVICE');
const GServiceType _$gServiceTypeCAMPFIRE_SERVICE =
    const GServiceType._('CAMPFIRE_SERVICE');
const GServiceType _$gServiceTypeCONFLUENCE_SERVICE =
    const GServiceType._('CONFLUENCE_SERVICE');
const GServiceType _$gServiceTypeCUSTOM_ISSUE_TRACKER_SERVICE =
    const GServiceType._('CUSTOM_ISSUE_TRACKER_SERVICE');
const GServiceType _$gServiceTypeDATADOG_SERVICE =
    const GServiceType._('DATADOG_SERVICE');
const GServiceType _$gServiceTypeDISCORD_SERVICE =
    const GServiceType._('DISCORD_SERVICE');
const GServiceType _$gServiceTypeDRONE_CI_SERVICE =
    const GServiceType._('DRONE_CI_SERVICE');
const GServiceType _$gServiceTypeEMAILS_ON_PUSH_SERVICE =
    const GServiceType._('EMAILS_ON_PUSH_SERVICE');
const GServiceType _$gServiceTypeEWM_SERVICE =
    const GServiceType._('EWM_SERVICE');
const GServiceType _$gServiceTypeEXTERNAL_WIKI_SERVICE =
    const GServiceType._('EXTERNAL_WIKI_SERVICE');
const GServiceType _$gServiceTypeFLOWDOCK_SERVICE =
    const GServiceType._('FLOWDOCK_SERVICE');
const GServiceType _$gServiceTypeGITHUB_SERVICE =
    const GServiceType._('GITHUB_SERVICE');
const GServiceType _$gServiceTypeGITLAB_SLACK_APPLICATION_SERVICE =
    const GServiceType._('GITLAB_SLACK_APPLICATION_SERVICE');
const GServiceType _$gServiceTypeHANGOUTS_CHAT_SERVICE =
    const GServiceType._('HANGOUTS_CHAT_SERVICE');
const GServiceType _$gServiceTypeHARBOR_SERVICE =
    const GServiceType._('HARBOR_SERVICE');
const GServiceType _$gServiceTypeIRKER_SERVICE =
    const GServiceType._('IRKER_SERVICE');
const GServiceType _$gServiceTypeJENKINS_SERVICE =
    const GServiceType._('JENKINS_SERVICE');
const GServiceType _$gServiceTypeJIRA_SERVICE =
    const GServiceType._('JIRA_SERVICE');
const GServiceType _$gServiceTypeMATTERMOST_SERVICE =
    const GServiceType._('MATTERMOST_SERVICE');
const GServiceType _$gServiceTypeMATTERMOST_SLASH_COMMANDS_SERVICE =
    const GServiceType._('MATTERMOST_SLASH_COMMANDS_SERVICE');
const GServiceType _$gServiceTypeMICROSOFT_TEAMS_SERVICE =
    const GServiceType._('MICROSOFT_TEAMS_SERVICE');
const GServiceType _$gServiceTypePACKAGIST_SERVICE =
    const GServiceType._('PACKAGIST_SERVICE');
const GServiceType _$gServiceTypePIPELINES_EMAIL_SERVICE =
    const GServiceType._('PIPELINES_EMAIL_SERVICE');
const GServiceType _$gServiceTypePIVOTALTRACKER_SERVICE =
    const GServiceType._('PIVOTALTRACKER_SERVICE');
const GServiceType _$gServiceTypePROMETHEUS_SERVICE =
    const GServiceType._('PROMETHEUS_SERVICE');
const GServiceType _$gServiceTypePUMBLE_SERVICE =
    const GServiceType._('PUMBLE_SERVICE');
const GServiceType _$gServiceTypePUSHOVER_SERVICE =
    const GServiceType._('PUSHOVER_SERVICE');
const GServiceType _$gServiceTypeREDMINE_SERVICE =
    const GServiceType._('REDMINE_SERVICE');
const GServiceType _$gServiceTypeSHIMO_SERVICE =
    const GServiceType._('SHIMO_SERVICE');
const GServiceType _$gServiceTypeSLACK_SERVICE =
    const GServiceType._('SLACK_SERVICE');
const GServiceType _$gServiceTypeSLACK_SLASH_COMMANDS_SERVICE =
    const GServiceType._('SLACK_SLASH_COMMANDS_SERVICE');
const GServiceType _$gServiceTypeTEAMCITY_SERVICE =
    const GServiceType._('TEAMCITY_SERVICE');
const GServiceType _$gServiceTypeUNIFY_CIRCUIT_SERVICE =
    const GServiceType._('UNIFY_CIRCUIT_SERVICE');
const GServiceType _$gServiceTypeWEBEX_TEAMS_SERVICE =
    const GServiceType._('WEBEX_TEAMS_SERVICE');
const GServiceType _$gServiceTypeYOUTRACK_SERVICE =
    const GServiceType._('YOUTRACK_SERVICE');
const GServiceType _$gServiceTypeZENTAO_SERVICE =
    const GServiceType._('ZENTAO_SERVICE');

GServiceType _$gServiceTypeValueOf(String name) {
  switch (name) {
    case 'ASANA_SERVICE':
      return _$gServiceTypeASANA_SERVICE;
    case 'ASSEMBLA_SERVICE':
      return _$gServiceTypeASSEMBLA_SERVICE;
    case 'BAMBOO_SERVICE':
      return _$gServiceTypeBAMBOO_SERVICE;
    case 'BUGZILLA_SERVICE':
      return _$gServiceTypeBUGZILLA_SERVICE;
    case 'BUILDKITE_SERVICE':
      return _$gServiceTypeBUILDKITE_SERVICE;
    case 'CAMPFIRE_SERVICE':
      return _$gServiceTypeCAMPFIRE_SERVICE;
    case 'CONFLUENCE_SERVICE':
      return _$gServiceTypeCONFLUENCE_SERVICE;
    case 'CUSTOM_ISSUE_TRACKER_SERVICE':
      return _$gServiceTypeCUSTOM_ISSUE_TRACKER_SERVICE;
    case 'DATADOG_SERVICE':
      return _$gServiceTypeDATADOG_SERVICE;
    case 'DISCORD_SERVICE':
      return _$gServiceTypeDISCORD_SERVICE;
    case 'DRONE_CI_SERVICE':
      return _$gServiceTypeDRONE_CI_SERVICE;
    case 'EMAILS_ON_PUSH_SERVICE':
      return _$gServiceTypeEMAILS_ON_PUSH_SERVICE;
    case 'EWM_SERVICE':
      return _$gServiceTypeEWM_SERVICE;
    case 'EXTERNAL_WIKI_SERVICE':
      return _$gServiceTypeEXTERNAL_WIKI_SERVICE;
    case 'FLOWDOCK_SERVICE':
      return _$gServiceTypeFLOWDOCK_SERVICE;
    case 'GITHUB_SERVICE':
      return _$gServiceTypeGITHUB_SERVICE;
    case 'GITLAB_SLACK_APPLICATION_SERVICE':
      return _$gServiceTypeGITLAB_SLACK_APPLICATION_SERVICE;
    case 'HANGOUTS_CHAT_SERVICE':
      return _$gServiceTypeHANGOUTS_CHAT_SERVICE;
    case 'HARBOR_SERVICE':
      return _$gServiceTypeHARBOR_SERVICE;
    case 'IRKER_SERVICE':
      return _$gServiceTypeIRKER_SERVICE;
    case 'JENKINS_SERVICE':
      return _$gServiceTypeJENKINS_SERVICE;
    case 'JIRA_SERVICE':
      return _$gServiceTypeJIRA_SERVICE;
    case 'MATTERMOST_SERVICE':
      return _$gServiceTypeMATTERMOST_SERVICE;
    case 'MATTERMOST_SLASH_COMMANDS_SERVICE':
      return _$gServiceTypeMATTERMOST_SLASH_COMMANDS_SERVICE;
    case 'MICROSOFT_TEAMS_SERVICE':
      return _$gServiceTypeMICROSOFT_TEAMS_SERVICE;
    case 'PACKAGIST_SERVICE':
      return _$gServiceTypePACKAGIST_SERVICE;
    case 'PIPELINES_EMAIL_SERVICE':
      return _$gServiceTypePIPELINES_EMAIL_SERVICE;
    case 'PIVOTALTRACKER_SERVICE':
      return _$gServiceTypePIVOTALTRACKER_SERVICE;
    case 'PROMETHEUS_SERVICE':
      return _$gServiceTypePROMETHEUS_SERVICE;
    case 'PUMBLE_SERVICE':
      return _$gServiceTypePUMBLE_SERVICE;
    case 'PUSHOVER_SERVICE':
      return _$gServiceTypePUSHOVER_SERVICE;
    case 'REDMINE_SERVICE':
      return _$gServiceTypeREDMINE_SERVICE;
    case 'SHIMO_SERVICE':
      return _$gServiceTypeSHIMO_SERVICE;
    case 'SLACK_SERVICE':
      return _$gServiceTypeSLACK_SERVICE;
    case 'SLACK_SLASH_COMMANDS_SERVICE':
      return _$gServiceTypeSLACK_SLASH_COMMANDS_SERVICE;
    case 'TEAMCITY_SERVICE':
      return _$gServiceTypeTEAMCITY_SERVICE;
    case 'UNIFY_CIRCUIT_SERVICE':
      return _$gServiceTypeUNIFY_CIRCUIT_SERVICE;
    case 'WEBEX_TEAMS_SERVICE':
      return _$gServiceTypeWEBEX_TEAMS_SERVICE;
    case 'YOUTRACK_SERVICE':
      return _$gServiceTypeYOUTRACK_SERVICE;
    case 'ZENTAO_SERVICE':
      return _$gServiceTypeZENTAO_SERVICE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GServiceType> _$gServiceTypeValues =
    new BuiltSet<GServiceType>(const <GServiceType>[
  _$gServiceTypeASANA_SERVICE,
  _$gServiceTypeASSEMBLA_SERVICE,
  _$gServiceTypeBAMBOO_SERVICE,
  _$gServiceTypeBUGZILLA_SERVICE,
  _$gServiceTypeBUILDKITE_SERVICE,
  _$gServiceTypeCAMPFIRE_SERVICE,
  _$gServiceTypeCONFLUENCE_SERVICE,
  _$gServiceTypeCUSTOM_ISSUE_TRACKER_SERVICE,
  _$gServiceTypeDATADOG_SERVICE,
  _$gServiceTypeDISCORD_SERVICE,
  _$gServiceTypeDRONE_CI_SERVICE,
  _$gServiceTypeEMAILS_ON_PUSH_SERVICE,
  _$gServiceTypeEWM_SERVICE,
  _$gServiceTypeEXTERNAL_WIKI_SERVICE,
  _$gServiceTypeFLOWDOCK_SERVICE,
  _$gServiceTypeGITHUB_SERVICE,
  _$gServiceTypeGITLAB_SLACK_APPLICATION_SERVICE,
  _$gServiceTypeHANGOUTS_CHAT_SERVICE,
  _$gServiceTypeHARBOR_SERVICE,
  _$gServiceTypeIRKER_SERVICE,
  _$gServiceTypeJENKINS_SERVICE,
  _$gServiceTypeJIRA_SERVICE,
  _$gServiceTypeMATTERMOST_SERVICE,
  _$gServiceTypeMATTERMOST_SLASH_COMMANDS_SERVICE,
  _$gServiceTypeMICROSOFT_TEAMS_SERVICE,
  _$gServiceTypePACKAGIST_SERVICE,
  _$gServiceTypePIPELINES_EMAIL_SERVICE,
  _$gServiceTypePIVOTALTRACKER_SERVICE,
  _$gServiceTypePROMETHEUS_SERVICE,
  _$gServiceTypePUMBLE_SERVICE,
  _$gServiceTypePUSHOVER_SERVICE,
  _$gServiceTypeREDMINE_SERVICE,
  _$gServiceTypeSHIMO_SERVICE,
  _$gServiceTypeSLACK_SERVICE,
  _$gServiceTypeSLACK_SLASH_COMMANDS_SERVICE,
  _$gServiceTypeTEAMCITY_SERVICE,
  _$gServiceTypeUNIFY_CIRCUIT_SERVICE,
  _$gServiceTypeWEBEX_TEAMS_SERVICE,
  _$gServiceTypeYOUTRACK_SERVICE,
  _$gServiceTypeZENTAO_SERVICE,
]);

const GShaFormat _$gShaFormatSHORT = const GShaFormat._('SHORT');
const GShaFormat _$gShaFormatLONG = const GShaFormat._('LONG');

GShaFormat _$gShaFormatValueOf(String name) {
  switch (name) {
    case 'SHORT':
      return _$gShaFormatSHORT;
    case 'LONG':
      return _$gShaFormatLONG;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GShaFormat> _$gShaFormatValues =
    new BuiltSet<GShaFormat>(const <GShaFormat>[
  _$gShaFormatSHORT,
  _$gShaFormatLONG,
]);

const GSharedRunnersSetting _$gSharedRunnersSettingDISABLED_AND_UNOVERRIDABLE =
    const GSharedRunnersSetting._('DISABLED_AND_UNOVERRIDABLE');
const GSharedRunnersSetting _$gSharedRunnersSettingDISABLED_WITH_OVERRIDE =
    const GSharedRunnersSetting._('DISABLED_WITH_OVERRIDE');
const GSharedRunnersSetting _$gSharedRunnersSettingENABLED =
    const GSharedRunnersSetting._('ENABLED');

GSharedRunnersSetting _$gSharedRunnersSettingValueOf(String name) {
  switch (name) {
    case 'DISABLED_AND_UNOVERRIDABLE':
      return _$gSharedRunnersSettingDISABLED_AND_UNOVERRIDABLE;
    case 'DISABLED_WITH_OVERRIDE':
      return _$gSharedRunnersSettingDISABLED_WITH_OVERRIDE;
    case 'ENABLED':
      return _$gSharedRunnersSettingENABLED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSharedRunnersSetting> _$gSharedRunnersSettingValues =
    new BuiltSet<GSharedRunnersSetting>(const <GSharedRunnersSetting>[
  _$gSharedRunnersSettingDISABLED_AND_UNOVERRIDABLE,
  _$gSharedRunnersSettingDISABLED_WITH_OVERRIDE,
  _$gSharedRunnersSettingENABLED,
]);

const GSnippetBlobActionEnum _$gSnippetBlobActionEnumcreate =
    const GSnippetBlobActionEnum._('create');
const GSnippetBlobActionEnum _$gSnippetBlobActionEnumGupdate =
    const GSnippetBlobActionEnum._('Gupdate');
const GSnippetBlobActionEnum _$gSnippetBlobActionEnumdelete =
    const GSnippetBlobActionEnum._('delete');
const GSnippetBlobActionEnum _$gSnippetBlobActionEnummove =
    const GSnippetBlobActionEnum._('move');

GSnippetBlobActionEnum _$gSnippetBlobActionEnumValueOf(String name) {
  switch (name) {
    case 'create':
      return _$gSnippetBlobActionEnumcreate;
    case 'Gupdate':
      return _$gSnippetBlobActionEnumGupdate;
    case 'delete':
      return _$gSnippetBlobActionEnumdelete;
    case 'move':
      return _$gSnippetBlobActionEnummove;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSnippetBlobActionEnum> _$gSnippetBlobActionEnumValues =
    new BuiltSet<GSnippetBlobActionEnum>(const <GSnippetBlobActionEnum>[
  _$gSnippetBlobActionEnumcreate,
  _$gSnippetBlobActionEnumGupdate,
  _$gSnippetBlobActionEnumdelete,
  _$gSnippetBlobActionEnummove,
]);

const GSort _$gSortupdated_desc = const GSort._('updated_desc');
const GSort _$gSortupdated_asc = const GSort._('updated_asc');
const GSort _$gSortcreated_desc = const GSort._('created_desc');
const GSort _$gSortcreated_asc = const GSort._('created_asc');
const GSort _$gSortUPDATED_DESC = const GSort._('UPDATED_DESC');
const GSort _$gSortUPDATED_ASC = const GSort._('UPDATED_ASC');
const GSort _$gSortCREATED_DESC = const GSort._('CREATED_DESC');
const GSort _$gSortCREATED_ASC = const GSort._('CREATED_ASC');

GSort _$gSortValueOf(String name) {
  switch (name) {
    case 'updated_desc':
      return _$gSortupdated_desc;
    case 'updated_asc':
      return _$gSortupdated_asc;
    case 'created_desc':
      return _$gSortcreated_desc;
    case 'created_asc':
      return _$gSortcreated_asc;
    case 'UPDATED_DESC':
      return _$gSortUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gSortUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gSortCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSort> _$gSortValues = new BuiltSet<GSort>(const <GSort>[
  _$gSortupdated_desc,
  _$gSortupdated_asc,
  _$gSortcreated_desc,
  _$gSortcreated_asc,
  _$gSortUPDATED_DESC,
  _$gSortUPDATED_ASC,
  _$gSortCREATED_DESC,
  _$gSortCREATED_ASC,
]);

const GSortDirectionEnum _$gSortDirectionEnumASC =
    const GSortDirectionEnum._('ASC');
const GSortDirectionEnum _$gSortDirectionEnumDESC =
    const GSortDirectionEnum._('DESC');

GSortDirectionEnum _$gSortDirectionEnumValueOf(String name) {
  switch (name) {
    case 'ASC':
      return _$gSortDirectionEnumASC;
    case 'DESC':
      return _$gSortDirectionEnumDESC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSortDirectionEnum> _$gSortDirectionEnumValues =
    new BuiltSet<GSortDirectionEnum>(const <GSortDirectionEnum>[
  _$gSortDirectionEnumASC,
  _$gSortDirectionEnumDESC,
]);

const GTestCaseStatus _$gTestCaseStatuserror = const GTestCaseStatus._('error');
const GTestCaseStatus _$gTestCaseStatusfailed =
    const GTestCaseStatus._('failed');
const GTestCaseStatus _$gTestCaseStatussuccess =
    const GTestCaseStatus._('success');
const GTestCaseStatus _$gTestCaseStatusskipped =
    const GTestCaseStatus._('skipped');

GTestCaseStatus _$gTestCaseStatusValueOf(String name) {
  switch (name) {
    case 'error':
      return _$gTestCaseStatuserror;
    case 'failed':
      return _$gTestCaseStatusfailed;
    case 'success':
      return _$gTestCaseStatussuccess;
    case 'skipped':
      return _$gTestCaseStatusskipped;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTestCaseStatus> _$gTestCaseStatusValues =
    new BuiltSet<GTestCaseStatus>(const <GTestCaseStatus>[
  _$gTestCaseStatuserror,
  _$gTestCaseStatusfailed,
  _$gTestCaseStatussuccess,
  _$gTestCaseStatusskipped,
]);

const GTestReportState _$gTestReportStatePASSED =
    const GTestReportState._('PASSED');
const GTestReportState _$gTestReportStateFAILED =
    const GTestReportState._('FAILED');

GTestReportState _$gTestReportStateValueOf(String name) {
  switch (name) {
    case 'PASSED':
      return _$gTestReportStatePASSED;
    case 'FAILED':
      return _$gTestReportStateFAILED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTestReportState> _$gTestReportStateValues =
    new BuiltSet<GTestReportState>(const <GTestReportState>[
  _$gTestReportStatePASSED,
  _$gTestReportStateFAILED,
]);

const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonUNSUPPORTED =
    const GTimeboxReportErrorReason._('UNSUPPORTED');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonMISSING_DATES =
    const GTimeboxReportErrorReason._('MISSING_DATES');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonTOO_MANY_EVENTS =
    const GTimeboxReportErrorReason._('TOO_MANY_EVENTS');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonPRIORITY_ASC =
    const GTimeboxReportErrorReason._('PRIORITY_ASC');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonPRIORITY_DESC =
    const GTimeboxReportErrorReason._('PRIORITY_DESC');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonLABEL_PRIORITY_ASC =
    const GTimeboxReportErrorReason._('LABEL_PRIORITY_ASC');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonLABEL_PRIORITY_DESC =
    const GTimeboxReportErrorReason._('LABEL_PRIORITY_DESC');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonMILESTONE_DUE_ASC =
    const GTimeboxReportErrorReason._('MILESTONE_DUE_ASC');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonMILESTONE_DUE_DESC =
    const GTimeboxReportErrorReason._('MILESTONE_DUE_DESC');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonupdated_desc =
    const GTimeboxReportErrorReason._('updated_desc');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonupdated_asc =
    const GTimeboxReportErrorReason._('updated_asc');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasoncreated_desc =
    const GTimeboxReportErrorReason._('created_desc');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasoncreated_asc =
    const GTimeboxReportErrorReason._('created_asc');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonUPDATED_DESC =
    const GTimeboxReportErrorReason._('UPDATED_DESC');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonUPDATED_ASC =
    const GTimeboxReportErrorReason._('UPDATED_ASC');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonCREATED_DESC =
    const GTimeboxReportErrorReason._('CREATED_DESC');
const GTimeboxReportErrorReason _$gTimeboxReportErrorReasonCREATED_ASC =
    const GTimeboxReportErrorReason._('CREATED_ASC');

GTimeboxReportErrorReason _$gTimeboxReportErrorReasonValueOf(String name) {
  switch (name) {
    case 'UNSUPPORTED':
      return _$gTimeboxReportErrorReasonUNSUPPORTED;
    case 'MISSING_DATES':
      return _$gTimeboxReportErrorReasonMISSING_DATES;
    case 'TOO_MANY_EVENTS':
      return _$gTimeboxReportErrorReasonTOO_MANY_EVENTS;
    case 'PRIORITY_ASC':
      return _$gTimeboxReportErrorReasonPRIORITY_ASC;
    case 'PRIORITY_DESC':
      return _$gTimeboxReportErrorReasonPRIORITY_DESC;
    case 'LABEL_PRIORITY_ASC':
      return _$gTimeboxReportErrorReasonLABEL_PRIORITY_ASC;
    case 'LABEL_PRIORITY_DESC':
      return _$gTimeboxReportErrorReasonLABEL_PRIORITY_DESC;
    case 'MILESTONE_DUE_ASC':
      return _$gTimeboxReportErrorReasonMILESTONE_DUE_ASC;
    case 'MILESTONE_DUE_DESC':
      return _$gTimeboxReportErrorReasonMILESTONE_DUE_DESC;
    case 'updated_desc':
      return _$gTimeboxReportErrorReasonupdated_desc;
    case 'updated_asc':
      return _$gTimeboxReportErrorReasonupdated_asc;
    case 'created_desc':
      return _$gTimeboxReportErrorReasoncreated_desc;
    case 'created_asc':
      return _$gTimeboxReportErrorReasoncreated_asc;
    case 'UPDATED_DESC':
      return _$gTimeboxReportErrorReasonUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gTimeboxReportErrorReasonUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gTimeboxReportErrorReasonCREATED_DESC;
    case 'CREATED_ASC':
      return _$gTimeboxReportErrorReasonCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTimeboxReportErrorReason> _$gTimeboxReportErrorReasonValues =
    new BuiltSet<GTimeboxReportErrorReason>(const <GTimeboxReportErrorReason>[
  _$gTimeboxReportErrorReasonUNSUPPORTED,
  _$gTimeboxReportErrorReasonMISSING_DATES,
  _$gTimeboxReportErrorReasonTOO_MANY_EVENTS,
  _$gTimeboxReportErrorReasonPRIORITY_ASC,
  _$gTimeboxReportErrorReasonPRIORITY_DESC,
  _$gTimeboxReportErrorReasonLABEL_PRIORITY_ASC,
  _$gTimeboxReportErrorReasonLABEL_PRIORITY_DESC,
  _$gTimeboxReportErrorReasonMILESTONE_DUE_ASC,
  _$gTimeboxReportErrorReasonMILESTONE_DUE_DESC,
  _$gTimeboxReportErrorReasonupdated_desc,
  _$gTimeboxReportErrorReasonupdated_asc,
  _$gTimeboxReportErrorReasoncreated_desc,
  _$gTimeboxReportErrorReasoncreated_asc,
  _$gTimeboxReportErrorReasonUPDATED_DESC,
  _$gTimeboxReportErrorReasonUPDATED_ASC,
  _$gTimeboxReportErrorReasonCREATED_DESC,
  _$gTimeboxReportErrorReasonCREATED_ASC,
]);

const GTodoActionEnum _$gTodoActionEnumassigned =
    const GTodoActionEnum._('assigned');
const GTodoActionEnum _$gTodoActionEnummentioned =
    const GTodoActionEnum._('mentioned');
const GTodoActionEnum _$gTodoActionEnumbuild_failed =
    const GTodoActionEnum._('build_failed');
const GTodoActionEnum _$gTodoActionEnummarked =
    const GTodoActionEnum._('marked');
const GTodoActionEnum _$gTodoActionEnumapproval_required =
    const GTodoActionEnum._('approval_required');
const GTodoActionEnum _$gTodoActionEnumunmergeable =
    const GTodoActionEnum._('unmergeable');
const GTodoActionEnum _$gTodoActionEnumdirectly_addressed =
    const GTodoActionEnum._('directly_addressed');
const GTodoActionEnum _$gTodoActionEnummerge_train_removed =
    const GTodoActionEnum._('merge_train_removed');
const GTodoActionEnum _$gTodoActionEnumreview_requested =
    const GTodoActionEnum._('review_requested');

GTodoActionEnum _$gTodoActionEnumValueOf(String name) {
  switch (name) {
    case 'assigned':
      return _$gTodoActionEnumassigned;
    case 'mentioned':
      return _$gTodoActionEnummentioned;
    case 'build_failed':
      return _$gTodoActionEnumbuild_failed;
    case 'marked':
      return _$gTodoActionEnummarked;
    case 'approval_required':
      return _$gTodoActionEnumapproval_required;
    case 'unmergeable':
      return _$gTodoActionEnumunmergeable;
    case 'directly_addressed':
      return _$gTodoActionEnumdirectly_addressed;
    case 'merge_train_removed':
      return _$gTodoActionEnummerge_train_removed;
    case 'review_requested':
      return _$gTodoActionEnumreview_requested;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTodoActionEnum> _$gTodoActionEnumValues =
    new BuiltSet<GTodoActionEnum>(const <GTodoActionEnum>[
  _$gTodoActionEnumassigned,
  _$gTodoActionEnummentioned,
  _$gTodoActionEnumbuild_failed,
  _$gTodoActionEnummarked,
  _$gTodoActionEnumapproval_required,
  _$gTodoActionEnumunmergeable,
  _$gTodoActionEnumdirectly_addressed,
  _$gTodoActionEnummerge_train_removed,
  _$gTodoActionEnumreview_requested,
]);

const GTodoStateEnum _$gTodoStateEnumpending =
    const GTodoStateEnum._('pending');
const GTodoStateEnum _$gTodoStateEnumdone = const GTodoStateEnum._('done');

GTodoStateEnum _$gTodoStateEnumValueOf(String name) {
  switch (name) {
    case 'pending':
      return _$gTodoStateEnumpending;
    case 'done':
      return _$gTodoStateEnumdone;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTodoStateEnum> _$gTodoStateEnumValues =
    new BuiltSet<GTodoStateEnum>(const <GTodoStateEnum>[
  _$gTodoStateEnumpending,
  _$gTodoStateEnumdone,
]);

const GTodoTargetEnum _$gTodoTargetEnumCOMMIT =
    const GTodoTargetEnum._('COMMIT');
const GTodoTargetEnum _$gTodoTargetEnumISSUE = const GTodoTargetEnum._('ISSUE');
const GTodoTargetEnum _$gTodoTargetEnumWORKITEM =
    const GTodoTargetEnum._('WORKITEM');
const GTodoTargetEnum _$gTodoTargetEnumMERGEREQUEST =
    const GTodoTargetEnum._('MERGEREQUEST');
const GTodoTargetEnum _$gTodoTargetEnumDESIGN =
    const GTodoTargetEnum._('DESIGN');
const GTodoTargetEnum _$gTodoTargetEnumALERT = const GTodoTargetEnum._('ALERT');
const GTodoTargetEnum _$gTodoTargetEnumEPIC = const GTodoTargetEnum._('EPIC');

GTodoTargetEnum _$gTodoTargetEnumValueOf(String name) {
  switch (name) {
    case 'COMMIT':
      return _$gTodoTargetEnumCOMMIT;
    case 'ISSUE':
      return _$gTodoTargetEnumISSUE;
    case 'WORKITEM':
      return _$gTodoTargetEnumWORKITEM;
    case 'MERGEREQUEST':
      return _$gTodoTargetEnumMERGEREQUEST;
    case 'DESIGN':
      return _$gTodoTargetEnumDESIGN;
    case 'ALERT':
      return _$gTodoTargetEnumALERT;
    case 'EPIC':
      return _$gTodoTargetEnumEPIC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTodoTargetEnum> _$gTodoTargetEnumValues =
    new BuiltSet<GTodoTargetEnum>(const <GTodoTargetEnum>[
  _$gTodoTargetEnumCOMMIT,
  _$gTodoTargetEnumISSUE,
  _$gTodoTargetEnumWORKITEM,
  _$gTodoTargetEnumMERGEREQUEST,
  _$gTodoTargetEnumDESIGN,
  _$gTodoTargetEnumALERT,
  _$gTodoTargetEnumEPIC,
]);

const GTrainingUrlRequestStatus _$gTrainingUrlRequestStatusPENDING =
    const GTrainingUrlRequestStatus._('PENDING');
const GTrainingUrlRequestStatus _$gTrainingUrlRequestStatusCOMPLETED =
    const GTrainingUrlRequestStatus._('COMPLETED');

GTrainingUrlRequestStatus _$gTrainingUrlRequestStatusValueOf(String name) {
  switch (name) {
    case 'PENDING':
      return _$gTrainingUrlRequestStatusPENDING;
    case 'COMPLETED':
      return _$gTrainingUrlRequestStatusCOMPLETED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTrainingUrlRequestStatus> _$gTrainingUrlRequestStatusValues =
    new BuiltSet<GTrainingUrlRequestStatus>(const <GTrainingUrlRequestStatus>[
  _$gTrainingUrlRequestStatusPENDING,
  _$gTrainingUrlRequestStatusCOMPLETED,
]);

const GTypeEnum _$gTypeEnumpersonal = const GTypeEnum._('personal');
const GTypeEnum _$gTypeEnumproject = const GTypeEnum._('project');

GTypeEnum _$gTypeEnumValueOf(String name) {
  switch (name) {
    case 'personal':
      return _$gTypeEnumpersonal;
    case 'project':
      return _$gTypeEnumproject;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTypeEnum> _$gTypeEnumValues =
    new BuiltSet<GTypeEnum>(const <GTypeEnum>[
  _$gTypeEnumpersonal,
  _$gTypeEnumproject,
]);

const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumGKE_CLUSTER_INTEGRATION =
    const GUserCalloutFeatureNameEnum._('GKE_CLUSTER_INTEGRATION');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumGCP_SIGNUP_OFFER =
    const GUserCalloutFeatureNameEnum._('GCP_SIGNUP_OFFER');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumCLUSTER_SECURITY_WARNING =
    const GUserCalloutFeatureNameEnum._('CLUSTER_SECURITY_WARNING');
const GUserCalloutFeatureNameEnum _$gUserCalloutFeatureNameEnumULTIMATE_TRIAL =
    const GUserCalloutFeatureNameEnum._('ULTIMATE_TRIAL');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumGEO_ENABLE_HASHED_STORAGE =
    const GUserCalloutFeatureNameEnum._('GEO_ENABLE_HASHED_STORAGE');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumGEO_MIGRATE_HASHED_STORAGE =
    const GUserCalloutFeatureNameEnum._('GEO_MIGRATE_HASHED_STORAGE');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumCANARY_DEPLOYMENT =
    const GUserCalloutFeatureNameEnum._('CANARY_DEPLOYMENT');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumGOLD_TRIAL_BILLINGS =
    const GUserCalloutFeatureNameEnum._('GOLD_TRIAL_BILLINGS');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSUGGEST_POPOVER_DISMISSED =
    const GUserCalloutFeatureNameEnum._('SUGGEST_POPOVER_DISMISSED');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumTABS_POSITION_HIGHLIGHT =
    const GUserCalloutFeatureNameEnum._('TABS_POSITION_HIGHLIGHT');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumTHREAT_MONITORING_INFO =
    const GUserCalloutFeatureNameEnum._('THREAT_MONITORING_INFO');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumTWO_FACTOR_AUTH_RECOVERY_SETTINGS_CHECK =
    const GUserCalloutFeatureNameEnum._(
        'TWO_FACTOR_AUTH_RECOVERY_SETTINGS_CHECK');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumWEB_IDE_ALERT_DISMISSED =
    const GUserCalloutFeatureNameEnum._('WEB_IDE_ALERT_DISMISSED');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumACTIVE_USER_COUNT_THRESHOLD =
    const GUserCalloutFeatureNameEnum._('ACTIVE_USER_COUNT_THRESHOLD');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumBUY_PIPELINE_MINUTES_NOTIFICATION_DOT =
    const GUserCalloutFeatureNameEnum._(
        'BUY_PIPELINE_MINUTES_NOTIFICATION_DOT');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumPERSONAL_ACCESS_TOKEN_EXPIRY =
    const GUserCalloutFeatureNameEnum._('PERSONAL_ACCESS_TOKEN_EXPIRY');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSUGGEST_PIPELINE =
    const GUserCalloutFeatureNameEnum._('SUGGEST_PIPELINE');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumFEATURE_FLAGS_NEW_VERSION =
    const GUserCalloutFeatureNameEnum._('FEATURE_FLAGS_NEW_VERSION');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumREGISTRATION_ENABLED_CALLOUT =
    const GUserCalloutFeatureNameEnum._('REGISTRATION_ENABLED_CALLOUT');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumNEW_USER_SIGNUPS_CAP_REACHED =
    const GUserCalloutFeatureNameEnum._('NEW_USER_SIGNUPS_CAP_REACHED');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumUNFINISHED_TAG_CLEANUP_CALLOUT =
    const GUserCalloutFeatureNameEnum._('UNFINISHED_TAG_CLEANUP_CALLOUT');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumEOA_BRONZE_PLAN_BANNER =
    const GUserCalloutFeatureNameEnum._('EOA_BRONZE_PLAN_BANNER');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumPIPELINE_NEEDS_BANNER =
    const GUserCalloutFeatureNameEnum._('PIPELINE_NEEDS_BANNER');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumPIPELINE_NEEDS_HOVER_TIP =
    const GUserCalloutFeatureNameEnum._('PIPELINE_NEEDS_HOVER_TIP');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumWEB_IDE_CI_ENVIRONMENTS_GUIDANCE =
    const GUserCalloutFeatureNameEnum._('WEB_IDE_CI_ENVIRONMENTS_GUIDANCE');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSECURITY_CONFIGURATION_UPGRADE_BANNER =
    const GUserCalloutFeatureNameEnum._(
        'SECURITY_CONFIGURATION_UPGRADE_BANNER');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumCLOUD_LICENSING_SUBSCRIPTION_ACTIVATION_BANNER =
    const GUserCalloutFeatureNameEnum._(
        'CLOUD_LICENSING_SUBSCRIPTION_ACTIVATION_BANNER');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumTRIAL_STATUS_REMINDER_D14 =
    const GUserCalloutFeatureNameEnum._('TRIAL_STATUS_REMINDER_D14');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumTRIAL_STATUS_REMINDER_D3 =
    const GUserCalloutFeatureNameEnum._('TRIAL_STATUS_REMINDER_D3');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSECURITY_CONFIGURATION_DEVOPS_ALERT =
    const GUserCalloutFeatureNameEnum._('SECURITY_CONFIGURATION_DEVOPS_ALERT');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumPROFILE_PERSONAL_ACCESS_TOKEN_EXPIRY =
    const GUserCalloutFeatureNameEnum._('PROFILE_PERSONAL_ACCESS_TOKEN_EXPIRY');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumTERRAFORM_NOTIFICATION_DISMISSED =
    const GUserCalloutFeatureNameEnum._('TERRAFORM_NOTIFICATION_DISMISSED');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSECURITY_NEWSLETTER_CALLOUT =
    const GUserCalloutFeatureNameEnum._('SECURITY_NEWSLETTER_CALLOUT');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumVERIFICATION_REMINDER =
    const GUserCalloutFeatureNameEnum._('VERIFICATION_REMINDER');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumCI_DEPRECATION_WARNING_FOR_TYPES_KEYWORD =
    const GUserCalloutFeatureNameEnum._(
        'CI_DEPRECATION_WARNING_FOR_TYPES_KEYWORD');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSECURITY_TRAINING_FEATURE_PROMOTION =
    const GUserCalloutFeatureNameEnum._('SECURITY_TRAINING_FEATURE_PROMOTION');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_FIRST_ENFORCEMENT_THRESHOLD =
    const GUserCalloutFeatureNameEnum._(
        'STORAGE_ENFORCEMENT_BANNER_FIRST_ENFORCEMENT_THRESHOLD');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_SECOND_ENFORCEMENT_THRESHOLD =
    const GUserCalloutFeatureNameEnum._(
        'STORAGE_ENFORCEMENT_BANNER_SECOND_ENFORCEMENT_THRESHOLD');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_THIRD_ENFORCEMENT_THRESHOLD =
    const GUserCalloutFeatureNameEnum._(
        'STORAGE_ENFORCEMENT_BANNER_THIRD_ENFORCEMENT_THRESHOLD');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_FOURTH_ENFORCEMENT_THRESHOLD =
    const GUserCalloutFeatureNameEnum._(
        'STORAGE_ENFORCEMENT_BANNER_FOURTH_ENFORCEMENT_THRESHOLD');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumPREVIEW_USER_OVER_LIMIT_FREE_PLAN_ALERT =
    const GUserCalloutFeatureNameEnum._(
        'PREVIEW_USER_OVER_LIMIT_FREE_PLAN_ALERT');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumUSER_REACHED_LIMIT_FREE_PLAN_ALERT =
    const GUserCalloutFeatureNameEnum._('USER_REACHED_LIMIT_FREE_PLAN_ALERT');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumSUBMIT_LICENSE_USAGE_DATA_BANNER =
    const GUserCalloutFeatureNameEnum._('SUBMIT_LICENSE_USAGE_DATA_BANNER');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumPERSONAL_PROJECT_LIMITATIONS_BANNER =
    const GUserCalloutFeatureNameEnum._('PERSONAL_PROJECT_LIMITATIONS_BANNER');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumMR_EXPERIENCE_SURVEY =
    const GUserCalloutFeatureNameEnum._('MR_EXPERIENCE_SURVEY');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_INFO_THRESHOLD =
    const GUserCalloutFeatureNameEnum._(
        'NAMESPACE_STORAGE_LIMIT_BANNER_INFO_THRESHOLD');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_WARNING_THRESHOLD =
    const GUserCalloutFeatureNameEnum._(
        'NAMESPACE_STORAGE_LIMIT_BANNER_WARNING_THRESHOLD');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_ALERT_THRESHOLD =
    const GUserCalloutFeatureNameEnum._(
        'NAMESPACE_STORAGE_LIMIT_BANNER_ALERT_THRESHOLD');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_ERROR_THRESHOLD =
    const GUserCalloutFeatureNameEnum._(
        'NAMESPACE_STORAGE_LIMIT_BANNER_ERROR_THRESHOLD');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumPROJECT_QUALITY_SUMMARY_FEEDBACK =
    const GUserCalloutFeatureNameEnum._('PROJECT_QUALITY_SUMMARY_FEEDBACK');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumMERGE_REQUEST_SETTINGS_MOVED_CALLOUT =
    const GUserCalloutFeatureNameEnum._('MERGE_REQUEST_SETTINGS_MOVED_CALLOUT');
const GUserCalloutFeatureNameEnum
    _$gUserCalloutFeatureNameEnumNEW_TOP_LEVEL_GROUP_ALERT =
    const GUserCalloutFeatureNameEnum._('NEW_TOP_LEVEL_GROUP_ALERT');

GUserCalloutFeatureNameEnum _$gUserCalloutFeatureNameEnumValueOf(String name) {
  switch (name) {
    case 'GKE_CLUSTER_INTEGRATION':
      return _$gUserCalloutFeatureNameEnumGKE_CLUSTER_INTEGRATION;
    case 'GCP_SIGNUP_OFFER':
      return _$gUserCalloutFeatureNameEnumGCP_SIGNUP_OFFER;
    case 'CLUSTER_SECURITY_WARNING':
      return _$gUserCalloutFeatureNameEnumCLUSTER_SECURITY_WARNING;
    case 'ULTIMATE_TRIAL':
      return _$gUserCalloutFeatureNameEnumULTIMATE_TRIAL;
    case 'GEO_ENABLE_HASHED_STORAGE':
      return _$gUserCalloutFeatureNameEnumGEO_ENABLE_HASHED_STORAGE;
    case 'GEO_MIGRATE_HASHED_STORAGE':
      return _$gUserCalloutFeatureNameEnumGEO_MIGRATE_HASHED_STORAGE;
    case 'CANARY_DEPLOYMENT':
      return _$gUserCalloutFeatureNameEnumCANARY_DEPLOYMENT;
    case 'GOLD_TRIAL_BILLINGS':
      return _$gUserCalloutFeatureNameEnumGOLD_TRIAL_BILLINGS;
    case 'SUGGEST_POPOVER_DISMISSED':
      return _$gUserCalloutFeatureNameEnumSUGGEST_POPOVER_DISMISSED;
    case 'TABS_POSITION_HIGHLIGHT':
      return _$gUserCalloutFeatureNameEnumTABS_POSITION_HIGHLIGHT;
    case 'THREAT_MONITORING_INFO':
      return _$gUserCalloutFeatureNameEnumTHREAT_MONITORING_INFO;
    case 'TWO_FACTOR_AUTH_RECOVERY_SETTINGS_CHECK':
      return _$gUserCalloutFeatureNameEnumTWO_FACTOR_AUTH_RECOVERY_SETTINGS_CHECK;
    case 'WEB_IDE_ALERT_DISMISSED':
      return _$gUserCalloutFeatureNameEnumWEB_IDE_ALERT_DISMISSED;
    case 'ACTIVE_USER_COUNT_THRESHOLD':
      return _$gUserCalloutFeatureNameEnumACTIVE_USER_COUNT_THRESHOLD;
    case 'BUY_PIPELINE_MINUTES_NOTIFICATION_DOT':
      return _$gUserCalloutFeatureNameEnumBUY_PIPELINE_MINUTES_NOTIFICATION_DOT;
    case 'PERSONAL_ACCESS_TOKEN_EXPIRY':
      return _$gUserCalloutFeatureNameEnumPERSONAL_ACCESS_TOKEN_EXPIRY;
    case 'SUGGEST_PIPELINE':
      return _$gUserCalloutFeatureNameEnumSUGGEST_PIPELINE;
    case 'FEATURE_FLAGS_NEW_VERSION':
      return _$gUserCalloutFeatureNameEnumFEATURE_FLAGS_NEW_VERSION;
    case 'REGISTRATION_ENABLED_CALLOUT':
      return _$gUserCalloutFeatureNameEnumREGISTRATION_ENABLED_CALLOUT;
    case 'NEW_USER_SIGNUPS_CAP_REACHED':
      return _$gUserCalloutFeatureNameEnumNEW_USER_SIGNUPS_CAP_REACHED;
    case 'UNFINISHED_TAG_CLEANUP_CALLOUT':
      return _$gUserCalloutFeatureNameEnumUNFINISHED_TAG_CLEANUP_CALLOUT;
    case 'EOA_BRONZE_PLAN_BANNER':
      return _$gUserCalloutFeatureNameEnumEOA_BRONZE_PLAN_BANNER;
    case 'PIPELINE_NEEDS_BANNER':
      return _$gUserCalloutFeatureNameEnumPIPELINE_NEEDS_BANNER;
    case 'PIPELINE_NEEDS_HOVER_TIP':
      return _$gUserCalloutFeatureNameEnumPIPELINE_NEEDS_HOVER_TIP;
    case 'WEB_IDE_CI_ENVIRONMENTS_GUIDANCE':
      return _$gUserCalloutFeatureNameEnumWEB_IDE_CI_ENVIRONMENTS_GUIDANCE;
    case 'SECURITY_CONFIGURATION_UPGRADE_BANNER':
      return _$gUserCalloutFeatureNameEnumSECURITY_CONFIGURATION_UPGRADE_BANNER;
    case 'CLOUD_LICENSING_SUBSCRIPTION_ACTIVATION_BANNER':
      return _$gUserCalloutFeatureNameEnumCLOUD_LICENSING_SUBSCRIPTION_ACTIVATION_BANNER;
    case 'TRIAL_STATUS_REMINDER_D14':
      return _$gUserCalloutFeatureNameEnumTRIAL_STATUS_REMINDER_D14;
    case 'TRIAL_STATUS_REMINDER_D3':
      return _$gUserCalloutFeatureNameEnumTRIAL_STATUS_REMINDER_D3;
    case 'SECURITY_CONFIGURATION_DEVOPS_ALERT':
      return _$gUserCalloutFeatureNameEnumSECURITY_CONFIGURATION_DEVOPS_ALERT;
    case 'PROFILE_PERSONAL_ACCESS_TOKEN_EXPIRY':
      return _$gUserCalloutFeatureNameEnumPROFILE_PERSONAL_ACCESS_TOKEN_EXPIRY;
    case 'TERRAFORM_NOTIFICATION_DISMISSED':
      return _$gUserCalloutFeatureNameEnumTERRAFORM_NOTIFICATION_DISMISSED;
    case 'SECURITY_NEWSLETTER_CALLOUT':
      return _$gUserCalloutFeatureNameEnumSECURITY_NEWSLETTER_CALLOUT;
    case 'VERIFICATION_REMINDER':
      return _$gUserCalloutFeatureNameEnumVERIFICATION_REMINDER;
    case 'CI_DEPRECATION_WARNING_FOR_TYPES_KEYWORD':
      return _$gUserCalloutFeatureNameEnumCI_DEPRECATION_WARNING_FOR_TYPES_KEYWORD;
    case 'SECURITY_TRAINING_FEATURE_PROMOTION':
      return _$gUserCalloutFeatureNameEnumSECURITY_TRAINING_FEATURE_PROMOTION;
    case 'STORAGE_ENFORCEMENT_BANNER_FIRST_ENFORCEMENT_THRESHOLD':
      return _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_FIRST_ENFORCEMENT_THRESHOLD;
    case 'STORAGE_ENFORCEMENT_BANNER_SECOND_ENFORCEMENT_THRESHOLD':
      return _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_SECOND_ENFORCEMENT_THRESHOLD;
    case 'STORAGE_ENFORCEMENT_BANNER_THIRD_ENFORCEMENT_THRESHOLD':
      return _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_THIRD_ENFORCEMENT_THRESHOLD;
    case 'STORAGE_ENFORCEMENT_BANNER_FOURTH_ENFORCEMENT_THRESHOLD':
      return _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_FOURTH_ENFORCEMENT_THRESHOLD;
    case 'PREVIEW_USER_OVER_LIMIT_FREE_PLAN_ALERT':
      return _$gUserCalloutFeatureNameEnumPREVIEW_USER_OVER_LIMIT_FREE_PLAN_ALERT;
    case 'USER_REACHED_LIMIT_FREE_PLAN_ALERT':
      return _$gUserCalloutFeatureNameEnumUSER_REACHED_LIMIT_FREE_PLAN_ALERT;
    case 'SUBMIT_LICENSE_USAGE_DATA_BANNER':
      return _$gUserCalloutFeatureNameEnumSUBMIT_LICENSE_USAGE_DATA_BANNER;
    case 'PERSONAL_PROJECT_LIMITATIONS_BANNER':
      return _$gUserCalloutFeatureNameEnumPERSONAL_PROJECT_LIMITATIONS_BANNER;
    case 'MR_EXPERIENCE_SURVEY':
      return _$gUserCalloutFeatureNameEnumMR_EXPERIENCE_SURVEY;
    case 'NAMESPACE_STORAGE_LIMIT_BANNER_INFO_THRESHOLD':
      return _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_INFO_THRESHOLD;
    case 'NAMESPACE_STORAGE_LIMIT_BANNER_WARNING_THRESHOLD':
      return _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_WARNING_THRESHOLD;
    case 'NAMESPACE_STORAGE_LIMIT_BANNER_ALERT_THRESHOLD':
      return _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_ALERT_THRESHOLD;
    case 'NAMESPACE_STORAGE_LIMIT_BANNER_ERROR_THRESHOLD':
      return _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_ERROR_THRESHOLD;
    case 'PROJECT_QUALITY_SUMMARY_FEEDBACK':
      return _$gUserCalloutFeatureNameEnumPROJECT_QUALITY_SUMMARY_FEEDBACK;
    case 'MERGE_REQUEST_SETTINGS_MOVED_CALLOUT':
      return _$gUserCalloutFeatureNameEnumMERGE_REQUEST_SETTINGS_MOVED_CALLOUT;
    case 'NEW_TOP_LEVEL_GROUP_ALERT':
      return _$gUserCalloutFeatureNameEnumNEW_TOP_LEVEL_GROUP_ALERT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GUserCalloutFeatureNameEnum>
    _$gUserCalloutFeatureNameEnumValues = new BuiltSet<
        GUserCalloutFeatureNameEnum>(const <GUserCalloutFeatureNameEnum>[
  _$gUserCalloutFeatureNameEnumGKE_CLUSTER_INTEGRATION,
  _$gUserCalloutFeatureNameEnumGCP_SIGNUP_OFFER,
  _$gUserCalloutFeatureNameEnumCLUSTER_SECURITY_WARNING,
  _$gUserCalloutFeatureNameEnumULTIMATE_TRIAL,
  _$gUserCalloutFeatureNameEnumGEO_ENABLE_HASHED_STORAGE,
  _$gUserCalloutFeatureNameEnumGEO_MIGRATE_HASHED_STORAGE,
  _$gUserCalloutFeatureNameEnumCANARY_DEPLOYMENT,
  _$gUserCalloutFeatureNameEnumGOLD_TRIAL_BILLINGS,
  _$gUserCalloutFeatureNameEnumSUGGEST_POPOVER_DISMISSED,
  _$gUserCalloutFeatureNameEnumTABS_POSITION_HIGHLIGHT,
  _$gUserCalloutFeatureNameEnumTHREAT_MONITORING_INFO,
  _$gUserCalloutFeatureNameEnumTWO_FACTOR_AUTH_RECOVERY_SETTINGS_CHECK,
  _$gUserCalloutFeatureNameEnumWEB_IDE_ALERT_DISMISSED,
  _$gUserCalloutFeatureNameEnumACTIVE_USER_COUNT_THRESHOLD,
  _$gUserCalloutFeatureNameEnumBUY_PIPELINE_MINUTES_NOTIFICATION_DOT,
  _$gUserCalloutFeatureNameEnumPERSONAL_ACCESS_TOKEN_EXPIRY,
  _$gUserCalloutFeatureNameEnumSUGGEST_PIPELINE,
  _$gUserCalloutFeatureNameEnumFEATURE_FLAGS_NEW_VERSION,
  _$gUserCalloutFeatureNameEnumREGISTRATION_ENABLED_CALLOUT,
  _$gUserCalloutFeatureNameEnumNEW_USER_SIGNUPS_CAP_REACHED,
  _$gUserCalloutFeatureNameEnumUNFINISHED_TAG_CLEANUP_CALLOUT,
  _$gUserCalloutFeatureNameEnumEOA_BRONZE_PLAN_BANNER,
  _$gUserCalloutFeatureNameEnumPIPELINE_NEEDS_BANNER,
  _$gUserCalloutFeatureNameEnumPIPELINE_NEEDS_HOVER_TIP,
  _$gUserCalloutFeatureNameEnumWEB_IDE_CI_ENVIRONMENTS_GUIDANCE,
  _$gUserCalloutFeatureNameEnumSECURITY_CONFIGURATION_UPGRADE_BANNER,
  _$gUserCalloutFeatureNameEnumCLOUD_LICENSING_SUBSCRIPTION_ACTIVATION_BANNER,
  _$gUserCalloutFeatureNameEnumTRIAL_STATUS_REMINDER_D14,
  _$gUserCalloutFeatureNameEnumTRIAL_STATUS_REMINDER_D3,
  _$gUserCalloutFeatureNameEnumSECURITY_CONFIGURATION_DEVOPS_ALERT,
  _$gUserCalloutFeatureNameEnumPROFILE_PERSONAL_ACCESS_TOKEN_EXPIRY,
  _$gUserCalloutFeatureNameEnumTERRAFORM_NOTIFICATION_DISMISSED,
  _$gUserCalloutFeatureNameEnumSECURITY_NEWSLETTER_CALLOUT,
  _$gUserCalloutFeatureNameEnumVERIFICATION_REMINDER,
  _$gUserCalloutFeatureNameEnumCI_DEPRECATION_WARNING_FOR_TYPES_KEYWORD,
  _$gUserCalloutFeatureNameEnumSECURITY_TRAINING_FEATURE_PROMOTION,
  _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_FIRST_ENFORCEMENT_THRESHOLD,
  _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_SECOND_ENFORCEMENT_THRESHOLD,
  _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_THIRD_ENFORCEMENT_THRESHOLD,
  _$gUserCalloutFeatureNameEnumSTORAGE_ENFORCEMENT_BANNER_FOURTH_ENFORCEMENT_THRESHOLD,
  _$gUserCalloutFeatureNameEnumPREVIEW_USER_OVER_LIMIT_FREE_PLAN_ALERT,
  _$gUserCalloutFeatureNameEnumUSER_REACHED_LIMIT_FREE_PLAN_ALERT,
  _$gUserCalloutFeatureNameEnumSUBMIT_LICENSE_USAGE_DATA_BANNER,
  _$gUserCalloutFeatureNameEnumPERSONAL_PROJECT_LIMITATIONS_BANNER,
  _$gUserCalloutFeatureNameEnumMR_EXPERIENCE_SURVEY,
  _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_INFO_THRESHOLD,
  _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_WARNING_THRESHOLD,
  _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_ALERT_THRESHOLD,
  _$gUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_BANNER_ERROR_THRESHOLD,
  _$gUserCalloutFeatureNameEnumPROJECT_QUALITY_SUMMARY_FEEDBACK,
  _$gUserCalloutFeatureNameEnumMERGE_REQUEST_SETTINGS_MOVED_CALLOUT,
  _$gUserCalloutFeatureNameEnumNEW_TOP_LEVEL_GROUP_ALERT,
]);

const GUserState _$gUserStateactive = const GUserState._('active');
const GUserState _$gUserStateblocked = const GUserState._('blocked');
const GUserState _$gUserStatedeactivated = const GUserState._('deactivated');

GUserState _$gUserStateValueOf(String name) {
  switch (name) {
    case 'active':
      return _$gUserStateactive;
    case 'blocked':
      return _$gUserStateblocked;
    case 'deactivated':
      return _$gUserStatedeactivated;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GUserState> _$gUserStateValues =
    new BuiltSet<GUserState>(const <GUserState>[
  _$gUserStateactive,
  _$gUserStateblocked,
  _$gUserStatedeactivated,
]);

const GVerificationStateEnum _$gVerificationStateEnumPENDING =
    const GVerificationStateEnum._('PENDING');
const GVerificationStateEnum _$gVerificationStateEnumSTARTED =
    const GVerificationStateEnum._('STARTED');
const GVerificationStateEnum _$gVerificationStateEnumSUCCEEDED =
    const GVerificationStateEnum._('SUCCEEDED');
const GVerificationStateEnum _$gVerificationStateEnumFAILED =
    const GVerificationStateEnum._('FAILED');
const GVerificationStateEnum _$gVerificationStateEnumDISABLED =
    const GVerificationStateEnum._('DISABLED');

GVerificationStateEnum _$gVerificationStateEnumValueOf(String name) {
  switch (name) {
    case 'PENDING':
      return _$gVerificationStateEnumPENDING;
    case 'STARTED':
      return _$gVerificationStateEnumSTARTED;
    case 'SUCCEEDED':
      return _$gVerificationStateEnumSUCCEEDED;
    case 'FAILED':
      return _$gVerificationStateEnumFAILED;
    case 'DISABLED':
      return _$gVerificationStateEnumDISABLED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVerificationStateEnum> _$gVerificationStateEnumValues =
    new BuiltSet<GVerificationStateEnum>(const <GVerificationStateEnum>[
  _$gVerificationStateEnumPENDING,
  _$gVerificationStateEnumSTARTED,
  _$gVerificationStateEnumSUCCEEDED,
  _$gVerificationStateEnumFAILED,
  _$gVerificationStateEnumDISABLED,
]);

const GVisibilityLevelsEnum _$gVisibilityLevelsEnumprivate =
    const GVisibilityLevelsEnum._('private');
const GVisibilityLevelsEnum _$gVisibilityLevelsEnuminternal =
    const GVisibilityLevelsEnum._('internal');
const GVisibilityLevelsEnum _$gVisibilityLevelsEnumpublic =
    const GVisibilityLevelsEnum._('public');

GVisibilityLevelsEnum _$gVisibilityLevelsEnumValueOf(String name) {
  switch (name) {
    case 'private':
      return _$gVisibilityLevelsEnumprivate;
    case 'internal':
      return _$gVisibilityLevelsEnuminternal;
    case 'public':
      return _$gVisibilityLevelsEnumpublic;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVisibilityLevelsEnum> _$gVisibilityLevelsEnumValues =
    new BuiltSet<GVisibilityLevelsEnum>(const <GVisibilityLevelsEnum>[
  _$gVisibilityLevelsEnumprivate,
  _$gVisibilityLevelsEnuminternal,
  _$gVisibilityLevelsEnumpublic,
]);

const GVisibilityScopesEnum _$gVisibilityScopesEnumprivate =
    const GVisibilityScopesEnum._('private');
const GVisibilityScopesEnum _$gVisibilityScopesEnuminternal =
    const GVisibilityScopesEnum._('internal');
const GVisibilityScopesEnum _$gVisibilityScopesEnumpublic =
    const GVisibilityScopesEnum._('public');

GVisibilityScopesEnum _$gVisibilityScopesEnumValueOf(String name) {
  switch (name) {
    case 'private':
      return _$gVisibilityScopesEnumprivate;
    case 'internal':
      return _$gVisibilityScopesEnuminternal;
    case 'public':
      return _$gVisibilityScopesEnumpublic;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVisibilityScopesEnum> _$gVisibilityScopesEnumValues =
    new BuiltSet<GVisibilityScopesEnum>(const <GVisibilityScopesEnum>[
  _$gVisibilityScopesEnumprivate,
  _$gVisibilityScopesEnuminternal,
  _$gVisibilityScopesEnumpublic,
]);

const GVulnerabilityConfidence _$gVulnerabilityConfidenceIGNORE =
    const GVulnerabilityConfidence._('IGNORE');
const GVulnerabilityConfidence _$gVulnerabilityConfidenceUNKNOWN =
    const GVulnerabilityConfidence._('UNKNOWN');
const GVulnerabilityConfidence _$gVulnerabilityConfidenceEXPERIMENTAL =
    const GVulnerabilityConfidence._('EXPERIMENTAL');
const GVulnerabilityConfidence _$gVulnerabilityConfidenceLOW =
    const GVulnerabilityConfidence._('LOW');
const GVulnerabilityConfidence _$gVulnerabilityConfidenceMEDIUM =
    const GVulnerabilityConfidence._('MEDIUM');
const GVulnerabilityConfidence _$gVulnerabilityConfidenceHIGH =
    const GVulnerabilityConfidence._('HIGH');
const GVulnerabilityConfidence _$gVulnerabilityConfidenceCONFIRMED =
    const GVulnerabilityConfidence._('CONFIRMED');

GVulnerabilityConfidence _$gVulnerabilityConfidenceValueOf(String name) {
  switch (name) {
    case 'IGNORE':
      return _$gVulnerabilityConfidenceIGNORE;
    case 'UNKNOWN':
      return _$gVulnerabilityConfidenceUNKNOWN;
    case 'EXPERIMENTAL':
      return _$gVulnerabilityConfidenceEXPERIMENTAL;
    case 'LOW':
      return _$gVulnerabilityConfidenceLOW;
    case 'MEDIUM':
      return _$gVulnerabilityConfidenceMEDIUM;
    case 'HIGH':
      return _$gVulnerabilityConfidenceHIGH;
    case 'CONFIRMED':
      return _$gVulnerabilityConfidenceCONFIRMED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVulnerabilityConfidence> _$gVulnerabilityConfidenceValues =
    new BuiltSet<GVulnerabilityConfidence>(const <GVulnerabilityConfidence>[
  _$gVulnerabilityConfidenceIGNORE,
  _$gVulnerabilityConfidenceUNKNOWN,
  _$gVulnerabilityConfidenceEXPERIMENTAL,
  _$gVulnerabilityConfidenceLOW,
  _$gVulnerabilityConfidenceMEDIUM,
  _$gVulnerabilityConfidenceHIGH,
  _$gVulnerabilityConfidenceCONFIRMED,
]);

const GVulnerabilityDismissalReason
    _$gVulnerabilityDismissalReasonACCEPTABLE_RISK =
    const GVulnerabilityDismissalReason._('ACCEPTABLE_RISK');
const GVulnerabilityDismissalReason
    _$gVulnerabilityDismissalReasonFALSE_POSITIVE =
    const GVulnerabilityDismissalReason._('FALSE_POSITIVE');
const GVulnerabilityDismissalReason
    _$gVulnerabilityDismissalReasonMITIGATING_CONTROL =
    const GVulnerabilityDismissalReason._('MITIGATING_CONTROL');
const GVulnerabilityDismissalReason
    _$gVulnerabilityDismissalReasonUSED_IN_TESTS =
    const GVulnerabilityDismissalReason._('USED_IN_TESTS');
const GVulnerabilityDismissalReason
    _$gVulnerabilityDismissalReasonNOT_APPLICABLE =
    const GVulnerabilityDismissalReason._('NOT_APPLICABLE');

GVulnerabilityDismissalReason _$gVulnerabilityDismissalReasonValueOf(
    String name) {
  switch (name) {
    case 'ACCEPTABLE_RISK':
      return _$gVulnerabilityDismissalReasonACCEPTABLE_RISK;
    case 'FALSE_POSITIVE':
      return _$gVulnerabilityDismissalReasonFALSE_POSITIVE;
    case 'MITIGATING_CONTROL':
      return _$gVulnerabilityDismissalReasonMITIGATING_CONTROL;
    case 'USED_IN_TESTS':
      return _$gVulnerabilityDismissalReasonUSED_IN_TESTS;
    case 'NOT_APPLICABLE':
      return _$gVulnerabilityDismissalReasonNOT_APPLICABLE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVulnerabilityDismissalReason>
    _$gVulnerabilityDismissalReasonValues = new BuiltSet<
        GVulnerabilityDismissalReason>(const <GVulnerabilityDismissalReason>[
  _$gVulnerabilityDismissalReasonACCEPTABLE_RISK,
  _$gVulnerabilityDismissalReasonFALSE_POSITIVE,
  _$gVulnerabilityDismissalReasonMITIGATING_CONTROL,
  _$gVulnerabilityDismissalReasonUSED_IN_TESTS,
  _$gVulnerabilityDismissalReasonNOT_APPLICABLE,
]);

const GVulnerabilityExternalIssueLinkExternalTracker
    _$gVulnerabilityExternalIssueLinkExternalTrackerJIRA =
    const GVulnerabilityExternalIssueLinkExternalTracker._('JIRA');

GVulnerabilityExternalIssueLinkExternalTracker
    _$gVulnerabilityExternalIssueLinkExternalTrackerValueOf(String name) {
  switch (name) {
    case 'JIRA':
      return _$gVulnerabilityExternalIssueLinkExternalTrackerJIRA;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVulnerabilityExternalIssueLinkExternalTracker>
    _$gVulnerabilityExternalIssueLinkExternalTrackerValues =
    new BuiltSet<GVulnerabilityExternalIssueLinkExternalTracker>(const <
        GVulnerabilityExternalIssueLinkExternalTracker>[
  _$gVulnerabilityExternalIssueLinkExternalTrackerJIRA,
]);

const GVulnerabilityExternalIssueLinkType
    _$gVulnerabilityExternalIssueLinkTypeCREATED =
    const GVulnerabilityExternalIssueLinkType._('CREATED');

GVulnerabilityExternalIssueLinkType
    _$gVulnerabilityExternalIssueLinkTypeValueOf(String name) {
  switch (name) {
    case 'CREATED':
      return _$gVulnerabilityExternalIssueLinkTypeCREATED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVulnerabilityExternalIssueLinkType>
    _$gVulnerabilityExternalIssueLinkTypeValues =
    new BuiltSet<GVulnerabilityExternalIssueLinkType>(const <
        GVulnerabilityExternalIssueLinkType>[
  _$gVulnerabilityExternalIssueLinkTypeCREATED,
]);

const GVulnerabilityGrade _$gVulnerabilityGradeA =
    const GVulnerabilityGrade._('A');
const GVulnerabilityGrade _$gVulnerabilityGradeB =
    const GVulnerabilityGrade._('B');
const GVulnerabilityGrade _$gVulnerabilityGradeC =
    const GVulnerabilityGrade._('C');
const GVulnerabilityGrade _$gVulnerabilityGradeD =
    const GVulnerabilityGrade._('D');
const GVulnerabilityGrade _$gVulnerabilityGradeF =
    const GVulnerabilityGrade._('F');

GVulnerabilityGrade _$gVulnerabilityGradeValueOf(String name) {
  switch (name) {
    case 'A':
      return _$gVulnerabilityGradeA;
    case 'B':
      return _$gVulnerabilityGradeB;
    case 'C':
      return _$gVulnerabilityGradeC;
    case 'D':
      return _$gVulnerabilityGradeD;
    case 'F':
      return _$gVulnerabilityGradeF;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVulnerabilityGrade> _$gVulnerabilityGradeValues =
    new BuiltSet<GVulnerabilityGrade>(const <GVulnerabilityGrade>[
  _$gVulnerabilityGradeA,
  _$gVulnerabilityGradeB,
  _$gVulnerabilityGradeC,
  _$gVulnerabilityGradeD,
  _$gVulnerabilityGradeF,
]);

const GVulnerabilityIssueLinkType _$gVulnerabilityIssueLinkTypeRELATED =
    const GVulnerabilityIssueLinkType._('RELATED');
const GVulnerabilityIssueLinkType _$gVulnerabilityIssueLinkTypeCREATED =
    const GVulnerabilityIssueLinkType._('CREATED');

GVulnerabilityIssueLinkType _$gVulnerabilityIssueLinkTypeValueOf(String name) {
  switch (name) {
    case 'RELATED':
      return _$gVulnerabilityIssueLinkTypeRELATED;
    case 'CREATED':
      return _$gVulnerabilityIssueLinkTypeCREATED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVulnerabilityIssueLinkType>
    _$gVulnerabilityIssueLinkTypeValues = new BuiltSet<
        GVulnerabilityIssueLinkType>(const <GVulnerabilityIssueLinkType>[
  _$gVulnerabilityIssueLinkTypeRELATED,
  _$gVulnerabilityIssueLinkTypeCREATED,
]);

const GVulnerabilityReportType _$gVulnerabilityReportTypeSAST =
    const GVulnerabilityReportType._('SAST');
const GVulnerabilityReportType _$gVulnerabilityReportTypeDEPENDENCY_SCANNING =
    const GVulnerabilityReportType._('DEPENDENCY_SCANNING');
const GVulnerabilityReportType _$gVulnerabilityReportTypeCONTAINER_SCANNING =
    const GVulnerabilityReportType._('CONTAINER_SCANNING');
const GVulnerabilityReportType _$gVulnerabilityReportTypeDAST =
    const GVulnerabilityReportType._('DAST');
const GVulnerabilityReportType _$gVulnerabilityReportTypeSECRET_DETECTION =
    const GVulnerabilityReportType._('SECRET_DETECTION');
const GVulnerabilityReportType _$gVulnerabilityReportTypeCOVERAGE_FUZZING =
    const GVulnerabilityReportType._('COVERAGE_FUZZING');
const GVulnerabilityReportType _$gVulnerabilityReportTypeAPI_FUZZING =
    const GVulnerabilityReportType._('API_FUZZING');
const GVulnerabilityReportType
    _$gVulnerabilityReportTypeCLUSTER_IMAGE_SCANNING =
    const GVulnerabilityReportType._('CLUSTER_IMAGE_SCANNING');
const GVulnerabilityReportType _$gVulnerabilityReportTypeGENERIC =
    const GVulnerabilityReportType._('GENERIC');

GVulnerabilityReportType _$gVulnerabilityReportTypeValueOf(String name) {
  switch (name) {
    case 'SAST':
      return _$gVulnerabilityReportTypeSAST;
    case 'DEPENDENCY_SCANNING':
      return _$gVulnerabilityReportTypeDEPENDENCY_SCANNING;
    case 'CONTAINER_SCANNING':
      return _$gVulnerabilityReportTypeCONTAINER_SCANNING;
    case 'DAST':
      return _$gVulnerabilityReportTypeDAST;
    case 'SECRET_DETECTION':
      return _$gVulnerabilityReportTypeSECRET_DETECTION;
    case 'COVERAGE_FUZZING':
      return _$gVulnerabilityReportTypeCOVERAGE_FUZZING;
    case 'API_FUZZING':
      return _$gVulnerabilityReportTypeAPI_FUZZING;
    case 'CLUSTER_IMAGE_SCANNING':
      return _$gVulnerabilityReportTypeCLUSTER_IMAGE_SCANNING;
    case 'GENERIC':
      return _$gVulnerabilityReportTypeGENERIC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVulnerabilityReportType> _$gVulnerabilityReportTypeValues =
    new BuiltSet<GVulnerabilityReportType>(const <GVulnerabilityReportType>[
  _$gVulnerabilityReportTypeSAST,
  _$gVulnerabilityReportTypeDEPENDENCY_SCANNING,
  _$gVulnerabilityReportTypeCONTAINER_SCANNING,
  _$gVulnerabilityReportTypeDAST,
  _$gVulnerabilityReportTypeSECRET_DETECTION,
  _$gVulnerabilityReportTypeCOVERAGE_FUZZING,
  _$gVulnerabilityReportTypeAPI_FUZZING,
  _$gVulnerabilityReportTypeCLUSTER_IMAGE_SCANNING,
  _$gVulnerabilityReportTypeGENERIC,
]);

const GVulnerabilitySeverity _$gVulnerabilitySeverityINFO =
    const GVulnerabilitySeverity._('INFO');
const GVulnerabilitySeverity _$gVulnerabilitySeverityUNKNOWN =
    const GVulnerabilitySeverity._('UNKNOWN');
const GVulnerabilitySeverity _$gVulnerabilitySeverityLOW =
    const GVulnerabilitySeverity._('LOW');
const GVulnerabilitySeverity _$gVulnerabilitySeverityMEDIUM =
    const GVulnerabilitySeverity._('MEDIUM');
const GVulnerabilitySeverity _$gVulnerabilitySeverityHIGH =
    const GVulnerabilitySeverity._('HIGH');
const GVulnerabilitySeverity _$gVulnerabilitySeverityCRITICAL =
    const GVulnerabilitySeverity._('CRITICAL');

GVulnerabilitySeverity _$gVulnerabilitySeverityValueOf(String name) {
  switch (name) {
    case 'INFO':
      return _$gVulnerabilitySeverityINFO;
    case 'UNKNOWN':
      return _$gVulnerabilitySeverityUNKNOWN;
    case 'LOW':
      return _$gVulnerabilitySeverityLOW;
    case 'MEDIUM':
      return _$gVulnerabilitySeverityMEDIUM;
    case 'HIGH':
      return _$gVulnerabilitySeverityHIGH;
    case 'CRITICAL':
      return _$gVulnerabilitySeverityCRITICAL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVulnerabilitySeverity> _$gVulnerabilitySeverityValues =
    new BuiltSet<GVulnerabilitySeverity>(const <GVulnerabilitySeverity>[
  _$gVulnerabilitySeverityINFO,
  _$gVulnerabilitySeverityUNKNOWN,
  _$gVulnerabilitySeverityLOW,
  _$gVulnerabilitySeverityMEDIUM,
  _$gVulnerabilitySeverityHIGH,
  _$gVulnerabilitySeverityCRITICAL,
]);

const GVulnerabilitySort _$gVulnerabilitySortseverity_desc =
    const GVulnerabilitySort._('severity_desc');
const GVulnerabilitySort _$gVulnerabilitySortseverity_asc =
    const GVulnerabilitySort._('severity_asc');
const GVulnerabilitySort _$gVulnerabilitySortdetected_desc =
    const GVulnerabilitySort._('detected_desc');
const GVulnerabilitySort _$gVulnerabilitySortdetected_asc =
    const GVulnerabilitySort._('detected_asc');

GVulnerabilitySort _$gVulnerabilitySortValueOf(String name) {
  switch (name) {
    case 'severity_desc':
      return _$gVulnerabilitySortseverity_desc;
    case 'severity_asc':
      return _$gVulnerabilitySortseverity_asc;
    case 'detected_desc':
      return _$gVulnerabilitySortdetected_desc;
    case 'detected_asc':
      return _$gVulnerabilitySortdetected_asc;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVulnerabilitySort> _$gVulnerabilitySortValues =
    new BuiltSet<GVulnerabilitySort>(const <GVulnerabilitySort>[
  _$gVulnerabilitySortseverity_desc,
  _$gVulnerabilitySortseverity_asc,
  _$gVulnerabilitySortdetected_desc,
  _$gVulnerabilitySortdetected_asc,
]);

const GVulnerabilityState _$gVulnerabilityStateCONFIRMED =
    const GVulnerabilityState._('CONFIRMED');
const GVulnerabilityState _$gVulnerabilityStateDETECTED =
    const GVulnerabilityState._('DETECTED');
const GVulnerabilityState _$gVulnerabilityStateDISMISSED =
    const GVulnerabilityState._('DISMISSED');
const GVulnerabilityState _$gVulnerabilityStateRESOLVED =
    const GVulnerabilityState._('RESOLVED');

GVulnerabilityState _$gVulnerabilityStateValueOf(String name) {
  switch (name) {
    case 'CONFIRMED':
      return _$gVulnerabilityStateCONFIRMED;
    case 'DETECTED':
      return _$gVulnerabilityStateDETECTED;
    case 'DISMISSED':
      return _$gVulnerabilityStateDISMISSED;
    case 'RESOLVED':
      return _$gVulnerabilityStateRESOLVED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVulnerabilityState> _$gVulnerabilityStateValues =
    new BuiltSet<GVulnerabilityState>(const <GVulnerabilityState>[
  _$gVulnerabilityStateCONFIRMED,
  _$gVulnerabilityStateDETECTED,
  _$gVulnerabilityStateDISMISSED,
  _$gVulnerabilityStateRESOLVED,
]);

const GWeightWildcardId _$gWeightWildcardIdNONE =
    const GWeightWildcardId._('NONE');
const GWeightWildcardId _$gWeightWildcardIdANY =
    const GWeightWildcardId._('ANY');

GWeightWildcardId _$gWeightWildcardIdValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gWeightWildcardIdNONE;
    case 'ANY':
      return _$gWeightWildcardIdANY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWeightWildcardId> _$gWeightWildcardIdValues =
    new BuiltSet<GWeightWildcardId>(const <GWeightWildcardId>[
  _$gWeightWildcardIdNONE,
  _$gWeightWildcardIdANY,
]);

const GWorkItemSort _$gWorkItemSortTITLE_ASC =
    const GWorkItemSort._('TITLE_ASC');
const GWorkItemSort _$gWorkItemSortTITLE_DESC =
    const GWorkItemSort._('TITLE_DESC');
const GWorkItemSort _$gWorkItemSortupdated_desc =
    const GWorkItemSort._('updated_desc');
const GWorkItemSort _$gWorkItemSortupdated_asc =
    const GWorkItemSort._('updated_asc');
const GWorkItemSort _$gWorkItemSortcreated_desc =
    const GWorkItemSort._('created_desc');
const GWorkItemSort _$gWorkItemSortcreated_asc =
    const GWorkItemSort._('created_asc');
const GWorkItemSort _$gWorkItemSortUPDATED_DESC =
    const GWorkItemSort._('UPDATED_DESC');
const GWorkItemSort _$gWorkItemSortUPDATED_ASC =
    const GWorkItemSort._('UPDATED_ASC');
const GWorkItemSort _$gWorkItemSortCREATED_DESC =
    const GWorkItemSort._('CREATED_DESC');
const GWorkItemSort _$gWorkItemSortCREATED_ASC =
    const GWorkItemSort._('CREATED_ASC');

GWorkItemSort _$gWorkItemSortValueOf(String name) {
  switch (name) {
    case 'TITLE_ASC':
      return _$gWorkItemSortTITLE_ASC;
    case 'TITLE_DESC':
      return _$gWorkItemSortTITLE_DESC;
    case 'updated_desc':
      return _$gWorkItemSortupdated_desc;
    case 'updated_asc':
      return _$gWorkItemSortupdated_asc;
    case 'created_desc':
      return _$gWorkItemSortcreated_desc;
    case 'created_asc':
      return _$gWorkItemSortcreated_asc;
    case 'UPDATED_DESC':
      return _$gWorkItemSortUPDATED_DESC;
    case 'UPDATED_ASC':
      return _$gWorkItemSortUPDATED_ASC;
    case 'CREATED_DESC':
      return _$gWorkItemSortCREATED_DESC;
    case 'CREATED_ASC':
      return _$gWorkItemSortCREATED_ASC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWorkItemSort> _$gWorkItemSortValues =
    new BuiltSet<GWorkItemSort>(const <GWorkItemSort>[
  _$gWorkItemSortTITLE_ASC,
  _$gWorkItemSortTITLE_DESC,
  _$gWorkItemSortupdated_desc,
  _$gWorkItemSortupdated_asc,
  _$gWorkItemSortcreated_desc,
  _$gWorkItemSortcreated_asc,
  _$gWorkItemSortUPDATED_DESC,
  _$gWorkItemSortUPDATED_ASC,
  _$gWorkItemSortCREATED_DESC,
  _$gWorkItemSortCREATED_ASC,
]);

const GWorkItemState _$gWorkItemStateOPEN = const GWorkItemState._('OPEN');
const GWorkItemState _$gWorkItemStateCLOSED = const GWorkItemState._('CLOSED');

GWorkItemState _$gWorkItemStateValueOf(String name) {
  switch (name) {
    case 'OPEN':
      return _$gWorkItemStateOPEN;
    case 'CLOSED':
      return _$gWorkItemStateCLOSED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWorkItemState> _$gWorkItemStateValues =
    new BuiltSet<GWorkItemState>(const <GWorkItemState>[
  _$gWorkItemStateOPEN,
  _$gWorkItemStateCLOSED,
]);

const GWorkItemStateEvent _$gWorkItemStateEventREOPEN =
    const GWorkItemStateEvent._('REOPEN');
const GWorkItemStateEvent _$gWorkItemStateEventCLOSE =
    const GWorkItemStateEvent._('CLOSE');

GWorkItemStateEvent _$gWorkItemStateEventValueOf(String name) {
  switch (name) {
    case 'REOPEN':
      return _$gWorkItemStateEventREOPEN;
    case 'CLOSE':
      return _$gWorkItemStateEventCLOSE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWorkItemStateEvent> _$gWorkItemStateEventValues =
    new BuiltSet<GWorkItemStateEvent>(const <GWorkItemStateEvent>[
  _$gWorkItemStateEventREOPEN,
  _$gWorkItemStateEventCLOSE,
]);

const GWorkItemWidgetType _$gWorkItemWidgetTypeITERATION =
    const GWorkItemWidgetType._('ITERATION');
const GWorkItemWidgetType _$gWorkItemWidgetTypeWEIGHT =
    const GWorkItemWidgetType._('WEIGHT');
const GWorkItemWidgetType _$gWorkItemWidgetTypeSTATUS =
    const GWorkItemWidgetType._('STATUS');
const GWorkItemWidgetType _$gWorkItemWidgetTypeASSIGNEES =
    const GWorkItemWidgetType._('ASSIGNEES');
const GWorkItemWidgetType _$gWorkItemWidgetTypeLABELS =
    const GWorkItemWidgetType._('LABELS');
const GWorkItemWidgetType _$gWorkItemWidgetTypeDESCRIPTION =
    const GWorkItemWidgetType._('DESCRIPTION');
const GWorkItemWidgetType _$gWorkItemWidgetTypeHIERARCHY =
    const GWorkItemWidgetType._('HIERARCHY');
const GWorkItemWidgetType _$gWorkItemWidgetTypeSTART_AND_DUE_DATE =
    const GWorkItemWidgetType._('START_AND_DUE_DATE');

GWorkItemWidgetType _$gWorkItemWidgetTypeValueOf(String name) {
  switch (name) {
    case 'ITERATION':
      return _$gWorkItemWidgetTypeITERATION;
    case 'WEIGHT':
      return _$gWorkItemWidgetTypeWEIGHT;
    case 'STATUS':
      return _$gWorkItemWidgetTypeSTATUS;
    case 'ASSIGNEES':
      return _$gWorkItemWidgetTypeASSIGNEES;
    case 'LABELS':
      return _$gWorkItemWidgetTypeLABELS;
    case 'DESCRIPTION':
      return _$gWorkItemWidgetTypeDESCRIPTION;
    case 'HIERARCHY':
      return _$gWorkItemWidgetTypeHIERARCHY;
    case 'START_AND_DUE_DATE':
      return _$gWorkItemWidgetTypeSTART_AND_DUE_DATE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWorkItemWidgetType> _$gWorkItemWidgetTypeValues =
    new BuiltSet<GWorkItemWidgetType>(const <GWorkItemWidgetType>[
  _$gWorkItemWidgetTypeITERATION,
  _$gWorkItemWidgetTypeWEIGHT,
  _$gWorkItemWidgetTypeSTATUS,
  _$gWorkItemWidgetTypeASSIGNEES,
  _$gWorkItemWidgetTypeLABELS,
  _$gWorkItemWidgetTypeDESCRIPTION,
  _$gWorkItemWidgetTypeHIERARCHY,
  _$gWorkItemWidgetTypeSTART_AND_DUE_DATE,
]);

Serializer<GAccessLevelEnum> _$gAccessLevelEnumSerializer =
    new _$GAccessLevelEnumSerializer();
Serializer<GAddProjectToSecurityDashboardInput>
    _$gAddProjectToSecurityDashboardInputSerializer =
    new _$GAddProjectToSecurityDashboardInputSerializer();
Serializer<GAdminSidekiqQueuesDeleteJobsInput>
    _$gAdminSidekiqQueuesDeleteJobsInputSerializer =
    new _$GAdminSidekiqQueuesDeleteJobsInputSerializer();
Serializer<GAgentTokenStatus> _$gAgentTokenStatusSerializer =
    new _$GAgentTokenStatusSerializer();
Serializer<GAlertManagementAlertSort> _$gAlertManagementAlertSortSerializer =
    new _$GAlertManagementAlertSortSerializer();
Serializer<GAlertManagementDomainFilter>
    _$gAlertManagementDomainFilterSerializer =
    new _$GAlertManagementDomainFilterSerializer();
Serializer<GAlertManagementIntegrationType>
    _$gAlertManagementIntegrationTypeSerializer =
    new _$GAlertManagementIntegrationTypeSerializer();
Serializer<GAlertManagementPayloadAlertFieldInput>
    _$gAlertManagementPayloadAlertFieldInputSerializer =
    new _$GAlertManagementPayloadAlertFieldInputSerializer();
Serializer<GAlertManagementPayloadAlertFieldName>
    _$gAlertManagementPayloadAlertFieldNameSerializer =
    new _$GAlertManagementPayloadAlertFieldNameSerializer();
Serializer<GAlertManagementPayloadAlertFieldType>
    _$gAlertManagementPayloadAlertFieldTypeSerializer =
    new _$GAlertManagementPayloadAlertFieldTypeSerializer();
Serializer<GAlertManagementSeverity> _$gAlertManagementSeveritySerializer =
    new _$GAlertManagementSeveritySerializer();
Serializer<GAlertManagementStatus> _$gAlertManagementStatusSerializer =
    new _$GAlertManagementStatusSerializer();
Serializer<GAlertSetAssigneesInput> _$gAlertSetAssigneesInputSerializer =
    new _$GAlertSetAssigneesInputSerializer();
Serializer<GAlertTodoCreateInput> _$gAlertTodoCreateInputSerializer =
    new _$GAlertTodoCreateInputSerializer();
Serializer<GApiFuzzingCiConfigurationCreateInput>
    _$gApiFuzzingCiConfigurationCreateInputSerializer =
    new _$GApiFuzzingCiConfigurationCreateInputSerializer();
Serializer<GApiFuzzingScanMode> _$gApiFuzzingScanModeSerializer =
    new _$GApiFuzzingScanModeSerializer();
Serializer<GApprovalRuleType> _$gApprovalRuleTypeSerializer =
    new _$GApprovalRuleTypeSerializer();
Serializer<GArtifactDestroyInput> _$gArtifactDestroyInputSerializer =
    new _$GArtifactDestroyInputSerializer();
Serializer<GAssigneeWildcardId> _$gAssigneeWildcardIdSerializer =
    new _$GAssigneeWildcardIdSerializer();
Serializer<GAuditEventsStreamingHeadersCreateInput>
    _$gAuditEventsStreamingHeadersCreateInputSerializer =
    new _$GAuditEventsStreamingHeadersCreateInputSerializer();
Serializer<GAuditEventsStreamingHeadersDestroyInput>
    _$gAuditEventsStreamingHeadersDestroyInputSerializer =
    new _$GAuditEventsStreamingHeadersDestroyInputSerializer();
Serializer<GAuditEventsStreamingHeadersUpdateInput>
    _$gAuditEventsStreamingHeadersUpdateInputSerializer =
    new _$GAuditEventsStreamingHeadersUpdateInputSerializer();
Serializer<GAvailabilityEnum> _$gAvailabilityEnumSerializer =
    new _$GAvailabilityEnumSerializer();
Serializer<GAwardEmojiAddInput> _$gAwardEmojiAddInputSerializer =
    new _$GAwardEmojiAddInputSerializer();
Serializer<GAwardEmojiRemoveInput> _$gAwardEmojiRemoveInputSerializer =
    new _$GAwardEmojiRemoveInputSerializer();
Serializer<GAwardEmojiToggleInput> _$gAwardEmojiToggleInputSerializer =
    new _$GAwardEmojiToggleInputSerializer();
Serializer<GBlobViewersType> _$gBlobViewersTypeSerializer =
    new _$GBlobViewersTypeSerializer();
Serializer<GBoardEpicCreateInput> _$gBoardEpicCreateInputSerializer =
    new _$GBoardEpicCreateInputSerializer();
Serializer<GBoardIssueInput> _$gBoardIssueInputSerializer =
    new _$GBoardIssueInputSerializer();
Serializer<GBoardListCreateInput> _$gBoardListCreateInputSerializer =
    new _$GBoardListCreateInputSerializer();
Serializer<GBoardListUpdateLimitMetricsInput>
    _$gBoardListUpdateLimitMetricsInputSerializer =
    new _$GBoardListUpdateLimitMetricsInputSerializer();
Serializer<GBulkEnableDevopsAdoptionNamespacesInput>
    _$gBulkEnableDevopsAdoptionNamespacesInputSerializer =
    new _$GBulkEnableDevopsAdoptionNamespacesInputSerializer();
Serializer<GBulkRunnerDeleteInput> _$gBulkRunnerDeleteInputSerializer =
    new _$GBulkRunnerDeleteInputSerializer();
Serializer<GCiCdSettingsUpdateInput> _$gCiCdSettingsUpdateInputSerializer =
    new _$GCiCdSettingsUpdateInputSerializer();
Serializer<GCiConfigIncludeType> _$gCiConfigIncludeTypeSerializer =
    new _$GCiConfigIncludeTypeSerializer();
Serializer<GCiConfigStatus> _$gCiConfigStatusSerializer =
    new _$GCiConfigStatusSerializer();
Serializer<GCiJobKind> _$gCiJobKindSerializer = new _$GCiJobKindSerializer();
Serializer<GCiJobStatus> _$gCiJobStatusSerializer =
    new _$GCiJobStatusSerializer();
Serializer<GCiJobTokenScopeAddProjectInput>
    _$gCiJobTokenScopeAddProjectInputSerializer =
    new _$GCiJobTokenScopeAddProjectInputSerializer();
Serializer<GCiJobTokenScopeRemoveProjectInput>
    _$gCiJobTokenScopeRemoveProjectInputSerializer =
    new _$GCiJobTokenScopeRemoveProjectInputSerializer();
Serializer<GCiRunnerAccessLevel> _$gCiRunnerAccessLevelSerializer =
    new _$GCiRunnerAccessLevelSerializer();
Serializer<GCiRunnerMembershipFilter> _$gCiRunnerMembershipFilterSerializer =
    new _$GCiRunnerMembershipFilterSerializer();
Serializer<GCiRunnerSort> _$gCiRunnerSortSerializer =
    new _$GCiRunnerSortSerializer();
Serializer<GCiRunnerStatus> _$gCiRunnerStatusSerializer =
    new _$GCiRunnerStatusSerializer();
Serializer<GCiRunnerType> _$gCiRunnerTypeSerializer =
    new _$GCiRunnerTypeSerializer();
Serializer<GCiRunnerUpgradeStatus> _$gCiRunnerUpgradeStatusSerializer =
    new _$GCiRunnerUpgradeStatusSerializer();
Serializer<GCiVariableInput> _$gCiVariableInputSerializer =
    new _$GCiVariableInputSerializer();
Serializer<GCiVariableType> _$gCiVariableTypeSerializer =
    new _$GCiVariableTypeSerializer();
Serializer<GClusterAgentDeleteInput> _$gClusterAgentDeleteInputSerializer =
    new _$GClusterAgentDeleteInputSerializer();
Serializer<GClusterAgentTokenCreateInput>
    _$gClusterAgentTokenCreateInputSerializer =
    new _$GClusterAgentTokenCreateInputSerializer();
Serializer<GClusterAgentTokenRevokeInput>
    _$gClusterAgentTokenRevokeInputSerializer =
    new _$GClusterAgentTokenRevokeInputSerializer();
Serializer<GCodeQualityDegradationSeverity>
    _$gCodeQualityDegradationSeveritySerializer =
    new _$GCodeQualityDegradationSeveritySerializer();
Serializer<GCommitAction> _$gCommitActionSerializer =
    new _$GCommitActionSerializer();
Serializer<GCommitActionMode> _$gCommitActionModeSerializer =
    new _$GCommitActionModeSerializer();
Serializer<GCommitCreateInput> _$gCommitCreateInputSerializer =
    new _$GCommitCreateInputSerializer();
Serializer<GCommitEncoding> _$gCommitEncodingSerializer =
    new _$GCommitEncodingSerializer();
Serializer<GComplianceFrameworkInput> _$gComplianceFrameworkInputSerializer =
    new _$GComplianceFrameworkInputSerializer();
Serializer<GComplianceViolationInput> _$gComplianceViolationInputSerializer =
    new _$GComplianceViolationInputSerializer();
Serializer<GComplianceViolationReason> _$gComplianceViolationReasonSerializer =
    new _$GComplianceViolationReasonSerializer();
Serializer<GComplianceViolationSeverity>
    _$gComplianceViolationSeveritySerializer =
    new _$GComplianceViolationSeveritySerializer();
Serializer<GComplianceViolationSort> _$gComplianceViolationSortSerializer =
    new _$GComplianceViolationSortSerializer();
Serializer<GConanMetadatumFileTypeEnum>
    _$gConanMetadatumFileTypeEnumSerializer =
    new _$GConanMetadatumFileTypeEnumSerializer();
Serializer<GConfigureContainerScanningInput>
    _$gConfigureContainerScanningInputSerializer =
    new _$GConfigureContainerScanningInputSerializer();
Serializer<GConfigureDependencyScanningInput>
    _$gConfigureDependencyScanningInputSerializer =
    new _$GConfigureDependencyScanningInputSerializer();
Serializer<GConfigureSastIacInput> _$gConfigureSastIacInputSerializer =
    new _$GConfigureSastIacInputSerializer();
Serializer<GConfigureSastInput> _$gConfigureSastInputSerializer =
    new _$GConfigureSastInputSerializer();
Serializer<GConfigureSecretDetectionInput>
    _$gConfigureSecretDetectionInputSerializer =
    new _$GConfigureSecretDetectionInputSerializer();
Serializer<GContactSort> _$gContactSortSerializer =
    new _$GContactSortSerializer();
Serializer<GContainerExpirationPolicyCadenceEnum>
    _$gContainerExpirationPolicyCadenceEnumSerializer =
    new _$GContainerExpirationPolicyCadenceEnumSerializer();
Serializer<GContainerExpirationPolicyKeepEnum>
    _$gContainerExpirationPolicyKeepEnumSerializer =
    new _$GContainerExpirationPolicyKeepEnumSerializer();
Serializer<GContainerExpirationPolicyOlderThanEnum>
    _$gContainerExpirationPolicyOlderThanEnumSerializer =
    new _$GContainerExpirationPolicyOlderThanEnumSerializer();
Serializer<GContainerRepositoryCleanupStatus>
    _$gContainerRepositoryCleanupStatusSerializer =
    new _$GContainerRepositoryCleanupStatusSerializer();
Serializer<GContainerRepositorySort> _$gContainerRepositorySortSerializer =
    new _$GContainerRepositorySortSerializer();
Serializer<GContainerRepositoryStatus> _$gContainerRepositoryStatusSerializer =
    new _$GContainerRepositoryStatusSerializer();
Serializer<GContainerRepositoryTagSort>
    _$gContainerRepositoryTagSortSerializer =
    new _$GContainerRepositoryTagSortSerializer();
Serializer<GCorpusCreateInput> _$gCorpusCreateInputSerializer =
    new _$GCorpusCreateInputSerializer();
Serializer<GCreateAlertIssueInput> _$gCreateAlertIssueInputSerializer =
    new _$GCreateAlertIssueInputSerializer();
Serializer<GCreateAnnotationInput> _$gCreateAnnotationInputSerializer =
    new _$GCreateAnnotationInputSerializer();
Serializer<GCreateBoardInput> _$gCreateBoardInputSerializer =
    new _$GCreateBoardInputSerializer();
Serializer<GCreateBranchInput> _$gCreateBranchInputSerializer =
    new _$GCreateBranchInputSerializer();
Serializer<GCreateClusterAgentInput> _$gCreateClusterAgentInputSerializer =
    new _$GCreateClusterAgentInputSerializer();
Serializer<GCreateComplianceFrameworkInput>
    _$gCreateComplianceFrameworkInputSerializer =
    new _$GCreateComplianceFrameworkInputSerializer();
Serializer<GCreateCustomEmojiInput> _$gCreateCustomEmojiInputSerializer =
    new _$GCreateCustomEmojiInputSerializer();
Serializer<GCreateDiffNoteInput> _$gCreateDiffNoteInputSerializer =
    new _$GCreateDiffNoteInputSerializer();
Serializer<GCreateEpicInput> _$gCreateEpicInputSerializer =
    new _$GCreateEpicInputSerializer();
Serializer<GCreateImageDiffNoteInput> _$gCreateImageDiffNoteInputSerializer =
    new _$GCreateImageDiffNoteInputSerializer();
Serializer<GCreateIssueInput> _$gCreateIssueInputSerializer =
    new _$GCreateIssueInputSerializer();
Serializer<GCreateIterationInput> _$gCreateIterationInputSerializer =
    new _$GCreateIterationInputSerializer();
Serializer<GCreateNoteInput> _$gCreateNoteInputSerializer =
    new _$GCreateNoteInputSerializer();
Serializer<GCreateRequirementInput> _$gCreateRequirementInputSerializer =
    new _$GCreateRequirementInputSerializer();
Serializer<GCreateSnippetInput> _$gCreateSnippetInputSerializer =
    new _$GCreateSnippetInputSerializer();
Serializer<GCreateTestCaseInput> _$gCreateTestCaseInputSerializer =
    new _$GCreateTestCaseInputSerializer();
Serializer<GCustomerRelationsContactCreateInput>
    _$gCustomerRelationsContactCreateInputSerializer =
    new _$GCustomerRelationsContactCreateInputSerializer();
Serializer<GCustomerRelationsContactState>
    _$gCustomerRelationsContactStateSerializer =
    new _$GCustomerRelationsContactStateSerializer();
Serializer<GCustomerRelationsContactUpdateInput>
    _$gCustomerRelationsContactUpdateInputSerializer =
    new _$GCustomerRelationsContactUpdateInputSerializer();
Serializer<GCustomerRelationsOrganizationCreateInput>
    _$gCustomerRelationsOrganizationCreateInputSerializer =
    new _$GCustomerRelationsOrganizationCreateInputSerializer();
Serializer<GCustomerRelationsOrganizationState>
    _$gCustomerRelationsOrganizationStateSerializer =
    new _$GCustomerRelationsOrganizationStateSerializer();
Serializer<GCustomerRelationsOrganizationUpdateInput>
    _$gCustomerRelationsOrganizationUpdateInputSerializer =
    new _$GCustomerRelationsOrganizationUpdateInputSerializer();
Serializer<GDastOnDemandScanCreateInput>
    _$gDastOnDemandScanCreateInputSerializer =
    new _$GDastOnDemandScanCreateInputSerializer();
Serializer<GDastProfileCadenceInput> _$gDastProfileCadenceInputSerializer =
    new _$GDastProfileCadenceInputSerializer();
Serializer<GDastProfileCadenceUnit> _$gDastProfileCadenceUnitSerializer =
    new _$GDastProfileCadenceUnitSerializer();
Serializer<GDastProfileCreateInput> _$gDastProfileCreateInputSerializer =
    new _$GDastProfileCreateInputSerializer();
Serializer<GDastProfileDeleteInput> _$gDastProfileDeleteInputSerializer =
    new _$GDastProfileDeleteInputSerializer();
Serializer<GDastProfileRunInput> _$gDastProfileRunInputSerializer =
    new _$GDastProfileRunInputSerializer();
Serializer<GDastProfileScheduleInput> _$gDastProfileScheduleInputSerializer =
    new _$GDastProfileScheduleInputSerializer();
Serializer<GDastProfileUpdateInput> _$gDastProfileUpdateInputSerializer =
    new _$GDastProfileUpdateInputSerializer();
Serializer<GDastScanMethodType> _$gDastScanMethodTypeSerializer =
    new _$GDastScanMethodTypeSerializer();
Serializer<GDastScannerProfileCreateInput>
    _$gDastScannerProfileCreateInputSerializer =
    new _$GDastScannerProfileCreateInputSerializer();
Serializer<GDastScannerProfileDeleteInput>
    _$gDastScannerProfileDeleteInputSerializer =
    new _$GDastScannerProfileDeleteInputSerializer();
Serializer<GDastScannerProfileUpdateInput>
    _$gDastScannerProfileUpdateInputSerializer =
    new _$GDastScannerProfileUpdateInputSerializer();
Serializer<GDastScanTypeEnum> _$gDastScanTypeEnumSerializer =
    new _$GDastScanTypeEnumSerializer();
Serializer<GDastSiteProfileAuthInput> _$gDastSiteProfileAuthInputSerializer =
    new _$GDastSiteProfileAuthInputSerializer();
Serializer<GDastSiteProfileCreateInput>
    _$gDastSiteProfileCreateInputSerializer =
    new _$GDastSiteProfileCreateInputSerializer();
Serializer<GDastSiteProfileDeleteInput>
    _$gDastSiteProfileDeleteInputSerializer =
    new _$GDastSiteProfileDeleteInputSerializer();
Serializer<GDastSiteProfileUpdateInput>
    _$gDastSiteProfileUpdateInputSerializer =
    new _$GDastSiteProfileUpdateInputSerializer();
Serializer<GDastSiteProfileValidationStatusEnum>
    _$gDastSiteProfileValidationStatusEnumSerializer =
    new _$GDastSiteProfileValidationStatusEnumSerializer();
Serializer<GDastSiteTokenCreateInput> _$gDastSiteTokenCreateInputSerializer =
    new _$GDastSiteTokenCreateInputSerializer();
Serializer<GDastSiteValidationCreateInput>
    _$gDastSiteValidationCreateInputSerializer =
    new _$GDastSiteValidationCreateInputSerializer();
Serializer<GDastSiteValidationRevokeInput>
    _$gDastSiteValidationRevokeInputSerializer =
    new _$GDastSiteValidationRevokeInputSerializer();
Serializer<GDastSiteValidationStatusEnum>
    _$gDastSiteValidationStatusEnumSerializer =
    new _$GDastSiteValidationStatusEnumSerializer();
Serializer<GDastSiteValidationStrategyEnum>
    _$gDastSiteValidationStrategyEnumSerializer =
    new _$GDastSiteValidationStrategyEnumSerializer();
Serializer<GDastTargetTypeEnum> _$gDastTargetTypeEnumSerializer =
    new _$GDastTargetTypeEnumSerializer();
Serializer<GDataVisualizationColorEnum>
    _$gDataVisualizationColorEnumSerializer =
    new _$GDataVisualizationColorEnumSerializer();
Serializer<GDataVisualizationWeightEnum>
    _$gDataVisualizationWeightEnumSerializer =
    new _$GDataVisualizationWeightEnumSerializer();
Serializer<GDeleteAnnotationInput> _$gDeleteAnnotationInputSerializer =
    new _$GDeleteAnnotationInputSerializer();
Serializer<GDependencyProxyManifestStatus>
    _$gDependencyProxyManifestStatusSerializer =
    new _$GDependencyProxyManifestStatusSerializer();
Serializer<GDeploymentsOrderByInput> _$gDeploymentsOrderByInputSerializer =
    new _$GDeploymentsOrderByInputSerializer();
Serializer<GDeploymentStatus> _$gDeploymentStatusSerializer =
    new _$GDeploymentStatusSerializer();
Serializer<GDeploymentTier> _$gDeploymentTierSerializer =
    new _$GDeploymentTierSerializer();
Serializer<GDesignCollectionCopyState> _$gDesignCollectionCopyStateSerializer =
    new _$GDesignCollectionCopyStateSerializer();
Serializer<GDesignManagementDeleteInput>
    _$gDesignManagementDeleteInputSerializer =
    new _$GDesignManagementDeleteInputSerializer();
Serializer<GDesignManagementMoveInput> _$gDesignManagementMoveInputSerializer =
    new _$GDesignManagementMoveInputSerializer();
Serializer<GDesignManagementUploadInput>
    _$gDesignManagementUploadInputSerializer =
    new _$GDesignManagementUploadInputSerializer();
Serializer<GDesignVersionEvent> _$gDesignVersionEventSerializer =
    new _$GDesignVersionEventSerializer();
Serializer<GDestroyBoardInput> _$gDestroyBoardInputSerializer =
    new _$GDestroyBoardInputSerializer();
Serializer<GDestroyBoardListInput> _$gDestroyBoardListInputSerializer =
    new _$GDestroyBoardListInputSerializer();
Serializer<GDestroyComplianceFrameworkInput>
    _$gDestroyComplianceFrameworkInputSerializer =
    new _$GDestroyComplianceFrameworkInputSerializer();
Serializer<GDestroyContainerRepositoryInput>
    _$gDestroyContainerRepositoryInputSerializer =
    new _$GDestroyContainerRepositoryInputSerializer();
Serializer<GDestroyContainerRepositoryTagsInput>
    _$gDestroyContainerRepositoryTagsInputSerializer =
    new _$GDestroyContainerRepositoryTagsInputSerializer();
Serializer<GDestroyCustomEmojiInput> _$gDestroyCustomEmojiInputSerializer =
    new _$GDestroyCustomEmojiInputSerializer();
Serializer<GDestroyEpicBoardInput> _$gDestroyEpicBoardInputSerializer =
    new _$GDestroyEpicBoardInputSerializer();
Serializer<GDestroyNoteInput> _$gDestroyNoteInputSerializer =
    new _$GDestroyNoteInputSerializer();
Serializer<GDestroyPackageFileInput> _$gDestroyPackageFileInputSerializer =
    new _$GDestroyPackageFileInputSerializer();
Serializer<GDestroyPackageFilesInput> _$gDestroyPackageFilesInputSerializer =
    new _$GDestroyPackageFilesInputSerializer();
Serializer<GDestroyPackageInput> _$gDestroyPackageInputSerializer =
    new _$GDestroyPackageInputSerializer();
Serializer<GDestroySnippetInput> _$gDestroySnippetInputSerializer =
    new _$GDestroySnippetInputSerializer();
Serializer<GDetailedMergeStatus> _$gDetailedMergeStatusSerializer =
    new _$GDetailedMergeStatusSerializer();
Serializer<GDiffImagePositionInput> _$gDiffImagePositionInputSerializer =
    new _$GDiffImagePositionInputSerializer();
Serializer<GDiffPathsInput> _$gDiffPathsInputSerializer =
    new _$GDiffPathsInputSerializer();
Serializer<GDiffPositionInput> _$gDiffPositionInputSerializer =
    new _$GDiffPositionInputSerializer();
Serializer<GDiffPositionType> _$gDiffPositionTypeSerializer =
    new _$GDiffPositionTypeSerializer();
Serializer<GDisableDevopsAdoptionNamespaceInput>
    _$gDisableDevopsAdoptionNamespaceInputSerializer =
    new _$GDisableDevopsAdoptionNamespaceInputSerializer();
Serializer<GDiscussionToggleResolveInput>
    _$gDiscussionToggleResolveInputSerializer =
    new _$GDiscussionToggleResolveInputSerializer();
Serializer<GDoraMetricBucketingInterval>
    _$gDoraMetricBucketingIntervalSerializer =
    new _$GDoraMetricBucketingIntervalSerializer();
Serializer<GDoraMetricType> _$gDoraMetricTypeSerializer =
    new _$GDoraMetricTypeSerializer();
Serializer<GEchoCreateInput> _$gEchoCreateInputSerializer =
    new _$GEchoCreateInputSerializer();
Serializer<GEnableDevopsAdoptionNamespaceInput>
    _$gEnableDevopsAdoptionNamespaceInputSerializer =
    new _$GEnableDevopsAdoptionNamespaceInputSerializer();
Serializer<GEntryType> _$gEntryTypeSerializer = new _$GEntryTypeSerializer();
Serializer<GEnvironmentsCanaryIngressUpdateInput>
    _$gEnvironmentsCanaryIngressUpdateInputSerializer =
    new _$GEnvironmentsCanaryIngressUpdateInputSerializer();
Serializer<GEpicAddIssueInput> _$gEpicAddIssueInputSerializer =
    new _$GEpicAddIssueInputSerializer();
Serializer<GEpicBoardCreateInput> _$gEpicBoardCreateInputSerializer =
    new _$GEpicBoardCreateInputSerializer();
Serializer<GEpicBoardListCreateInput> _$gEpicBoardListCreateInputSerializer =
    new _$GEpicBoardListCreateInputSerializer();
Serializer<GEpicBoardListDestroyInput> _$gEpicBoardListDestroyInputSerializer =
    new _$GEpicBoardListDestroyInputSerializer();
Serializer<GEpicBoardUpdateInput> _$gEpicBoardUpdateInputSerializer =
    new _$GEpicBoardUpdateInputSerializer();
Serializer<GEpicFilters> _$gEpicFiltersSerializer =
    new _$GEpicFiltersSerializer();
Serializer<GEpicMoveListInput> _$gEpicMoveListInputSerializer =
    new _$GEpicMoveListInputSerializer();
Serializer<GEpicSetSubscriptionInput> _$gEpicSetSubscriptionInputSerializer =
    new _$GEpicSetSubscriptionInputSerializer();
Serializer<GEpicSort> _$gEpicSortSerializer = new _$GEpicSortSerializer();
Serializer<GEpicState> _$gEpicStateSerializer = new _$GEpicStateSerializer();
Serializer<GEpicStateEvent> _$gEpicStateEventSerializer =
    new _$GEpicStateEventSerializer();
Serializer<GEpicTreeNodeFieldsInputType>
    _$gEpicTreeNodeFieldsInputTypeSerializer =
    new _$GEpicTreeNodeFieldsInputTypeSerializer();
Serializer<GEpicTreeReorderInput> _$gEpicTreeReorderInputSerializer =
    new _$GEpicTreeReorderInputSerializer();
Serializer<GEpicWildcardId> _$gEpicWildcardIdSerializer =
    new _$GEpicWildcardIdSerializer();
Serializer<GEscalationPolicyCreateInput>
    _$gEscalationPolicyCreateInputSerializer =
    new _$GEscalationPolicyCreateInputSerializer();
Serializer<GEscalationPolicyDestroyInput>
    _$gEscalationPolicyDestroyInputSerializer =
    new _$GEscalationPolicyDestroyInputSerializer();
Serializer<GEscalationPolicyUpdateInput>
    _$gEscalationPolicyUpdateInputSerializer =
    new _$GEscalationPolicyUpdateInputSerializer();
Serializer<GEscalationRuleInput> _$gEscalationRuleInputSerializer =
    new _$GEscalationRuleInputSerializer();
Serializer<GEscalationRuleStatus> _$gEscalationRuleStatusSerializer =
    new _$GEscalationRuleStatusSerializer();
Serializer<GEventAction> _$gEventActionSerializer =
    new _$GEventActionSerializer();
Serializer<GExportRequirementsInput> _$gExportRequirementsInputSerializer =
    new _$GExportRequirementsInputSerializer();
Serializer<GExternalAuditEventDestinationCreateInput>
    _$gExternalAuditEventDestinationCreateInputSerializer =
    new _$GExternalAuditEventDestinationCreateInputSerializer();
Serializer<GExternalAuditEventDestinationDestroyInput>
    _$gExternalAuditEventDestinationDestroyInputSerializer =
    new _$GExternalAuditEventDestinationDestroyInputSerializer();
Serializer<GExternalAuditEventDestinationUpdateInput>
    _$gExternalAuditEventDestinationUpdateInputSerializer =
    new _$GExternalAuditEventDestinationUpdateInputSerializer();
Serializer<GGitlabSubscriptionActivateInput>
    _$gGitlabSubscriptionActivateInputSerializer =
    new _$GGitlabSubscriptionActivateInputSerializer();
Serializer<GGroupMemberRelation> _$gGroupMemberRelationSerializer =
    new _$GGroupMemberRelationSerializer();
Serializer<GGroupPermission> _$gGroupPermissionSerializer =
    new _$GGroupPermissionSerializer();
Serializer<GGroupUpdateInput> _$gGroupUpdateInputSerializer =
    new _$GGroupUpdateInputSerializer();
Serializer<GHealthStatus> _$gHealthStatusSerializer =
    new _$GHealthStatusSerializer();
Serializer<GHealthStatusFilter> _$gHealthStatusFilterSerializer =
    new _$GHealthStatusFilterSerializer();
Serializer<GHttpIntegrationCreateInput>
    _$gHttpIntegrationCreateInputSerializer =
    new _$GHttpIntegrationCreateInputSerializer();
Serializer<GHttpIntegrationDestroyInput>
    _$gHttpIntegrationDestroyInputSerializer =
    new _$GHttpIntegrationDestroyInputSerializer();
Serializer<GHttpIntegrationResetTokenInput>
    _$gHttpIntegrationResetTokenInputSerializer =
    new _$GHttpIntegrationResetTokenInputSerializer();
Serializer<GHttpIntegrationUpdateInput>
    _$gHttpIntegrationUpdateInputSerializer =
    new _$GHttpIntegrationUpdateInputSerializer();
Serializer<GIssuableResourceLinkCreateInput>
    _$gIssuableResourceLinkCreateInputSerializer =
    new _$GIssuableResourceLinkCreateInputSerializer();
Serializer<GIssuableResourceLinkDestroyInput>
    _$gIssuableResourceLinkDestroyInputSerializer =
    new _$GIssuableResourceLinkDestroyInputSerializer();
Serializer<GIssuableResourceLinkType> _$gIssuableResourceLinkTypeSerializer =
    new _$GIssuableResourceLinkTypeSerializer();
Serializer<GIssuableSearchableField> _$gIssuableSearchableFieldSerializer =
    new _$GIssuableSearchableFieldSerializer();
Serializer<GIssuableSeverity> _$gIssuableSeveritySerializer =
    new _$GIssuableSeveritySerializer();
Serializer<GIssuableState> _$gIssuableStateSerializer =
    new _$GIssuableStateSerializer();
Serializer<GIssueCreationIterationWildcardId>
    _$gIssueCreationIterationWildcardIdSerializer =
    new _$GIssueCreationIterationWildcardIdSerializer();
Serializer<GIssueEscalationStatus> _$gIssueEscalationStatusSerializer =
    new _$GIssueEscalationStatusSerializer();
Serializer<GIssueMoveInput> _$gIssueMoveInputSerializer =
    new _$GIssueMoveInputSerializer();
Serializer<GIssueMoveListInput> _$gIssueMoveListInputSerializer =
    new _$GIssueMoveListInputSerializer();
Serializer<GIssueSetAssigneesInput> _$gIssueSetAssigneesInputSerializer =
    new _$GIssueSetAssigneesInputSerializer();
Serializer<GIssueSetConfidentialInput> _$gIssueSetConfidentialInputSerializer =
    new _$GIssueSetConfidentialInputSerializer();
Serializer<GIssueSetCrmContactsInput> _$gIssueSetCrmContactsInputSerializer =
    new _$GIssueSetCrmContactsInputSerializer();
Serializer<GIssueSetDueDateInput> _$gIssueSetDueDateInputSerializer =
    new _$GIssueSetDueDateInputSerializer();
Serializer<GIssueSetEpicInput> _$gIssueSetEpicInputSerializer =
    new _$GIssueSetEpicInputSerializer();
Serializer<GIssueSetEscalationPolicyInput>
    _$gIssueSetEscalationPolicyInputSerializer =
    new _$GIssueSetEscalationPolicyInputSerializer();
Serializer<GIssueSetEscalationStatusInput>
    _$gIssueSetEscalationStatusInputSerializer =
    new _$GIssueSetEscalationStatusInputSerializer();
Serializer<GIssueSetIterationInput> _$gIssueSetIterationInputSerializer =
    new _$GIssueSetIterationInputSerializer();
Serializer<GIssueSetLockedInput> _$gIssueSetLockedInputSerializer =
    new _$GIssueSetLockedInputSerializer();
Serializer<GIssueSetSeverityInput> _$gIssueSetSeverityInputSerializer =
    new _$GIssueSetSeverityInputSerializer();
Serializer<GIssueSetSubscriptionInput> _$gIssueSetSubscriptionInputSerializer =
    new _$GIssueSetSubscriptionInputSerializer();
Serializer<GIssueSetWeightInput> _$gIssueSetWeightInputSerializer =
    new _$GIssueSetWeightInputSerializer();
Serializer<GIssueSort> _$gIssueSortSerializer = new _$GIssueSortSerializer();
Serializer<GIssueState> _$gIssueStateSerializer = new _$GIssueStateSerializer();
Serializer<GIssueStateEvent> _$gIssueStateEventSerializer =
    new _$GIssueStateEventSerializer();
Serializer<GIssueType> _$gIssueTypeSerializer = new _$GIssueTypeSerializer();
Serializer<GIterationCadenceCreateInput>
    _$gIterationCadenceCreateInputSerializer =
    new _$GIterationCadenceCreateInputSerializer();
Serializer<GIterationCadenceDestroyInput>
    _$gIterationCadenceDestroyInputSerializer =
    new _$GIterationCadenceDestroyInputSerializer();
Serializer<GIterationCadenceUpdateInput>
    _$gIterationCadenceUpdateInputSerializer =
    new _$GIterationCadenceUpdateInputSerializer();
Serializer<GiterationCreateInput> _$giterationCreateInputSerializer =
    new _$GiterationCreateInputSerializer();
Serializer<GIterationDeleteInput> _$gIterationDeleteInputSerializer =
    new _$GIterationDeleteInputSerializer();
Serializer<GIterationSearchableField> _$gIterationSearchableFieldSerializer =
    new _$GIterationSearchableFieldSerializer();
Serializer<GIterationSort> _$gIterationSortSerializer =
    new _$GIterationSortSerializer();
Serializer<GIterationState> _$gIterationStateSerializer =
    new _$GIterationStateSerializer();
Serializer<GIterationWildcardId> _$gIterationWildcardIdSerializer =
    new _$GIterationWildcardIdSerializer();
Serializer<GJiraImportStartInput> _$gJiraImportStartInputSerializer =
    new _$GJiraImportStartInputSerializer();
Serializer<GJiraImportUsersInput> _$gJiraImportUsersInputSerializer =
    new _$GJiraImportUsersInputSerializer();
Serializer<GJiraUsersMappingInputType> _$gJiraUsersMappingInputTypeSerializer =
    new _$GJiraUsersMappingInputTypeSerializer();
Serializer<GJobArtifactFileType> _$gJobArtifactFileTypeSerializer =
    new _$GJobArtifactFileTypeSerializer();
Serializer<GJobArtifactsDestroyInput> _$gJobArtifactsDestroyInputSerializer =
    new _$GJobArtifactsDestroyInputSerializer();
Serializer<GJobCancelInput> _$gJobCancelInputSerializer =
    new _$GJobCancelInputSerializer();
Serializer<GJobPlayInput> _$gJobPlayInputSerializer =
    new _$GJobPlayInputSerializer();
Serializer<GJobRetryInput> _$gJobRetryInputSerializer =
    new _$GJobRetryInputSerializer();
Serializer<GJobUnscheduleInput> _$gJobUnscheduleInputSerializer =
    new _$GJobUnscheduleInputSerializer();
Serializer<GLabelCreateInput> _$gLabelCreateInputSerializer =
    new _$GLabelCreateInputSerializer();
Serializer<GListLimitMetric> _$gListLimitMetricSerializer =
    new _$GListLimitMetricSerializer();
Serializer<GMarkAsSpamSnippetInput> _$gMarkAsSpamSnippetInputSerializer =
    new _$GMarkAsSpamSnippetInputSerializer();
Serializer<GMeasurementIdentifier> _$gMeasurementIdentifierSerializer =
    new _$GMeasurementIdentifierSerializer();
Serializer<GMemberSort> _$gMemberSortSerializer = new _$GMemberSortSerializer();
Serializer<GMergeRequestAcceptInput> _$gMergeRequestAcceptInputSerializer =
    new _$GMergeRequestAcceptInputSerializer();
Serializer<GMergeRequestCreateInput> _$gMergeRequestCreateInputSerializer =
    new _$GMergeRequestCreateInputSerializer();
Serializer<GMergeRequestNewState> _$gMergeRequestNewStateSerializer =
    new _$GMergeRequestNewStateSerializer();
Serializer<GMergeRequestReviewerRereviewInput>
    _$gMergeRequestReviewerRereviewInputSerializer =
    new _$GMergeRequestReviewerRereviewInputSerializer();
Serializer<GMergeRequestReviewState> _$gMergeRequestReviewStateSerializer =
    new _$GMergeRequestReviewStateSerializer();
Serializer<GMergeRequestSetAssigneesInput>
    _$gMergeRequestSetAssigneesInputSerializer =
    new _$GMergeRequestSetAssigneesInputSerializer();
Serializer<GMergeRequestSetDraftInput> _$gMergeRequestSetDraftInputSerializer =
    new _$GMergeRequestSetDraftInputSerializer();
Serializer<GMergeRequestSetLabelsInput>
    _$gMergeRequestSetLabelsInputSerializer =
    new _$GMergeRequestSetLabelsInputSerializer();
Serializer<GMergeRequestSetLockedInput>
    _$gMergeRequestSetLockedInputSerializer =
    new _$GMergeRequestSetLockedInputSerializer();
Serializer<GMergeRequestSetMilestoneInput>
    _$gMergeRequestSetMilestoneInputSerializer =
    new _$GMergeRequestSetMilestoneInputSerializer();
Serializer<GMergeRequestSetReviewersInput>
    _$gMergeRequestSetReviewersInputSerializer =
    new _$GMergeRequestSetReviewersInputSerializer();
Serializer<GMergeRequestSetSubscriptionInput>
    _$gMergeRequestSetSubscriptionInputSerializer =
    new _$GMergeRequestSetSubscriptionInputSerializer();
Serializer<GMergeRequestSort> _$gMergeRequestSortSerializer =
    new _$GMergeRequestSortSerializer();
Serializer<GMergeRequestsResolverNegatedParams>
    _$gMergeRequestsResolverNegatedParamsSerializer =
    new _$GMergeRequestsResolverNegatedParamsSerializer();
Serializer<GMergeRequestState> _$gMergeRequestStateSerializer =
    new _$GMergeRequestStateSerializer();
Serializer<GMergeRequestUpdateInput> _$gMergeRequestUpdateInputSerializer =
    new _$GMergeRequestUpdateInputSerializer();
Serializer<GMergeStatus> _$gMergeStatusSerializer =
    new _$GMergeStatusSerializer();
Serializer<GMergeStrategyEnum> _$gMergeStrategyEnumSerializer =
    new _$GMergeStrategyEnumSerializer();
Serializer<GMilestoneSort> _$gMilestoneSortSerializer =
    new _$GMilestoneSortSerializer();
Serializer<GMilestoneStateEnum> _$gMilestoneStateEnumSerializer =
    new _$GMilestoneStateEnumSerializer();
Serializer<GMilestoneWildcardId> _$gMilestoneWildcardIdSerializer =
    new _$GMilestoneWildcardIdSerializer();
Serializer<GMoveType> _$gMoveTypeSerializer = new _$GMoveTypeSerializer();
Serializer<GMutationOperationMode> _$gMutationOperationModeSerializer =
    new _$GMutationOperationModeSerializer();
Serializer<GNamespaceBanDestroyInput> _$gNamespaceBanDestroyInputSerializer =
    new _$GNamespaceBanDestroyInputSerializer();
Serializer<GNamespaceCiCdSettingsUpdateInput>
    _$gNamespaceCiCdSettingsUpdateInputSerializer =
    new _$GNamespaceCiCdSettingsUpdateInputSerializer();
Serializer<GNamespaceIncreaseStorageTemporarilyInput>
    _$gNamespaceIncreaseStorageTemporarilyInputSerializer =
    new _$GNamespaceIncreaseStorageTemporarilyInputSerializer();
Serializer<GNamespaceProjectSort> _$gNamespaceProjectSortSerializer =
    new _$GNamespaceProjectSortSerializer();
Serializer<GNegatedBoardIssueInput> _$gNegatedBoardIssueInputSerializer =
    new _$GNegatedBoardIssueInputSerializer();
Serializer<GNegatedEpicBoardIssueInput>
    _$gNegatedEpicBoardIssueInputSerializer =
    new _$GNegatedEpicBoardIssueInputSerializer();
Serializer<GNegatedEpicFilterInput> _$gNegatedEpicFilterInputSerializer =
    new _$GNegatedEpicFilterInputSerializer();
Serializer<GNegatedIssueFilterInput> _$gNegatedIssueFilterInputSerializer =
    new _$GNegatedIssueFilterInputSerializer();
Serializer<GNegatedIterationWildcardId>
    _$gNegatedIterationWildcardIdSerializer =
    new _$GNegatedIterationWildcardIdSerializer();
Serializer<GNegatedMilestoneWildcardId>
    _$gNegatedMilestoneWildcardIdSerializer =
    new _$GNegatedMilestoneWildcardIdSerializer();
Serializer<GNetworkPolicyKind> _$gNetworkPolicyKindSerializer =
    new _$GNetworkPolicyKindSerializer();
Serializer<GOncallRotationActivePeriodInputType>
    _$gOncallRotationActivePeriodInputTypeSerializer =
    new _$GOncallRotationActivePeriodInputTypeSerializer();
Serializer<GOncallRotationCreateInput> _$gOncallRotationCreateInputSerializer =
    new _$GOncallRotationCreateInputSerializer();
Serializer<GOncallRotationDateInputType>
    _$gOncallRotationDateInputTypeSerializer =
    new _$GOncallRotationDateInputTypeSerializer();
Serializer<GOncallRotationDestroyInput>
    _$gOncallRotationDestroyInputSerializer =
    new _$GOncallRotationDestroyInputSerializer();
Serializer<GOncallRotationLengthInputType>
    _$gOncallRotationLengthInputTypeSerializer =
    new _$GOncallRotationLengthInputTypeSerializer();
Serializer<GOncallRotationUnitEnum> _$gOncallRotationUnitEnumSerializer =
    new _$GOncallRotationUnitEnumSerializer();
Serializer<GOncallRotationUpdateInput> _$gOncallRotationUpdateInputSerializer =
    new _$GOncallRotationUpdateInputSerializer();
Serializer<GOncallScheduleCreateInput> _$gOncallScheduleCreateInputSerializer =
    new _$GOncallScheduleCreateInputSerializer();
Serializer<GOncallScheduleDestroyInput>
    _$gOncallScheduleDestroyInputSerializer =
    new _$GOncallScheduleDestroyInputSerializer();
Serializer<GOncallScheduleUpdateInput> _$gOncallScheduleUpdateInputSerializer =
    new _$GOncallScheduleUpdateInputSerializer();
Serializer<GOncallUserInputType> _$gOncallUserInputTypeSerializer =
    new _$GOncallUserInputTypeSerializer();
Serializer<GOrganizationSort> _$gOrganizationSortSerializer =
    new _$GOrganizationSortSerializer();
Serializer<GPackageDependencyType> _$gPackageDependencyTypeSerializer =
    new _$GPackageDependencyTypeSerializer();
Serializer<GPackageGroupSort> _$gPackageGroupSortSerializer =
    new _$GPackageGroupSortSerializer();
Serializer<GPackagesCleanupKeepDuplicatedPackageFilesEnum>
    _$gPackagesCleanupKeepDuplicatedPackageFilesEnumSerializer =
    new _$GPackagesCleanupKeepDuplicatedPackageFilesEnumSerializer();
Serializer<GPackageSort> _$gPackageSortSerializer =
    new _$GPackageSortSerializer();
Serializer<GPackageStatus> _$gPackageStatusSerializer =
    new _$GPackageStatusSerializer();
Serializer<GPackageTypeEnum> _$gPackageTypeEnumSerializer =
    new _$GPackageTypeEnumSerializer();
Serializer<GPagesMarkOnboardingCompleteInput>
    _$gPagesMarkOnboardingCompleteInputSerializer =
    new _$GPagesMarkOnboardingCompleteInputSerializer();
Serializer<GPipelineCancelInput> _$gPipelineCancelInputSerializer =
    new _$GPipelineCancelInputSerializer();
Serializer<GPipelineConfigSourceEnum> _$gPipelineConfigSourceEnumSerializer =
    new _$GPipelineConfigSourceEnumSerializer();
Serializer<GPipelineDestroyInput> _$gPipelineDestroyInputSerializer =
    new _$GPipelineDestroyInputSerializer();
Serializer<GPipelineMergeRequestEventType>
    _$gPipelineMergeRequestEventTypeSerializer =
    new _$GPipelineMergeRequestEventTypeSerializer();
Serializer<GPipelineRetryInput> _$gPipelineRetryInputSerializer =
    new _$GPipelineRetryInputSerializer();
Serializer<GPipelineScheduleStatus> _$gPipelineScheduleStatusSerializer =
    new _$GPipelineScheduleStatusSerializer();
Serializer<GPipelineScopeEnum> _$gPipelineScopeEnumSerializer =
    new _$GPipelineScopeEnumSerializer();
Serializer<GPipelineStatusEnum> _$gPipelineStatusEnumSerializer =
    new _$GPipelineStatusEnumSerializer();
Serializer<GProjectCiCdSettingsUpdateInput>
    _$gProjectCiCdSettingsUpdateInputSerializer =
    new _$GProjectCiCdSettingsUpdateInputSerializer();
Serializer<GProjectMemberRelation> _$gProjectMemberRelationSerializer =
    new _$GProjectMemberRelationSerializer();
Serializer<GProjectSetComplianceFrameworkInput>
    _$gProjectSetComplianceFrameworkInputSerializer =
    new _$GProjectSetComplianceFrameworkInputSerializer();
Serializer<GProjectSetLockedInput> _$gProjectSetLockedInputSerializer =
    new _$GProjectSetLockedInputSerializer();
Serializer<GPrometheusIntegrationCreateInput>
    _$gPrometheusIntegrationCreateInputSerializer =
    new _$GPrometheusIntegrationCreateInputSerializer();
Serializer<GPrometheusIntegrationResetTokenInput>
    _$gPrometheusIntegrationResetTokenInputSerializer =
    new _$GPrometheusIntegrationResetTokenInputSerializer();
Serializer<GPrometheusIntegrationUpdateInput>
    _$gPrometheusIntegrationUpdateInputSerializer =
    new _$GPrometheusIntegrationUpdateInputSerializer();
Serializer<GPromoteToEpicInput> _$gPromoteToEpicInputSerializer =
    new _$GPromoteToEpicInputSerializer();
Serializer<GRegistryState> _$gRegistryStateSerializer =
    new _$GRegistryStateSerializer();
Serializer<GReleaseAssetLinkCreateInput>
    _$gReleaseAssetLinkCreateInputSerializer =
    new _$GReleaseAssetLinkCreateInputSerializer();
Serializer<GReleaseAssetLinkDeleteInput>
    _$gReleaseAssetLinkDeleteInputSerializer =
    new _$GReleaseAssetLinkDeleteInputSerializer();
Serializer<GReleaseAssetLinkInput> _$gReleaseAssetLinkInputSerializer =
    new _$GReleaseAssetLinkInputSerializer();
Serializer<GReleaseAssetLinkType> _$gReleaseAssetLinkTypeSerializer =
    new _$GReleaseAssetLinkTypeSerializer();
Serializer<GReleaseAssetLinkUpdateInput>
    _$gReleaseAssetLinkUpdateInputSerializer =
    new _$GReleaseAssetLinkUpdateInputSerializer();
Serializer<GReleaseAssetsInput> _$gReleaseAssetsInputSerializer =
    new _$GReleaseAssetsInputSerializer();
Serializer<GReleaseCreateInput> _$gReleaseCreateInputSerializer =
    new _$GReleaseCreateInputSerializer();
Serializer<GReleaseDeleteInput> _$gReleaseDeleteInputSerializer =
    new _$GReleaseDeleteInputSerializer();
Serializer<GReleaseSort> _$gReleaseSortSerializer =
    new _$GReleaseSortSerializer();
Serializer<GReleaseTagWildcardId> _$gReleaseTagWildcardIdSerializer =
    new _$GReleaseTagWildcardIdSerializer();
Serializer<GReleaseUpdateInput> _$gReleaseUpdateInputSerializer =
    new _$GReleaseUpdateInputSerializer();
Serializer<GRemoveProjectFromSecurityDashboardInput>
    _$gRemoveProjectFromSecurityDashboardInputSerializer =
    new _$GRemoveProjectFromSecurityDashboardInputSerializer();
Serializer<GReplicationStateEnum> _$gReplicationStateEnumSerializer =
    new _$GReplicationStateEnumSerializer();
Serializer<GRepositionImageDiffNoteInput>
    _$gRepositionImageDiffNoteInputSerializer =
    new _$GRepositionImageDiffNoteInputSerializer();
Serializer<GRequirementState> _$gRequirementStateSerializer =
    new _$GRequirementStateSerializer();
Serializer<GRequirementStatusFilter> _$gRequirementStatusFilterSerializer =
    new _$GRequirementStatusFilterSerializer();
Serializer<GRunnerDeleteInput> _$gRunnerDeleteInputSerializer =
    new _$GRunnerDeleteInputSerializer();
Serializer<GRunnersRegistrationTokenResetInput>
    _$gRunnersRegistrationTokenResetInputSerializer =
    new _$GRunnersRegistrationTokenResetInputSerializer();
Serializer<GRunnerUpdateInput> _$gRunnerUpdateInputSerializer =
    new _$GRunnerUpdateInputSerializer();
Serializer<GSastCiConfigurationAnalyzersEntityInput>
    _$gSastCiConfigurationAnalyzersEntityInputSerializer =
    new _$GSastCiConfigurationAnalyzersEntityInputSerializer();
Serializer<GSastCiConfigurationEntityInput>
    _$gSastCiConfigurationEntityInputSerializer =
    new _$GSastCiConfigurationEntityInputSerializer();
Serializer<GSastCiConfigurationInput> _$gSastCiConfigurationInputSerializer =
    new _$GSastCiConfigurationInputSerializer();
Serializer<GSastUiComponentSize> _$gSastUiComponentSizeSerializer =
    new _$GSastUiComponentSizeSerializer();
Serializer<GSavedReplyCreateInput> _$gSavedReplyCreateInputSerializer =
    new _$GSavedReplyCreateInputSerializer();
Serializer<GSavedReplyDestroyInput> _$gSavedReplyDestroyInputSerializer =
    new _$GSavedReplyDestroyInputSerializer();
Serializer<GSavedReplyUpdateInput> _$gSavedReplyUpdateInputSerializer =
    new _$GSavedReplyUpdateInputSerializer();
Serializer<GScanExecutionPolicyCommitInput>
    _$gScanExecutionPolicyCommitInputSerializer =
    new _$GScanExecutionPolicyCommitInputSerializer();
Serializer<GScanStatus> _$gScanStatusSerializer = new _$GScanStatusSerializer();
Serializer<GSecurityFindingCreateIssueInput>
    _$gSecurityFindingCreateIssueInputSerializer =
    new _$GSecurityFindingCreateIssueInputSerializer();
Serializer<GSecurityFindingDismissInput>
    _$gSecurityFindingDismissInputSerializer =
    new _$GSecurityFindingDismissInputSerializer();
Serializer<GSecurityPolicyProjectAssignInput>
    _$gSecurityPolicyProjectAssignInputSerializer =
    new _$GSecurityPolicyProjectAssignInputSerializer();
Serializer<GSecurityPolicyProjectCreateInput>
    _$gSecurityPolicyProjectCreateInputSerializer =
    new _$GSecurityPolicyProjectCreateInputSerializer();
Serializer<GSecurityPolicyProjectUnassignInput>
    _$gSecurityPolicyProjectUnassignInputSerializer =
    new _$GSecurityPolicyProjectUnassignInputSerializer();
Serializer<GSecurityPolicyRelationType>
    _$gSecurityPolicyRelationTypeSerializer =
    new _$GSecurityPolicyRelationTypeSerializer();
Serializer<GSecurityReportTypeEnum> _$gSecurityReportTypeEnumSerializer =
    new _$GSecurityReportTypeEnumSerializer();
Serializer<GSecurityScannerType> _$gSecurityScannerTypeSerializer =
    new _$GSecurityScannerTypeSerializer();
Serializer<GSecurityTrainingUpdateInput>
    _$gSecurityTrainingUpdateInputSerializer =
    new _$GSecurityTrainingUpdateInputSerializer();
Serializer<GSentryErrorStatus> _$gSentryErrorStatusSerializer =
    new _$GSentryErrorStatusSerializer();
Serializer<GServiceType> _$gServiceTypeSerializer =
    new _$GServiceTypeSerializer();
Serializer<GShaFormat> _$gShaFormatSerializer = new _$GShaFormatSerializer();
Serializer<GSharedRunnersSetting> _$gSharedRunnersSettingSerializer =
    new _$GSharedRunnersSettingSerializer();
Serializer<GSnippetBlobActionEnum> _$gSnippetBlobActionEnumSerializer =
    new _$GSnippetBlobActionEnumSerializer();
Serializer<GSnippetBlobActionInputType>
    _$gSnippetBlobActionInputTypeSerializer =
    new _$GSnippetBlobActionInputTypeSerializer();
Serializer<GSort> _$gSortSerializer = new _$GSortSerializer();
Serializer<GSortDirectionEnum> _$gSortDirectionEnumSerializer =
    new _$GSortDirectionEnumSerializer();
Serializer<GTerraformStateDeleteInput> _$gTerraformStateDeleteInputSerializer =
    new _$GTerraformStateDeleteInputSerializer();
Serializer<GTerraformStateLockInput> _$gTerraformStateLockInputSerializer =
    new _$GTerraformStateLockInputSerializer();
Serializer<GTerraformStateUnlockInput> _$gTerraformStateUnlockInputSerializer =
    new _$GTerraformStateUnlockInputSerializer();
Serializer<GTestCaseStatus> _$gTestCaseStatusSerializer =
    new _$GTestCaseStatusSerializer();
Serializer<GTestReportState> _$gTestReportStateSerializer =
    new _$GTestReportStateSerializer();
Serializer<GTimeboxReportErrorReason> _$gTimeboxReportErrorReasonSerializer =
    new _$GTimeboxReportErrorReasonSerializer();
Serializer<GTimeframe> _$gTimeframeSerializer = new _$GTimeframeSerializer();
Serializer<GTimelineEventCreateInput> _$gTimelineEventCreateInputSerializer =
    new _$GTimelineEventCreateInputSerializer();
Serializer<GTimelineEventDestroyInput> _$gTimelineEventDestroyInputSerializer =
    new _$GTimelineEventDestroyInputSerializer();
Serializer<GTimelineEventPromoteFromNoteInput>
    _$gTimelineEventPromoteFromNoteInputSerializer =
    new _$GTimelineEventPromoteFromNoteInputSerializer();
Serializer<GTimelineEventUpdateInput> _$gTimelineEventUpdateInputSerializer =
    new _$GTimelineEventUpdateInputSerializer();
Serializer<GTimelogCreateInput> _$gTimelogCreateInputSerializer =
    new _$GTimelogCreateInputSerializer();
Serializer<GTimelogDeleteInput> _$gTimelogDeleteInputSerializer =
    new _$GTimelogDeleteInputSerializer();
Serializer<GTodoActionEnum> _$gTodoActionEnumSerializer =
    new _$GTodoActionEnumSerializer();
Serializer<GTodoCreateInput> _$gTodoCreateInputSerializer =
    new _$GTodoCreateInputSerializer();
Serializer<GTodoMarkDoneInput> _$gTodoMarkDoneInputSerializer =
    new _$GTodoMarkDoneInputSerializer();
Serializer<GTodoRestoreInput> _$gTodoRestoreInputSerializer =
    new _$GTodoRestoreInputSerializer();
Serializer<GTodoRestoreManyInput> _$gTodoRestoreManyInputSerializer =
    new _$GTodoRestoreManyInputSerializer();
Serializer<GTodosMarkAllDoneInput> _$gTodosMarkAllDoneInputSerializer =
    new _$GTodosMarkAllDoneInputSerializer();
Serializer<GTodoStateEnum> _$gTodoStateEnumSerializer =
    new _$GTodoStateEnumSerializer();
Serializer<GTodoTargetEnum> _$gTodoTargetEnumSerializer =
    new _$GTodoTargetEnumSerializer();
Serializer<GTrainingUrlRequestStatus> _$gTrainingUrlRequestStatusSerializer =
    new _$GTrainingUrlRequestStatusSerializer();
Serializer<GTypeEnum> _$gTypeEnumSerializer = new _$GTypeEnumSerializer();
Serializer<GUpdateAlertStatusInput> _$gUpdateAlertStatusInputSerializer =
    new _$GUpdateAlertStatusInputSerializer();
Serializer<GUpdateBoardEpicUserPreferencesInput>
    _$gUpdateBoardEpicUserPreferencesInputSerializer =
    new _$GUpdateBoardEpicUserPreferencesInputSerializer();
Serializer<GUpdateBoardInput> _$gUpdateBoardInputSerializer =
    new _$GUpdateBoardInputSerializer();
Serializer<GUpdateBoardListInput> _$gUpdateBoardListInputSerializer =
    new _$GUpdateBoardListInputSerializer();
Serializer<GUpdateComplianceFrameworkInput>
    _$gUpdateComplianceFrameworkInputSerializer =
    new _$GUpdateComplianceFrameworkInputSerializer();
Serializer<GUpdateContainerExpirationPolicyInput>
    _$gUpdateContainerExpirationPolicyInputSerializer =
    new _$GUpdateContainerExpirationPolicyInputSerializer();
Serializer<GUpdateDependencyProxyImageTtlGroupPolicyInput>
    _$gUpdateDependencyProxyImageTtlGroupPolicyInputSerializer =
    new _$GUpdateDependencyProxyImageTtlGroupPolicyInputSerializer();
Serializer<GUpdateDependencyProxySettingsInput>
    _$gUpdateDependencyProxySettingsInputSerializer =
    new _$GUpdateDependencyProxySettingsInputSerializer();
Serializer<GUpdateDiffImagePositionInput>
    _$gUpdateDiffImagePositionInputSerializer =
    new _$GUpdateDiffImagePositionInputSerializer();
Serializer<GUpdateEpicBoardListInput> _$gUpdateEpicBoardListInputSerializer =
    new _$GUpdateEpicBoardListInputSerializer();
Serializer<GUpdateEpicInput> _$gUpdateEpicInputSerializer =
    new _$GUpdateEpicInputSerializer();
Serializer<GUpdateImageDiffNoteInput> _$gUpdateImageDiffNoteInputSerializer =
    new _$GUpdateImageDiffNoteInputSerializer();
Serializer<GUpdateIssueInput> _$gUpdateIssueInputSerializer =
    new _$GUpdateIssueInputSerializer();
Serializer<GUpdateIterationInput> _$gUpdateIterationInputSerializer =
    new _$GUpdateIterationInputSerializer();
Serializer<GUpdateNamespacePackageSettingsInput>
    _$gUpdateNamespacePackageSettingsInputSerializer =
    new _$GUpdateNamespacePackageSettingsInputSerializer();
Serializer<GUpdateNoteInput> _$gUpdateNoteInputSerializer =
    new _$GUpdateNoteInputSerializer();
Serializer<GUpdatePackagesCleanupPolicyInput>
    _$gUpdatePackagesCleanupPolicyInputSerializer =
    new _$GUpdatePackagesCleanupPolicyInputSerializer();
Serializer<GUpdateRequirementInput> _$gUpdateRequirementInputSerializer =
    new _$GUpdateRequirementInputSerializer();
Serializer<GUpdateSnippetInput> _$gUpdateSnippetInputSerializer =
    new _$GUpdateSnippetInputSerializer();
Serializer<GUploadDeleteInput> _$gUploadDeleteInputSerializer =
    new _$GUploadDeleteInputSerializer();
Serializer<GUserCalloutCreateInput> _$gUserCalloutCreateInputSerializer =
    new _$GUserCalloutCreateInputSerializer();
Serializer<GUserCalloutFeatureNameEnum>
    _$gUserCalloutFeatureNameEnumSerializer =
    new _$GUserCalloutFeatureNameEnumSerializer();
Serializer<GUserPreferencesUpdateInput>
    _$gUserPreferencesUpdateInputSerializer =
    new _$GUserPreferencesUpdateInputSerializer();
Serializer<GUserState> _$gUserStateSerializer = new _$GUserStateSerializer();
Serializer<GVerificationStateEnum> _$gVerificationStateEnumSerializer =
    new _$GVerificationStateEnumSerializer();
Serializer<GVisibilityLevelsEnum> _$gVisibilityLevelsEnumSerializer =
    new _$GVisibilityLevelsEnumSerializer();
Serializer<GVisibilityScopesEnum> _$gVisibilityScopesEnumSerializer =
    new _$GVisibilityScopesEnumSerializer();
Serializer<GVulnerabilityConfidence> _$gVulnerabilityConfidenceSerializer =
    new _$GVulnerabilityConfidenceSerializer();
Serializer<GVulnerabilityConfirmInput> _$gVulnerabilityConfirmInputSerializer =
    new _$GVulnerabilityConfirmInputSerializer();
Serializer<GVulnerabilityCreateInput> _$gVulnerabilityCreateInputSerializer =
    new _$GVulnerabilityCreateInputSerializer();
Serializer<GVulnerabilityDismissalReason>
    _$gVulnerabilityDismissalReasonSerializer =
    new _$GVulnerabilityDismissalReasonSerializer();
Serializer<GVulnerabilityDismissInput> _$gVulnerabilityDismissInputSerializer =
    new _$GVulnerabilityDismissInputSerializer();
Serializer<GVulnerabilityExternalIssueLinkCreateInput>
    _$gVulnerabilityExternalIssueLinkCreateInputSerializer =
    new _$GVulnerabilityExternalIssueLinkCreateInputSerializer();
Serializer<GVulnerabilityExternalIssueLinkDestroyInput>
    _$gVulnerabilityExternalIssueLinkDestroyInputSerializer =
    new _$GVulnerabilityExternalIssueLinkDestroyInputSerializer();
Serializer<GVulnerabilityExternalIssueLinkExternalTracker>
    _$gVulnerabilityExternalIssueLinkExternalTrackerSerializer =
    new _$GVulnerabilityExternalIssueLinkExternalTrackerSerializer();
Serializer<GVulnerabilityExternalIssueLinkType>
    _$gVulnerabilityExternalIssueLinkTypeSerializer =
    new _$GVulnerabilityExternalIssueLinkTypeSerializer();
Serializer<GVulnerabilityFindingDismissInput>
    _$gVulnerabilityFindingDismissInputSerializer =
    new _$GVulnerabilityFindingDismissInputSerializer();
Serializer<GVulnerabilityGrade> _$gVulnerabilityGradeSerializer =
    new _$GVulnerabilityGradeSerializer();
Serializer<GVulnerabilityIdentifierInput>
    _$gVulnerabilityIdentifierInputSerializer =
    new _$GVulnerabilityIdentifierInputSerializer();
Serializer<GVulnerabilityIssueLinkType>
    _$gVulnerabilityIssueLinkTypeSerializer =
    new _$GVulnerabilityIssueLinkTypeSerializer();
Serializer<GVulnerabilityReportType> _$gVulnerabilityReportTypeSerializer =
    new _$GVulnerabilityReportTypeSerializer();
Serializer<GVulnerabilityResolveInput> _$gVulnerabilityResolveInputSerializer =
    new _$GVulnerabilityResolveInputSerializer();
Serializer<GVulnerabilityRevertToDetectedInput>
    _$gVulnerabilityRevertToDetectedInputSerializer =
    new _$GVulnerabilityRevertToDetectedInputSerializer();
Serializer<GVulnerabilityScannerInput> _$gVulnerabilityScannerInputSerializer =
    new _$GVulnerabilityScannerInputSerializer();
Serializer<GVulnerabilityScannerVendorInput>
    _$gVulnerabilityScannerVendorInputSerializer =
    new _$GVulnerabilityScannerVendorInputSerializer();
Serializer<GVulnerabilitySeverity> _$gVulnerabilitySeveritySerializer =
    new _$GVulnerabilitySeveritySerializer();
Serializer<GVulnerabilitySort> _$gVulnerabilitySortSerializer =
    new _$GVulnerabilitySortSerializer();
Serializer<GVulnerabilityState> _$gVulnerabilityStateSerializer =
    new _$GVulnerabilityStateSerializer();
Serializer<GWeightWildcardId> _$gWeightWildcardIdSerializer =
    new _$GWeightWildcardIdSerializer();
Serializer<GWorkItemConvertTaskInput> _$gWorkItemConvertTaskInputSerializer =
    new _$GWorkItemConvertTaskInputSerializer();
Serializer<GWorkItemCreateFromTaskInput>
    _$gWorkItemCreateFromTaskInputSerializer =
    new _$GWorkItemCreateFromTaskInputSerializer();
Serializer<GWorkItemCreateInput> _$gWorkItemCreateInputSerializer =
    new _$GWorkItemCreateInputSerializer();
Serializer<GWorkItemDeletedTaskInput> _$gWorkItemDeletedTaskInputSerializer =
    new _$GWorkItemDeletedTaskInputSerializer();
Serializer<GWorkItemDeleteInput> _$gWorkItemDeleteInputSerializer =
    new _$GWorkItemDeleteInputSerializer();
Serializer<GWorkItemDeleteTaskInput> _$gWorkItemDeleteTaskInputSerializer =
    new _$GWorkItemDeleteTaskInputSerializer();
Serializer<GWorkItemSort> _$gWorkItemSortSerializer =
    new _$GWorkItemSortSerializer();
Serializer<GWorkItemState> _$gWorkItemStateSerializer =
    new _$GWorkItemStateSerializer();
Serializer<GWorkItemStateEvent> _$gWorkItemStateEventSerializer =
    new _$GWorkItemStateEventSerializer();
Serializer<GWorkItemUpdatedTaskInput> _$gWorkItemUpdatedTaskInputSerializer =
    new _$GWorkItemUpdatedTaskInputSerializer();
Serializer<GWorkItemUpdateInput> _$gWorkItemUpdateInputSerializer =
    new _$GWorkItemUpdateInputSerializer();
Serializer<GWorkItemUpdateTaskInput> _$gWorkItemUpdateTaskInputSerializer =
    new _$GWorkItemUpdateTaskInputSerializer();
Serializer<GWorkItemWidgetAssigneesInput>
    _$gWorkItemWidgetAssigneesInputSerializer =
    new _$GWorkItemWidgetAssigneesInputSerializer();
Serializer<GWorkItemWidgetDescriptionInput>
    _$gWorkItemWidgetDescriptionInputSerializer =
    new _$GWorkItemWidgetDescriptionInputSerializer();
Serializer<GWorkItemWidgetHierarchyCreateInput>
    _$gWorkItemWidgetHierarchyCreateInputSerializer =
    new _$GWorkItemWidgetHierarchyCreateInputSerializer();
Serializer<GWorkItemWidgetHierarchyUpdateInput>
    _$gWorkItemWidgetHierarchyUpdateInputSerializer =
    new _$GWorkItemWidgetHierarchyUpdateInputSerializer();
Serializer<GWorkItemWidgetIterationInput>
    _$gWorkItemWidgetIterationInputSerializer =
    new _$GWorkItemWidgetIterationInputSerializer();
Serializer<GWorkItemWidgetStartAndDueDateUpdateInput>
    _$gWorkItemWidgetStartAndDueDateUpdateInputSerializer =
    new _$GWorkItemWidgetStartAndDueDateUpdateInputSerializer();
Serializer<GWorkItemWidgetType> _$gWorkItemWidgetTypeSerializer =
    new _$GWorkItemWidgetTypeSerializer();
Serializer<GWorkItemWidgetWeightInput> _$gWorkItemWidgetWeightInputSerializer =
    new _$GWorkItemWidgetWeightInputSerializer();

class _$GAccessLevelEnumSerializer
    implements PrimitiveSerializer<GAccessLevelEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAccessLevelEnum];
  @override
  final String wireName = 'GAccessLevelEnum';

  @override
  Object serialize(Serializers serializers, GAccessLevelEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAccessLevelEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAccessLevelEnum.valueOf(serialized as String);
}

class _$GAddProjectToSecurityDashboardInputSerializer
    implements StructuredSerializer<GAddProjectToSecurityDashboardInput> {
  @override
  final Iterable<Type> types = const [
    GAddProjectToSecurityDashboardInput,
    _$GAddProjectToSecurityDashboardInput
  ];
  @override
  final String wireName = 'GAddProjectToSecurityDashboardInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAddProjectToSecurityDashboardInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GProjectID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAddProjectToSecurityDashboardInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAddProjectToSecurityDashboardInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectID))! as GProjectID);
          break;
      }
    }

    return result.build();
  }
}

class _$GAdminSidekiqQueuesDeleteJobsInputSerializer
    implements StructuredSerializer<GAdminSidekiqQueuesDeleteJobsInput> {
  @override
  final Iterable<Type> types = const [
    GAdminSidekiqQueuesDeleteJobsInput,
    _$GAdminSidekiqQueuesDeleteJobsInput
  ];
  @override
  final String wireName = 'GAdminSidekiqQueuesDeleteJobsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAdminSidekiqQueuesDeleteJobsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'queueName',
      serializers.serialize(object.queueName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.project;
    if (value != null) {
      result
        ..add('project')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.rootNamespace;
    if (value != null) {
      result
        ..add('rootNamespace')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.clientId;
    if (value != null) {
      result
        ..add('clientId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.callerId;
    if (value != null) {
      result
        ..add('callerId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.remoteIp;
    if (value != null) {
      result
        ..add('remoteIp')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.jobId;
    if (value != null) {
      result
        ..add('jobId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.pipelineId;
    if (value != null) {
      result
        ..add('pipelineId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.relatedClass;
    if (value != null) {
      result
        ..add('relatedClass')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.featureCategory;
    if (value != null) {
      result
        ..add('featureCategory')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.artifactSize;
    if (value != null) {
      result
        ..add('artifactSize')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.artifactUsedCdn;
    if (value != null) {
      result
        ..add('artifactUsedCdn')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.artifactsDependenciesSize;
    if (value != null) {
      result
        ..add('artifactsDependenciesSize')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.artifactsDependenciesCount;
    if (value != null) {
      result
        ..add('artifactsDependenciesCount')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.rootCallerId;
    if (value != null) {
      result
        ..add('rootCallerId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.subscriptionPlan;
    if (value != null) {
      result
        ..add('subscriptionPlan')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.workerClass;
    if (value != null) {
      result
        ..add('workerClass')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAdminSidekiqQueuesDeleteJobsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAdminSidekiqQueuesDeleteJobsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'user':
          result.user = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'project':
          result.project = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'rootNamespace':
          result.rootNamespace = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'clientId':
          result.clientId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'callerId':
          result.callerId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'remoteIp':
          result.remoteIp = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'jobId':
          result.jobId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'pipelineId':
          result.pipelineId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'relatedClass':
          result.relatedClass = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'featureCategory':
          result.featureCategory = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'artifactSize':
          result.artifactSize = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'artifactUsedCdn':
          result.artifactUsedCdn = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'artifactsDependenciesSize':
          result.artifactsDependenciesSize = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'artifactsDependenciesCount':
          result.artifactsDependenciesCount = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'rootCallerId':
          result.rootCallerId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'subscriptionPlan':
          result.subscriptionPlan = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'workerClass':
          result.workerClass = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'queueName':
          result.queueName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAgentTokenStatusSerializer
    implements PrimitiveSerializer<GAgentTokenStatus> {
  @override
  final Iterable<Type> types = const <Type>[GAgentTokenStatus];
  @override
  final String wireName = 'GAgentTokenStatus';

  @override
  Object serialize(Serializers serializers, GAgentTokenStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAgentTokenStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAgentTokenStatus.valueOf(serialized as String);
}

class _$GAlertManagementAlertSortSerializer
    implements PrimitiveSerializer<GAlertManagementAlertSort> {
  @override
  final Iterable<Type> types = const <Type>[GAlertManagementAlertSort];
  @override
  final String wireName = 'GAlertManagementAlertSort';

  @override
  Object serialize(Serializers serializers, GAlertManagementAlertSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAlertManagementAlertSort deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAlertManagementAlertSort.valueOf(serialized as String);
}

class _$GAlertManagementDomainFilterSerializer
    implements PrimitiveSerializer<GAlertManagementDomainFilter> {
  @override
  final Iterable<Type> types = const <Type>[GAlertManagementDomainFilter];
  @override
  final String wireName = 'GAlertManagementDomainFilter';

  @override
  Object serialize(Serializers serializers, GAlertManagementDomainFilter object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAlertManagementDomainFilter deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAlertManagementDomainFilter.valueOf(serialized as String);
}

class _$GAlertManagementIntegrationTypeSerializer
    implements PrimitiveSerializer<GAlertManagementIntegrationType> {
  @override
  final Iterable<Type> types = const <Type>[GAlertManagementIntegrationType];
  @override
  final String wireName = 'GAlertManagementIntegrationType';

  @override
  Object serialize(
          Serializers serializers, GAlertManagementIntegrationType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAlertManagementIntegrationType deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAlertManagementIntegrationType.valueOf(serialized as String);
}

class _$GAlertManagementPayloadAlertFieldInputSerializer
    implements StructuredSerializer<GAlertManagementPayloadAlertFieldInput> {
  @override
  final Iterable<Type> types = const [
    GAlertManagementPayloadAlertFieldInput,
    _$GAlertManagementPayloadAlertFieldInput
  ];
  @override
  final String wireName = 'GAlertManagementPayloadAlertFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAlertManagementPayloadAlertFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fieldName',
      serializers.serialize(object.fieldName,
          specifiedType: const FullType(GAlertManagementPayloadAlertFieldName)),
      'path',
      serializers.serialize(object.path,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GPayloadAlertFieldPathSegment)])),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GAlertManagementPayloadAlertFieldType)),
    ];
    Object? value;
    value = object.label;
    if (value != null) {
      result
        ..add('label')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAlertManagementPayloadAlertFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAlertManagementPayloadAlertFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'fieldName':
          result.fieldName = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GAlertManagementPayloadAlertFieldName))!
              as GAlertManagementPayloadAlertFieldName;
          break;
        case 'path':
          result.path.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPayloadAlertFieldPathSegment)
              ]))! as BuiltList<Object?>);
          break;
        case 'label':
          result.label = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GAlertManagementPayloadAlertFieldType))!
              as GAlertManagementPayloadAlertFieldType;
          break;
      }
    }

    return result.build();
  }
}

class _$GAlertManagementPayloadAlertFieldNameSerializer
    implements PrimitiveSerializer<GAlertManagementPayloadAlertFieldName> {
  @override
  final Iterable<Type> types = const <Type>[
    GAlertManagementPayloadAlertFieldName
  ];
  @override
  final String wireName = 'GAlertManagementPayloadAlertFieldName';

  @override
  Object serialize(
          Serializers serializers, GAlertManagementPayloadAlertFieldName object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAlertManagementPayloadAlertFieldName deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAlertManagementPayloadAlertFieldName.valueOf(serialized as String);
}

class _$GAlertManagementPayloadAlertFieldTypeSerializer
    implements PrimitiveSerializer<GAlertManagementPayloadAlertFieldType> {
  @override
  final Iterable<Type> types = const <Type>[
    GAlertManagementPayloadAlertFieldType
  ];
  @override
  final String wireName = 'GAlertManagementPayloadAlertFieldType';

  @override
  Object serialize(
          Serializers serializers, GAlertManagementPayloadAlertFieldType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAlertManagementPayloadAlertFieldType deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAlertManagementPayloadAlertFieldType.valueOf(serialized as String);
}

class _$GAlertManagementSeveritySerializer
    implements PrimitiveSerializer<GAlertManagementSeverity> {
  @override
  final Iterable<Type> types = const <Type>[GAlertManagementSeverity];
  @override
  final String wireName = 'GAlertManagementSeverity';

  @override
  Object serialize(Serializers serializers, GAlertManagementSeverity object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAlertManagementSeverity deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAlertManagementSeverity.valueOf(serialized as String);
}

class _$GAlertManagementStatusSerializer
    implements PrimitiveSerializer<GAlertManagementStatus> {
  @override
  final Iterable<Type> types = const <Type>[GAlertManagementStatus];
  @override
  final String wireName = 'GAlertManagementStatus';

  @override
  Object serialize(Serializers serializers, GAlertManagementStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAlertManagementStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAlertManagementStatus.valueOf(serialized as String);
}

class _$GAlertSetAssigneesInputSerializer
    implements StructuredSerializer<GAlertSetAssigneesInput> {
  @override
  final Iterable<Type> types = const [
    GAlertSetAssigneesInput,
    _$GAlertSetAssigneesInput
  ];
  @override
  final String wireName = 'GAlertSetAssigneesInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAlertSetAssigneesInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'assigneeUsernames',
      serializers.serialize(object.assigneeUsernames,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.operationMode;
    if (value != null) {
      result
        ..add('operationMode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMutationOperationMode)));
    }
    return result;
  }

  @override
  GAlertSetAssigneesInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAlertSetAssigneesInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'assigneeUsernames':
          result.assigneeUsernames.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'operationMode':
          result.operationMode = serializers.deserialize(value,
                  specifiedType: const FullType(GMutationOperationMode))
              as GMutationOperationMode?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAlertTodoCreateInputSerializer
    implements StructuredSerializer<GAlertTodoCreateInput> {
  @override
  final Iterable<Type> types = const [
    GAlertTodoCreateInput,
    _$GAlertTodoCreateInput
  ];
  @override
  final String wireName = 'GAlertTodoCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAlertTodoCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAlertTodoCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAlertTodoCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GApiFuzzingCiConfigurationCreateInputSerializer
    implements StructuredSerializer<GApiFuzzingCiConfigurationCreateInput> {
  @override
  final Iterable<Type> types = const [
    GApiFuzzingCiConfigurationCreateInput,
    _$GApiFuzzingCiConfigurationCreateInput
  ];
  @override
  final String wireName = 'GApiFuzzingCiConfigurationCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GApiFuzzingCiConfigurationCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'apiSpecificationFile',
      serializers.serialize(object.apiSpecificationFile,
          specifiedType: const FullType(String)),
      'scanMode',
      serializers.serialize(object.scanMode,
          specifiedType: const FullType(GApiFuzzingScanMode)),
      'target',
      serializers.serialize(object.target,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.authPassword;
    if (value != null) {
      result
        ..add('authPassword')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.authUsername;
    if (value != null) {
      result
        ..add('authUsername')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.scanProfile;
    if (value != null) {
      result
        ..add('scanProfile')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GApiFuzzingCiConfigurationCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GApiFuzzingCiConfigurationCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'apiSpecificationFile':
          result.apiSpecificationFile = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'authPassword':
          result.authPassword = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'authUsername':
          result.authUsername = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'scanMode':
          result.scanMode = serializers.deserialize(value,
                  specifiedType: const FullType(GApiFuzzingScanMode))!
              as GApiFuzzingScanMode;
          break;
        case 'scanProfile':
          result.scanProfile = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'target':
          result.target = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GApiFuzzingScanModeSerializer
    implements PrimitiveSerializer<GApiFuzzingScanMode> {
  @override
  final Iterable<Type> types = const <Type>[GApiFuzzingScanMode];
  @override
  final String wireName = 'GApiFuzzingScanMode';

  @override
  Object serialize(Serializers serializers, GApiFuzzingScanMode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GApiFuzzingScanMode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GApiFuzzingScanMode.valueOf(serialized as String);
}

class _$GApprovalRuleTypeSerializer
    implements PrimitiveSerializer<GApprovalRuleType> {
  @override
  final Iterable<Type> types = const <Type>[GApprovalRuleType];
  @override
  final String wireName = 'GApprovalRuleType';

  @override
  Object serialize(Serializers serializers, GApprovalRuleType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GApprovalRuleType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GApprovalRuleType.valueOf(serialized as String);
}

class _$GArtifactDestroyInputSerializer
    implements StructuredSerializer<GArtifactDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GArtifactDestroyInput,
    _$GArtifactDestroyInput
  ];
  @override
  final String wireName = 'GArtifactDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GArtifactDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiJobArtifactID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GArtifactDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GArtifactDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GCiJobArtifactID))!
              as GCiJobArtifactID);
          break;
      }
    }

    return result.build();
  }
}

class _$GAssigneeWildcardIdSerializer
    implements PrimitiveSerializer<GAssigneeWildcardId> {
  @override
  final Iterable<Type> types = const <Type>[GAssigneeWildcardId];
  @override
  final String wireName = 'GAssigneeWildcardId';

  @override
  Object serialize(Serializers serializers, GAssigneeWildcardId object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAssigneeWildcardId deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAssigneeWildcardId.valueOf(serialized as String);
}

class _$GAuditEventsStreamingHeadersCreateInputSerializer
    implements StructuredSerializer<GAuditEventsStreamingHeadersCreateInput> {
  @override
  final Iterable<Type> types = const [
    GAuditEventsStreamingHeadersCreateInput,
    _$GAuditEventsStreamingHeadersCreateInput
  ];
  @override
  final String wireName = 'GAuditEventsStreamingHeadersCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAuditEventsStreamingHeadersCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'key',
      serializers.serialize(object.key, specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
      'destinationId',
      serializers.serialize(object.destinationId,
          specifiedType:
              const FullType(GAuditEventsExternalAuditEventDestinationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAuditEventsStreamingHeadersCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAuditEventsStreamingHeadersCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'key':
          result.key = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'destinationId':
          result.destinationId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GAuditEventsExternalAuditEventDestinationID))!
              as GAuditEventsExternalAuditEventDestinationID);
          break;
      }
    }

    return result.build();
  }
}

class _$GAuditEventsStreamingHeadersDestroyInputSerializer
    implements StructuredSerializer<GAuditEventsStreamingHeadersDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GAuditEventsStreamingHeadersDestroyInput,
    _$GAuditEventsStreamingHeadersDestroyInput
  ];
  @override
  final String wireName = 'GAuditEventsStreamingHeadersDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAuditEventsStreamingHeadersDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'headerId',
      serializers.serialize(object.headerId,
          specifiedType: const FullType(GAuditEventsStreamingHeaderID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAuditEventsStreamingHeadersDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAuditEventsStreamingHeadersDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'headerId':
          result.headerId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GAuditEventsStreamingHeaderID))!
              as GAuditEventsStreamingHeaderID);
          break;
      }
    }

    return result.build();
  }
}

class _$GAuditEventsStreamingHeadersUpdateInputSerializer
    implements StructuredSerializer<GAuditEventsStreamingHeadersUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GAuditEventsStreamingHeadersUpdateInput,
    _$GAuditEventsStreamingHeadersUpdateInput
  ];
  @override
  final String wireName = 'GAuditEventsStreamingHeadersUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAuditEventsStreamingHeadersUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'headerId',
      serializers.serialize(object.headerId,
          specifiedType: const FullType(GAuditEventsStreamingHeaderID)),
      'key',
      serializers.serialize(object.key, specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAuditEventsStreamingHeadersUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAuditEventsStreamingHeadersUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'headerId':
          result.headerId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GAuditEventsStreamingHeaderID))!
              as GAuditEventsStreamingHeaderID);
          break;
        case 'key':
          result.key = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAvailabilityEnumSerializer
    implements PrimitiveSerializer<GAvailabilityEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAvailabilityEnum];
  @override
  final String wireName = 'GAvailabilityEnum';

  @override
  Object serialize(Serializers serializers, GAvailabilityEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAvailabilityEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAvailabilityEnum.valueOf(serialized as String);
}

class _$GAwardEmojiAddInputSerializer
    implements StructuredSerializer<GAwardEmojiAddInput> {
  @override
  final Iterable<Type> types = const [
    GAwardEmojiAddInput,
    _$GAwardEmojiAddInput
  ];
  @override
  final String wireName = 'GAwardEmojiAddInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAwardEmojiAddInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'awardableId',
      serializers.serialize(object.awardableId,
          specifiedType: const FullType(GAwardableID)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAwardEmojiAddInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAwardEmojiAddInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'awardableId':
          result.awardableId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAwardableID))! as GAwardableID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAwardEmojiRemoveInputSerializer
    implements StructuredSerializer<GAwardEmojiRemoveInput> {
  @override
  final Iterable<Type> types = const [
    GAwardEmojiRemoveInput,
    _$GAwardEmojiRemoveInput
  ];
  @override
  final String wireName = 'GAwardEmojiRemoveInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAwardEmojiRemoveInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'awardableId',
      serializers.serialize(object.awardableId,
          specifiedType: const FullType(GAwardableID)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAwardEmojiRemoveInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAwardEmojiRemoveInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'awardableId':
          result.awardableId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAwardableID))! as GAwardableID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAwardEmojiToggleInputSerializer
    implements StructuredSerializer<GAwardEmojiToggleInput> {
  @override
  final Iterable<Type> types = const [
    GAwardEmojiToggleInput,
    _$GAwardEmojiToggleInput
  ];
  @override
  final String wireName = 'GAwardEmojiToggleInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAwardEmojiToggleInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'awardableId',
      serializers.serialize(object.awardableId,
          specifiedType: const FullType(GAwardableID)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAwardEmojiToggleInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAwardEmojiToggleInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'awardableId':
          result.awardableId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAwardableID))! as GAwardableID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GBlobViewersTypeSerializer
    implements PrimitiveSerializer<GBlobViewersType> {
  @override
  final Iterable<Type> types = const <Type>[GBlobViewersType];
  @override
  final String wireName = 'GBlobViewersType';

  @override
  Object serialize(Serializers serializers, GBlobViewersType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GBlobViewersType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GBlobViewersType.valueOf(serialized as String);
}

class _$GBoardEpicCreateInputSerializer
    implements StructuredSerializer<GBoardEpicCreateInput> {
  @override
  final Iterable<Type> types = const [
    GBoardEpicCreateInput,
    _$GBoardEpicCreateInput
  ];
  @override
  final String wireName = 'GBoardEpicCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GBoardEpicCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
      'boardId',
      serializers.serialize(object.boardId,
          specifiedType: const FullType(GBoardsEpicBoardID)),
      'listId',
      serializers.serialize(object.listId,
          specifiedType: const FullType(GBoardsEpicListID)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GBoardEpicCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GBoardEpicCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'boardId':
          result.boardId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoardsEpicBoardID))!
              as GBoardsEpicBoardID);
          break;
        case 'listId':
          result.listId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoardsEpicListID))!
              as GBoardsEpicListID);
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GBoardIssueInputSerializer
    implements StructuredSerializer<GBoardIssueInput> {
  @override
  final Iterable<Type> types = const [GBoardIssueInput, _$GBoardIssueInput];
  @override
  final String wireName = 'GBoardIssueInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GBoardIssueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.labelName;
    if (value != null) {
      result
        ..add('labelName')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.authorUsername;
    if (value != null) {
      result
        ..add('authorUsername')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.myReactionEmoji;
    if (value != null) {
      result
        ..add('myReactionEmoji')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.iids;
    if (value != null) {
      result
        ..add('iids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.milestoneTitle;
    if (value != null) {
      result
        ..add('milestoneTitle')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.assigneeUsername;
    if (value != null) {
      result
        ..add('assigneeUsername')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.releaseTag;
    if (value != null) {
      result
        ..add('releaseTag')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.types;
    if (value != null) {
      result
        ..add('types')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GIssueType)])));
    }
    value = object.milestoneWildcardId;
    if (value != null) {
      result
        ..add('milestoneWildcardId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMilestoneWildcardId)));
    }
    value = object.epicId;
    if (value != null) {
      result
        ..add('epicId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicID)));
    }
    value = object.iterationTitle;
    if (value != null) {
      result
        ..add('iterationTitle')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.iterationId;
    if (value != null) {
      result
        ..add('iterationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GIterationID)])));
    }
    value = object.not;
    if (value != null) {
      result
        ..add('not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GNegatedBoardIssueInput)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.assigneeWildcardId;
    if (value != null) {
      result
        ..add('assigneeWildcardId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAssigneeWildcardId)));
    }
    value = object.confidential;
    if (value != null) {
      result
        ..add('confidential')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.epicWildcardId;
    if (value != null) {
      result
        ..add('epicWildcardId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicWildcardId)));
    }
    value = object.iterationWildcardId;
    if (value != null) {
      result
        ..add('iterationWildcardId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationWildcardId)));
    }
    value = object.iterationCadenceId;
    if (value != null) {
      result
        ..add('iterationCadenceId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GIterationsCadenceID)])));
    }
    value = object.weightWildcardId;
    if (value != null) {
      result
        ..add('weightWildcardId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWeightWildcardId)));
    }
    return result;
  }

  @override
  GBoardIssueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GBoardIssueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'labelName':
          result.labelName.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'authorUsername':
          result.authorUsername = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'myReactionEmoji':
          result.myReactionEmoji = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'iids':
          result.iids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'milestoneTitle':
          result.milestoneTitle = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'assigneeUsername':
          result.assigneeUsername.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'releaseTag':
          result.releaseTag = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'types':
          result.types.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GIssueType)]))!
              as BuiltList<Object?>);
          break;
        case 'milestoneWildcardId':
          result.milestoneWildcardId = serializers.deserialize(value,
                  specifiedType: const FullType(GMilestoneWildcardId))
              as GMilestoneWildcardId?;
          break;
        case 'epicId':
          result.epicId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
        case 'iterationTitle':
          result.iterationTitle = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'weight':
          result.weight = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'iterationId':
          result.iterationId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GIterationID)]))!
              as BuiltList<Object?>);
          break;
        case 'not':
          result.not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GNegatedBoardIssueInput))!
              as GNegatedBoardIssueInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'assigneeWildcardId':
          result.assigneeWildcardId = serializers.deserialize(value,
                  specifiedType: const FullType(GAssigneeWildcardId))
              as GAssigneeWildcardId?;
          break;
        case 'confidential':
          result.confidential = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'epicWildcardId':
          result.epicWildcardId = serializers.deserialize(value,
                  specifiedType: const FullType(GEpicWildcardId))
              as GEpicWildcardId?;
          break;
        case 'iterationWildcardId':
          result.iterationWildcardId = serializers.deserialize(value,
                  specifiedType: const FullType(GIterationWildcardId))
              as GIterationWildcardId?;
          break;
        case 'iterationCadenceId':
          result.iterationCadenceId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GIterationsCadenceID)]))!
              as BuiltList<Object?>);
          break;
        case 'weightWildcardId':
          result.weightWildcardId = serializers.deserialize(value,
                  specifiedType: const FullType(GWeightWildcardId))
              as GWeightWildcardId?;
          break;
      }
    }

    return result.build();
  }
}

class _$GBoardListCreateInputSerializer
    implements StructuredSerializer<GBoardListCreateInput> {
  @override
  final Iterable<Type> types = const [
    GBoardListCreateInput,
    _$GBoardListCreateInput
  ];
  @override
  final String wireName = 'GBoardListCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GBoardListCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'boardId',
      serializers.serialize(object.boardId,
          specifiedType: const FullType(GBoardID)),
    ];
    Object? value;
    value = object.backlog;
    if (value != null) {
      result
        ..add('backlog')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.labelId;
    if (value != null) {
      result
        ..add('labelId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GLabelID)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.milestoneId;
    if (value != null) {
      result
        ..add('milestoneId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMilestoneID)));
    }
    value = object.iterationId;
    if (value != null) {
      result
        ..add('iterationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationID)));
    }
    value = object.assigneeId;
    if (value != null) {
      result
        ..add('assigneeId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserID)));
    }
    return result;
  }

  @override
  GBoardListCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GBoardListCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'backlog':
          result.backlog = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'labelId':
          result.labelId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GLabelID))! as GLabelID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'boardId':
          result.boardId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GBoardID))! as GBoardID);
          break;
        case 'milestoneId':
          result.milestoneId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMilestoneID))! as GMilestoneID);
          break;
        case 'iterationId':
          result.iterationId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIterationID))! as GIterationID);
          break;
        case 'assigneeId':
          result.assigneeId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUserID))! as GUserID);
          break;
      }
    }

    return result.build();
  }
}

class _$GBoardListUpdateLimitMetricsInputSerializer
    implements StructuredSerializer<GBoardListUpdateLimitMetricsInput> {
  @override
  final Iterable<Type> types = const [
    GBoardListUpdateLimitMetricsInput,
    _$GBoardListUpdateLimitMetricsInput
  ];
  @override
  final String wireName = 'GBoardListUpdateLimitMetricsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GBoardListUpdateLimitMetricsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'listId',
      serializers.serialize(object.listId,
          specifiedType: const FullType(GListID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.limitMetric;
    if (value != null) {
      result
        ..add('limitMetric')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GListLimitMetric)));
    }
    value = object.maxIssueCount;
    if (value != null) {
      result
        ..add('maxIssueCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.maxIssueWeight;
    if (value != null) {
      result
        ..add('maxIssueWeight')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GBoardListUpdateLimitMetricsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GBoardListUpdateLimitMetricsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'listId':
          result.listId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GListID))! as GListID);
          break;
        case 'limitMetric':
          result.limitMetric = serializers.deserialize(value,
                  specifiedType: const FullType(GListLimitMetric))
              as GListLimitMetric?;
          break;
        case 'maxIssueCount':
          result.maxIssueCount = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'maxIssueWeight':
          result.maxIssueWeight = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GBulkEnableDevopsAdoptionNamespacesInputSerializer
    implements StructuredSerializer<GBulkEnableDevopsAdoptionNamespacesInput> {
  @override
  final Iterable<Type> types = const [
    GBulkEnableDevopsAdoptionNamespacesInput,
    _$GBulkEnableDevopsAdoptionNamespacesInput
  ];
  @override
  final String wireName = 'GBulkEnableDevopsAdoptionNamespacesInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GBulkEnableDevopsAdoptionNamespacesInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'namespaceIds',
      serializers.serialize(object.namespaceIds,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GNamespaceID)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayNamespaceId;
    if (value != null) {
      result
        ..add('displayNamespaceId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GNamespaceID)));
    }
    return result;
  }

  @override
  GBulkEnableDevopsAdoptionNamespacesInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GBulkEnableDevopsAdoptionNamespacesInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'namespaceIds':
          result.namespaceIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GNamespaceID)]))!
              as BuiltList<Object?>);
          break;
        case 'displayNamespaceId':
          result.displayNamespaceId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNamespaceID))! as GNamespaceID);
          break;
      }
    }

    return result.build();
  }
}

class _$GBulkRunnerDeleteInputSerializer
    implements StructuredSerializer<GBulkRunnerDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GBulkRunnerDeleteInput,
    _$GBulkRunnerDeleteInput
  ];
  @override
  final String wireName = 'GBulkRunnerDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GBulkRunnerDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GCiRunnerID)])));
    }
    return result;
  }

  @override
  GBulkRunnerDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GBulkRunnerDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GCiRunnerID)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCiCdSettingsUpdateInputSerializer
    implements StructuredSerializer<GCiCdSettingsUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GCiCdSettingsUpdateInput,
    _$GCiCdSettingsUpdateInput
  ];
  @override
  final String wireName = 'GCiCdSettingsUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCiCdSettingsUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.keepLatestArtifact;
    if (value != null) {
      result
        ..add('keepLatestArtifact')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.jobTokenScopeEnabled;
    if (value != null) {
      result
        ..add('jobTokenScopeEnabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.mergePipelinesEnabled;
    if (value != null) {
      result
        ..add('mergePipelinesEnabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.mergeTrainsEnabled;
    if (value != null) {
      result
        ..add('mergeTrainsEnabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCiCdSettingsUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCiCdSettingsUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'keepLatestArtifact':
          result.keepLatestArtifact = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'jobTokenScopeEnabled':
          result.jobTokenScopeEnabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'mergePipelinesEnabled':
          result.mergePipelinesEnabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'mergeTrainsEnabled':
          result.mergeTrainsEnabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCiConfigIncludeTypeSerializer
    implements PrimitiveSerializer<GCiConfigIncludeType> {
  @override
  final Iterable<Type> types = const <Type>[GCiConfigIncludeType];
  @override
  final String wireName = 'GCiConfigIncludeType';

  @override
  Object serialize(Serializers serializers, GCiConfigIncludeType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiConfigIncludeType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiConfigIncludeType.valueOf(serialized as String);
}

class _$GCiConfigStatusSerializer
    implements PrimitiveSerializer<GCiConfigStatus> {
  @override
  final Iterable<Type> types = const <Type>[GCiConfigStatus];
  @override
  final String wireName = 'GCiConfigStatus';

  @override
  Object serialize(Serializers serializers, GCiConfigStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiConfigStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiConfigStatus.valueOf(serialized as String);
}

class _$GCiJobKindSerializer implements PrimitiveSerializer<GCiJobKind> {
  @override
  final Iterable<Type> types = const <Type>[GCiJobKind];
  @override
  final String wireName = 'GCiJobKind';

  @override
  Object serialize(Serializers serializers, GCiJobKind object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiJobKind deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiJobKind.valueOf(serialized as String);
}

class _$GCiJobStatusSerializer implements PrimitiveSerializer<GCiJobStatus> {
  @override
  final Iterable<Type> types = const <Type>[GCiJobStatus];
  @override
  final String wireName = 'GCiJobStatus';

  @override
  Object serialize(Serializers serializers, GCiJobStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiJobStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiJobStatus.valueOf(serialized as String);
}

class _$GCiJobTokenScopeAddProjectInputSerializer
    implements StructuredSerializer<GCiJobTokenScopeAddProjectInput> {
  @override
  final Iterable<Type> types = const [
    GCiJobTokenScopeAddProjectInput,
    _$GCiJobTokenScopeAddProjectInput
  ];
  @override
  final String wireName = 'GCiJobTokenScopeAddProjectInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCiJobTokenScopeAddProjectInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'targetProjectPath',
      serializers.serialize(object.targetProjectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCiJobTokenScopeAddProjectInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCiJobTokenScopeAddProjectInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'targetProjectPath':
          result.targetProjectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCiJobTokenScopeRemoveProjectInputSerializer
    implements StructuredSerializer<GCiJobTokenScopeRemoveProjectInput> {
  @override
  final Iterable<Type> types = const [
    GCiJobTokenScopeRemoveProjectInput,
    _$GCiJobTokenScopeRemoveProjectInput
  ];
  @override
  final String wireName = 'GCiJobTokenScopeRemoveProjectInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCiJobTokenScopeRemoveProjectInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'targetProjectPath',
      serializers.serialize(object.targetProjectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCiJobTokenScopeRemoveProjectInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCiJobTokenScopeRemoveProjectInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'targetProjectPath':
          result.targetProjectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCiRunnerAccessLevelSerializer
    implements PrimitiveSerializer<GCiRunnerAccessLevel> {
  @override
  final Iterable<Type> types = const <Type>[GCiRunnerAccessLevel];
  @override
  final String wireName = 'GCiRunnerAccessLevel';

  @override
  Object serialize(Serializers serializers, GCiRunnerAccessLevel object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiRunnerAccessLevel deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiRunnerAccessLevel.valueOf(serialized as String);
}

class _$GCiRunnerMembershipFilterSerializer
    implements PrimitiveSerializer<GCiRunnerMembershipFilter> {
  @override
  final Iterable<Type> types = const <Type>[GCiRunnerMembershipFilter];
  @override
  final String wireName = 'GCiRunnerMembershipFilter';

  @override
  Object serialize(Serializers serializers, GCiRunnerMembershipFilter object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiRunnerMembershipFilter deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiRunnerMembershipFilter.valueOf(serialized as String);
}

class _$GCiRunnerSortSerializer implements PrimitiveSerializer<GCiRunnerSort> {
  @override
  final Iterable<Type> types = const <Type>[GCiRunnerSort];
  @override
  final String wireName = 'GCiRunnerSort';

  @override
  Object serialize(Serializers serializers, GCiRunnerSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiRunnerSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiRunnerSort.valueOf(serialized as String);
}

class _$GCiRunnerStatusSerializer
    implements PrimitiveSerializer<GCiRunnerStatus> {
  @override
  final Iterable<Type> types = const <Type>[GCiRunnerStatus];
  @override
  final String wireName = 'GCiRunnerStatus';

  @override
  Object serialize(Serializers serializers, GCiRunnerStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiRunnerStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiRunnerStatus.valueOf(serialized as String);
}

class _$GCiRunnerTypeSerializer implements PrimitiveSerializer<GCiRunnerType> {
  @override
  final Iterable<Type> types = const <Type>[GCiRunnerType];
  @override
  final String wireName = 'GCiRunnerType';

  @override
  Object serialize(Serializers serializers, GCiRunnerType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiRunnerType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiRunnerType.valueOf(serialized as String);
}

class _$GCiRunnerUpgradeStatusSerializer
    implements PrimitiveSerializer<GCiRunnerUpgradeStatus> {
  @override
  final Iterable<Type> types = const <Type>[GCiRunnerUpgradeStatus];
  @override
  final String wireName = 'GCiRunnerUpgradeStatus';

  @override
  Object serialize(Serializers serializers, GCiRunnerUpgradeStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiRunnerUpgradeStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiRunnerUpgradeStatus.valueOf(serialized as String);
}

class _$GCiVariableInputSerializer
    implements StructuredSerializer<GCiVariableInput> {
  @override
  final Iterable<Type> types = const [GCiVariableInput, _$GCiVariableInput];
  @override
  final String wireName = 'GCiVariableInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCiVariableInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'key',
      serializers.serialize(object.key, specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GCiVariableInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCiVariableInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'key':
          result.key = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCiVariableTypeSerializer
    implements PrimitiveSerializer<GCiVariableType> {
  @override
  final Iterable<Type> types = const <Type>[GCiVariableType];
  @override
  final String wireName = 'GCiVariableType';

  @override
  Object serialize(Serializers serializers, GCiVariableType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCiVariableType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCiVariableType.valueOf(serialized as String);
}

class _$GClusterAgentDeleteInputSerializer
    implements StructuredSerializer<GClusterAgentDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GClusterAgentDeleteInput,
    _$GClusterAgentDeleteInput
  ];
  @override
  final String wireName = 'GClusterAgentDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GClusterAgentDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GClustersAgentID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GClusterAgentDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GClusterAgentDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GClustersAgentID))!
              as GClustersAgentID);
          break;
      }
    }

    return result.build();
  }
}

class _$GClusterAgentTokenCreateInputSerializer
    implements StructuredSerializer<GClusterAgentTokenCreateInput> {
  @override
  final Iterable<Type> types = const [
    GClusterAgentTokenCreateInput,
    _$GClusterAgentTokenCreateInput
  ];
  @override
  final String wireName = 'GClusterAgentTokenCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GClusterAgentTokenCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'clusterAgentId',
      serializers.serialize(object.clusterAgentId,
          specifiedType: const FullType(GClustersAgentID)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GClusterAgentTokenCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GClusterAgentTokenCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'clusterAgentId':
          result.clusterAgentId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GClustersAgentID))!
              as GClustersAgentID);
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GClusterAgentTokenRevokeInputSerializer
    implements StructuredSerializer<GClusterAgentTokenRevokeInput> {
  @override
  final Iterable<Type> types = const [
    GClusterAgentTokenRevokeInput,
    _$GClusterAgentTokenRevokeInput
  ];
  @override
  final String wireName = 'GClusterAgentTokenRevokeInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GClusterAgentTokenRevokeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GClustersAgentTokenID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GClusterAgentTokenRevokeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GClusterAgentTokenRevokeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GClustersAgentTokenID))!
              as GClustersAgentTokenID);
          break;
      }
    }

    return result.build();
  }
}

class _$GCodeQualityDegradationSeveritySerializer
    implements PrimitiveSerializer<GCodeQualityDegradationSeverity> {
  @override
  final Iterable<Type> types = const <Type>[GCodeQualityDegradationSeverity];
  @override
  final String wireName = 'GCodeQualityDegradationSeverity';

  @override
  Object serialize(
          Serializers serializers, GCodeQualityDegradationSeverity object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCodeQualityDegradationSeverity deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCodeQualityDegradationSeverity.valueOf(serialized as String);
}

class _$GCommitActionSerializer implements StructuredSerializer<GCommitAction> {
  @override
  final Iterable<Type> types = const [GCommitAction, _$GCommitAction];
  @override
  final String wireName = 'GCommitAction';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCommitAction object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'action',
      serializers.serialize(object.action,
          specifiedType: const FullType(GCommitActionMode)),
      'filePath',
      serializers.serialize(object.filePath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.content;
    if (value != null) {
      result
        ..add('content')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.encoding;
    if (value != null) {
      result
        ..add('encoding')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GCommitEncoding)));
    }
    value = object.executeFilemode;
    if (value != null) {
      result
        ..add('executeFilemode')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.lastCommitId;
    if (value != null) {
      result
        ..add('lastCommitId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.previousPath;
    if (value != null) {
      result
        ..add('previousPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCommitAction deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCommitActionBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'action':
          result.action = serializers.deserialize(value,
                  specifiedType: const FullType(GCommitActionMode))!
              as GCommitActionMode;
          break;
        case 'content':
          result.content = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'encoding':
          result.encoding = serializers.deserialize(value,
                  specifiedType: const FullType(GCommitEncoding))
              as GCommitEncoding?;
          break;
        case 'executeFilemode':
          result.executeFilemode = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filePath':
          result.filePath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'lastCommitId':
          result.lastCommitId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'previousPath':
          result.previousPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCommitActionModeSerializer
    implements PrimitiveSerializer<GCommitActionMode> {
  @override
  final Iterable<Type> types = const <Type>[GCommitActionMode];
  @override
  final String wireName = 'GCommitActionMode';

  @override
  Object serialize(Serializers serializers, GCommitActionMode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCommitActionMode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCommitActionMode.valueOf(serialized as String);
}

class _$GCommitCreateInputSerializer
    implements StructuredSerializer<GCommitCreateInput> {
  @override
  final Iterable<Type> types = const [GCommitCreateInput, _$GCommitCreateInput];
  @override
  final String wireName = 'GCommitCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCommitCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'branch',
      serializers.serialize(object.branch,
          specifiedType: const FullType(String)),
      'message',
      serializers.serialize(object.message,
          specifiedType: const FullType(String)),
      'actions',
      serializers.serialize(object.actions,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GCommitAction)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startBranch;
    if (value != null) {
      result
        ..add('startBranch')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCommitCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCommitCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'branch':
          result.branch = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'startBranch':
          result.startBranch = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'message':
          result.message = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'actions':
          result.actions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GCommitAction)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCommitEncodingSerializer
    implements PrimitiveSerializer<GCommitEncoding> {
  @override
  final Iterable<Type> types = const <Type>[GCommitEncoding];
  @override
  final String wireName = 'GCommitEncoding';

  @override
  Object serialize(Serializers serializers, GCommitEncoding object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCommitEncoding deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCommitEncoding.valueOf(serialized as String);
}

class _$GComplianceFrameworkInputSerializer
    implements StructuredSerializer<GComplianceFrameworkInput> {
  @override
  final Iterable<Type> types = const [
    GComplianceFrameworkInput,
    _$GComplianceFrameworkInput
  ];
  @override
  final String wireName = 'GComplianceFrameworkInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GComplianceFrameworkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.color;
    if (value != null) {
      result
        ..add('color')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.pipelineConfigurationFullPath;
    if (value != null) {
      result
        ..add('pipelineConfigurationFullPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GComplianceFrameworkInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GComplianceFrameworkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'color':
          result.color = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'pipelineConfigurationFullPath':
          result.pipelineConfigurationFullPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GComplianceViolationInputSerializer
    implements StructuredSerializer<GComplianceViolationInput> {
  @override
  final Iterable<Type> types = const [
    GComplianceViolationInput,
    _$GComplianceViolationInput
  ];
  @override
  final String wireName = 'GComplianceViolationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GComplianceViolationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.projectIds;
    if (value != null) {
      result
        ..add('projectIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GProjectID)])));
    }
    value = object.mergedBefore;
    if (value != null) {
      result
        ..add('mergedBefore')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.mergedAfter;
    if (value != null) {
      result
        ..add('mergedAfter')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    return result;
  }

  @override
  GComplianceViolationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GComplianceViolationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectIds':
          result.projectIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GProjectID)]))!
              as BuiltList<Object?>);
          break;
        case 'mergedBefore':
          result.mergedBefore.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'mergedAfter':
          result.mergedAfter.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
      }
    }

    return result.build();
  }
}

class _$GComplianceViolationReasonSerializer
    implements PrimitiveSerializer<GComplianceViolationReason> {
  @override
  final Iterable<Type> types = const <Type>[GComplianceViolationReason];
  @override
  final String wireName = 'GComplianceViolationReason';

  @override
  Object serialize(Serializers serializers, GComplianceViolationReason object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GComplianceViolationReason deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GComplianceViolationReason.valueOf(serialized as String);
}

class _$GComplianceViolationSeveritySerializer
    implements PrimitiveSerializer<GComplianceViolationSeverity> {
  @override
  final Iterable<Type> types = const <Type>[GComplianceViolationSeverity];
  @override
  final String wireName = 'GComplianceViolationSeverity';

  @override
  Object serialize(Serializers serializers, GComplianceViolationSeverity object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GComplianceViolationSeverity deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GComplianceViolationSeverity.valueOf(serialized as String);
}

class _$GComplianceViolationSortSerializer
    implements PrimitiveSerializer<GComplianceViolationSort> {
  @override
  final Iterable<Type> types = const <Type>[GComplianceViolationSort];
  @override
  final String wireName = 'GComplianceViolationSort';

  @override
  Object serialize(Serializers serializers, GComplianceViolationSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GComplianceViolationSort deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GComplianceViolationSort.valueOf(serialized as String);
}

class _$GConanMetadatumFileTypeEnumSerializer
    implements PrimitiveSerializer<GConanMetadatumFileTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GConanMetadatumFileTypeEnum];
  @override
  final String wireName = 'GConanMetadatumFileTypeEnum';

  @override
  Object serialize(Serializers serializers, GConanMetadatumFileTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GConanMetadatumFileTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GConanMetadatumFileTypeEnum.valueOf(serialized as String);
}

class _$GConfigureContainerScanningInputSerializer
    implements StructuredSerializer<GConfigureContainerScanningInput> {
  @override
  final Iterable<Type> types = const [
    GConfigureContainerScanningInput,
    _$GConfigureContainerScanningInput
  ];
  @override
  final String wireName = 'GConfigureContainerScanningInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GConfigureContainerScanningInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GConfigureContainerScanningInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GConfigureContainerScanningInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GConfigureDependencyScanningInputSerializer
    implements StructuredSerializer<GConfigureDependencyScanningInput> {
  @override
  final Iterable<Type> types = const [
    GConfigureDependencyScanningInput,
    _$GConfigureDependencyScanningInput
  ];
  @override
  final String wireName = 'GConfigureDependencyScanningInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GConfigureDependencyScanningInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GConfigureDependencyScanningInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GConfigureDependencyScanningInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GConfigureSastIacInputSerializer
    implements StructuredSerializer<GConfigureSastIacInput> {
  @override
  final Iterable<Type> types = const [
    GConfigureSastIacInput,
    _$GConfigureSastIacInput
  ];
  @override
  final String wireName = 'GConfigureSastIacInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GConfigureSastIacInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GConfigureSastIacInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GConfigureSastIacInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GConfigureSastInputSerializer
    implements StructuredSerializer<GConfigureSastInput> {
  @override
  final Iterable<Type> types = const [
    GConfigureSastInput,
    _$GConfigureSastInput
  ];
  @override
  final String wireName = 'GConfigureSastInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GConfigureSastInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'configuration',
      serializers.serialize(object.configuration,
          specifiedType: const FullType(GSastCiConfigurationInput)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GConfigureSastInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GConfigureSastInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'configuration':
          result.configuration.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSastCiConfigurationInput))!
              as GSastCiConfigurationInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GConfigureSecretDetectionInputSerializer
    implements StructuredSerializer<GConfigureSecretDetectionInput> {
  @override
  final Iterable<Type> types = const [
    GConfigureSecretDetectionInput,
    _$GConfigureSecretDetectionInput
  ];
  @override
  final String wireName = 'GConfigureSecretDetectionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GConfigureSecretDetectionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GConfigureSecretDetectionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GConfigureSecretDetectionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GContactSortSerializer implements PrimitiveSerializer<GContactSort> {
  @override
  final Iterable<Type> types = const <Type>[GContactSort];
  @override
  final String wireName = 'GContactSort';

  @override
  Object serialize(Serializers serializers, GContactSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GContactSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GContactSort.valueOf(serialized as String);
}

class _$GContainerExpirationPolicyCadenceEnumSerializer
    implements PrimitiveSerializer<GContainerExpirationPolicyCadenceEnum> {
  @override
  final Iterable<Type> types = const <Type>[
    GContainerExpirationPolicyCadenceEnum
  ];
  @override
  final String wireName = 'GContainerExpirationPolicyCadenceEnum';

  @override
  Object serialize(
          Serializers serializers, GContainerExpirationPolicyCadenceEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GContainerExpirationPolicyCadenceEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GContainerExpirationPolicyCadenceEnum.valueOf(serialized as String);
}

class _$GContainerExpirationPolicyKeepEnumSerializer
    implements PrimitiveSerializer<GContainerExpirationPolicyKeepEnum> {
  @override
  final Iterable<Type> types = const <Type>[GContainerExpirationPolicyKeepEnum];
  @override
  final String wireName = 'GContainerExpirationPolicyKeepEnum';

  @override
  Object serialize(
          Serializers serializers, GContainerExpirationPolicyKeepEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GContainerExpirationPolicyKeepEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GContainerExpirationPolicyKeepEnum.valueOf(serialized as String);
}

class _$GContainerExpirationPolicyOlderThanEnumSerializer
    implements PrimitiveSerializer<GContainerExpirationPolicyOlderThanEnum> {
  @override
  final Iterable<Type> types = const <Type>[
    GContainerExpirationPolicyOlderThanEnum
  ];
  @override
  final String wireName = 'GContainerExpirationPolicyOlderThanEnum';

  @override
  Object serialize(Serializers serializers,
          GContainerExpirationPolicyOlderThanEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GContainerExpirationPolicyOlderThanEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GContainerExpirationPolicyOlderThanEnum.valueOf(serialized as String);
}

class _$GContainerRepositoryCleanupStatusSerializer
    implements PrimitiveSerializer<GContainerRepositoryCleanupStatus> {
  @override
  final Iterable<Type> types = const <Type>[GContainerRepositoryCleanupStatus];
  @override
  final String wireName = 'GContainerRepositoryCleanupStatus';

  @override
  Object serialize(
          Serializers serializers, GContainerRepositoryCleanupStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GContainerRepositoryCleanupStatus deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GContainerRepositoryCleanupStatus.valueOf(serialized as String);
}

class _$GContainerRepositorySortSerializer
    implements PrimitiveSerializer<GContainerRepositorySort> {
  @override
  final Iterable<Type> types = const <Type>[GContainerRepositorySort];
  @override
  final String wireName = 'GContainerRepositorySort';

  @override
  Object serialize(Serializers serializers, GContainerRepositorySort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GContainerRepositorySort deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GContainerRepositorySort.valueOf(serialized as String);
}

class _$GContainerRepositoryStatusSerializer
    implements PrimitiveSerializer<GContainerRepositoryStatus> {
  @override
  final Iterable<Type> types = const <Type>[GContainerRepositoryStatus];
  @override
  final String wireName = 'GContainerRepositoryStatus';

  @override
  Object serialize(Serializers serializers, GContainerRepositoryStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GContainerRepositoryStatus deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GContainerRepositoryStatus.valueOf(serialized as String);
}

class _$GContainerRepositoryTagSortSerializer
    implements PrimitiveSerializer<GContainerRepositoryTagSort> {
  @override
  final Iterable<Type> types = const <Type>[GContainerRepositoryTagSort];
  @override
  final String wireName = 'GContainerRepositoryTagSort';

  @override
  Object serialize(Serializers serializers, GContainerRepositoryTagSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GContainerRepositoryTagSort deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GContainerRepositoryTagSort.valueOf(serialized as String);
}

class _$GCorpusCreateInputSerializer
    implements StructuredSerializer<GCorpusCreateInput> {
  @override
  final Iterable<Type> types = const [GCorpusCreateInput, _$GCorpusCreateInput];
  @override
  final String wireName = 'GCorpusCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCorpusCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'packageId',
      serializers.serialize(object.packageId,
          specifiedType: const FullType(GPackagesPackageID)),
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCorpusCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCorpusCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'packageId':
          result.packageId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPackagesPackageID))!
              as GPackagesPackageID);
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateAlertIssueInputSerializer
    implements StructuredSerializer<GCreateAlertIssueInput> {
  @override
  final Iterable<Type> types = const [
    GCreateAlertIssueInput,
    _$GCreateAlertIssueInput
  ];
  @override
  final String wireName = 'GCreateAlertIssueInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateAlertIssueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateAlertIssueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateAlertIssueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateAnnotationInputSerializer
    implements StructuredSerializer<GCreateAnnotationInput> {
  @override
  final Iterable<Type> types = const [
    GCreateAnnotationInput,
    _$GCreateAnnotationInput
  ];
  @override
  final String wireName = 'GCreateAnnotationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateAnnotationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'startingAt',
      serializers.serialize(object.startingAt,
          specifiedType: const FullType(GTime)),
      'dashboardPath',
      serializers.serialize(object.dashboardPath,
          specifiedType: const FullType(String)),
      'description',
      serializers.serialize(object.description,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.environmentId;
    if (value != null) {
      result
        ..add('environmentId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEnvironmentID)));
    }
    value = object.clusterId;
    if (value != null) {
      result
        ..add('clusterId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GClustersClusterID)));
    }
    value = object.endingAt;
    if (value != null) {
      result
        ..add('endingAt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    return result;
  }

  @override
  GCreateAnnotationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateAnnotationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'environmentId':
          result.environmentId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GEnvironmentID))!
              as GEnvironmentID);
          break;
        case 'clusterId':
          result.clusterId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GClustersClusterID))!
              as GClustersClusterID);
          break;
        case 'startingAt':
          result.startingAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'endingAt':
          result.endingAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'dashboardPath':
          result.dashboardPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateBoardInputSerializer
    implements StructuredSerializer<GCreateBoardInput> {
  @override
  final Iterable<Type> types = const [GCreateBoardInput, _$GCreateBoardInput];
  @override
  final String wireName = 'GCreateBoardInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCreateBoardInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.projectPath;
    if (value != null) {
      result
        ..add('projectPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.groupPath;
    if (value != null) {
      result
        ..add('groupPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.hideBacklogList;
    if (value != null) {
      result
        ..add('hideBacklogList')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.hideClosedList;
    if (value != null) {
      result
        ..add('hideClosedList')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.assigneeId;
    if (value != null) {
      result
        ..add('assigneeId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserID)));
    }
    value = object.milestoneId;
    if (value != null) {
      result
        ..add('milestoneId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMilestoneID)));
    }
    value = object.iterationId;
    if (value != null) {
      result
        ..add('iterationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationID)));
    }
    value = object.iterationCadenceId;
    if (value != null) {
      result
        ..add('iterationCadenceId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationsCadenceID)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.labels;
    if (value != null) {
      result
        ..add('labels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.labelIds;
    if (value != null) {
      result
        ..add('labelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GLabelID)])));
    }
    return result;
  }

  @override
  GCreateBoardInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateBoardInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'hideBacklogList':
          result.hideBacklogList = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'hideClosedList':
          result.hideClosedList = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'assigneeId':
          result.assigneeId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUserID))! as GUserID);
          break;
        case 'milestoneId':
          result.milestoneId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMilestoneID))! as GMilestoneID);
          break;
        case 'iterationId':
          result.iterationId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIterationID))! as GIterationID);
          break;
        case 'iterationCadenceId':
          result.iterationCadenceId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIterationsCadenceID))!
              as GIterationsCadenceID);
          break;
        case 'weight':
          result.weight = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'labels':
          result.labels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'labelIds':
          result.labelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GLabelID)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateBranchInputSerializer
    implements StructuredSerializer<GCreateBranchInput> {
  @override
  final Iterable<Type> types = const [GCreateBranchInput, _$GCreateBranchInput];
  @override
  final String wireName = 'GCreateBranchInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateBranchInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'ref',
      serializers.serialize(object.ref, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateBranchInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateBranchInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'ref':
          result.ref = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateClusterAgentInputSerializer
    implements StructuredSerializer<GCreateClusterAgentInput> {
  @override
  final Iterable<Type> types = const [
    GCreateClusterAgentInput,
    _$GCreateClusterAgentInput
  ];
  @override
  final String wireName = 'GCreateClusterAgentInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateClusterAgentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateClusterAgentInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateClusterAgentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateComplianceFrameworkInputSerializer
    implements StructuredSerializer<GCreateComplianceFrameworkInput> {
  @override
  final Iterable<Type> types = const [
    GCreateComplianceFrameworkInput,
    _$GCreateComplianceFrameworkInput
  ];
  @override
  final String wireName = 'GCreateComplianceFrameworkInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateComplianceFrameworkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'namespacePath',
      serializers.serialize(object.namespacePath,
          specifiedType: const FullType(String)),
      'params',
      serializers.serialize(object.params,
          specifiedType: const FullType(GComplianceFrameworkInput)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateComplianceFrameworkInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateComplianceFrameworkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'namespacePath':
          result.namespacePath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'params':
          result.params.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GComplianceFrameworkInput))!
              as GComplianceFrameworkInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateCustomEmojiInputSerializer
    implements StructuredSerializer<GCreateCustomEmojiInput> {
  @override
  final Iterable<Type> types = const [
    GCreateCustomEmojiInput,
    _$GCreateCustomEmojiInput
  ];
  @override
  final String wireName = 'GCreateCustomEmojiInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateCustomEmojiInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'url',
      serializers.serialize(object.url, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateCustomEmojiInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateCustomEmojiInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateDiffNoteInputSerializer
    implements StructuredSerializer<GCreateDiffNoteInput> {
  @override
  final Iterable<Type> types = const [
    GCreateDiffNoteInput,
    _$GCreateDiffNoteInput
  ];
  @override
  final String wireName = 'GCreateDiffNoteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateDiffNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'noteableId',
      serializers.serialize(object.noteableId,
          specifiedType: const FullType(GNoteableID)),
      'body',
      serializers.serialize(object.body, specifiedType: const FullType(String)),
      'position',
      serializers.serialize(object.position,
          specifiedType: const FullType(GDiffPositionInput)),
    ];
    Object? value;
    value = object.internal;
    if (value != null) {
      result
        ..add('internal')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateDiffNoteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateDiffNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'noteableId':
          result.noteableId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNoteableID))! as GNoteableID);
          break;
        case 'body':
          result.body = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'internal':
          result.internal = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'position':
          result.position.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDiffPositionInput))!
              as GDiffPositionInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateEpicInputSerializer
    implements StructuredSerializer<GCreateEpicInput> {
  @override
  final Iterable<Type> types = const [GCreateEpicInput, _$GCreateEpicInput];
  @override
  final String wireName = 'GCreateEpicInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCreateEpicInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.confidential;
    if (value != null) {
      result
        ..add('confidential')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.startDateFixed;
    if (value != null) {
      result
        ..add('startDateFixed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dueDateFixed;
    if (value != null) {
      result
        ..add('dueDateFixed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDateIsFixed;
    if (value != null) {
      result
        ..add('startDateIsFixed')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.dueDateIsFixed;
    if (value != null) {
      result
        ..add('dueDateIsFixed')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.addLabelIds;
    if (value != null) {
      result
        ..add('addLabelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.removeLabelIds;
    if (value != null) {
      result
        ..add('removeLabelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.addLabels;
    if (value != null) {
      result
        ..add('addLabels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.color;
    if (value != null) {
      result
        ..add('color')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GColor)));
    }
    return result;
  }

  @override
  GCreateEpicInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateEpicInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'confidential':
          result.confidential = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'startDateFixed':
          result.startDateFixed = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dueDateFixed':
          result.dueDateFixed = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDateIsFixed':
          result.startDateIsFixed = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'dueDateIsFixed':
          result.dueDateIsFixed = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'addLabelIds':
          result.addLabelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'removeLabelIds':
          result.removeLabelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'addLabels':
          result.addLabels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'color':
          result.color.replace(serializers.deserialize(value,
              specifiedType: const FullType(GColor))! as GColor);
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateImageDiffNoteInputSerializer
    implements StructuredSerializer<GCreateImageDiffNoteInput> {
  @override
  final Iterable<Type> types = const [
    GCreateImageDiffNoteInput,
    _$GCreateImageDiffNoteInput
  ];
  @override
  final String wireName = 'GCreateImageDiffNoteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateImageDiffNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'noteableId',
      serializers.serialize(object.noteableId,
          specifiedType: const FullType(GNoteableID)),
      'body',
      serializers.serialize(object.body, specifiedType: const FullType(String)),
      'position',
      serializers.serialize(object.position,
          specifiedType: const FullType(GDiffImagePositionInput)),
    ];
    Object? value;
    value = object.internal;
    if (value != null) {
      result
        ..add('internal')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateImageDiffNoteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateImageDiffNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'noteableId':
          result.noteableId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNoteableID))! as GNoteableID);
          break;
        case 'body':
          result.body = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'internal':
          result.internal = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'position':
          result.position.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDiffImagePositionInput))!
              as GDiffImagePositionInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateIssueInputSerializer
    implements StructuredSerializer<GCreateIssueInput> {
  @override
  final Iterable<Type> types = const [GCreateIssueInput, _$GCreateIssueInput];
  @override
  final String wireName = 'GCreateIssueInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCreateIssueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dueDate;
    if (value != null) {
      result
        ..add('dueDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GISO8601Date)));
    }
    value = object.confidential;
    if (value != null) {
      result
        ..add('confidential')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.locked;
    if (value != null) {
      result
        ..add('locked')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIssueType)));
    }
    value = object.iid;
    if (value != null) {
      result
        ..add('iid')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.milestoneId;
    if (value != null) {
      result
        ..add('milestoneId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMilestoneID)));
    }
    value = object.labels;
    if (value != null) {
      result
        ..add('labels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.labelIds;
    if (value != null) {
      result
        ..add('labelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GLabelID)])));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    value = object.mergeRequestToResolveDiscussionsOf;
    if (value != null) {
      result
        ..add('mergeRequestToResolveDiscussionsOf')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMergeRequestID)));
    }
    value = object.discussionToResolve;
    if (value != null) {
      result
        ..add('discussionToResolve')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.assigneeIds;
    if (value != null) {
      result
        ..add('assigneeIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GUserID)])));
    }
    value = object.moveBeforeId;
    if (value != null) {
      result
        ..add('moveBeforeId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIssueID)));
    }
    value = object.moveAfterId;
    if (value != null) {
      result
        ..add('moveAfterId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIssueID)));
    }
    value = object.healthStatus;
    if (value != null) {
      result
        ..add('healthStatus')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GHealthStatus)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.epicId;
    if (value != null) {
      result
        ..add('epicId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicID)));
    }
    value = object.iterationId;
    if (value != null) {
      result
        ..add('iterationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationID)));
    }
    value = object.iterationWildcardId;
    if (value != null) {
      result
        ..add('iterationWildcardId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIssueCreationIterationWildcardId)));
    }
    value = object.iterationCadenceId;
    if (value != null) {
      result
        ..add('iterationCadenceId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationsCadenceID)));
    }
    return result;
  }

  @override
  GCreateIssueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateIssueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dueDate':
          result.dueDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GISO8601Date))! as GISO8601Date);
          break;
        case 'confidential':
          result.confidential = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'locked':
          result.locked = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(GIssueType)) as GIssueType?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'milestoneId':
          result.milestoneId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMilestoneID))! as GMilestoneID);
          break;
        case 'labels':
          result.labels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'labelIds':
          result.labelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GLabelID)]))!
              as BuiltList<Object?>);
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'mergeRequestToResolveDiscussionsOf':
          result.mergeRequestToResolveDiscussionsOf.replace(
              serializers.deserialize(value,
                      specifiedType: const FullType(GMergeRequestID))!
                  as GMergeRequestID);
          break;
        case 'discussionToResolve':
          result.discussionToResolve = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'assigneeIds':
          result.assigneeIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GUserID)]))!
              as BuiltList<Object?>);
          break;
        case 'moveBeforeId':
          result.moveBeforeId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIssueID))! as GIssueID);
          break;
        case 'moveAfterId':
          result.moveAfterId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIssueID))! as GIssueID);
          break;
        case 'healthStatus':
          result.healthStatus = serializers.deserialize(value,
              specifiedType: const FullType(GHealthStatus)) as GHealthStatus?;
          break;
        case 'weight':
          result.weight = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'epicId':
          result.epicId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
        case 'iterationId':
          result.iterationId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIterationID))! as GIterationID);
          break;
        case 'iterationWildcardId':
          result.iterationWildcardId = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GIssueCreationIterationWildcardId))
              as GIssueCreationIterationWildcardId?;
          break;
        case 'iterationCadenceId':
          result.iterationCadenceId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIterationsCadenceID))!
              as GIterationsCadenceID);
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateIterationInputSerializer
    implements StructuredSerializer<GCreateIterationInput> {
  @override
  final Iterable<Type> types = const [
    GCreateIterationInput,
    _$GCreateIterationInput
  ];
  @override
  final String wireName = 'GCreateIterationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateIterationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.projectPath;
    if (value != null) {
      result
        ..add('projectPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.groupPath;
    if (value != null) {
      result
        ..add('groupPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.iterationsCadenceId;
    if (value != null) {
      result
        ..add('iterationsCadenceId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationsCadenceID)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dueDate;
    if (value != null) {
      result
        ..add('dueDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateIterationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateIterationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'iterationsCadenceId':
          result.iterationsCadenceId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIterationsCadenceID))!
              as GIterationsCadenceID);
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDate':
          result.startDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dueDate':
          result.dueDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateNoteInputSerializer
    implements StructuredSerializer<GCreateNoteInput> {
  @override
  final Iterable<Type> types = const [GCreateNoteInput, _$GCreateNoteInput];
  @override
  final String wireName = 'GCreateNoteInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCreateNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'noteableId',
      serializers.serialize(object.noteableId,
          specifiedType: const FullType(GNoteableID)),
      'body',
      serializers.serialize(object.body, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.internal;
    if (value != null) {
      result
        ..add('internal')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.discussionId;
    if (value != null) {
      result
        ..add('discussionId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDiscussionID)));
    }
    value = object.mergeRequestDiffHeadSha;
    if (value != null) {
      result
        ..add('mergeRequestDiffHeadSha')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateNoteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'noteableId':
          result.noteableId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNoteableID))! as GNoteableID);
          break;
        case 'body':
          result.body = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'internal':
          result.internal = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'discussionId':
          result.discussionId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDiscussionID))! as GDiscussionID);
          break;
        case 'mergeRequestDiffHeadSha':
          result.mergeRequestDiffHeadSha = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateRequirementInputSerializer
    implements StructuredSerializer<GCreateRequirementInput> {
  @override
  final Iterable<Type> types = const [
    GCreateRequirementInput,
    _$GCreateRequirementInput
  ];
  @override
  final String wireName = 'GCreateRequirementInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateRequirementInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateRequirementInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateRequirementInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateSnippetInputSerializer
    implements StructuredSerializer<GCreateSnippetInput> {
  @override
  final Iterable<Type> types = const [
    GCreateSnippetInput,
    _$GCreateSnippetInput
  ];
  @override
  final String wireName = 'GCreateSnippetInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateSnippetInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'visibilityLevel',
      serializers.serialize(object.visibilityLevel,
          specifiedType: const FullType(GVisibilityLevelsEnum)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.projectPath;
    if (value != null) {
      result
        ..add('projectPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.uploadedFiles;
    if (value != null) {
      result
        ..add('uploadedFiles')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.blobActions;
    if (value != null) {
      result
        ..add('blobActions')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GSnippetBlobActionInputType)])));
    }
    return result;
  }

  @override
  GCreateSnippetInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateSnippetInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'visibilityLevel':
          result.visibilityLevel = serializers.deserialize(value,
                  specifiedType: const FullType(GVisibilityLevelsEnum))!
              as GVisibilityLevelsEnum;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'uploadedFiles':
          result.uploadedFiles.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'blobActions':
          result.blobActions.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GSnippetBlobActionInputType)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateTestCaseInputSerializer
    implements StructuredSerializer<GCreateTestCaseInput> {
  @override
  final Iterable<Type> types = const [
    GCreateTestCaseInput,
    _$GCreateTestCaseInput
  ];
  @override
  final String wireName = 'GCreateTestCaseInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateTestCaseInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.labelIds;
    if (value != null) {
      result
        ..add('labelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GCreateTestCaseInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateTestCaseInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'labelIds':
          result.labelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCustomerRelationsContactCreateInputSerializer
    implements StructuredSerializer<GCustomerRelationsContactCreateInput> {
  @override
  final Iterable<Type> types = const [
    GCustomerRelationsContactCreateInput,
    _$GCustomerRelationsContactCreateInput
  ];
  @override
  final String wireName = 'GCustomerRelationsContactCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCustomerRelationsContactCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(GGroupID)),
      'firstName',
      serializers.serialize(object.firstName,
          specifiedType: const FullType(String)),
      'lastName',
      serializers.serialize(object.lastName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.organizationId;
    if (value != null) {
      result
        ..add('organizationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GCustomerRelationsOrganizationID)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCustomerRelationsContactCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCustomerRelationsContactCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GGroupID))! as GGroupID);
          break;
        case 'organizationId':
          result.organizationId.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GCustomerRelationsOrganizationID))!
              as GCustomerRelationsOrganizationID);
          break;
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCustomerRelationsContactStateSerializer
    implements PrimitiveSerializer<GCustomerRelationsContactState> {
  @override
  final Iterable<Type> types = const <Type>[GCustomerRelationsContactState];
  @override
  final String wireName = 'GCustomerRelationsContactState';

  @override
  Object serialize(
          Serializers serializers, GCustomerRelationsContactState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCustomerRelationsContactState deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCustomerRelationsContactState.valueOf(serialized as String);
}

class _$GCustomerRelationsContactUpdateInputSerializer
    implements StructuredSerializer<GCustomerRelationsContactUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GCustomerRelationsContactUpdateInput,
    _$GCustomerRelationsContactUpdateInput
  ];
  @override
  final String wireName = 'GCustomerRelationsContactUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCustomerRelationsContactUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCustomerRelationsContactID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.organizationId;
    if (value != null) {
      result
        ..add('organizationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GCustomerRelationsOrganizationID)));
    }
    value = object.firstName;
    if (value != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.lastName;
    if (value != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.active;
    if (value != null) {
      result
        ..add('active')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GCustomerRelationsContactUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCustomerRelationsContactUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GCustomerRelationsContactID))!
              as GCustomerRelationsContactID);
          break;
        case 'organizationId':
          result.organizationId.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GCustomerRelationsOrganizationID))!
              as GCustomerRelationsOrganizationID);
          break;
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCustomerRelationsOrganizationCreateInputSerializer
    implements StructuredSerializer<GCustomerRelationsOrganizationCreateInput> {
  @override
  final Iterable<Type> types = const [
    GCustomerRelationsOrganizationCreateInput,
    _$GCustomerRelationsOrganizationCreateInput
  ];
  @override
  final String wireName = 'GCustomerRelationsOrganizationCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCustomerRelationsOrganizationCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'groupId',
      serializers.serialize(object.groupId,
          specifiedType: const FullType(GGroupID)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.defaultRate;
    if (value != null) {
      result
        ..add('defaultRate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCustomerRelationsOrganizationCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCustomerRelationsOrganizationCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupId':
          result.groupId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GGroupID))! as GGroupID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'defaultRate':
          result.defaultRate = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCustomerRelationsOrganizationStateSerializer
    implements PrimitiveSerializer<GCustomerRelationsOrganizationState> {
  @override
  final Iterable<Type> types = const <Type>[
    GCustomerRelationsOrganizationState
  ];
  @override
  final String wireName = 'GCustomerRelationsOrganizationState';

  @override
  Object serialize(
          Serializers serializers, GCustomerRelationsOrganizationState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCustomerRelationsOrganizationState deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCustomerRelationsOrganizationState.valueOf(serialized as String);
}

class _$GCustomerRelationsOrganizationUpdateInputSerializer
    implements StructuredSerializer<GCustomerRelationsOrganizationUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GCustomerRelationsOrganizationUpdateInput,
    _$GCustomerRelationsOrganizationUpdateInput
  ];
  @override
  final String wireName = 'GCustomerRelationsOrganizationUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCustomerRelationsOrganizationUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCustomerRelationsOrganizationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.defaultRate;
    if (value != null) {
      result
        ..add('defaultRate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.active;
    if (value != null) {
      result
        ..add('active')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GCustomerRelationsOrganizationUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCustomerRelationsOrganizationUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GCustomerRelationsOrganizationID))!
              as GCustomerRelationsOrganizationID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'defaultRate':
          result.defaultRate = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDastOnDemandScanCreateInputSerializer
    implements StructuredSerializer<GDastOnDemandScanCreateInput> {
  @override
  final Iterable<Type> types = const [
    GDastOnDemandScanCreateInput,
    _$GDastOnDemandScanCreateInput
  ];
  @override
  final String wireName = 'GDastOnDemandScanCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastOnDemandScanCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
      'dastSiteProfileId',
      serializers.serialize(object.dastSiteProfileId,
          specifiedType: const FullType(GDastSiteProfileID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dastScannerProfileId;
    if (value != null) {
      result
        ..add('dastScannerProfileId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastScannerProfileID)));
    }
    return result;
  }

  @override
  GDastOnDemandScanCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastOnDemandScanCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'dastSiteProfileId':
          result.dastSiteProfileId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastSiteProfileID))!
              as GDastSiteProfileID);
          break;
        case 'dastScannerProfileId':
          result.dastScannerProfileId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastScannerProfileID))!
              as GDastScannerProfileID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDastProfileCadenceInputSerializer
    implements StructuredSerializer<GDastProfileCadenceInput> {
  @override
  final Iterable<Type> types = const [
    GDastProfileCadenceInput,
    _$GDastProfileCadenceInput
  ];
  @override
  final String wireName = 'GDastProfileCadenceInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastProfileCadenceInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.unit;
    if (value != null) {
      result
        ..add('unit')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastProfileCadenceUnit)));
    }
    value = object.duration;
    if (value != null) {
      result
        ..add('duration')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDastProfileCadenceInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastProfileCadenceInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'unit':
          result.unit = serializers.deserialize(value,
                  specifiedType: const FullType(GDastProfileCadenceUnit))
              as GDastProfileCadenceUnit?;
          break;
        case 'duration':
          result.duration = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDastProfileCadenceUnitSerializer
    implements PrimitiveSerializer<GDastProfileCadenceUnit> {
  @override
  final Iterable<Type> types = const <Type>[GDastProfileCadenceUnit];
  @override
  final String wireName = 'GDastProfileCadenceUnit';

  @override
  Object serialize(Serializers serializers, GDastProfileCadenceUnit object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDastProfileCadenceUnit deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDastProfileCadenceUnit.valueOf(serialized as String);
}

class _$GDastProfileCreateInputSerializer
    implements StructuredSerializer<GDastProfileCreateInput> {
  @override
  final Iterable<Type> types = const [
    GDastProfileCreateInput,
    _$GDastProfileCreateInput
  ];
  @override
  final String wireName = 'GDastProfileCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastProfileCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'dastSiteProfileId',
      serializers.serialize(object.dastSiteProfileId,
          specifiedType: const FullType(GDastSiteProfileID)),
      'dastScannerProfileId',
      serializers.serialize(object.dastScannerProfileId,
          specifiedType: const FullType(GDastScannerProfileID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dastProfileSchedule;
    if (value != null) {
      result
        ..add('dastProfileSchedule')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastProfileScheduleInput)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.branchName;
    if (value != null) {
      result
        ..add('branchName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.runAfterCreate;
    if (value != null) {
      result
        ..add('runAfterCreate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GDastProfileCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastProfileCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'dastProfileSchedule':
          result.dastProfileSchedule.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastProfileScheduleInput))!
              as GDastProfileScheduleInput);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'branchName':
          result.branchName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dastSiteProfileId':
          result.dastSiteProfileId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastSiteProfileID))!
              as GDastSiteProfileID);
          break;
        case 'dastScannerProfileId':
          result.dastScannerProfileId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastScannerProfileID))!
              as GDastScannerProfileID);
          break;
        case 'runAfterCreate':
          result.runAfterCreate = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDastProfileDeleteInputSerializer
    implements StructuredSerializer<GDastProfileDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GDastProfileDeleteInput,
    _$GDastProfileDeleteInput
  ];
  @override
  final String wireName = 'GDastProfileDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastProfileDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GDastProfileID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDastProfileDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastProfileDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastProfileID))!
              as GDastProfileID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDastProfileRunInputSerializer
    implements StructuredSerializer<GDastProfileRunInput> {
  @override
  final Iterable<Type> types = const [
    GDastProfileRunInput,
    _$GDastProfileRunInput
  ];
  @override
  final String wireName = 'GDastProfileRunInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastProfileRunInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GDastProfileID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDastProfileRunInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastProfileRunInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastProfileID))!
              as GDastProfileID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDastProfileScheduleInputSerializer
    implements StructuredSerializer<GDastProfileScheduleInput> {
  @override
  final Iterable<Type> types = const [
    GDastProfileScheduleInput,
    _$GDastProfileScheduleInput
  ];
  @override
  final String wireName = 'GDastProfileScheduleInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastProfileScheduleInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.active;
    if (value != null) {
      result
        ..add('active')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.startsAt;
    if (value != null) {
      result
        ..add('startsAt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.cadence;
    if (value != null) {
      result
        ..add('cadence')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastProfileCadenceInput)));
    }
    return result;
  }

  @override
  GDastProfileScheduleInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastProfileScheduleInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'startsAt':
          result.startsAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'timezone':
          result.timezone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'cadence':
          result.cadence.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastProfileCadenceInput))!
              as GDastProfileCadenceInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GDastProfileUpdateInputSerializer
    implements StructuredSerializer<GDastProfileUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GDastProfileUpdateInput,
    _$GDastProfileUpdateInput
  ];
  @override
  final String wireName = 'GDastProfileUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastProfileUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GDastProfileID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dastProfileSchedule;
    if (value != null) {
      result
        ..add('dastProfileSchedule')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastProfileScheduleInput)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.branchName;
    if (value != null) {
      result
        ..add('branchName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dastSiteProfileId;
    if (value != null) {
      result
        ..add('dastSiteProfileId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastSiteProfileID)));
    }
    value = object.dastScannerProfileId;
    if (value != null) {
      result
        ..add('dastScannerProfileId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastScannerProfileID)));
    }
    value = object.runAfterUpdate;
    if (value != null) {
      result
        ..add('runAfterUpdate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GDastProfileUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastProfileUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastProfileID))!
              as GDastProfileID);
          break;
        case 'dastProfileSchedule':
          result.dastProfileSchedule.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastProfileScheduleInput))!
              as GDastProfileScheduleInput);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'branchName':
          result.branchName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dastSiteProfileId':
          result.dastSiteProfileId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastSiteProfileID))!
              as GDastSiteProfileID);
          break;
        case 'dastScannerProfileId':
          result.dastScannerProfileId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastScannerProfileID))!
              as GDastScannerProfileID);
          break;
        case 'runAfterUpdate':
          result.runAfterUpdate = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDastScanMethodTypeSerializer
    implements PrimitiveSerializer<GDastScanMethodType> {
  @override
  final Iterable<Type> types = const <Type>[GDastScanMethodType];
  @override
  final String wireName = 'GDastScanMethodType';

  @override
  Object serialize(Serializers serializers, GDastScanMethodType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDastScanMethodType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDastScanMethodType.valueOf(serialized as String);
}

class _$GDastScannerProfileCreateInputSerializer
    implements StructuredSerializer<GDastScannerProfileCreateInput> {
  @override
  final Iterable<Type> types = const [
    GDastScannerProfileCreateInput,
    _$GDastScannerProfileCreateInput
  ];
  @override
  final String wireName = 'GDastScannerProfileCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastScannerProfileCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
      'profileName',
      serializers.serialize(object.profileName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.spiderTimeout;
    if (value != null) {
      result
        ..add('spiderTimeout')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.targetTimeout;
    if (value != null) {
      result
        ..add('targetTimeout')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.scanType;
    if (value != null) {
      result
        ..add('scanType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastScanTypeEnum)));
    }
    value = object.useAjaxSpider;
    if (value != null) {
      result
        ..add('useAjaxSpider')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.showDebugMessages;
    if (value != null) {
      result
        ..add('showDebugMessages')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GDastScannerProfileCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastScannerProfileCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'profileName':
          result.profileName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'spiderTimeout':
          result.spiderTimeout = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'targetTimeout':
          result.targetTimeout = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'scanType':
          result.scanType = serializers.deserialize(value,
                  specifiedType: const FullType(GDastScanTypeEnum))
              as GDastScanTypeEnum?;
          break;
        case 'useAjaxSpider':
          result.useAjaxSpider = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'showDebugMessages':
          result.showDebugMessages = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDastScannerProfileDeleteInputSerializer
    implements StructuredSerializer<GDastScannerProfileDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GDastScannerProfileDeleteInput,
    _$GDastScannerProfileDeleteInput
  ];
  @override
  final String wireName = 'GDastScannerProfileDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastScannerProfileDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GDastScannerProfileID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDastScannerProfileDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastScannerProfileDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastScannerProfileID))!
              as GDastScannerProfileID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDastScannerProfileUpdateInputSerializer
    implements StructuredSerializer<GDastScannerProfileUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GDastScannerProfileUpdateInput,
    _$GDastScannerProfileUpdateInput
  ];
  @override
  final String wireName = 'GDastScannerProfileUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastScannerProfileUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GDastScannerProfileID)),
      'profileName',
      serializers.serialize(object.profileName,
          specifiedType: const FullType(String)),
      'spiderTimeout',
      serializers.serialize(object.spiderTimeout,
          specifiedType: const FullType(int)),
      'targetTimeout',
      serializers.serialize(object.targetTimeout,
          specifiedType: const FullType(int)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.scanType;
    if (value != null) {
      result
        ..add('scanType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastScanTypeEnum)));
    }
    value = object.useAjaxSpider;
    if (value != null) {
      result
        ..add('useAjaxSpider')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.showDebugMessages;
    if (value != null) {
      result
        ..add('showDebugMessages')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GDastScannerProfileUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastScannerProfileUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastScannerProfileID))!
              as GDastScannerProfileID);
          break;
        case 'profileName':
          result.profileName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'spiderTimeout':
          result.spiderTimeout = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'targetTimeout':
          result.targetTimeout = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'scanType':
          result.scanType = serializers.deserialize(value,
                  specifiedType: const FullType(GDastScanTypeEnum))
              as GDastScanTypeEnum?;
          break;
        case 'useAjaxSpider':
          result.useAjaxSpider = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'showDebugMessages':
          result.showDebugMessages = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDastScanTypeEnumSerializer
    implements PrimitiveSerializer<GDastScanTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDastScanTypeEnum];
  @override
  final String wireName = 'GDastScanTypeEnum';

  @override
  Object serialize(Serializers serializers, GDastScanTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDastScanTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDastScanTypeEnum.valueOf(serialized as String);
}

class _$GDastSiteProfileAuthInputSerializer
    implements StructuredSerializer<GDastSiteProfileAuthInput> {
  @override
  final Iterable<Type> types = const [
    GDastSiteProfileAuthInput,
    _$GDastSiteProfileAuthInput
  ];
  @override
  final String wireName = 'GDastSiteProfileAuthInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastSiteProfileAuthInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.enabled;
    if (value != null) {
      result
        ..add('enabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.usernameField;
    if (value != null) {
      result
        ..add('usernameField')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.passwordField;
    if (value != null) {
      result
        ..add('passwordField')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username;
    if (value != null) {
      result
        ..add('username')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.password;
    if (value != null) {
      result
        ..add('password')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.submitField;
    if (value != null) {
      result
        ..add('submitField')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDastSiteProfileAuthInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastSiteProfileAuthInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'enabled':
          result.enabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'usernameField':
          result.usernameField = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'passwordField':
          result.passwordField = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username':
          result.username = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'password':
          result.password = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'submitField':
          result.submitField = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDastSiteProfileCreateInputSerializer
    implements StructuredSerializer<GDastSiteProfileCreateInput> {
  @override
  final Iterable<Type> types = const [
    GDastSiteProfileCreateInput,
    _$GDastSiteProfileCreateInput
  ];
  @override
  final String wireName = 'GDastSiteProfileCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastSiteProfileCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'profileName',
      serializers.serialize(object.profileName,
          specifiedType: const FullType(String)),
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.targetUrl;
    if (value != null) {
      result
        ..add('targetUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.targetType;
    if (value != null) {
      result
        ..add('targetType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastTargetTypeEnum)));
    }
    value = object.scanMethod;
    if (value != null) {
      result
        ..add('scanMethod')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastScanMethodType)));
    }
    value = object.requestHeaders;
    if (value != null) {
      result
        ..add('requestHeaders')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.auth;
    if (value != null) {
      result
        ..add('auth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastSiteProfileAuthInput)));
    }
    value = object.excludedUrls;
    if (value != null) {
      result
        ..add('excludedUrls')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GDastSiteProfileCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastSiteProfileCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'profileName':
          result.profileName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'targetUrl':
          result.targetUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'targetType':
          result.targetType = serializers.deserialize(value,
                  specifiedType: const FullType(GDastTargetTypeEnum))
              as GDastTargetTypeEnum?;
          break;
        case 'scanMethod':
          result.scanMethod = serializers.deserialize(value,
                  specifiedType: const FullType(GDastScanMethodType))
              as GDastScanMethodType?;
          break;
        case 'requestHeaders':
          result.requestHeaders = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'auth':
          result.auth.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastSiteProfileAuthInput))!
              as GDastSiteProfileAuthInput);
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'excludedUrls':
          result.excludedUrls.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDastSiteProfileDeleteInputSerializer
    implements StructuredSerializer<GDastSiteProfileDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GDastSiteProfileDeleteInput,
    _$GDastSiteProfileDeleteInput
  ];
  @override
  final String wireName = 'GDastSiteProfileDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastSiteProfileDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GDastSiteProfileID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDastSiteProfileDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastSiteProfileDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastSiteProfileID))!
              as GDastSiteProfileID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDastSiteProfileUpdateInputSerializer
    implements StructuredSerializer<GDastSiteProfileUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GDastSiteProfileUpdateInput,
    _$GDastSiteProfileUpdateInput
  ];
  @override
  final String wireName = 'GDastSiteProfileUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastSiteProfileUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'profileName',
      serializers.serialize(object.profileName,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GDastSiteProfileID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.targetUrl;
    if (value != null) {
      result
        ..add('targetUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.targetType;
    if (value != null) {
      result
        ..add('targetType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastTargetTypeEnum)));
    }
    value = object.scanMethod;
    if (value != null) {
      result
        ..add('scanMethod')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastScanMethodType)));
    }
    value = object.requestHeaders;
    if (value != null) {
      result
        ..add('requestHeaders')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.auth;
    if (value != null) {
      result
        ..add('auth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastSiteProfileAuthInput)));
    }
    value = object.excludedUrls;
    if (value != null) {
      result
        ..add('excludedUrls')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GDastSiteProfileUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastSiteProfileUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'profileName':
          result.profileName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'targetUrl':
          result.targetUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'targetType':
          result.targetType = serializers.deserialize(value,
                  specifiedType: const FullType(GDastTargetTypeEnum))
              as GDastTargetTypeEnum?;
          break;
        case 'scanMethod':
          result.scanMethod = serializers.deserialize(value,
                  specifiedType: const FullType(GDastScanMethodType))
              as GDastScanMethodType?;
          break;
        case 'requestHeaders':
          result.requestHeaders = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'auth':
          result.auth.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastSiteProfileAuthInput))!
              as GDastSiteProfileAuthInput);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastSiteProfileID))!
              as GDastSiteProfileID);
          break;
        case 'excludedUrls':
          result.excludedUrls.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDastSiteProfileValidationStatusEnumSerializer
    implements PrimitiveSerializer<GDastSiteProfileValidationStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[
    GDastSiteProfileValidationStatusEnum
  ];
  @override
  final String wireName = 'GDastSiteProfileValidationStatusEnum';

  @override
  Object serialize(
          Serializers serializers, GDastSiteProfileValidationStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDastSiteProfileValidationStatusEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDastSiteProfileValidationStatusEnum.valueOf(serialized as String);
}

class _$GDastSiteTokenCreateInputSerializer
    implements StructuredSerializer<GDastSiteTokenCreateInput> {
  @override
  final Iterable<Type> types = const [
    GDastSiteTokenCreateInput,
    _$GDastSiteTokenCreateInput
  ];
  @override
  final String wireName = 'GDastSiteTokenCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastSiteTokenCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.targetUrl;
    if (value != null) {
      result
        ..add('targetUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDastSiteTokenCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastSiteTokenCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'targetUrl':
          result.targetUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDastSiteValidationCreateInputSerializer
    implements StructuredSerializer<GDastSiteValidationCreateInput> {
  @override
  final Iterable<Type> types = const [
    GDastSiteValidationCreateInput,
    _$GDastSiteValidationCreateInput
  ];
  @override
  final String wireName = 'GDastSiteValidationCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastSiteValidationCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
      'dastSiteTokenId',
      serializers.serialize(object.dastSiteTokenId,
          specifiedType: const FullType(GDastSiteTokenID)),
      'validationPath',
      serializers.serialize(object.validationPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.strategy;
    if (value != null) {
      result
        ..add('strategy')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDastSiteValidationStrategyEnum)));
    }
    return result;
  }

  @override
  GDastSiteValidationCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastSiteValidationCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'dastSiteTokenId':
          result.dastSiteTokenId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDastSiteTokenID))!
              as GDastSiteTokenID);
          break;
        case 'validationPath':
          result.validationPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'strategy':
          result.strategy = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GDastSiteValidationStrategyEnum))
              as GDastSiteValidationStrategyEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDastSiteValidationRevokeInputSerializer
    implements StructuredSerializer<GDastSiteValidationRevokeInput> {
  @override
  final Iterable<Type> types = const [
    GDastSiteValidationRevokeInput,
    _$GDastSiteValidationRevokeInput
  ];
  @override
  final String wireName = 'GDastSiteValidationRevokeInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDastSiteValidationRevokeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
      'normalizedTargetUrl',
      serializers.serialize(object.normalizedTargetUrl,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDastSiteValidationRevokeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDastSiteValidationRevokeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'normalizedTargetUrl':
          result.normalizedTargetUrl = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDastSiteValidationStatusEnumSerializer
    implements PrimitiveSerializer<GDastSiteValidationStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDastSiteValidationStatusEnum];
  @override
  final String wireName = 'GDastSiteValidationStatusEnum';

  @override
  Object serialize(
          Serializers serializers, GDastSiteValidationStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDastSiteValidationStatusEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDastSiteValidationStatusEnum.valueOf(serialized as String);
}

class _$GDastSiteValidationStrategyEnumSerializer
    implements PrimitiveSerializer<GDastSiteValidationStrategyEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDastSiteValidationStrategyEnum];
  @override
  final String wireName = 'GDastSiteValidationStrategyEnum';

  @override
  Object serialize(
          Serializers serializers, GDastSiteValidationStrategyEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDastSiteValidationStrategyEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDastSiteValidationStrategyEnum.valueOf(serialized as String);
}

class _$GDastTargetTypeEnumSerializer
    implements PrimitiveSerializer<GDastTargetTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDastTargetTypeEnum];
  @override
  final String wireName = 'GDastTargetTypeEnum';

  @override
  Object serialize(Serializers serializers, GDastTargetTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDastTargetTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDastTargetTypeEnum.valueOf(serialized as String);
}

class _$GDataVisualizationColorEnumSerializer
    implements PrimitiveSerializer<GDataVisualizationColorEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDataVisualizationColorEnum];
  @override
  final String wireName = 'GDataVisualizationColorEnum';

  @override
  Object serialize(Serializers serializers, GDataVisualizationColorEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDataVisualizationColorEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDataVisualizationColorEnum.valueOf(serialized as String);
}

class _$GDataVisualizationWeightEnumSerializer
    implements PrimitiveSerializer<GDataVisualizationWeightEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDataVisualizationWeightEnum];
  @override
  final String wireName = 'GDataVisualizationWeightEnum';

  @override
  Object serialize(Serializers serializers, GDataVisualizationWeightEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDataVisualizationWeightEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDataVisualizationWeightEnum.valueOf(serialized as String);
}

class _$GDeleteAnnotationInputSerializer
    implements StructuredSerializer<GDeleteAnnotationInput> {
  @override
  final Iterable<Type> types = const [
    GDeleteAnnotationInput,
    _$GDeleteAnnotationInput
  ];
  @override
  final String wireName = 'GDeleteAnnotationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDeleteAnnotationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GMetricsDashboardAnnotationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDeleteAnnotationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDeleteAnnotationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GMetricsDashboardAnnotationID))!
              as GMetricsDashboardAnnotationID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDependencyProxyManifestStatusSerializer
    implements PrimitiveSerializer<GDependencyProxyManifestStatus> {
  @override
  final Iterable<Type> types = const <Type>[GDependencyProxyManifestStatus];
  @override
  final String wireName = 'GDependencyProxyManifestStatus';

  @override
  Object serialize(
          Serializers serializers, GDependencyProxyManifestStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDependencyProxyManifestStatus deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDependencyProxyManifestStatus.valueOf(serialized as String);
}

class _$GDeploymentsOrderByInputSerializer
    implements StructuredSerializer<GDeploymentsOrderByInput> {
  @override
  final Iterable<Type> types = const [
    GDeploymentsOrderByInput,
    _$GDeploymentsOrderByInput
  ];
  @override
  final String wireName = 'GDeploymentsOrderByInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDeploymentsOrderByInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirectionEnum)));
    }
    value = object.finishedAt;
    if (value != null) {
      result
        ..add('finishedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirectionEnum)));
    }
    return result;
  }

  @override
  GDeploymentsOrderByInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDeploymentsOrderByInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
                  specifiedType: const FullType(GSortDirectionEnum))
              as GSortDirectionEnum?;
          break;
        case 'finishedAt':
          result.finishedAt = serializers.deserialize(value,
                  specifiedType: const FullType(GSortDirectionEnum))
              as GSortDirectionEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeploymentStatusSerializer
    implements PrimitiveSerializer<GDeploymentStatus> {
  @override
  final Iterable<Type> types = const <Type>[GDeploymentStatus];
  @override
  final String wireName = 'GDeploymentStatus';

  @override
  Object serialize(Serializers serializers, GDeploymentStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDeploymentStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDeploymentStatus.valueOf(serialized as String);
}

class _$GDeploymentTierSerializer
    implements PrimitiveSerializer<GDeploymentTier> {
  @override
  final Iterable<Type> types = const <Type>[GDeploymentTier];
  @override
  final String wireName = 'GDeploymentTier';

  @override
  Object serialize(Serializers serializers, GDeploymentTier object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDeploymentTier deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDeploymentTier.valueOf(serialized as String);
}

class _$GDesignCollectionCopyStateSerializer
    implements PrimitiveSerializer<GDesignCollectionCopyState> {
  @override
  final Iterable<Type> types = const <Type>[GDesignCollectionCopyState];
  @override
  final String wireName = 'GDesignCollectionCopyState';

  @override
  Object serialize(Serializers serializers, GDesignCollectionCopyState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDesignCollectionCopyState deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDesignCollectionCopyState.valueOf(serialized as String);
}

class _$GDesignManagementDeleteInputSerializer
    implements StructuredSerializer<GDesignManagementDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GDesignManagementDeleteInput,
    _$GDesignManagementDeleteInput
  ];
  @override
  final String wireName = 'GDesignManagementDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDesignManagementDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'filenames',
      serializers.serialize(object.filenames,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDesignManagementDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDesignManagementDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'filenames':
          result.filenames.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDesignManagementMoveInputSerializer
    implements StructuredSerializer<GDesignManagementMoveInput> {
  @override
  final Iterable<Type> types = const [
    GDesignManagementMoveInput,
    _$GDesignManagementMoveInput
  ];
  @override
  final String wireName = 'GDesignManagementMoveInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDesignManagementMoveInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GDesignManagementDesignID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.previous;
    if (value != null) {
      result
        ..add('previous')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDesignManagementDesignID)));
    }
    value = object.next;
    if (value != null) {
      result
        ..add('next')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDesignManagementDesignID)));
    }
    return result;
  }

  @override
  GDesignManagementMoveInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDesignManagementMoveInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDesignManagementDesignID))!
              as GDesignManagementDesignID);
          break;
        case 'previous':
          result.previous.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDesignManagementDesignID))!
              as GDesignManagementDesignID);
          break;
        case 'next':
          result.next.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDesignManagementDesignID))!
              as GDesignManagementDesignID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDesignManagementUploadInputSerializer
    implements StructuredSerializer<GDesignManagementUploadInput> {
  @override
  final Iterable<Type> types = const [
    GDesignManagementUploadInput,
    _$GDesignManagementUploadInput
  ];
  @override
  final String wireName = 'GDesignManagementUploadInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDesignManagementUploadInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'files',
      serializers.serialize(object.files,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GUpload)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDesignManagementUploadInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDesignManagementUploadInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'files':
          result.files.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GUpload)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDesignVersionEventSerializer
    implements PrimitiveSerializer<GDesignVersionEvent> {
  @override
  final Iterable<Type> types = const <Type>[GDesignVersionEvent];
  @override
  final String wireName = 'GDesignVersionEvent';

  @override
  Object serialize(Serializers serializers, GDesignVersionEvent object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDesignVersionEvent deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDesignVersionEvent.valueOf(serialized as String);
}

class _$GDestroyBoardInputSerializer
    implements StructuredSerializer<GDestroyBoardInput> {
  @override
  final Iterable<Type> types = const [GDestroyBoardInput, _$GDestroyBoardInput];
  @override
  final String wireName = 'GDestroyBoardInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroyBoardInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(GBoardID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyBoardInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyBoardInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GBoardID))! as GBoardID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroyBoardListInputSerializer
    implements StructuredSerializer<GDestroyBoardListInput> {
  @override
  final Iterable<Type> types = const [
    GDestroyBoardListInput,
    _$GDestroyBoardListInput
  ];
  @override
  final String wireName = 'GDestroyBoardListInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroyBoardListInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'listId',
      serializers.serialize(object.listId,
          specifiedType: const FullType(GListID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyBoardListInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyBoardListInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'listId':
          result.listId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GListID))! as GListID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroyComplianceFrameworkInputSerializer
    implements StructuredSerializer<GDestroyComplianceFrameworkInput> {
  @override
  final Iterable<Type> types = const [
    GDestroyComplianceFrameworkInput,
    _$GDestroyComplianceFrameworkInput
  ];
  @override
  final String wireName = 'GDestroyComplianceFrameworkInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroyComplianceFrameworkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GComplianceManagementFrameworkID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyComplianceFrameworkInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyComplianceFrameworkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GComplianceManagementFrameworkID))!
              as GComplianceManagementFrameworkID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroyContainerRepositoryInputSerializer
    implements StructuredSerializer<GDestroyContainerRepositoryInput> {
  @override
  final Iterable<Type> types = const [
    GDestroyContainerRepositoryInput,
    _$GDestroyContainerRepositoryInput
  ];
  @override
  final String wireName = 'GDestroyContainerRepositoryInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroyContainerRepositoryInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GContainerRepositoryID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyContainerRepositoryInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyContainerRepositoryInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GContainerRepositoryID))!
              as GContainerRepositoryID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroyContainerRepositoryTagsInputSerializer
    implements StructuredSerializer<GDestroyContainerRepositoryTagsInput> {
  @override
  final Iterable<Type> types = const [
    GDestroyContainerRepositoryTagsInput,
    _$GDestroyContainerRepositoryTagsInput
  ];
  @override
  final String wireName = 'GDestroyContainerRepositoryTagsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroyContainerRepositoryTagsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GContainerRepositoryID)),
      'tagNames',
      serializers.serialize(object.tagNames,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyContainerRepositoryTagsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyContainerRepositoryTagsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GContainerRepositoryID))!
              as GContainerRepositoryID);
          break;
        case 'tagNames':
          result.tagNames.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroyCustomEmojiInputSerializer
    implements StructuredSerializer<GDestroyCustomEmojiInput> {
  @override
  final Iterable<Type> types = const [
    GDestroyCustomEmojiInput,
    _$GDestroyCustomEmojiInput
  ];
  @override
  final String wireName = 'GDestroyCustomEmojiInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroyCustomEmojiInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCustomEmojiID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyCustomEmojiInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyCustomEmojiInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GCustomEmojiID))!
              as GCustomEmojiID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroyEpicBoardInputSerializer
    implements StructuredSerializer<GDestroyEpicBoardInput> {
  @override
  final Iterable<Type> types = const [
    GDestroyEpicBoardInput,
    _$GDestroyEpicBoardInput
  ];
  @override
  final String wireName = 'GDestroyEpicBoardInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroyEpicBoardInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GBoardsEpicBoardID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyEpicBoardInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyEpicBoardInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoardsEpicBoardID))!
              as GBoardsEpicBoardID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroyNoteInputSerializer
    implements StructuredSerializer<GDestroyNoteInput> {
  @override
  final Iterable<Type> types = const [GDestroyNoteInput, _$GDestroyNoteInput];
  @override
  final String wireName = 'GDestroyNoteInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GDestroyNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(GNoteID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyNoteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNoteID))! as GNoteID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroyPackageFileInputSerializer
    implements StructuredSerializer<GDestroyPackageFileInput> {
  @override
  final Iterable<Type> types = const [
    GDestroyPackageFileInput,
    _$GDestroyPackageFileInput
  ];
  @override
  final String wireName = 'GDestroyPackageFileInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroyPackageFileInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GPackagesPackageFileID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyPackageFileInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyPackageFileInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPackagesPackageFileID))!
              as GPackagesPackageFileID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroyPackageFilesInputSerializer
    implements StructuredSerializer<GDestroyPackageFilesInput> {
  @override
  final Iterable<Type> types = const [
    GDestroyPackageFilesInput,
    _$GDestroyPackageFilesInput
  ];
  @override
  final String wireName = 'GDestroyPackageFilesInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroyPackageFilesInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'ids',
      serializers.serialize(object.ids,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GPackagesPackageFileID)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyPackageFilesInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyPackageFilesInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPackagesPackageFileID)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroyPackageInputSerializer
    implements StructuredSerializer<GDestroyPackageInput> {
  @override
  final Iterable<Type> types = const [
    GDestroyPackageInput,
    _$GDestroyPackageInput
  ];
  @override
  final String wireName = 'GDestroyPackageInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroyPackageInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GPackagesPackageID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroyPackageInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroyPackageInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPackagesPackageID))!
              as GPackagesPackageID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDestroySnippetInputSerializer
    implements StructuredSerializer<GDestroySnippetInput> {
  @override
  final Iterable<Type> types = const [
    GDestroySnippetInput,
    _$GDestroySnippetInput
  ];
  @override
  final String wireName = 'GDestroySnippetInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDestroySnippetInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GSnippetID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDestroySnippetInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDestroySnippetInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSnippetID))! as GSnippetID);
          break;
      }
    }

    return result.build();
  }
}

class _$GDetailedMergeStatusSerializer
    implements PrimitiveSerializer<GDetailedMergeStatus> {
  @override
  final Iterable<Type> types = const <Type>[GDetailedMergeStatus];
  @override
  final String wireName = 'GDetailedMergeStatus';

  @override
  Object serialize(Serializers serializers, GDetailedMergeStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDetailedMergeStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDetailedMergeStatus.valueOf(serialized as String);
}

class _$GDiffImagePositionInputSerializer
    implements StructuredSerializer<GDiffImagePositionInput> {
  @override
  final Iterable<Type> types = const [
    GDiffImagePositionInput,
    _$GDiffImagePositionInput
  ];
  @override
  final String wireName = 'GDiffImagePositionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDiffImagePositionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'headSha',
      serializers.serialize(object.headSha,
          specifiedType: const FullType(String)),
      'startSha',
      serializers.serialize(object.startSha,
          specifiedType: const FullType(String)),
      'paths',
      serializers.serialize(object.paths,
          specifiedType: const FullType(GDiffPathsInput)),
      'height',
      serializers.serialize(object.height, specifiedType: const FullType(int)),
      'width',
      serializers.serialize(object.width, specifiedType: const FullType(int)),
      'x',
      serializers.serialize(object.x, specifiedType: const FullType(int)),
      'y',
      serializers.serialize(object.y, specifiedType: const FullType(int)),
    ];
    Object? value;
    value = object.baseSha;
    if (value != null) {
      result
        ..add('baseSha')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDiffImagePositionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDiffImagePositionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'baseSha':
          result.baseSha = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'headSha':
          result.headSha = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'startSha':
          result.startSha = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'paths':
          result.paths.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDiffPathsInput))!
              as GDiffPathsInput);
          break;
        case 'height':
          result.height = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'width':
          result.width = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'x':
          result.x = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'y':
          result.y = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GDiffPathsInputSerializer
    implements StructuredSerializer<GDiffPathsInput> {
  @override
  final Iterable<Type> types = const [GDiffPathsInput, _$GDiffPathsInput];
  @override
  final String wireName = 'GDiffPathsInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GDiffPathsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.newPath;
    if (value != null) {
      result
        ..add('newPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.oldPath;
    if (value != null) {
      result
        ..add('oldPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDiffPathsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDiffPathsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'newPath':
          result.newPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'oldPath':
          result.oldPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDiffPositionInputSerializer
    implements StructuredSerializer<GDiffPositionInput> {
  @override
  final Iterable<Type> types = const [GDiffPositionInput, _$GDiffPositionInput];
  @override
  final String wireName = 'GDiffPositionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDiffPositionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'headSha',
      serializers.serialize(object.headSha,
          specifiedType: const FullType(String)),
      'startSha',
      serializers.serialize(object.startSha,
          specifiedType: const FullType(String)),
      'paths',
      serializers.serialize(object.paths,
          specifiedType: const FullType(GDiffPathsInput)),
    ];
    Object? value;
    value = object.baseSha;
    if (value != null) {
      result
        ..add('baseSha')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.newLine;
    if (value != null) {
      result
        ..add('newLine')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.oldLine;
    if (value != null) {
      result
        ..add('oldLine')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDiffPositionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDiffPositionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'baseSha':
          result.baseSha = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'headSha':
          result.headSha = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'startSha':
          result.startSha = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'paths':
          result.paths.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDiffPathsInput))!
              as GDiffPathsInput);
          break;
        case 'newLine':
          result.newLine = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'oldLine':
          result.oldLine = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDiffPositionTypeSerializer
    implements PrimitiveSerializer<GDiffPositionType> {
  @override
  final Iterable<Type> types = const <Type>[GDiffPositionType];
  @override
  final String wireName = 'GDiffPositionType';

  @override
  Object serialize(Serializers serializers, GDiffPositionType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDiffPositionType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDiffPositionType.valueOf(serialized as String);
}

class _$GDisableDevopsAdoptionNamespaceInputSerializer
    implements StructuredSerializer<GDisableDevopsAdoptionNamespaceInput> {
  @override
  final Iterable<Type> types = const [
    GDisableDevopsAdoptionNamespaceInput,
    _$GDisableDevopsAdoptionNamespaceInput
  ];
  @override
  final String wireName = 'GDisableDevopsAdoptionNamespaceInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDisableDevopsAdoptionNamespaceInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(BuiltList, const [
            const FullType(GAnalyticsDevopsAdoptionEnabledNamespaceID)
          ])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDisableDevopsAdoptionNamespaceInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDisableDevopsAdoptionNamespaceInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GAnalyticsDevopsAdoptionEnabledNamespaceID)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDiscussionToggleResolveInputSerializer
    implements StructuredSerializer<GDiscussionToggleResolveInput> {
  @override
  final Iterable<Type> types = const [
    GDiscussionToggleResolveInput,
    _$GDiscussionToggleResolveInput
  ];
  @override
  final String wireName = 'GDiscussionToggleResolveInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDiscussionToggleResolveInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GDiscussionID)),
      'resolve',
      serializers.serialize(object.resolve,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDiscussionToggleResolveInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDiscussionToggleResolveInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDiscussionID))! as GDiscussionID);
          break;
        case 'resolve':
          result.resolve = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GDoraMetricBucketingIntervalSerializer
    implements PrimitiveSerializer<GDoraMetricBucketingInterval> {
  @override
  final Iterable<Type> types = const <Type>[GDoraMetricBucketingInterval];
  @override
  final String wireName = 'GDoraMetricBucketingInterval';

  @override
  Object serialize(Serializers serializers, GDoraMetricBucketingInterval object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDoraMetricBucketingInterval deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDoraMetricBucketingInterval.valueOf(serialized as String);
}

class _$GDoraMetricTypeSerializer
    implements PrimitiveSerializer<GDoraMetricType> {
  @override
  final Iterable<Type> types = const <Type>[GDoraMetricType];
  @override
  final String wireName = 'GDoraMetricType';

  @override
  Object serialize(Serializers serializers, GDoraMetricType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDoraMetricType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDoraMetricType.valueOf(serialized as String);
}

class _$GEchoCreateInputSerializer
    implements StructuredSerializer<GEchoCreateInput> {
  @override
  final Iterable<Type> types = const [GEchoCreateInput, _$GEchoCreateInput];
  @override
  final String wireName = 'GEchoCreateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GEchoCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.errors;
    if (value != null) {
      result
        ..add('errors')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.messages;
    if (value != null) {
      result
        ..add('messages')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GEchoCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEchoCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'errors':
          result.errors.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'messages':
          result.messages.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GEnableDevopsAdoptionNamespaceInputSerializer
    implements StructuredSerializer<GEnableDevopsAdoptionNamespaceInput> {
  @override
  final Iterable<Type> types = const [
    GEnableDevopsAdoptionNamespaceInput,
    _$GEnableDevopsAdoptionNamespaceInput
  ];
  @override
  final String wireName = 'GEnableDevopsAdoptionNamespaceInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEnableDevopsAdoptionNamespaceInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'namespaceId',
      serializers.serialize(object.namespaceId,
          specifiedType: const FullType(GNamespaceID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayNamespaceId;
    if (value != null) {
      result
        ..add('displayNamespaceId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GNamespaceID)));
    }
    return result;
  }

  @override
  GEnableDevopsAdoptionNamespaceInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEnableDevopsAdoptionNamespaceInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'namespaceId':
          result.namespaceId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNamespaceID))! as GNamespaceID);
          break;
        case 'displayNamespaceId':
          result.displayNamespaceId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNamespaceID))! as GNamespaceID);
          break;
      }
    }

    return result.build();
  }
}

class _$GEntryTypeSerializer implements PrimitiveSerializer<GEntryType> {
  @override
  final Iterable<Type> types = const <Type>[GEntryType];
  @override
  final String wireName = 'GEntryType';

  @override
  Object serialize(Serializers serializers, GEntryType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GEntryType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEntryType.valueOf(serialized as String);
}

class _$GEnvironmentsCanaryIngressUpdateInputSerializer
    implements StructuredSerializer<GEnvironmentsCanaryIngressUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GEnvironmentsCanaryIngressUpdateInput,
    _$GEnvironmentsCanaryIngressUpdateInput
  ];
  @override
  final String wireName = 'GEnvironmentsCanaryIngressUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEnvironmentsCanaryIngressUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GEnvironmentID)),
      'weight',
      serializers.serialize(object.weight, specifiedType: const FullType(int)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GEnvironmentsCanaryIngressUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEnvironmentsCanaryIngressUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GEnvironmentID))!
              as GEnvironmentID);
          break;
        case 'weight':
          result.weight = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicAddIssueInputSerializer
    implements StructuredSerializer<GEpicAddIssueInput> {
  @override
  final Iterable<Type> types = const [GEpicAddIssueInput, _$GEpicAddIssueInput];
  @override
  final String wireName = 'GEpicAddIssueInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpicAddIssueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'issueIid',
      serializers.serialize(object.issueIid,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GEpicAddIssueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpicAddIssueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'issueIid':
          result.issueIid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicBoardCreateInputSerializer
    implements StructuredSerializer<GEpicBoardCreateInput> {
  @override
  final Iterable<Type> types = const [
    GEpicBoardCreateInput,
    _$GEpicBoardCreateInput
  ];
  @override
  final String wireName = 'GEpicBoardCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpicBoardCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.hideBacklogList;
    if (value != null) {
      result
        ..add('hideBacklogList')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.hideClosedList;
    if (value != null) {
      result
        ..add('hideClosedList')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.labels;
    if (value != null) {
      result
        ..add('labels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.labelIds;
    if (value != null) {
      result
        ..add('labelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GLabelID)])));
    }
    value = object.groupPath;
    if (value != null) {
      result
        ..add('groupPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GEpicBoardCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpicBoardCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'hideBacklogList':
          result.hideBacklogList = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'hideClosedList':
          result.hideClosedList = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'labels':
          result.labels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'labelIds':
          result.labelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GLabelID)]))!
              as BuiltList<Object?>);
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicBoardListCreateInputSerializer
    implements StructuredSerializer<GEpicBoardListCreateInput> {
  @override
  final Iterable<Type> types = const [
    GEpicBoardListCreateInput,
    _$GEpicBoardListCreateInput
  ];
  @override
  final String wireName = 'GEpicBoardListCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpicBoardListCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'boardId',
      serializers.serialize(object.boardId,
          specifiedType: const FullType(GBoardsEpicBoardID)),
    ];
    Object? value;
    value = object.backlog;
    if (value != null) {
      result
        ..add('backlog')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.labelId;
    if (value != null) {
      result
        ..add('labelId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GLabelID)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GEpicBoardListCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpicBoardListCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'backlog':
          result.backlog = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'labelId':
          result.labelId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GLabelID))! as GLabelID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'boardId':
          result.boardId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoardsEpicBoardID))!
              as GBoardsEpicBoardID);
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicBoardListDestroyInputSerializer
    implements StructuredSerializer<GEpicBoardListDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GEpicBoardListDestroyInput,
    _$GEpicBoardListDestroyInput
  ];
  @override
  final String wireName = 'GEpicBoardListDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpicBoardListDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'listId',
      serializers.serialize(object.listId,
          specifiedType: const FullType(GBoardsEpicListID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GEpicBoardListDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpicBoardListDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'listId':
          result.listId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoardsEpicListID))!
              as GBoardsEpicListID);
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicBoardUpdateInputSerializer
    implements StructuredSerializer<GEpicBoardUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GEpicBoardUpdateInput,
    _$GEpicBoardUpdateInput
  ];
  @override
  final String wireName = 'GEpicBoardUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpicBoardUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GBoardsEpicBoardID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.hideBacklogList;
    if (value != null) {
      result
        ..add('hideBacklogList')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.hideClosedList;
    if (value != null) {
      result
        ..add('hideClosedList')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.labels;
    if (value != null) {
      result
        ..add('labels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.labelIds;
    if (value != null) {
      result
        ..add('labelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GLabelID)])));
    }
    return result;
  }

  @override
  GEpicBoardUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpicBoardUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'hideBacklogList':
          result.hideBacklogList = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'hideClosedList':
          result.hideClosedList = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'labels':
          result.labels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'labelIds':
          result.labelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GLabelID)]))!
              as BuiltList<Object?>);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoardsEpicBoardID))!
              as GBoardsEpicBoardID);
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicFiltersSerializer implements StructuredSerializer<GEpicFilters> {
  @override
  final Iterable<Type> types = const [GEpicFilters, _$GEpicFilters];
  @override
  final String wireName = 'GEpicFilters';

  @override
  Iterable<Object?> serialize(Serializers serializers, GEpicFilters object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.labelName;
    if (value != null) {
      result
        ..add('labelName')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.authorUsername;
    if (value != null) {
      result
        ..add('authorUsername')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.myReactionEmoji;
    if (value != null) {
      result
        ..add('myReactionEmoji')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.not;
    if (value != null) {
      result
        ..add('not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GNegatedEpicBoardIssueInput)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.confidential;
    if (value != null) {
      result
        ..add('confidential')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GEpicFilters deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpicFiltersBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'labelName':
          result.labelName.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'authorUsername':
          result.authorUsername = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'myReactionEmoji':
          result.myReactionEmoji = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'not':
          result.not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GNegatedEpicBoardIssueInput))!
              as GNegatedEpicBoardIssueInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'confidential':
          result.confidential = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicMoveListInputSerializer
    implements StructuredSerializer<GEpicMoveListInput> {
  @override
  final Iterable<Type> types = const [GEpicMoveListInput, _$GEpicMoveListInput];
  @override
  final String wireName = 'GEpicMoveListInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpicMoveListInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'boardId',
      serializers.serialize(object.boardId,
          specifiedType: const FullType(GBoardsEpicBoardID)),
      'epicId',
      serializers.serialize(object.epicId,
          specifiedType: const FullType(GEpicID)),
      'toListId',
      serializers.serialize(object.toListId,
          specifiedType: const FullType(GBoardsEpicListID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fromListId;
    if (value != null) {
      result
        ..add('fromListId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GBoardsEpicListID)));
    }
    value = object.moveBeforeId;
    if (value != null) {
      result
        ..add('moveBeforeId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicID)));
    }
    value = object.moveAfterId;
    if (value != null) {
      result
        ..add('moveAfterId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicID)));
    }
    return result;
  }

  @override
  GEpicMoveListInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpicMoveListInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'boardId':
          result.boardId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoardsEpicBoardID))!
              as GBoardsEpicBoardID);
          break;
        case 'epicId':
          result.epicId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
        case 'fromListId':
          result.fromListId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoardsEpicListID))!
              as GBoardsEpicListID);
          break;
        case 'toListId':
          result.toListId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoardsEpicListID))!
              as GBoardsEpicListID);
          break;
        case 'moveBeforeId':
          result.moveBeforeId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
        case 'moveAfterId':
          result.moveAfterId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicSetSubscriptionInputSerializer
    implements StructuredSerializer<GEpicSetSubscriptionInput> {
  @override
  final Iterable<Type> types = const [
    GEpicSetSubscriptionInput,
    _$GEpicSetSubscriptionInput
  ];
  @override
  final String wireName = 'GEpicSetSubscriptionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpicSetSubscriptionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
      'subscribedState',
      serializers.serialize(object.subscribedState,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GEpicSetSubscriptionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpicSetSubscriptionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'subscribedState':
          result.subscribedState = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicSortSerializer implements PrimitiveSerializer<GEpicSort> {
  @override
  final Iterable<Type> types = const <Type>[GEpicSort];
  @override
  final String wireName = 'GEpicSort';

  @override
  Object serialize(Serializers serializers, GEpicSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GEpicSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEpicSort.valueOf(serialized as String);
}

class _$GEpicStateSerializer implements PrimitiveSerializer<GEpicState> {
  @override
  final Iterable<Type> types = const <Type>[GEpicState];
  @override
  final String wireName = 'GEpicState';

  @override
  Object serialize(Serializers serializers, GEpicState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GEpicState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEpicState.valueOf(serialized as String);
}

class _$GEpicStateEventSerializer
    implements PrimitiveSerializer<GEpicStateEvent> {
  @override
  final Iterable<Type> types = const <Type>[GEpicStateEvent];
  @override
  final String wireName = 'GEpicStateEvent';

  @override
  Object serialize(Serializers serializers, GEpicStateEvent object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GEpicStateEvent deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEpicStateEvent.valueOf(serialized as String);
}

class _$GEpicTreeNodeFieldsInputTypeSerializer
    implements StructuredSerializer<GEpicTreeNodeFieldsInputType> {
  @override
  final Iterable<Type> types = const [
    GEpicTreeNodeFieldsInputType,
    _$GEpicTreeNodeFieldsInputType
  ];
  @override
  final String wireName = 'GEpicTreeNodeFieldsInputType';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpicTreeNodeFieldsInputType object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GEpicTreeSortingID)),
    ];
    Object? value;
    value = object.adjacentReferenceId;
    if (value != null) {
      result
        ..add('adjacentReferenceId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicTreeSortingID)));
    }
    value = object.relativePosition;
    if (value != null) {
      result
        ..add('relativePosition')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMoveType)));
    }
    value = object.newParentId;
    if (value != null) {
      result
        ..add('newParentId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicID)));
    }
    return result;
  }

  @override
  GEpicTreeNodeFieldsInputType deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpicTreeNodeFieldsInputTypeBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GEpicTreeSortingID))!
              as GEpicTreeSortingID);
          break;
        case 'adjacentReferenceId':
          result.adjacentReferenceId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GEpicTreeSortingID))!
              as GEpicTreeSortingID);
          break;
        case 'relativePosition':
          result.relativePosition = serializers.deserialize(value,
              specifiedType: const FullType(GMoveType)) as GMoveType?;
          break;
        case 'newParentId':
          result.newParentId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicTreeReorderInputSerializer
    implements StructuredSerializer<GEpicTreeReorderInput> {
  @override
  final Iterable<Type> types = const [
    GEpicTreeReorderInput,
    _$GEpicTreeReorderInput
  ];
  @override
  final String wireName = 'GEpicTreeReorderInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpicTreeReorderInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'baseEpicId',
      serializers.serialize(object.baseEpicId,
          specifiedType: const FullType(GEpicID)),
      'moved',
      serializers.serialize(object.moved,
          specifiedType: const FullType(GEpicTreeNodeFieldsInputType)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GEpicTreeReorderInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpicTreeReorderInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'baseEpicId':
          result.baseEpicId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
        case 'moved':
          result.moved.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GEpicTreeNodeFieldsInputType))!
              as GEpicTreeNodeFieldsInputType);
          break;
      }
    }

    return result.build();
  }
}

class _$GEpicWildcardIdSerializer
    implements PrimitiveSerializer<GEpicWildcardId> {
  @override
  final Iterable<Type> types = const <Type>[GEpicWildcardId];
  @override
  final String wireName = 'GEpicWildcardId';

  @override
  Object serialize(Serializers serializers, GEpicWildcardId object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GEpicWildcardId deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEpicWildcardId.valueOf(serialized as String);
}

class _$GEscalationPolicyCreateInputSerializer
    implements StructuredSerializer<GEscalationPolicyCreateInput> {
  @override
  final Iterable<Type> types = const [
    GEscalationPolicyCreateInput,
    _$GEscalationPolicyCreateInput
  ];
  @override
  final String wireName = 'GEscalationPolicyCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEscalationPolicyCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'rules',
      serializers.serialize(object.rules,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GEscalationRuleInput)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GEscalationPolicyCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEscalationPolicyCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'rules':
          result.rules.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GEscalationRuleInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GEscalationPolicyDestroyInputSerializer
    implements StructuredSerializer<GEscalationPolicyDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GEscalationPolicyDestroyInput,
    _$GEscalationPolicyDestroyInput
  ];
  @override
  final String wireName = 'GEscalationPolicyDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEscalationPolicyDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIncidentManagementEscalationPolicyID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GEscalationPolicyDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEscalationPolicyDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GIncidentManagementEscalationPolicyID))!
              as GIncidentManagementEscalationPolicyID);
          break;
      }
    }

    return result.build();
  }
}

class _$GEscalationPolicyUpdateInputSerializer
    implements StructuredSerializer<GEscalationPolicyUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GEscalationPolicyUpdateInput,
    _$GEscalationPolicyUpdateInput
  ];
  @override
  final String wireName = 'GEscalationPolicyUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEscalationPolicyUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIncidentManagementEscalationPolicyID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.rules;
    if (value != null) {
      result
        ..add('rules')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GEscalationRuleInput)])));
    }
    return result;
  }

  @override
  GEscalationPolicyUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEscalationPolicyUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GIncidentManagementEscalationPolicyID))!
              as GIncidentManagementEscalationPolicyID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'rules':
          result.rules.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GEscalationRuleInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GEscalationRuleInputSerializer
    implements StructuredSerializer<GEscalationRuleInput> {
  @override
  final Iterable<Type> types = const [
    GEscalationRuleInput,
    _$GEscalationRuleInput
  ];
  @override
  final String wireName = 'GEscalationRuleInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEscalationRuleInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'elapsedTimeSeconds',
      serializers.serialize(object.elapsedTimeSeconds,
          specifiedType: const FullType(int)),
      'status',
      serializers.serialize(object.status,
          specifiedType: const FullType(GEscalationRuleStatus)),
    ];
    Object? value;
    value = object.oncallScheduleIid;
    if (value != null) {
      result
        ..add('oncallScheduleIid')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username;
    if (value != null) {
      result
        ..add('username')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GEscalationRuleInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEscalationRuleInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'oncallScheduleIid':
          result.oncallScheduleIid = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username':
          result.username = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'elapsedTimeSeconds':
          result.elapsedTimeSeconds = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'status':
          result.status = serializers.deserialize(value,
                  specifiedType: const FullType(GEscalationRuleStatus))!
              as GEscalationRuleStatus;
          break;
      }
    }

    return result.build();
  }
}

class _$GEscalationRuleStatusSerializer
    implements PrimitiveSerializer<GEscalationRuleStatus> {
  @override
  final Iterable<Type> types = const <Type>[GEscalationRuleStatus];
  @override
  final String wireName = 'GEscalationRuleStatus';

  @override
  Object serialize(Serializers serializers, GEscalationRuleStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GEscalationRuleStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEscalationRuleStatus.valueOf(serialized as String);
}

class _$GEventActionSerializer implements PrimitiveSerializer<GEventAction> {
  @override
  final Iterable<Type> types = const <Type>[GEventAction];
  @override
  final String wireName = 'GEventAction';

  @override
  Object serialize(Serializers serializers, GEventAction object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GEventAction deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEventAction.valueOf(serialized as String);
}

class _$GExportRequirementsInputSerializer
    implements StructuredSerializer<GExportRequirementsInput> {
  @override
  final Iterable<Type> types = const [
    GExportRequirementsInput,
    _$GExportRequirementsInput
  ];
  @override
  final String wireName = 'GExportRequirementsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExportRequirementsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.sort;
    if (value != null) {
      result
        ..add('sort')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GSort)));
    }
    value = object.state;
    if (value != null) {
      result
        ..add('state')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GRequirementState)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.authorUsername;
    if (value != null) {
      result
        ..add('authorUsername')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.selectedFields;
    if (value != null) {
      result
        ..add('selectedFields')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GExportRequirementsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExportRequirementsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'sort':
          result.sort = serializers.deserialize(value,
              specifiedType: const FullType(GSort)) as GSort?;
          break;
        case 'state':
          result.state = serializers.deserialize(value,
                  specifiedType: const FullType(GRequirementState))
              as GRequirementState?;
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'authorUsername':
          result.authorUsername.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'selectedFields':
          result.selectedFields.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GExternalAuditEventDestinationCreateInputSerializer
    implements StructuredSerializer<GExternalAuditEventDestinationCreateInput> {
  @override
  final Iterable<Type> types = const [
    GExternalAuditEventDestinationCreateInput,
    _$GExternalAuditEventDestinationCreateInput
  ];
  @override
  final String wireName = 'GExternalAuditEventDestinationCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExternalAuditEventDestinationCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'destinationUrl',
      serializers.serialize(object.destinationUrl,
          specifiedType: const FullType(String)),
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.verificationToken;
    if (value != null) {
      result
        ..add('verificationToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExternalAuditEventDestinationCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExternalAuditEventDestinationCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'destinationUrl':
          result.destinationUrl = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'verificationToken':
          result.verificationToken = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GExternalAuditEventDestinationDestroyInputSerializer
    implements
        StructuredSerializer<GExternalAuditEventDestinationDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GExternalAuditEventDestinationDestroyInput,
    _$GExternalAuditEventDestinationDestroyInput
  ];
  @override
  final String wireName = 'GExternalAuditEventDestinationDestroyInput';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GExternalAuditEventDestinationDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType:
              const FullType(GAuditEventsExternalAuditEventDestinationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExternalAuditEventDestinationDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExternalAuditEventDestinationDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GAuditEventsExternalAuditEventDestinationID))!
              as GAuditEventsExternalAuditEventDestinationID);
          break;
      }
    }

    return result.build();
  }
}

class _$GExternalAuditEventDestinationUpdateInputSerializer
    implements StructuredSerializer<GExternalAuditEventDestinationUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GExternalAuditEventDestinationUpdateInput,
    _$GExternalAuditEventDestinationUpdateInput
  ];
  @override
  final String wireName = 'GExternalAuditEventDestinationUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExternalAuditEventDestinationUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType:
              const FullType(GAuditEventsExternalAuditEventDestinationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.destinationUrl;
    if (value != null) {
      result
        ..add('destinationUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExternalAuditEventDestinationUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExternalAuditEventDestinationUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GAuditEventsExternalAuditEventDestinationID))!
              as GAuditEventsExternalAuditEventDestinationID);
          break;
        case 'destinationUrl':
          result.destinationUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGitlabSubscriptionActivateInputSerializer
    implements StructuredSerializer<GGitlabSubscriptionActivateInput> {
  @override
  final Iterable<Type> types = const [
    GGitlabSubscriptionActivateInput,
    _$GGitlabSubscriptionActivateInput
  ];
  @override
  final String wireName = 'GGitlabSubscriptionActivateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGitlabSubscriptionActivateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'activationCode',
      serializers.serialize(object.activationCode,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGitlabSubscriptionActivateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGitlabSubscriptionActivateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'activationCode':
          result.activationCode = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGroupMemberRelationSerializer
    implements PrimitiveSerializer<GGroupMemberRelation> {
  @override
  final Iterable<Type> types = const <Type>[GGroupMemberRelation];
  @override
  final String wireName = 'GGroupMemberRelation';

  @override
  Object serialize(Serializers serializers, GGroupMemberRelation object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GGroupMemberRelation deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GGroupMemberRelation.valueOf(serialized as String);
}

class _$GGroupPermissionSerializer
    implements PrimitiveSerializer<GGroupPermission> {
  @override
  final Iterable<Type> types = const <Type>[GGroupPermission];
  @override
  final String wireName = 'GGroupPermission';

  @override
  Object serialize(Serializers serializers, GGroupPermission object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GGroupPermission deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GGroupPermission.valueOf(serialized as String);
}

class _$GGroupUpdateInputSerializer
    implements StructuredSerializer<GGroupUpdateInput> {
  @override
  final Iterable<Type> types = const [GGroupUpdateInput, _$GGroupUpdateInput];
  @override
  final String wireName = 'GGroupUpdateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GGroupUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
      'sharedRunnersSetting',
      serializers.serialize(object.sharedRunnersSetting,
          specifiedType: const FullType(GSharedRunnersSetting)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGroupUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGroupUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'sharedRunnersSetting':
          result.sharedRunnersSetting = serializers.deserialize(value,
                  specifiedType: const FullType(GSharedRunnersSetting))!
              as GSharedRunnersSetting;
          break;
      }
    }

    return result.build();
  }
}

class _$GHealthStatusSerializer implements PrimitiveSerializer<GHealthStatus> {
  @override
  final Iterable<Type> types = const <Type>[GHealthStatus];
  @override
  final String wireName = 'GHealthStatus';

  @override
  Object serialize(Serializers serializers, GHealthStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GHealthStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GHealthStatus.valueOf(serialized as String);
}

class _$GHealthStatusFilterSerializer
    implements PrimitiveSerializer<GHealthStatusFilter> {
  @override
  final Iterable<Type> types = const <Type>[GHealthStatusFilter];
  @override
  final String wireName = 'GHealthStatusFilter';

  @override
  Object serialize(Serializers serializers, GHealthStatusFilter object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GHealthStatusFilter deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GHealthStatusFilter.valueOf(serialized as String);
}

class _$GHttpIntegrationCreateInputSerializer
    implements StructuredSerializer<GHttpIntegrationCreateInput> {
  @override
  final Iterable<Type> types = const [
    GHttpIntegrationCreateInput,
    _$GHttpIntegrationCreateInput
  ];
  @override
  final String wireName = 'GHttpIntegrationCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHttpIntegrationCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'active',
      serializers.serialize(object.active, specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.payloadExample;
    if (value != null) {
      result
        ..add('payloadExample')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJsonString)));
    }
    value = object.payloadAttributeMappings;
    if (value != null) {
      result
        ..add('payloadAttributeMappings')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GAlertManagementPayloadAlertFieldInput)
            ])));
    }
    return result;
  }

  @override
  GHttpIntegrationCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHttpIntegrationCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'payloadExample':
          result.payloadExample.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJsonString))! as GJsonString);
          break;
        case 'payloadAttributeMappings':
          result.payloadAttributeMappings.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GAlertManagementPayloadAlertFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GHttpIntegrationDestroyInputSerializer
    implements StructuredSerializer<GHttpIntegrationDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GHttpIntegrationDestroyInput,
    _$GHttpIntegrationDestroyInput
  ];
  @override
  final String wireName = 'GHttpIntegrationDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHttpIntegrationDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GAlertManagementHttpIntegrationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GHttpIntegrationDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHttpIntegrationDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GAlertManagementHttpIntegrationID))!
              as GAlertManagementHttpIntegrationID);
          break;
      }
    }

    return result.build();
  }
}

class _$GHttpIntegrationResetTokenInputSerializer
    implements StructuredSerializer<GHttpIntegrationResetTokenInput> {
  @override
  final Iterable<Type> types = const [
    GHttpIntegrationResetTokenInput,
    _$GHttpIntegrationResetTokenInput
  ];
  @override
  final String wireName = 'GHttpIntegrationResetTokenInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHttpIntegrationResetTokenInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GAlertManagementHttpIntegrationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GHttpIntegrationResetTokenInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHttpIntegrationResetTokenInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GAlertManagementHttpIntegrationID))!
              as GAlertManagementHttpIntegrationID);
          break;
      }
    }

    return result.build();
  }
}

class _$GHttpIntegrationUpdateInputSerializer
    implements StructuredSerializer<GHttpIntegrationUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GHttpIntegrationUpdateInput,
    _$GHttpIntegrationUpdateInput
  ];
  @override
  final String wireName = 'GHttpIntegrationUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHttpIntegrationUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GAlertManagementHttpIntegrationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.active;
    if (value != null) {
      result
        ..add('active')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.payloadExample;
    if (value != null) {
      result
        ..add('payloadExample')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJsonString)));
    }
    value = object.payloadAttributeMappings;
    if (value != null) {
      result
        ..add('payloadAttributeMappings')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GAlertManagementPayloadAlertFieldInput)
            ])));
    }
    return result;
  }

  @override
  GHttpIntegrationUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHttpIntegrationUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GAlertManagementHttpIntegrationID))!
              as GAlertManagementHttpIntegrationID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'payloadExample':
          result.payloadExample.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJsonString))! as GJsonString);
          break;
        case 'payloadAttributeMappings':
          result.payloadAttributeMappings.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GAlertManagementPayloadAlertFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GIssuableResourceLinkCreateInputSerializer
    implements StructuredSerializer<GIssuableResourceLinkCreateInput> {
  @override
  final Iterable<Type> types = const [
    GIssuableResourceLinkCreateInput,
    _$GIssuableResourceLinkCreateInput
  ];
  @override
  final String wireName = 'GIssuableResourceLinkCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssuableResourceLinkCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(GIssueID)),
      'link',
      serializers.serialize(object.link, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkText;
    if (value != null) {
      result
        ..add('linkText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkType;
    if (value != null) {
      result
        ..add('linkType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIssuableResourceLinkType)));
    }
    return result;
  }

  @override
  GIssuableResourceLinkCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssuableResourceLinkCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIssueID))! as GIssueID);
          break;
        case 'link':
          result.link = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'linkText':
          result.linkText = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'linkType':
          result.linkType = serializers.deserialize(value,
                  specifiedType: const FullType(GIssuableResourceLinkType))
              as GIssuableResourceLinkType?;
          break;
      }
    }

    return result.build();
  }
}

class _$GIssuableResourceLinkDestroyInputSerializer
    implements StructuredSerializer<GIssuableResourceLinkDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GIssuableResourceLinkDestroyInput,
    _$GIssuableResourceLinkDestroyInput
  ];
  @override
  final String wireName = 'GIssuableResourceLinkDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssuableResourceLinkDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType:
              const FullType(GIncidentManagementIssuableResourceLinkID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIssuableResourceLinkDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssuableResourceLinkDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GIncidentManagementIssuableResourceLinkID))!
              as GIncidentManagementIssuableResourceLinkID);
          break;
      }
    }

    return result.build();
  }
}

class _$GIssuableResourceLinkTypeSerializer
    implements PrimitiveSerializer<GIssuableResourceLinkType> {
  @override
  final Iterable<Type> types = const <Type>[GIssuableResourceLinkType];
  @override
  final String wireName = 'GIssuableResourceLinkType';

  @override
  Object serialize(Serializers serializers, GIssuableResourceLinkType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIssuableResourceLinkType deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIssuableResourceLinkType.valueOf(serialized as String);
}

class _$GIssuableSearchableFieldSerializer
    implements PrimitiveSerializer<GIssuableSearchableField> {
  @override
  final Iterable<Type> types = const <Type>[GIssuableSearchableField];
  @override
  final String wireName = 'GIssuableSearchableField';

  @override
  Object serialize(Serializers serializers, GIssuableSearchableField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIssuableSearchableField deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIssuableSearchableField.valueOf(serialized as String);
}

class _$GIssuableSeveritySerializer
    implements PrimitiveSerializer<GIssuableSeverity> {
  @override
  final Iterable<Type> types = const <Type>[GIssuableSeverity];
  @override
  final String wireName = 'GIssuableSeverity';

  @override
  Object serialize(Serializers serializers, GIssuableSeverity object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIssuableSeverity deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIssuableSeverity.valueOf(serialized as String);
}

class _$GIssuableStateSerializer
    implements PrimitiveSerializer<GIssuableState> {
  @override
  final Iterable<Type> types = const <Type>[GIssuableState];
  @override
  final String wireName = 'GIssuableState';

  @override
  Object serialize(Serializers serializers, GIssuableState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIssuableState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIssuableState.valueOf(serialized as String);
}

class _$GIssueCreationIterationWildcardIdSerializer
    implements PrimitiveSerializer<GIssueCreationIterationWildcardId> {
  @override
  final Iterable<Type> types = const <Type>[GIssueCreationIterationWildcardId];
  @override
  final String wireName = 'GIssueCreationIterationWildcardId';

  @override
  Object serialize(
          Serializers serializers, GIssueCreationIterationWildcardId object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIssueCreationIterationWildcardId deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIssueCreationIterationWildcardId.valueOf(serialized as String);
}

class _$GIssueEscalationStatusSerializer
    implements PrimitiveSerializer<GIssueEscalationStatus> {
  @override
  final Iterable<Type> types = const <Type>[GIssueEscalationStatus];
  @override
  final String wireName = 'GIssueEscalationStatus';

  @override
  Object serialize(Serializers serializers, GIssueEscalationStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIssueEscalationStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIssueEscalationStatus.valueOf(serialized as String);
}

class _$GIssueMoveInputSerializer
    implements StructuredSerializer<GIssueMoveInput> {
  @override
  final Iterable<Type> types = const [GIssueMoveInput, _$GIssueMoveInput];
  @override
  final String wireName = 'GIssueMoveInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GIssueMoveInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'targetProjectPath',
      serializers.serialize(object.targetProjectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIssueMoveInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueMoveInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'targetProjectPath':
          result.targetProjectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueMoveListInputSerializer
    implements StructuredSerializer<GIssueMoveListInput> {
  @override
  final Iterable<Type> types = const [
    GIssueMoveListInput,
    _$GIssueMoveListInput
  ];
  @override
  final String wireName = 'GIssueMoveListInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueMoveListInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'boardId',
      serializers.serialize(object.boardId,
          specifiedType: const FullType(GBoardID)),
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fromListId;
    if (value != null) {
      result
        ..add('fromListId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.toListId;
    if (value != null) {
      result
        ..add('toListId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.moveBeforeId;
    if (value != null) {
      result
        ..add('moveBeforeId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.moveAfterId;
    if (value != null) {
      result
        ..add('moveAfterId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.positionInList;
    if (value != null) {
      result
        ..add('positionInList')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.epicId;
    if (value != null) {
      result
        ..add('epicId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicID)));
    }
    return result;
  }

  @override
  GIssueMoveListInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueMoveListInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'boardId':
          result.boardId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GBoardID))! as GBoardID);
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fromListId':
          result.fromListId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'toListId':
          result.toListId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'moveBeforeId':
          result.moveBeforeId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'moveAfterId':
          result.moveAfterId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'positionInList':
          result.positionInList = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'epicId':
          result.epicId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetAssigneesInputSerializer
    implements StructuredSerializer<GIssueSetAssigneesInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetAssigneesInput,
    _$GIssueSetAssigneesInput
  ];
  @override
  final String wireName = 'GIssueSetAssigneesInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetAssigneesInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'assigneeUsernames',
      serializers.serialize(object.assigneeUsernames,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.operationMode;
    if (value != null) {
      result
        ..add('operationMode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMutationOperationMode)));
    }
    return result;
  }

  @override
  GIssueSetAssigneesInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetAssigneesInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'assigneeUsernames':
          result.assigneeUsernames.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'operationMode':
          result.operationMode = serializers.deserialize(value,
                  specifiedType: const FullType(GMutationOperationMode))
              as GMutationOperationMode?;
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetConfidentialInputSerializer
    implements StructuredSerializer<GIssueSetConfidentialInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetConfidentialInput,
    _$GIssueSetConfidentialInput
  ];
  @override
  final String wireName = 'GIssueSetConfidentialInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetConfidentialInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'confidential',
      serializers.serialize(object.confidential,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIssueSetConfidentialInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetConfidentialInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'confidential':
          result.confidential = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetCrmContactsInputSerializer
    implements StructuredSerializer<GIssueSetCrmContactsInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetCrmContactsInput,
    _$GIssueSetCrmContactsInput
  ];
  @override
  final String wireName = 'GIssueSetCrmContactsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetCrmContactsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'contactIds',
      serializers.serialize(object.contactIds,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GCustomerRelationsContactID)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.operationMode;
    if (value != null) {
      result
        ..add('operationMode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMutationOperationMode)));
    }
    return result;
  }

  @override
  GIssueSetCrmContactsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetCrmContactsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'contactIds':
          result.contactIds.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GCustomerRelationsContactID)
              ]))! as BuiltList<Object?>);
          break;
        case 'operationMode':
          result.operationMode = serializers.deserialize(value,
                  specifiedType: const FullType(GMutationOperationMode))
              as GMutationOperationMode?;
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetDueDateInputSerializer
    implements StructuredSerializer<GIssueSetDueDateInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetDueDateInput,
    _$GIssueSetDueDateInput
  ];
  @override
  final String wireName = 'GIssueSetDueDateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetDueDateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dueDate;
    if (value != null) {
      result
        ..add('dueDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    return result;
  }

  @override
  GIssueSetDueDateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetDueDateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dueDate':
          result.dueDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetEpicInputSerializer
    implements StructuredSerializer<GIssueSetEpicInput> {
  @override
  final Iterable<Type> types = const [GIssueSetEpicInput, _$GIssueSetEpicInput];
  @override
  final String wireName = 'GIssueSetEpicInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetEpicInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.epicId;
    if (value != null) {
      result
        ..add('epicId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicID)));
    }
    return result;
  }

  @override
  GIssueSetEpicInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetEpicInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'epicId':
          result.epicId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetEscalationPolicyInputSerializer
    implements StructuredSerializer<GIssueSetEscalationPolicyInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetEscalationPolicyInput,
    _$GIssueSetEscalationPolicyInput
  ];
  @override
  final String wireName = 'GIssueSetEscalationPolicyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetEscalationPolicyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.escalationPolicyId;
    if (value != null) {
      result
        ..add('escalationPolicyId')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GIncidentManagementEscalationPolicyID)));
    }
    return result;
  }

  @override
  GIssueSetEscalationPolicyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetEscalationPolicyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'escalationPolicyId':
          result.escalationPolicyId.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GIncidentManagementEscalationPolicyID))!
              as GIncidentManagementEscalationPolicyID);
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetEscalationStatusInputSerializer
    implements StructuredSerializer<GIssueSetEscalationStatusInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetEscalationStatusInput,
    _$GIssueSetEscalationStatusInput
  ];
  @override
  final String wireName = 'GIssueSetEscalationStatusInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetEscalationStatusInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'status',
      serializers.serialize(object.status,
          specifiedType: const FullType(GIssueEscalationStatus)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIssueSetEscalationStatusInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetEscalationStatusInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'status':
          result.status = serializers.deserialize(value,
                  specifiedType: const FullType(GIssueEscalationStatus))!
              as GIssueEscalationStatus;
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetIterationInputSerializer
    implements StructuredSerializer<GIssueSetIterationInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetIterationInput,
    _$GIssueSetIterationInput
  ];
  @override
  final String wireName = 'GIssueSetIterationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetIterationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.iterationId;
    if (value != null) {
      result
        ..add('iterationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationID)));
    }
    return result;
  }

  @override
  GIssueSetIterationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetIterationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'iterationId':
          result.iterationId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIterationID))! as GIterationID);
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetLockedInputSerializer
    implements StructuredSerializer<GIssueSetLockedInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetLockedInput,
    _$GIssueSetLockedInput
  ];
  @override
  final String wireName = 'GIssueSetLockedInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetLockedInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'locked',
      serializers.serialize(object.locked, specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIssueSetLockedInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetLockedInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'locked':
          result.locked = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetSeverityInputSerializer
    implements StructuredSerializer<GIssueSetSeverityInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetSeverityInput,
    _$GIssueSetSeverityInput
  ];
  @override
  final String wireName = 'GIssueSetSeverityInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetSeverityInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'severity',
      serializers.serialize(object.severity,
          specifiedType: const FullType(GIssuableSeverity)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIssueSetSeverityInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetSeverityInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'severity':
          result.severity = serializers.deserialize(value,
                  specifiedType: const FullType(GIssuableSeverity))!
              as GIssuableSeverity;
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetSubscriptionInputSerializer
    implements StructuredSerializer<GIssueSetSubscriptionInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetSubscriptionInput,
    _$GIssueSetSubscriptionInput
  ];
  @override
  final String wireName = 'GIssueSetSubscriptionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetSubscriptionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'subscribedState',
      serializers.serialize(object.subscribedState,
          specifiedType: const FullType(bool)),
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIssueSetSubscriptionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetSubscriptionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'subscribedState':
          result.subscribedState = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSetWeightInputSerializer
    implements StructuredSerializer<GIssueSetWeightInput> {
  @override
  final Iterable<Type> types = const [
    GIssueSetWeightInput,
    _$GIssueSetWeightInput
  ];
  @override
  final String wireName = 'GIssueSetWeightInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIssueSetWeightInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GIssueSetWeightInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIssueSetWeightInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'weight':
          result.weight = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GIssueSortSerializer implements PrimitiveSerializer<GIssueSort> {
  @override
  final Iterable<Type> types = const <Type>[GIssueSort];
  @override
  final String wireName = 'GIssueSort';

  @override
  Object serialize(Serializers serializers, GIssueSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIssueSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIssueSort.valueOf(serialized as String);
}

class _$GIssueStateSerializer implements PrimitiveSerializer<GIssueState> {
  @override
  final Iterable<Type> types = const <Type>[GIssueState];
  @override
  final String wireName = 'GIssueState';

  @override
  Object serialize(Serializers serializers, GIssueState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIssueState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIssueState.valueOf(serialized as String);
}

class _$GIssueStateEventSerializer
    implements PrimitiveSerializer<GIssueStateEvent> {
  @override
  final Iterable<Type> types = const <Type>[GIssueStateEvent];
  @override
  final String wireName = 'GIssueStateEvent';

  @override
  Object serialize(Serializers serializers, GIssueStateEvent object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIssueStateEvent deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIssueStateEvent.valueOf(serialized as String);
}

class _$GIssueTypeSerializer implements PrimitiveSerializer<GIssueType> {
  @override
  final Iterable<Type> types = const <Type>[GIssueType];
  @override
  final String wireName = 'GIssueType';

  @override
  Object serialize(Serializers serializers, GIssueType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIssueType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIssueType.valueOf(serialized as String);
}

class _$GIterationCadenceCreateInputSerializer
    implements StructuredSerializer<GIterationCadenceCreateInput> {
  @override
  final Iterable<Type> types = const [
    GIterationCadenceCreateInput,
    _$GIterationCadenceCreateInput
  ];
  @override
  final String wireName = 'GIterationCadenceCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIterationCadenceCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
      'automatic',
      serializers.serialize(object.automatic,
          specifiedType: const FullType(bool)),
      'active',
      serializers.serialize(object.active, specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.durationInWeeks;
    if (value != null) {
      result
        ..add('durationInWeeks')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.iterationsInAdvance;
    if (value != null) {
      result
        ..add('iterationsInAdvance')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    value = object.rollOver;
    if (value != null) {
      result
        ..add('rollOver')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIterationCadenceCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIterationCadenceCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'durationInWeeks':
          result.durationInWeeks = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'iterationsInAdvance':
          result.iterationsInAdvance = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'automatic':
          result.automatic = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'rollOver':
          result.rollOver = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GIterationCadenceDestroyInputSerializer
    implements StructuredSerializer<GIterationCadenceDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GIterationCadenceDestroyInput,
    _$GIterationCadenceDestroyInput
  ];
  @override
  final String wireName = 'GIterationCadenceDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIterationCadenceDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIterationsCadenceID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIterationCadenceDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIterationCadenceDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIterationsCadenceID))!
              as GIterationsCadenceID);
          break;
      }
    }

    return result.build();
  }
}

class _$GIterationCadenceUpdateInputSerializer
    implements StructuredSerializer<GIterationCadenceUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GIterationCadenceUpdateInput,
    _$GIterationCadenceUpdateInput
  ];
  @override
  final String wireName = 'GIterationCadenceUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIterationCadenceUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIterationsCadenceID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.durationInWeeks;
    if (value != null) {
      result
        ..add('durationInWeeks')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.iterationsInAdvance;
    if (value != null) {
      result
        ..add('iterationsInAdvance')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    value = object.automatic;
    if (value != null) {
      result
        ..add('automatic')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.active;
    if (value != null) {
      result
        ..add('active')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.rollOver;
    if (value != null) {
      result
        ..add('rollOver')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIterationCadenceUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIterationCadenceUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIterationsCadenceID))!
              as GIterationsCadenceID);
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'durationInWeeks':
          result.durationInWeeks = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'iterationsInAdvance':
          result.iterationsInAdvance = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'automatic':
          result.automatic = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'rollOver':
          result.rollOver = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GiterationCreateInputSerializer
    implements StructuredSerializer<GiterationCreateInput> {
  @override
  final Iterable<Type> types = const [
    GiterationCreateInput,
    _$GiterationCreateInput
  ];
  @override
  final String wireName = 'GiterationCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GiterationCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.projectPath;
    if (value != null) {
      result
        ..add('projectPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.groupPath;
    if (value != null) {
      result
        ..add('groupPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.iterationsCadenceId;
    if (value != null) {
      result
        ..add('iterationsCadenceId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationsCadenceID)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dueDate;
    if (value != null) {
      result
        ..add('dueDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GiterationCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GiterationCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'iterationsCadenceId':
          result.iterationsCadenceId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIterationsCadenceID))!
              as GIterationsCadenceID);
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDate':
          result.startDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dueDate':
          result.dueDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GIterationDeleteInputSerializer
    implements StructuredSerializer<GIterationDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GIterationDeleteInput,
    _$GIterationDeleteInput
  ];
  @override
  final String wireName = 'GIterationDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GIterationDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIterationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GIterationDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIterationDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIterationID))! as GIterationID);
          break;
      }
    }

    return result.build();
  }
}

class _$GIterationSearchableFieldSerializer
    implements PrimitiveSerializer<GIterationSearchableField> {
  @override
  final Iterable<Type> types = const <Type>[GIterationSearchableField];
  @override
  final String wireName = 'GIterationSearchableField';

  @override
  Object serialize(Serializers serializers, GIterationSearchableField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIterationSearchableField deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIterationSearchableField.valueOf(serialized as String);
}

class _$GIterationSortSerializer
    implements PrimitiveSerializer<GIterationSort> {
  @override
  final Iterable<Type> types = const <Type>[GIterationSort];
  @override
  final String wireName = 'GIterationSort';

  @override
  Object serialize(Serializers serializers, GIterationSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIterationSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIterationSort.valueOf(serialized as String);
}

class _$GIterationStateSerializer
    implements PrimitiveSerializer<GIterationState> {
  @override
  final Iterable<Type> types = const <Type>[GIterationState];
  @override
  final String wireName = 'GIterationState';

  @override
  Object serialize(Serializers serializers, GIterationState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIterationState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIterationState.valueOf(serialized as String);
}

class _$GIterationWildcardIdSerializer
    implements PrimitiveSerializer<GIterationWildcardId> {
  @override
  final Iterable<Type> types = const <Type>[GIterationWildcardId];
  @override
  final String wireName = 'GIterationWildcardId';

  @override
  Object serialize(Serializers serializers, GIterationWildcardId object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GIterationWildcardId deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GIterationWildcardId.valueOf(serialized as String);
}

class _$GJiraImportStartInputSerializer
    implements StructuredSerializer<GJiraImportStartInput> {
  @override
  final Iterable<Type> types = const [
    GJiraImportStartInput,
    _$GJiraImportStartInput
  ];
  @override
  final String wireName = 'GJiraImportStartInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GJiraImportStartInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'jiraProjectKey',
      serializers.serialize(object.jiraProjectKey,
          specifiedType: const FullType(String)),
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.jiraProjectName;
    if (value != null) {
      result
        ..add('jiraProjectName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.usersMapping;
    if (value != null) {
      result
        ..add('usersMapping')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GJiraUsersMappingInputType)])));
    }
    return result;
  }

  @override
  GJiraImportStartInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GJiraImportStartInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'jiraProjectKey':
          result.jiraProjectKey = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'jiraProjectName':
          result.jiraProjectName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'usersMapping':
          result.usersMapping.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GJiraUsersMappingInputType)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GJiraImportUsersInputSerializer
    implements StructuredSerializer<GJiraImportUsersInput> {
  @override
  final Iterable<Type> types = const [
    GJiraImportUsersInput,
    _$GJiraImportUsersInput
  ];
  @override
  final String wireName = 'GJiraImportUsersInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GJiraImportUsersInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startAt;
    if (value != null) {
      result
        ..add('startAt')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GJiraImportUsersInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GJiraImportUsersInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'startAt':
          result.startAt = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GJiraUsersMappingInputTypeSerializer
    implements StructuredSerializer<GJiraUsersMappingInputType> {
  @override
  final Iterable<Type> types = const [
    GJiraUsersMappingInputType,
    _$GJiraUsersMappingInputType
  ];
  @override
  final String wireName = 'GJiraUsersMappingInputType';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GJiraUsersMappingInputType object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'jiraAccountId',
      serializers.serialize(object.jiraAccountId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.gitlabId;
    if (value != null) {
      result
        ..add('gitlabId')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GJiraUsersMappingInputType deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GJiraUsersMappingInputTypeBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'gitlabId':
          result.gitlabId = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'jiraAccountId':
          result.jiraAccountId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GJobArtifactFileTypeSerializer
    implements PrimitiveSerializer<GJobArtifactFileType> {
  @override
  final Iterable<Type> types = const <Type>[GJobArtifactFileType];
  @override
  final String wireName = 'GJobArtifactFileType';

  @override
  Object serialize(Serializers serializers, GJobArtifactFileType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GJobArtifactFileType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GJobArtifactFileType.valueOf(serialized as String);
}

class _$GJobArtifactsDestroyInputSerializer
    implements StructuredSerializer<GJobArtifactsDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GJobArtifactsDestroyInput,
    _$GJobArtifactsDestroyInput
  ];
  @override
  final String wireName = 'GJobArtifactsDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GJobArtifactsDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiBuildID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GJobArtifactsDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GJobArtifactsDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCiBuildID))! as GCiBuildID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GJobCancelInputSerializer
    implements StructuredSerializer<GJobCancelInput> {
  @override
  final Iterable<Type> types = const [GJobCancelInput, _$GJobCancelInput];
  @override
  final String wireName = 'GJobCancelInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GJobCancelInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiBuildID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GJobCancelInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GJobCancelInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCiBuildID))! as GCiBuildID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GJobPlayInputSerializer implements StructuredSerializer<GJobPlayInput> {
  @override
  final Iterable<Type> types = const [GJobPlayInput, _$GJobPlayInput];
  @override
  final String wireName = 'GJobPlayInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GJobPlayInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiBuildID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GJobPlayInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GJobPlayInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCiBuildID))! as GCiBuildID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GJobRetryInputSerializer
    implements StructuredSerializer<GJobRetryInput> {
  @override
  final Iterable<Type> types = const [GJobRetryInput, _$GJobRetryInput];
  @override
  final String wireName = 'GJobRetryInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GJobRetryInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiBuildID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.variables;
    if (value != null) {
      result
        ..add('variables')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GCiVariableInput)])));
    }
    return result;
  }

  @override
  GJobRetryInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GJobRetryInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCiBuildID))! as GCiBuildID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'variables':
          result.variables.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GCiVariableInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GJobUnscheduleInputSerializer
    implements StructuredSerializer<GJobUnscheduleInput> {
  @override
  final Iterable<Type> types = const [
    GJobUnscheduleInput,
    _$GJobUnscheduleInput
  ];
  @override
  final String wireName = 'GJobUnscheduleInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GJobUnscheduleInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiBuildID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GJobUnscheduleInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GJobUnscheduleInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCiBuildID))! as GCiBuildID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GLabelCreateInputSerializer
    implements StructuredSerializer<GLabelCreateInput> {
  @override
  final Iterable<Type> types = const [GLabelCreateInput, _$GLabelCreateInput];
  @override
  final String wireName = 'GLabelCreateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GLabelCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.projectPath;
    if (value != null) {
      result
        ..add('projectPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.groupPath;
    if (value != null) {
      result
        ..add('groupPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.color;
    if (value != null) {
      result
        ..add('color')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GLabelCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GLabelCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'color':
          result.color = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GListLimitMetricSerializer
    implements PrimitiveSerializer<GListLimitMetric> {
  @override
  final Iterable<Type> types = const <Type>[GListLimitMetric];
  @override
  final String wireName = 'GListLimitMetric';

  @override
  Object serialize(Serializers serializers, GListLimitMetric object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GListLimitMetric deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GListLimitMetric.valueOf(serialized as String);
}

class _$GMarkAsSpamSnippetInputSerializer
    implements StructuredSerializer<GMarkAsSpamSnippetInput> {
  @override
  final Iterable<Type> types = const [
    GMarkAsSpamSnippetInput,
    _$GMarkAsSpamSnippetInput
  ];
  @override
  final String wireName = 'GMarkAsSpamSnippetInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMarkAsSpamSnippetInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GSnippetID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMarkAsSpamSnippetInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMarkAsSpamSnippetInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSnippetID))! as GSnippetID);
          break;
      }
    }

    return result.build();
  }
}

class _$GMeasurementIdentifierSerializer
    implements PrimitiveSerializer<GMeasurementIdentifier> {
  @override
  final Iterable<Type> types = const <Type>[GMeasurementIdentifier];
  @override
  final String wireName = 'GMeasurementIdentifier';

  @override
  Object serialize(Serializers serializers, GMeasurementIdentifier object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMeasurementIdentifier deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMeasurementIdentifier.valueOf(serialized as String);
}

class _$GMemberSortSerializer implements PrimitiveSerializer<GMemberSort> {
  @override
  final Iterable<Type> types = const <Type>[GMemberSort];
  @override
  final String wireName = 'GMemberSort';

  @override
  Object serialize(Serializers serializers, GMemberSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMemberSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMemberSort.valueOf(serialized as String);
}

class _$GMergeRequestAcceptInputSerializer
    implements StructuredSerializer<GMergeRequestAcceptInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestAcceptInput,
    _$GMergeRequestAcceptInput
  ];
  @override
  final String wireName = 'GMergeRequestAcceptInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestAcceptInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'sha',
      serializers.serialize(object.sha, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.strategy;
    if (value != null) {
      result
        ..add('strategy')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMergeStrategyEnum)));
    }
    value = object.commitMessage;
    if (value != null) {
      result
        ..add('commitMessage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.squashCommitMessage;
    if (value != null) {
      result
        ..add('squashCommitMessage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.shouldRemoveSourceBranch;
    if (value != null) {
      result
        ..add('shouldRemoveSourceBranch')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.squash;
    if (value != null) {
      result
        ..add('squash')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GMergeRequestAcceptInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestAcceptInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'strategy':
          result.strategy = serializers.deserialize(value,
                  specifiedType: const FullType(GMergeStrategyEnum))
              as GMergeStrategyEnum?;
          break;
        case 'commitMessage':
          result.commitMessage = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'sha':
          result.sha = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'squashCommitMessage':
          result.squashCommitMessage = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'shouldRemoveSourceBranch':
          result.shouldRemoveSourceBranch = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'squash':
          result.squash = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestCreateInputSerializer
    implements StructuredSerializer<GMergeRequestCreateInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestCreateInput,
    _$GMergeRequestCreateInput
  ];
  @override
  final String wireName = 'GMergeRequestCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'sourceBranch',
      serializers.serialize(object.sourceBranch,
          specifiedType: const FullType(String)),
      'targetBranch',
      serializers.serialize(object.targetBranch,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.labels;
    if (value != null) {
      result
        ..add('labels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GMergeRequestCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'sourceBranch':
          result.sourceBranch = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'targetBranch':
          result.targetBranch = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'labels':
          result.labels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestNewStateSerializer
    implements PrimitiveSerializer<GMergeRequestNewState> {
  @override
  final Iterable<Type> types = const <Type>[GMergeRequestNewState];
  @override
  final String wireName = 'GMergeRequestNewState';

  @override
  Object serialize(Serializers serializers, GMergeRequestNewState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMergeRequestNewState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMergeRequestNewState.valueOf(serialized as String);
}

class _$GMergeRequestReviewerRereviewInputSerializer
    implements StructuredSerializer<GMergeRequestReviewerRereviewInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestReviewerRereviewInput,
    _$GMergeRequestReviewerRereviewInput
  ];
  @override
  final String wireName = 'GMergeRequestReviewerRereviewInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestReviewerRereviewInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'userId',
      serializers.serialize(object.userId,
          specifiedType: const FullType(GUserID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMergeRequestReviewerRereviewInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestReviewerRereviewInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUserID))! as GUserID);
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestReviewStateSerializer
    implements PrimitiveSerializer<GMergeRequestReviewState> {
  @override
  final Iterable<Type> types = const <Type>[GMergeRequestReviewState];
  @override
  final String wireName = 'GMergeRequestReviewState';

  @override
  Object serialize(Serializers serializers, GMergeRequestReviewState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMergeRequestReviewState deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMergeRequestReviewState.valueOf(serialized as String);
}

class _$GMergeRequestSetAssigneesInputSerializer
    implements StructuredSerializer<GMergeRequestSetAssigneesInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestSetAssigneesInput,
    _$GMergeRequestSetAssigneesInput
  ];
  @override
  final String wireName = 'GMergeRequestSetAssigneesInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestSetAssigneesInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'assigneeUsernames',
      serializers.serialize(object.assigneeUsernames,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.operationMode;
    if (value != null) {
      result
        ..add('operationMode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMutationOperationMode)));
    }
    return result;
  }

  @override
  GMergeRequestSetAssigneesInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestSetAssigneesInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'assigneeUsernames':
          result.assigneeUsernames.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'operationMode':
          result.operationMode = serializers.deserialize(value,
                  specifiedType: const FullType(GMutationOperationMode))
              as GMutationOperationMode?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestSetDraftInputSerializer
    implements StructuredSerializer<GMergeRequestSetDraftInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestSetDraftInput,
    _$GMergeRequestSetDraftInput
  ];
  @override
  final String wireName = 'GMergeRequestSetDraftInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestSetDraftInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'draft',
      serializers.serialize(object.draft, specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMergeRequestSetDraftInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestSetDraftInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'draft':
          result.draft = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestSetLabelsInputSerializer
    implements StructuredSerializer<GMergeRequestSetLabelsInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestSetLabelsInput,
    _$GMergeRequestSetLabelsInput
  ];
  @override
  final String wireName = 'GMergeRequestSetLabelsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestSetLabelsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'labelIds',
      serializers.serialize(object.labelIds,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GLabelID)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.operationMode;
    if (value != null) {
      result
        ..add('operationMode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMutationOperationMode)));
    }
    return result;
  }

  @override
  GMergeRequestSetLabelsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestSetLabelsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'labelIds':
          result.labelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GLabelID)]))!
              as BuiltList<Object?>);
          break;
        case 'operationMode':
          result.operationMode = serializers.deserialize(value,
                  specifiedType: const FullType(GMutationOperationMode))
              as GMutationOperationMode?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestSetLockedInputSerializer
    implements StructuredSerializer<GMergeRequestSetLockedInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestSetLockedInput,
    _$GMergeRequestSetLockedInput
  ];
  @override
  final String wireName = 'GMergeRequestSetLockedInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestSetLockedInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'locked',
      serializers.serialize(object.locked, specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMergeRequestSetLockedInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestSetLockedInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'locked':
          result.locked = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestSetMilestoneInputSerializer
    implements StructuredSerializer<GMergeRequestSetMilestoneInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestSetMilestoneInput,
    _$GMergeRequestSetMilestoneInput
  ];
  @override
  final String wireName = 'GMergeRequestSetMilestoneInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestSetMilestoneInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.milestoneId;
    if (value != null) {
      result
        ..add('milestoneId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMilestoneID)));
    }
    return result;
  }

  @override
  GMergeRequestSetMilestoneInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestSetMilestoneInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'milestoneId':
          result.milestoneId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMilestoneID))! as GMilestoneID);
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestSetReviewersInputSerializer
    implements StructuredSerializer<GMergeRequestSetReviewersInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestSetReviewersInput,
    _$GMergeRequestSetReviewersInput
  ];
  @override
  final String wireName = 'GMergeRequestSetReviewersInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestSetReviewersInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'reviewerUsernames',
      serializers.serialize(object.reviewerUsernames,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.operationMode;
    if (value != null) {
      result
        ..add('operationMode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMutationOperationMode)));
    }
    return result;
  }

  @override
  GMergeRequestSetReviewersInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestSetReviewersInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'reviewerUsernames':
          result.reviewerUsernames.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'operationMode':
          result.operationMode = serializers.deserialize(value,
                  specifiedType: const FullType(GMutationOperationMode))
              as GMutationOperationMode?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestSetSubscriptionInputSerializer
    implements StructuredSerializer<GMergeRequestSetSubscriptionInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestSetSubscriptionInput,
    _$GMergeRequestSetSubscriptionInput
  ];
  @override
  final String wireName = 'GMergeRequestSetSubscriptionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestSetSubscriptionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'subscribedState',
      serializers.serialize(object.subscribedState,
          specifiedType: const FullType(bool)),
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMergeRequestSetSubscriptionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestSetSubscriptionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'subscribedState':
          result.subscribedState = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestSortSerializer
    implements PrimitiveSerializer<GMergeRequestSort> {
  @override
  final Iterable<Type> types = const <Type>[GMergeRequestSort];
  @override
  final String wireName = 'GMergeRequestSort';

  @override
  Object serialize(Serializers serializers, GMergeRequestSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMergeRequestSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMergeRequestSort.valueOf(serialized as String);
}

class _$GMergeRequestsResolverNegatedParamsSerializer
    implements StructuredSerializer<GMergeRequestsResolverNegatedParams> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestsResolverNegatedParams,
    _$GMergeRequestsResolverNegatedParams
  ];
  @override
  final String wireName = 'GMergeRequestsResolverNegatedParams';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestsResolverNegatedParams object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.labels;
    if (value != null) {
      result
        ..add('labels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.milestoneTitle;
    if (value != null) {
      result
        ..add('milestoneTitle')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMergeRequestsResolverNegatedParams deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestsResolverNegatedParamsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'labels':
          result.labels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'milestoneTitle':
          result.milestoneTitle = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeRequestStateSerializer
    implements PrimitiveSerializer<GMergeRequestState> {
  @override
  final Iterable<Type> types = const <Type>[GMergeRequestState];
  @override
  final String wireName = 'GMergeRequestState';

  @override
  Object serialize(Serializers serializers, GMergeRequestState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMergeRequestState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMergeRequestState.valueOf(serialized as String);
}

class _$GMergeRequestUpdateInputSerializer
    implements StructuredSerializer<GMergeRequestUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GMergeRequestUpdateInput,
    _$GMergeRequestUpdateInput
  ];
  @override
  final String wireName = 'GMergeRequestUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMergeRequestUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.targetBranch;
    if (value != null) {
      result
        ..add('targetBranch')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.state;
    if (value != null) {
      result
        ..add('state')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMergeRequestNewState)));
    }
    return result;
  }

  @override
  GMergeRequestUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMergeRequestUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'targetBranch':
          result.targetBranch = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'state':
          result.state = serializers.deserialize(value,
                  specifiedType: const FullType(GMergeRequestNewState))
              as GMergeRequestNewState?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMergeStatusSerializer implements PrimitiveSerializer<GMergeStatus> {
  @override
  final Iterable<Type> types = const <Type>[GMergeStatus];
  @override
  final String wireName = 'GMergeStatus';

  @override
  Object serialize(Serializers serializers, GMergeStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMergeStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMergeStatus.valueOf(serialized as String);
}

class _$GMergeStrategyEnumSerializer
    implements PrimitiveSerializer<GMergeStrategyEnum> {
  @override
  final Iterable<Type> types = const <Type>[GMergeStrategyEnum];
  @override
  final String wireName = 'GMergeStrategyEnum';

  @override
  Object serialize(Serializers serializers, GMergeStrategyEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMergeStrategyEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMergeStrategyEnum.valueOf(serialized as String);
}

class _$GMilestoneSortSerializer
    implements PrimitiveSerializer<GMilestoneSort> {
  @override
  final Iterable<Type> types = const <Type>[GMilestoneSort];
  @override
  final String wireName = 'GMilestoneSort';

  @override
  Object serialize(Serializers serializers, GMilestoneSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMilestoneSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMilestoneSort.valueOf(serialized as String);
}

class _$GMilestoneStateEnumSerializer
    implements PrimitiveSerializer<GMilestoneStateEnum> {
  @override
  final Iterable<Type> types = const <Type>[GMilestoneStateEnum];
  @override
  final String wireName = 'GMilestoneStateEnum';

  @override
  Object serialize(Serializers serializers, GMilestoneStateEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMilestoneStateEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMilestoneStateEnum.valueOf(serialized as String);
}

class _$GMilestoneWildcardIdSerializer
    implements PrimitiveSerializer<GMilestoneWildcardId> {
  @override
  final Iterable<Type> types = const <Type>[GMilestoneWildcardId];
  @override
  final String wireName = 'GMilestoneWildcardId';

  @override
  Object serialize(Serializers serializers, GMilestoneWildcardId object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMilestoneWildcardId deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMilestoneWildcardId.valueOf(serialized as String);
}

class _$GMoveTypeSerializer implements PrimitiveSerializer<GMoveType> {
  @override
  final Iterable<Type> types = const <Type>[GMoveType];
  @override
  final String wireName = 'GMoveType';

  @override
  Object serialize(Serializers serializers, GMoveType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMoveType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMoveType.valueOf(serialized as String);
}

class _$GMutationOperationModeSerializer
    implements PrimitiveSerializer<GMutationOperationMode> {
  @override
  final Iterable<Type> types = const <Type>[GMutationOperationMode];
  @override
  final String wireName = 'GMutationOperationMode';

  @override
  Object serialize(Serializers serializers, GMutationOperationMode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMutationOperationMode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMutationOperationMode.valueOf(serialized as String);
}

class _$GNamespaceBanDestroyInputSerializer
    implements StructuredSerializer<GNamespaceBanDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GNamespaceBanDestroyInput,
    _$GNamespaceBanDestroyInput
  ];
  @override
  final String wireName = 'GNamespaceBanDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNamespaceBanDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GNamespacesNamespaceBanID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNamespaceBanDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNamespaceBanDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GNamespacesNamespaceBanID))!
              as GNamespacesNamespaceBanID);
          break;
      }
    }

    return result.build();
  }
}

class _$GNamespaceCiCdSettingsUpdateInputSerializer
    implements StructuredSerializer<GNamespaceCiCdSettingsUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GNamespaceCiCdSettingsUpdateInput,
    _$GNamespaceCiCdSettingsUpdateInput
  ];
  @override
  final String wireName = 'GNamespaceCiCdSettingsUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNamespaceCiCdSettingsUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.allowStaleRunnerPruning;
    if (value != null) {
      result
        ..add('allowStaleRunnerPruning')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GNamespaceCiCdSettingsUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNamespaceCiCdSettingsUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'allowStaleRunnerPruning':
          result.allowStaleRunnerPruning = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GNamespaceIncreaseStorageTemporarilyInputSerializer
    implements StructuredSerializer<GNamespaceIncreaseStorageTemporarilyInput> {
  @override
  final Iterable<Type> types = const [
    GNamespaceIncreaseStorageTemporarilyInput,
    _$GNamespaceIncreaseStorageTemporarilyInput
  ];
  @override
  final String wireName = 'GNamespaceIncreaseStorageTemporarilyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNamespaceIncreaseStorageTemporarilyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GNamespaceID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNamespaceIncreaseStorageTemporarilyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNamespaceIncreaseStorageTemporarilyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNamespaceID))! as GNamespaceID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNamespaceProjectSortSerializer
    implements PrimitiveSerializer<GNamespaceProjectSort> {
  @override
  final Iterable<Type> types = const <Type>[GNamespaceProjectSort];
  @override
  final String wireName = 'GNamespaceProjectSort';

  @override
  Object serialize(Serializers serializers, GNamespaceProjectSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GNamespaceProjectSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GNamespaceProjectSort.valueOf(serialized as String);
}

class _$GNegatedBoardIssueInputSerializer
    implements StructuredSerializer<GNegatedBoardIssueInput> {
  @override
  final Iterable<Type> types = const [
    GNegatedBoardIssueInput,
    _$GNegatedBoardIssueInput
  ];
  @override
  final String wireName = 'GNegatedBoardIssueInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNegatedBoardIssueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.labelName;
    if (value != null) {
      result
        ..add('labelName')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.authorUsername;
    if (value != null) {
      result
        ..add('authorUsername')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.myReactionEmoji;
    if (value != null) {
      result
        ..add('myReactionEmoji')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.iids;
    if (value != null) {
      result
        ..add('iids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.milestoneTitle;
    if (value != null) {
      result
        ..add('milestoneTitle')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.assigneeUsername;
    if (value != null) {
      result
        ..add('assigneeUsername')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.releaseTag;
    if (value != null) {
      result
        ..add('releaseTag')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.types;
    if (value != null) {
      result
        ..add('types')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GIssueType)])));
    }
    value = object.milestoneWildcardId;
    if (value != null) {
      result
        ..add('milestoneWildcardId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMilestoneWildcardId)));
    }
    value = object.epicId;
    if (value != null) {
      result
        ..add('epicId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicID)));
    }
    value = object.iterationTitle;
    if (value != null) {
      result
        ..add('iterationTitle')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.iterationId;
    if (value != null) {
      result
        ..add('iterationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GIterationID)])));
    }
    value = object.iterationWildcardId;
    if (value != null) {
      result
        ..add('iterationWildcardId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GNegatedIterationWildcardId)));
    }
    return result;
  }

  @override
  GNegatedBoardIssueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNegatedBoardIssueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'labelName':
          result.labelName.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'authorUsername':
          result.authorUsername = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'myReactionEmoji':
          result.myReactionEmoji = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'iids':
          result.iids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'milestoneTitle':
          result.milestoneTitle = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'assigneeUsername':
          result.assigneeUsername.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'releaseTag':
          result.releaseTag = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'types':
          result.types.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GIssueType)]))!
              as BuiltList<Object?>);
          break;
        case 'milestoneWildcardId':
          result.milestoneWildcardId = serializers.deserialize(value,
                  specifiedType: const FullType(GMilestoneWildcardId))
              as GMilestoneWildcardId?;
          break;
        case 'epicId':
          result.epicId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
        case 'iterationTitle':
          result.iterationTitle = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'weight':
          result.weight = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'iterationId':
          result.iterationId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GIterationID)]))!
              as BuiltList<Object?>);
          break;
        case 'iterationWildcardId':
          result.iterationWildcardId = serializers.deserialize(value,
                  specifiedType: const FullType(GNegatedIterationWildcardId))
              as GNegatedIterationWildcardId?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNegatedEpicBoardIssueInputSerializer
    implements StructuredSerializer<GNegatedEpicBoardIssueInput> {
  @override
  final Iterable<Type> types = const [
    GNegatedEpicBoardIssueInput,
    _$GNegatedEpicBoardIssueInput
  ];
  @override
  final String wireName = 'GNegatedEpicBoardIssueInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNegatedEpicBoardIssueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.labelName;
    if (value != null) {
      result
        ..add('labelName')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.authorUsername;
    if (value != null) {
      result
        ..add('authorUsername')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.myReactionEmoji;
    if (value != null) {
      result
        ..add('myReactionEmoji')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNegatedEpicBoardIssueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNegatedEpicBoardIssueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'labelName':
          result.labelName.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'authorUsername':
          result.authorUsername = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'myReactionEmoji':
          result.myReactionEmoji = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNegatedEpicFilterInputSerializer
    implements StructuredSerializer<GNegatedEpicFilterInput> {
  @override
  final Iterable<Type> types = const [
    GNegatedEpicFilterInput,
    _$GNegatedEpicFilterInput
  ];
  @override
  final String wireName = 'GNegatedEpicFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNegatedEpicFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.labelName;
    if (value != null) {
      result
        ..add('labelName')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.authorUsername;
    if (value != null) {
      result
        ..add('authorUsername')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.myReactionEmoji;
    if (value != null) {
      result
        ..add('myReactionEmoji')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNegatedEpicFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNegatedEpicFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'labelName':
          result.labelName.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'authorUsername':
          result.authorUsername = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'myReactionEmoji':
          result.myReactionEmoji = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNegatedIssueFilterInputSerializer
    implements StructuredSerializer<GNegatedIssueFilterInput> {
  @override
  final Iterable<Type> types = const [
    GNegatedIssueFilterInput,
    _$GNegatedIssueFilterInput
  ];
  @override
  final String wireName = 'GNegatedIssueFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNegatedIssueFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.assigneeId;
    if (value != null) {
      result
        ..add('assigneeId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.assigneeUsernames;
    if (value != null) {
      result
        ..add('assigneeUsernames')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.authorUsername;
    if (value != null) {
      result
        ..add('authorUsername')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.iids;
    if (value != null) {
      result
        ..add('iids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.labelName;
    if (value != null) {
      result
        ..add('labelName')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.milestoneTitle;
    if (value != null) {
      result
        ..add('milestoneTitle')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.milestoneWildcardId;
    if (value != null) {
      result
        ..add('milestoneWildcardId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GNegatedMilestoneWildcardId)));
    }
    value = object.myReactionEmoji;
    if (value != null) {
      result
        ..add('myReactionEmoji')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.releaseTag;
    if (value != null) {
      result
        ..add('releaseTag')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.types;
    if (value != null) {
      result
        ..add('types')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GIssueType)])));
    }
    value = object.epicId;
    if (value != null) {
      result
        ..add('epicId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.iterationId;
    if (value != null) {
      result
        ..add('iterationId')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.iterationWildcardId;
    if (value != null) {
      result
        ..add('iterationWildcardId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationWildcardId)));
    }
    return result;
  }

  @override
  GNegatedIssueFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNegatedIssueFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'assigneeId':
          result.assigneeId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'assigneeUsernames':
          result.assigneeUsernames.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'authorUsername':
          result.authorUsername = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'iids':
          result.iids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'labelName':
          result.labelName.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'milestoneTitle':
          result.milestoneTitle.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'milestoneWildcardId':
          result.milestoneWildcardId = serializers.deserialize(value,
                  specifiedType: const FullType(GNegatedMilestoneWildcardId))
              as GNegatedMilestoneWildcardId?;
          break;
        case 'myReactionEmoji':
          result.myReactionEmoji = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'releaseTag':
          result.releaseTag.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'types':
          result.types.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GIssueType)]))!
              as BuiltList<Object?>);
          break;
        case 'epicId':
          result.epicId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'weight':
          result.weight = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'iterationId':
          result.iterationId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'iterationWildcardId':
          result.iterationWildcardId = serializers.deserialize(value,
                  specifiedType: const FullType(GIterationWildcardId))
              as GIterationWildcardId?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNegatedIterationWildcardIdSerializer
    implements PrimitiveSerializer<GNegatedIterationWildcardId> {
  @override
  final Iterable<Type> types = const <Type>[GNegatedIterationWildcardId];
  @override
  final String wireName = 'GNegatedIterationWildcardId';

  @override
  Object serialize(Serializers serializers, GNegatedIterationWildcardId object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GNegatedIterationWildcardId deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GNegatedIterationWildcardId.valueOf(serialized as String);
}

class _$GNegatedMilestoneWildcardIdSerializer
    implements PrimitiveSerializer<GNegatedMilestoneWildcardId> {
  @override
  final Iterable<Type> types = const <Type>[GNegatedMilestoneWildcardId];
  @override
  final String wireName = 'GNegatedMilestoneWildcardId';

  @override
  Object serialize(Serializers serializers, GNegatedMilestoneWildcardId object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GNegatedMilestoneWildcardId deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GNegatedMilestoneWildcardId.valueOf(serialized as String);
}

class _$GNetworkPolicyKindSerializer
    implements PrimitiveSerializer<GNetworkPolicyKind> {
  @override
  final Iterable<Type> types = const <Type>[GNetworkPolicyKind];
  @override
  final String wireName = 'GNetworkPolicyKind';

  @override
  Object serialize(Serializers serializers, GNetworkPolicyKind object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GNetworkPolicyKind deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GNetworkPolicyKind.valueOf(serialized as String);
}

class _$GOncallRotationActivePeriodInputTypeSerializer
    implements StructuredSerializer<GOncallRotationActivePeriodInputType> {
  @override
  final Iterable<Type> types = const [
    GOncallRotationActivePeriodInputType,
    _$GOncallRotationActivePeriodInputType
  ];
  @override
  final String wireName = 'GOncallRotationActivePeriodInputType';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOncallRotationActivePeriodInputType object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'startTime',
      serializers.serialize(object.startTime,
          specifiedType: const FullType(String)),
      'endTime',
      serializers.serialize(object.endTime,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GOncallRotationActivePeriodInputType deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOncallRotationActivePeriodInputTypeBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'startTime':
          result.startTime = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'endTime':
          result.endTime = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOncallRotationCreateInputSerializer
    implements StructuredSerializer<GOncallRotationCreateInput> {
  @override
  final Iterable<Type> types = const [
    GOncallRotationCreateInput,
    _$GOncallRotationCreateInput
  ];
  @override
  final String wireName = 'GOncallRotationCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOncallRotationCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'scheduleIid',
      serializers.serialize(object.scheduleIid,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'startsAt',
      serializers.serialize(object.startsAt,
          specifiedType: const FullType(GOncallRotationDateInputType)),
      'rotationLength',
      serializers.serialize(object.rotationLength,
          specifiedType: const FullType(GOncallRotationLengthInputType)),
      'participants',
      serializers.serialize(object.participants,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GOncallUserInputType)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endsAt;
    if (value != null) {
      result
        ..add('endsAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GOncallRotationDateInputType)));
    }
    value = object.activePeriod;
    if (value != null) {
      result
        ..add('activePeriod')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GOncallRotationActivePeriodInputType)));
    }
    return result;
  }

  @override
  GOncallRotationCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOncallRotationCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'scheduleIid':
          result.scheduleIid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'startsAt':
          result.startsAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GOncallRotationDateInputType))!
              as GOncallRotationDateInputType);
          break;
        case 'endsAt':
          result.endsAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GOncallRotationDateInputType))!
              as GOncallRotationDateInputType);
          break;
        case 'rotationLength':
          result.rotationLength.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GOncallRotationLengthInputType))!
              as GOncallRotationLengthInputType);
          break;
        case 'activePeriod':
          result.activePeriod.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GOncallRotationActivePeriodInputType))!
              as GOncallRotationActivePeriodInputType);
          break;
        case 'participants':
          result.participants.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GOncallUserInputType)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GOncallRotationDateInputTypeSerializer
    implements StructuredSerializer<GOncallRotationDateInputType> {
  @override
  final Iterable<Type> types = const [
    GOncallRotationDateInputType,
    _$GOncallRotationDateInputType
  ];
  @override
  final String wireName = 'GOncallRotationDateInputType';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOncallRotationDateInputType object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'date',
      serializers.serialize(object.date, specifiedType: const FullType(String)),
      'time',
      serializers.serialize(object.time, specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GOncallRotationDateInputType deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOncallRotationDateInputTypeBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'date':
          result.date = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'time':
          result.time = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOncallRotationDestroyInputSerializer
    implements StructuredSerializer<GOncallRotationDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GOncallRotationDestroyInput,
    _$GOncallRotationDestroyInput
  ];
  @override
  final String wireName = 'GOncallRotationDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOncallRotationDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'scheduleIid',
      serializers.serialize(object.scheduleIid,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIncidentManagementOncallRotationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOncallRotationDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOncallRotationDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'scheduleIid':
          result.scheduleIid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GIncidentManagementOncallRotationID))!
              as GIncidentManagementOncallRotationID);
          break;
      }
    }

    return result.build();
  }
}

class _$GOncallRotationLengthInputTypeSerializer
    implements StructuredSerializer<GOncallRotationLengthInputType> {
  @override
  final Iterable<Type> types = const [
    GOncallRotationLengthInputType,
    _$GOncallRotationLengthInputType
  ];
  @override
  final String wireName = 'GOncallRotationLengthInputType';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOncallRotationLengthInputType object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'length',
      serializers.serialize(object.length, specifiedType: const FullType(int)),
      'unit',
      serializers.serialize(object.unit,
          specifiedType: const FullType(GOncallRotationUnitEnum)),
    ];

    return result;
  }

  @override
  GOncallRotationLengthInputType deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOncallRotationLengthInputTypeBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'length':
          result.length = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'unit':
          result.unit = serializers.deserialize(value,
                  specifiedType: const FullType(GOncallRotationUnitEnum))!
              as GOncallRotationUnitEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GOncallRotationUnitEnumSerializer
    implements PrimitiveSerializer<GOncallRotationUnitEnum> {
  @override
  final Iterable<Type> types = const <Type>[GOncallRotationUnitEnum];
  @override
  final String wireName = 'GOncallRotationUnitEnum';

  @override
  Object serialize(Serializers serializers, GOncallRotationUnitEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOncallRotationUnitEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOncallRotationUnitEnum.valueOf(serialized as String);
}

class _$GOncallRotationUpdateInputSerializer
    implements StructuredSerializer<GOncallRotationUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GOncallRotationUpdateInput,
    _$GOncallRotationUpdateInput
  ];
  @override
  final String wireName = 'GOncallRotationUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOncallRotationUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIncidentManagementOncallRotationID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startsAt;
    if (value != null) {
      result
        ..add('startsAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GOncallRotationDateInputType)));
    }
    value = object.endsAt;
    if (value != null) {
      result
        ..add('endsAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GOncallRotationDateInputType)));
    }
    value = object.rotationLength;
    if (value != null) {
      result
        ..add('rotationLength')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GOncallRotationLengthInputType)));
    }
    value = object.activePeriod;
    if (value != null) {
      result
        ..add('activePeriod')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GOncallRotationActivePeriodInputType)));
    }
    value = object.participants;
    if (value != null) {
      result
        ..add('participants')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GOncallUserInputType)])));
    }
    return result;
  }

  @override
  GOncallRotationUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOncallRotationUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GIncidentManagementOncallRotationID))!
              as GIncidentManagementOncallRotationID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startsAt':
          result.startsAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GOncallRotationDateInputType))!
              as GOncallRotationDateInputType);
          break;
        case 'endsAt':
          result.endsAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GOncallRotationDateInputType))!
              as GOncallRotationDateInputType);
          break;
        case 'rotationLength':
          result.rotationLength.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GOncallRotationLengthInputType))!
              as GOncallRotationLengthInputType);
          break;
        case 'activePeriod':
          result.activePeriod.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GOncallRotationActivePeriodInputType))!
              as GOncallRotationActivePeriodInputType);
          break;
        case 'participants':
          result.participants.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GOncallUserInputType)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GOncallScheduleCreateInputSerializer
    implements StructuredSerializer<GOncallScheduleCreateInput> {
  @override
  final Iterable<Type> types = const [
    GOncallScheduleCreateInput,
    _$GOncallScheduleCreateInput
  ];
  @override
  final String wireName = 'GOncallScheduleCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOncallScheduleCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'timezone',
      serializers.serialize(object.timezone,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOncallScheduleCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOncallScheduleCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'timezone':
          result.timezone = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOncallScheduleDestroyInputSerializer
    implements StructuredSerializer<GOncallScheduleDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GOncallScheduleDestroyInput,
    _$GOncallScheduleDestroyInput
  ];
  @override
  final String wireName = 'GOncallScheduleDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOncallScheduleDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOncallScheduleDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOncallScheduleDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOncallScheduleUpdateInputSerializer
    implements StructuredSerializer<GOncallScheduleUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GOncallScheduleUpdateInput,
    _$GOncallScheduleUpdateInput
  ];
  @override
  final String wireName = 'GOncallScheduleUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOncallScheduleUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOncallScheduleUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOncallScheduleUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'timezone':
          result.timezone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GOncallUserInputTypeSerializer
    implements StructuredSerializer<GOncallUserInputType> {
  @override
  final Iterable<Type> types = const [
    GOncallUserInputType,
    _$GOncallUserInputType
  ];
  @override
  final String wireName = 'GOncallUserInputType';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOncallUserInputType object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'username',
      serializers.serialize(object.username,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.colorPalette;
    if (value != null) {
      result
        ..add('colorPalette')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDataVisualizationColorEnum)));
    }
    value = object.colorWeight;
    if (value != null) {
      result
        ..add('colorWeight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDataVisualizationWeightEnum)));
    }
    return result;
  }

  @override
  GOncallUserInputType deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOncallUserInputTypeBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'username':
          result.username = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'colorPalette':
          result.colorPalette = serializers.deserialize(value,
                  specifiedType: const FullType(GDataVisualizationColorEnum))
              as GDataVisualizationColorEnum?;
          break;
        case 'colorWeight':
          result.colorWeight = serializers.deserialize(value,
                  specifiedType: const FullType(GDataVisualizationWeightEnum))
              as GDataVisualizationWeightEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrganizationSortSerializer
    implements PrimitiveSerializer<GOrganizationSort> {
  @override
  final Iterable<Type> types = const <Type>[GOrganizationSort];
  @override
  final String wireName = 'GOrganizationSort';

  @override
  Object serialize(Serializers serializers, GOrganizationSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrganizationSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrganizationSort.valueOf(serialized as String);
}

class _$GPackageDependencyTypeSerializer
    implements PrimitiveSerializer<GPackageDependencyType> {
  @override
  final Iterable<Type> types = const <Type>[GPackageDependencyType];
  @override
  final String wireName = 'GPackageDependencyType';

  @override
  Object serialize(Serializers serializers, GPackageDependencyType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPackageDependencyType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPackageDependencyType.valueOf(serialized as String);
}

class _$GPackageGroupSortSerializer
    implements PrimitiveSerializer<GPackageGroupSort> {
  @override
  final Iterable<Type> types = const <Type>[GPackageGroupSort];
  @override
  final String wireName = 'GPackageGroupSort';

  @override
  Object serialize(Serializers serializers, GPackageGroupSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPackageGroupSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPackageGroupSort.valueOf(serialized as String);
}

class _$GPackagesCleanupKeepDuplicatedPackageFilesEnumSerializer
    implements
        PrimitiveSerializer<GPackagesCleanupKeepDuplicatedPackageFilesEnum> {
  @override
  final Iterable<Type> types = const <Type>[
    GPackagesCleanupKeepDuplicatedPackageFilesEnum
  ];
  @override
  final String wireName = 'GPackagesCleanupKeepDuplicatedPackageFilesEnum';

  @override
  Object serialize(Serializers serializers,
          GPackagesCleanupKeepDuplicatedPackageFilesEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPackagesCleanupKeepDuplicatedPackageFilesEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPackagesCleanupKeepDuplicatedPackageFilesEnum.valueOf(
          serialized as String);
}

class _$GPackageSortSerializer implements PrimitiveSerializer<GPackageSort> {
  @override
  final Iterable<Type> types = const <Type>[GPackageSort];
  @override
  final String wireName = 'GPackageSort';

  @override
  Object serialize(Serializers serializers, GPackageSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPackageSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPackageSort.valueOf(serialized as String);
}

class _$GPackageStatusSerializer
    implements PrimitiveSerializer<GPackageStatus> {
  @override
  final Iterable<Type> types = const <Type>[GPackageStatus];
  @override
  final String wireName = 'GPackageStatus';

  @override
  Object serialize(Serializers serializers, GPackageStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPackageStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPackageStatus.valueOf(serialized as String);
}

class _$GPackageTypeEnumSerializer
    implements PrimitiveSerializer<GPackageTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GPackageTypeEnum];
  @override
  final String wireName = 'GPackageTypeEnum';

  @override
  Object serialize(Serializers serializers, GPackageTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPackageTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPackageTypeEnum.valueOf(serialized as String);
}

class _$GPagesMarkOnboardingCompleteInputSerializer
    implements StructuredSerializer<GPagesMarkOnboardingCompleteInput> {
  @override
  final Iterable<Type> types = const [
    GPagesMarkOnboardingCompleteInput,
    _$GPagesMarkOnboardingCompleteInput
  ];
  @override
  final String wireName = 'GPagesMarkOnboardingCompleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPagesMarkOnboardingCompleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPagesMarkOnboardingCompleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPagesMarkOnboardingCompleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPipelineCancelInputSerializer
    implements StructuredSerializer<GPipelineCancelInput> {
  @override
  final Iterable<Type> types = const [
    GPipelineCancelInput,
    _$GPipelineCancelInput
  ];
  @override
  final String wireName = 'GPipelineCancelInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPipelineCancelInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiPipelineID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPipelineCancelInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPipelineCancelInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCiPipelineID))! as GCiPipelineID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPipelineConfigSourceEnumSerializer
    implements PrimitiveSerializer<GPipelineConfigSourceEnum> {
  @override
  final Iterable<Type> types = const <Type>[GPipelineConfigSourceEnum];
  @override
  final String wireName = 'GPipelineConfigSourceEnum';

  @override
  Object serialize(Serializers serializers, GPipelineConfigSourceEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPipelineConfigSourceEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPipelineConfigSourceEnum.valueOf(serialized as String);
}

class _$GPipelineDestroyInputSerializer
    implements StructuredSerializer<GPipelineDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GPipelineDestroyInput,
    _$GPipelineDestroyInput
  ];
  @override
  final String wireName = 'GPipelineDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPipelineDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiPipelineID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPipelineDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPipelineDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCiPipelineID))! as GCiPipelineID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPipelineMergeRequestEventTypeSerializer
    implements PrimitiveSerializer<GPipelineMergeRequestEventType> {
  @override
  final Iterable<Type> types = const <Type>[GPipelineMergeRequestEventType];
  @override
  final String wireName = 'GPipelineMergeRequestEventType';

  @override
  Object serialize(
          Serializers serializers, GPipelineMergeRequestEventType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPipelineMergeRequestEventType deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPipelineMergeRequestEventType.valueOf(serialized as String);
}

class _$GPipelineRetryInputSerializer
    implements StructuredSerializer<GPipelineRetryInput> {
  @override
  final Iterable<Type> types = const [
    GPipelineRetryInput,
    _$GPipelineRetryInput
  ];
  @override
  final String wireName = 'GPipelineRetryInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPipelineRetryInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiPipelineID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPipelineRetryInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPipelineRetryInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCiPipelineID))! as GCiPipelineID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPipelineScheduleStatusSerializer
    implements PrimitiveSerializer<GPipelineScheduleStatus> {
  @override
  final Iterable<Type> types = const <Type>[GPipelineScheduleStatus];
  @override
  final String wireName = 'GPipelineScheduleStatus';

  @override
  Object serialize(Serializers serializers, GPipelineScheduleStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPipelineScheduleStatus deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPipelineScheduleStatus.valueOf(serialized as String);
}

class _$GPipelineScopeEnumSerializer
    implements PrimitiveSerializer<GPipelineScopeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GPipelineScopeEnum];
  @override
  final String wireName = 'GPipelineScopeEnum';

  @override
  Object serialize(Serializers serializers, GPipelineScopeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPipelineScopeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPipelineScopeEnum.valueOf(serialized as String);
}

class _$GPipelineStatusEnumSerializer
    implements PrimitiveSerializer<GPipelineStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[GPipelineStatusEnum];
  @override
  final String wireName = 'GPipelineStatusEnum';

  @override
  Object serialize(Serializers serializers, GPipelineStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPipelineStatusEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPipelineStatusEnum.valueOf(serialized as String);
}

class _$GProjectCiCdSettingsUpdateInputSerializer
    implements StructuredSerializer<GProjectCiCdSettingsUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GProjectCiCdSettingsUpdateInput,
    _$GProjectCiCdSettingsUpdateInput
  ];
  @override
  final String wireName = 'GProjectCiCdSettingsUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectCiCdSettingsUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fullPath',
      serializers.serialize(object.fullPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.keepLatestArtifact;
    if (value != null) {
      result
        ..add('keepLatestArtifact')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.jobTokenScopeEnabled;
    if (value != null) {
      result
        ..add('jobTokenScopeEnabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.mergePipelinesEnabled;
    if (value != null) {
      result
        ..add('mergePipelinesEnabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.mergeTrainsEnabled;
    if (value != null) {
      result
        ..add('mergeTrainsEnabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GProjectCiCdSettingsUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectCiCdSettingsUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'keepLatestArtifact':
          result.keepLatestArtifact = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'jobTokenScopeEnabled':
          result.jobTokenScopeEnabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'mergePipelinesEnabled':
          result.mergePipelinesEnabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'mergeTrainsEnabled':
          result.mergeTrainsEnabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectMemberRelationSerializer
    implements PrimitiveSerializer<GProjectMemberRelation> {
  @override
  final Iterable<Type> types = const <Type>[GProjectMemberRelation];
  @override
  final String wireName = 'GProjectMemberRelation';

  @override
  Object serialize(Serializers serializers, GProjectMemberRelation object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProjectMemberRelation deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProjectMemberRelation.valueOf(serialized as String);
}

class _$GProjectSetComplianceFrameworkInputSerializer
    implements StructuredSerializer<GProjectSetComplianceFrameworkInput> {
  @override
  final Iterable<Type> types = const [
    GProjectSetComplianceFrameworkInput,
    _$GProjectSetComplianceFrameworkInput
  ];
  @override
  final String wireName = 'GProjectSetComplianceFrameworkInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectSetComplianceFrameworkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectId',
      serializers.serialize(object.projectId,
          specifiedType: const FullType(GProjectID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.complianceFrameworkId;
    if (value != null) {
      result
        ..add('complianceFrameworkId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GComplianceManagementFrameworkID)));
    }
    return result;
  }

  @override
  GProjectSetComplianceFrameworkInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectSetComplianceFrameworkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectId':
          result.projectId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectID))! as GProjectID);
          break;
        case 'complianceFrameworkId':
          result.complianceFrameworkId.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GComplianceManagementFrameworkID))!
              as GComplianceManagementFrameworkID);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectSetLockedInputSerializer
    implements StructuredSerializer<GProjectSetLockedInput> {
  @override
  final Iterable<Type> types = const [
    GProjectSetLockedInput,
    _$GProjectSetLockedInput
  ];
  @override
  final String wireName = 'GProjectSetLockedInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectSetLockedInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'filePath',
      serializers.serialize(object.filePath,
          specifiedType: const FullType(String)),
      'lock',
      serializers.serialize(object.lock, specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GProjectSetLockedInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectSetLockedInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'filePath':
          result.filePath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'lock':
          result.lock = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GPrometheusIntegrationCreateInputSerializer
    implements StructuredSerializer<GPrometheusIntegrationCreateInput> {
  @override
  final Iterable<Type> types = const [
    GPrometheusIntegrationCreateInput,
    _$GPrometheusIntegrationCreateInput
  ];
  @override
  final String wireName = 'GPrometheusIntegrationCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPrometheusIntegrationCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'active',
      serializers.serialize(object.active, specifiedType: const FullType(bool)),
      'apiUrl',
      serializers.serialize(object.apiUrl,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPrometheusIntegrationCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPrometheusIntegrationCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'apiUrl':
          result.apiUrl = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GPrometheusIntegrationResetTokenInputSerializer
    implements StructuredSerializer<GPrometheusIntegrationResetTokenInput> {
  @override
  final Iterable<Type> types = const [
    GPrometheusIntegrationResetTokenInput,
    _$GPrometheusIntegrationResetTokenInput
  ];
  @override
  final String wireName = 'GPrometheusIntegrationResetTokenInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPrometheusIntegrationResetTokenInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIntegrationsPrometheusID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPrometheusIntegrationResetTokenInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPrometheusIntegrationResetTokenInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIntegrationsPrometheusID))!
              as GIntegrationsPrometheusID);
          break;
      }
    }

    return result.build();
  }
}

class _$GPrometheusIntegrationUpdateInputSerializer
    implements StructuredSerializer<GPrometheusIntegrationUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GPrometheusIntegrationUpdateInput,
    _$GPrometheusIntegrationUpdateInput
  ];
  @override
  final String wireName = 'GPrometheusIntegrationUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPrometheusIntegrationUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIntegrationsPrometheusID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.active;
    if (value != null) {
      result
        ..add('active')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.apiUrl;
    if (value != null) {
      result
        ..add('apiUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPrometheusIntegrationUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPrometheusIntegrationUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIntegrationsPrometheusID))!
              as GIntegrationsPrometheusID);
          break;
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'apiUrl':
          result.apiUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPromoteToEpicInputSerializer
    implements StructuredSerializer<GPromoteToEpicInput> {
  @override
  final Iterable<Type> types = const [
    GPromoteToEpicInput,
    _$GPromoteToEpicInput
  ];
  @override
  final String wireName = 'GPromoteToEpicInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPromoteToEpicInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.groupPath;
    if (value != null) {
      result
        ..add('groupPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPromoteToEpicInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPromoteToEpicInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GRegistryStateSerializer
    implements PrimitiveSerializer<GRegistryState> {
  @override
  final Iterable<Type> types = const <Type>[GRegistryState];
  @override
  final String wireName = 'GRegistryState';

  @override
  Object serialize(Serializers serializers, GRegistryState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GRegistryState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GRegistryState.valueOf(serialized as String);
}

class _$GReleaseAssetLinkCreateInputSerializer
    implements StructuredSerializer<GReleaseAssetLinkCreateInput> {
  @override
  final Iterable<Type> types = const [
    GReleaseAssetLinkCreateInput,
    _$GReleaseAssetLinkCreateInput
  ];
  @override
  final String wireName = 'GReleaseAssetLinkCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReleaseAssetLinkCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'url',
      serializers.serialize(object.url, specifiedType: const FullType(String)),
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'tagName',
      serializers.serialize(object.tagName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.directAssetPath;
    if (value != null) {
      result
        ..add('directAssetPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkType;
    if (value != null) {
      result
        ..add('linkType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GReleaseAssetLinkType)));
    }
    return result;
  }

  @override
  GReleaseAssetLinkCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReleaseAssetLinkCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'directAssetPath':
          result.directAssetPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'linkType':
          result.linkType = serializers.deserialize(value,
                  specifiedType: const FullType(GReleaseAssetLinkType))
              as GReleaseAssetLinkType?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'tagName':
          result.tagName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GReleaseAssetLinkDeleteInputSerializer
    implements StructuredSerializer<GReleaseAssetLinkDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GReleaseAssetLinkDeleteInput,
    _$GReleaseAssetLinkDeleteInput
  ];
  @override
  final String wireName = 'GReleaseAssetLinkDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReleaseAssetLinkDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GReleasesLinkID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GReleaseAssetLinkDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReleaseAssetLinkDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GReleasesLinkID))!
              as GReleasesLinkID);
          break;
      }
    }

    return result.build();
  }
}

class _$GReleaseAssetLinkInputSerializer
    implements StructuredSerializer<GReleaseAssetLinkInput> {
  @override
  final Iterable<Type> types = const [
    GReleaseAssetLinkInput,
    _$GReleaseAssetLinkInput
  ];
  @override
  final String wireName = 'GReleaseAssetLinkInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReleaseAssetLinkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'url',
      serializers.serialize(object.url, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.directAssetPath;
    if (value != null) {
      result
        ..add('directAssetPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkType;
    if (value != null) {
      result
        ..add('linkType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GReleaseAssetLinkType)));
    }
    return result;
  }

  @override
  GReleaseAssetLinkInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReleaseAssetLinkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'directAssetPath':
          result.directAssetPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'linkType':
          result.linkType = serializers.deserialize(value,
                  specifiedType: const FullType(GReleaseAssetLinkType))
              as GReleaseAssetLinkType?;
          break;
      }
    }

    return result.build();
  }
}

class _$GReleaseAssetLinkTypeSerializer
    implements PrimitiveSerializer<GReleaseAssetLinkType> {
  @override
  final Iterable<Type> types = const <Type>[GReleaseAssetLinkType];
  @override
  final String wireName = 'GReleaseAssetLinkType';

  @override
  Object serialize(Serializers serializers, GReleaseAssetLinkType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GReleaseAssetLinkType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GReleaseAssetLinkType.valueOf(serialized as String);
}

class _$GReleaseAssetLinkUpdateInputSerializer
    implements StructuredSerializer<GReleaseAssetLinkUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GReleaseAssetLinkUpdateInput,
    _$GReleaseAssetLinkUpdateInput
  ];
  @override
  final String wireName = 'GReleaseAssetLinkUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReleaseAssetLinkUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GReleasesLinkID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.directAssetPath;
    if (value != null) {
      result
        ..add('directAssetPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkType;
    if (value != null) {
      result
        ..add('linkType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GReleaseAssetLinkType)));
    }
    return result;
  }

  @override
  GReleaseAssetLinkUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReleaseAssetLinkUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GReleasesLinkID))!
              as GReleasesLinkID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'directAssetPath':
          result.directAssetPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'linkType':
          result.linkType = serializers.deserialize(value,
                  specifiedType: const FullType(GReleaseAssetLinkType))
              as GReleaseAssetLinkType?;
          break;
      }
    }

    return result.build();
  }
}

class _$GReleaseAssetsInputSerializer
    implements StructuredSerializer<GReleaseAssetsInput> {
  @override
  final Iterable<Type> types = const [
    GReleaseAssetsInput,
    _$GReleaseAssetsInput
  ];
  @override
  final String wireName = 'GReleaseAssetsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReleaseAssetsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.links;
    if (value != null) {
      result
        ..add('links')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GReleaseAssetLinkInput)])));
    }
    return result;
  }

  @override
  GReleaseAssetsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReleaseAssetsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'links':
          result.links.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GReleaseAssetLinkInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GReleaseCreateInputSerializer
    implements StructuredSerializer<GReleaseCreateInput> {
  @override
  final Iterable<Type> types = const [
    GReleaseCreateInput,
    _$GReleaseCreateInput
  ];
  @override
  final String wireName = 'GReleaseCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReleaseCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'tagName',
      serializers.serialize(object.tagName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.tagMessage;
    if (value != null) {
      result
        ..add('tagMessage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.ref;
    if (value != null) {
      result
        ..add('ref')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.releasedAt;
    if (value != null) {
      result
        ..add('releasedAt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    value = object.milestones;
    if (value != null) {
      result
        ..add('milestones')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.assets;
    if (value != null) {
      result
        ..add('assets')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GReleaseAssetsInput)));
    }
    return result;
  }

  @override
  GReleaseCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReleaseCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'tagName':
          result.tagName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'tagMessage':
          result.tagMessage = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ref':
          result.ref = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'releasedAt':
          result.releasedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'milestones':
          result.milestones.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'assets':
          result.assets.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GReleaseAssetsInput))!
              as GReleaseAssetsInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GReleaseDeleteInputSerializer
    implements StructuredSerializer<GReleaseDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GReleaseDeleteInput,
    _$GReleaseDeleteInput
  ];
  @override
  final String wireName = 'GReleaseDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReleaseDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'tagName',
      serializers.serialize(object.tagName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GReleaseDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReleaseDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'tagName':
          result.tagName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GReleaseSortSerializer implements PrimitiveSerializer<GReleaseSort> {
  @override
  final Iterable<Type> types = const <Type>[GReleaseSort];
  @override
  final String wireName = 'GReleaseSort';

  @override
  Object serialize(Serializers serializers, GReleaseSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GReleaseSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GReleaseSort.valueOf(serialized as String);
}

class _$GReleaseTagWildcardIdSerializer
    implements PrimitiveSerializer<GReleaseTagWildcardId> {
  @override
  final Iterable<Type> types = const <Type>[GReleaseTagWildcardId];
  @override
  final String wireName = 'GReleaseTagWildcardId';

  @override
  Object serialize(Serializers serializers, GReleaseTagWildcardId object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GReleaseTagWildcardId deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GReleaseTagWildcardId.valueOf(serialized as String);
}

class _$GReleaseUpdateInputSerializer
    implements StructuredSerializer<GReleaseUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GReleaseUpdateInput,
    _$GReleaseUpdateInput
  ];
  @override
  final String wireName = 'GReleaseUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReleaseUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'tagName',
      serializers.serialize(object.tagName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.releasedAt;
    if (value != null) {
      result
        ..add('releasedAt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    value = object.milestones;
    if (value != null) {
      result
        ..add('milestones')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GReleaseUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReleaseUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'tagName':
          result.tagName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'releasedAt':
          result.releasedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'milestones':
          result.milestones.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GRemoveProjectFromSecurityDashboardInputSerializer
    implements StructuredSerializer<GRemoveProjectFromSecurityDashboardInput> {
  @override
  final Iterable<Type> types = const [
    GRemoveProjectFromSecurityDashboardInput,
    _$GRemoveProjectFromSecurityDashboardInput
  ];
  @override
  final String wireName = 'GRemoveProjectFromSecurityDashboardInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GRemoveProjectFromSecurityDashboardInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GProjectID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GRemoveProjectFromSecurityDashboardInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GRemoveProjectFromSecurityDashboardInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectID))! as GProjectID);
          break;
      }
    }

    return result.build();
  }
}

class _$GReplicationStateEnumSerializer
    implements PrimitiveSerializer<GReplicationStateEnum> {
  @override
  final Iterable<Type> types = const <Type>[GReplicationStateEnum];
  @override
  final String wireName = 'GReplicationStateEnum';

  @override
  Object serialize(Serializers serializers, GReplicationStateEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GReplicationStateEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GReplicationStateEnum.valueOf(serialized as String);
}

class _$GRepositionImageDiffNoteInputSerializer
    implements StructuredSerializer<GRepositionImageDiffNoteInput> {
  @override
  final Iterable<Type> types = const [
    GRepositionImageDiffNoteInput,
    _$GRepositionImageDiffNoteInput
  ];
  @override
  final String wireName = 'GRepositionImageDiffNoteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GRepositionImageDiffNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GDiffNoteID)),
      'position',
      serializers.serialize(object.position,
          specifiedType: const FullType(GUpdateDiffImagePositionInput)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GRepositionImageDiffNoteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GRepositionImageDiffNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDiffNoteID))! as GDiffNoteID);
          break;
        case 'position':
          result.position.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUpdateDiffImagePositionInput))!
              as GUpdateDiffImagePositionInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GRequirementStateSerializer
    implements PrimitiveSerializer<GRequirementState> {
  @override
  final Iterable<Type> types = const <Type>[GRequirementState];
  @override
  final String wireName = 'GRequirementState';

  @override
  Object serialize(Serializers serializers, GRequirementState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GRequirementState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GRequirementState.valueOf(serialized as String);
}

class _$GRequirementStatusFilterSerializer
    implements PrimitiveSerializer<GRequirementStatusFilter> {
  @override
  final Iterable<Type> types = const <Type>[GRequirementStatusFilter];
  @override
  final String wireName = 'GRequirementStatusFilter';

  @override
  Object serialize(Serializers serializers, GRequirementStatusFilter object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GRequirementStatusFilter deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GRequirementStatusFilter.valueOf(serialized as String);
}

class _$GRunnerDeleteInputSerializer
    implements StructuredSerializer<GRunnerDeleteInput> {
  @override
  final Iterable<Type> types = const [GRunnerDeleteInput, _$GRunnerDeleteInput];
  @override
  final String wireName = 'GRunnerDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GRunnerDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiRunnerID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GRunnerDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GRunnerDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCiRunnerID))! as GCiRunnerID);
          break;
      }
    }

    return result.build();
  }
}

class _$GRunnersRegistrationTokenResetInputSerializer
    implements StructuredSerializer<GRunnersRegistrationTokenResetInput> {
  @override
  final Iterable<Type> types = const [
    GRunnersRegistrationTokenResetInput,
    _$GRunnersRegistrationTokenResetInput
  ];
  @override
  final String wireName = 'GRunnersRegistrationTokenResetInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GRunnersRegistrationTokenResetInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GCiRunnerType)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GRunnersRegistrationTokenResetInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GRunnersRegistrationTokenResetInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(GCiRunnerType))! as GCiRunnerType;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GRunnerUpdateInputSerializer
    implements StructuredSerializer<GRunnerUpdateInput> {
  @override
  final Iterable<Type> types = const [GRunnerUpdateInput, _$GRunnerUpdateInput];
  @override
  final String wireName = 'GRunnerUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GRunnerUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GCiRunnerID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.maintenanceNote;
    if (value != null) {
      result
        ..add('maintenanceNote')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.maximumTimeout;
    if (value != null) {
      result
        ..add('maximumTimeout')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.accessLevel;
    if (value != null) {
      result
        ..add('accessLevel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GCiRunnerAccessLevel)));
    }
    value = object.paused;
    if (value != null) {
      result
        ..add('paused')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.locked;
    if (value != null) {
      result
        ..add('locked')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.runUntagged;
    if (value != null) {
      result
        ..add('runUntagged')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.tagList;
    if (value != null) {
      result
        ..add('tagList')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.associatedProjects;
    if (value != null) {
      result
        ..add('associatedProjects')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GProjectID)])));
    }
    value = object.publicProjectsMinutesCostFactor;
    if (value != null) {
      result
        ..add('publicProjectsMinutesCostFactor')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.privateProjectsMinutesCostFactor;
    if (value != null) {
      result
        ..add('privateProjectsMinutesCostFactor')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    return result;
  }

  @override
  GRunnerUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GRunnerUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCiRunnerID))! as GCiRunnerID);
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'maintenanceNote':
          result.maintenanceNote = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'maximumTimeout':
          result.maximumTimeout = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'accessLevel':
          result.accessLevel = serializers.deserialize(value,
                  specifiedType: const FullType(GCiRunnerAccessLevel))
              as GCiRunnerAccessLevel?;
          break;
        case 'paused':
          result.paused = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'locked':
          result.locked = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'runUntagged':
          result.runUntagged = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'tagList':
          result.tagList.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'associatedProjects':
          result.associatedProjects.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GProjectID)]))!
              as BuiltList<Object?>);
          break;
        case 'publicProjectsMinutesCostFactor':
          result.publicProjectsMinutesCostFactor = serializers.deserialize(
              value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'privateProjectsMinutesCostFactor':
          result.privateProjectsMinutesCostFactor = serializers.deserialize(
              value,
              specifiedType: const FullType(double)) as double?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSastCiConfigurationAnalyzersEntityInputSerializer
    implements StructuredSerializer<GSastCiConfigurationAnalyzersEntityInput> {
  @override
  final Iterable<Type> types = const [
    GSastCiConfigurationAnalyzersEntityInput,
    _$GSastCiConfigurationAnalyzersEntityInput
  ];
  @override
  final String wireName = 'GSastCiConfigurationAnalyzersEntityInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSastCiConfigurationAnalyzersEntityInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'enabled',
      serializers.serialize(object.enabled,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.variables;
    if (value != null) {
      result
        ..add('variables')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GSastCiConfigurationEntityInput)])));
    }
    return result;
  }

  @override
  GSastCiConfigurationAnalyzersEntityInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSastCiConfigurationAnalyzersEntityInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'enabled':
          result.enabled = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'variables':
          result.variables.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GSastCiConfigurationEntityInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GSastCiConfigurationEntityInputSerializer
    implements StructuredSerializer<GSastCiConfigurationEntityInput> {
  @override
  final Iterable<Type> types = const [
    GSastCiConfigurationEntityInput,
    _$GSastCiConfigurationEntityInput
  ];
  @override
  final String wireName = 'GSastCiConfigurationEntityInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSastCiConfigurationEntityInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(String)),
      'defaultValue',
      serializers.serialize(object.defaultValue,
          specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSastCiConfigurationEntityInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSastCiConfigurationEntityInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'defaultValue':
          result.defaultValue = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSastCiConfigurationInputSerializer
    implements StructuredSerializer<GSastCiConfigurationInput> {
  @override
  final Iterable<Type> types = const [
    GSastCiConfigurationInput,
    _$GSastCiConfigurationInput
  ];
  @override
  final String wireName = 'GSastCiConfigurationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSastCiConfigurationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.global;
    if (value != null) {
      result
        ..add('global')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GSastCiConfigurationEntityInput)])));
    }
    value = object.pipeline;
    if (value != null) {
      result
        ..add('pipeline')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GSastCiConfigurationEntityInput)])));
    }
    value = object.analyzers;
    if (value != null) {
      result
        ..add('analyzers')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GSastCiConfigurationAnalyzersEntityInput)
            ])));
    }
    return result;
  }

  @override
  GSastCiConfigurationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSastCiConfigurationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'global':
          result.global.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GSastCiConfigurationEntityInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'pipeline':
          result.pipeline.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GSastCiConfigurationEntityInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'analyzers':
          result.analyzers.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GSastCiConfigurationAnalyzersEntityInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GSastUiComponentSizeSerializer
    implements PrimitiveSerializer<GSastUiComponentSize> {
  @override
  final Iterable<Type> types = const <Type>[GSastUiComponentSize];
  @override
  final String wireName = 'GSastUiComponentSize';

  @override
  Object serialize(Serializers serializers, GSastUiComponentSize object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSastUiComponentSize deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSastUiComponentSize.valueOf(serialized as String);
}

class _$GSavedReplyCreateInputSerializer
    implements StructuredSerializer<GSavedReplyCreateInput> {
  @override
  final Iterable<Type> types = const [
    GSavedReplyCreateInput,
    _$GSavedReplyCreateInput
  ];
  @override
  final String wireName = 'GSavedReplyCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSavedReplyCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'content',
      serializers.serialize(object.content,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSavedReplyCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSavedReplyCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'content':
          result.content = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSavedReplyDestroyInputSerializer
    implements StructuredSerializer<GSavedReplyDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GSavedReplyDestroyInput,
    _$GSavedReplyDestroyInput
  ];
  @override
  final String wireName = 'GSavedReplyDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSavedReplyDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GUsersSavedReplyID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSavedReplyDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSavedReplyDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUsersSavedReplyID))!
              as GUsersSavedReplyID);
          break;
      }
    }

    return result.build();
  }
}

class _$GSavedReplyUpdateInputSerializer
    implements StructuredSerializer<GSavedReplyUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GSavedReplyUpdateInput,
    _$GSavedReplyUpdateInput
  ];
  @override
  final String wireName = 'GSavedReplyUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSavedReplyUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GUsersSavedReplyID)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'content',
      serializers.serialize(object.content,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSavedReplyUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSavedReplyUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUsersSavedReplyID))!
              as GUsersSavedReplyID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'content':
          result.content = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GScanExecutionPolicyCommitInputSerializer
    implements StructuredSerializer<GScanExecutionPolicyCommitInput> {
  @override
  final Iterable<Type> types = const [
    GScanExecutionPolicyCommitInput,
    _$GScanExecutionPolicyCommitInput
  ];
  @override
  final String wireName = 'GScanExecutionPolicyCommitInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GScanExecutionPolicyCommitInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'policyYaml',
      serializers.serialize(object.policyYaml,
          specifiedType: const FullType(String)),
      'operationMode',
      serializers.serialize(object.operationMode,
          specifiedType: const FullType(GMutationOperationMode)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fullPath;
    if (value != null) {
      result
        ..add('fullPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GScanExecutionPolicyCommitInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GScanExecutionPolicyCommitInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'policyYaml':
          result.policyYaml = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'operationMode':
          result.operationMode = serializers.deserialize(value,
                  specifiedType: const FullType(GMutationOperationMode))!
              as GMutationOperationMode;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GScanStatusSerializer implements PrimitiveSerializer<GScanStatus> {
  @override
  final Iterable<Type> types = const <Type>[GScanStatus];
  @override
  final String wireName = 'GScanStatus';

  @override
  Object serialize(Serializers serializers, GScanStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GScanStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GScanStatus.valueOf(serialized as String);
}

class _$GSecurityFindingCreateIssueInputSerializer
    implements StructuredSerializer<GSecurityFindingCreateIssueInput> {
  @override
  final Iterable<Type> types = const [
    GSecurityFindingCreateIssueInput,
    _$GSecurityFindingCreateIssueInput
  ];
  @override
  final String wireName = 'GSecurityFindingCreateIssueInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSecurityFindingCreateIssueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'uuid',
      serializers.serialize(object.uuid, specifiedType: const FullType(String)),
      'project',
      serializers.serialize(object.project,
          specifiedType: const FullType(GProjectID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSecurityFindingCreateIssueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSecurityFindingCreateIssueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'uuid':
          result.uuid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'project':
          result.project.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectID))! as GProjectID);
          break;
      }
    }

    return result.build();
  }
}

class _$GSecurityFindingDismissInputSerializer
    implements StructuredSerializer<GSecurityFindingDismissInput> {
  @override
  final Iterable<Type> types = const [
    GSecurityFindingDismissInput,
    _$GSecurityFindingDismissInput
  ];
  @override
  final String wireName = 'GSecurityFindingDismissInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSecurityFindingDismissInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'uuid',
      serializers.serialize(object.uuid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dismissalReason;
    if (value != null) {
      result
        ..add('dismissalReason')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GVulnerabilityDismissalReason)));
    }
    return result;
  }

  @override
  GSecurityFindingDismissInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSecurityFindingDismissInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'uuid':
          result.uuid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dismissalReason':
          result.dismissalReason = serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilityDismissalReason))
              as GVulnerabilityDismissalReason?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSecurityPolicyProjectAssignInputSerializer
    implements StructuredSerializer<GSecurityPolicyProjectAssignInput> {
  @override
  final Iterable<Type> types = const [
    GSecurityPolicyProjectAssignInput,
    _$GSecurityPolicyProjectAssignInput
  ];
  @override
  final String wireName = 'GSecurityPolicyProjectAssignInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSecurityPolicyProjectAssignInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'securityPolicyProjectId',
      serializers.serialize(object.securityPolicyProjectId,
          specifiedType: const FullType(GProjectID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fullPath;
    if (value != null) {
      result
        ..add('fullPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSecurityPolicyProjectAssignInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSecurityPolicyProjectAssignInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'securityPolicyProjectId':
          result.securityPolicyProjectId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectID))! as GProjectID);
          break;
      }
    }

    return result.build();
  }
}

class _$GSecurityPolicyProjectCreateInputSerializer
    implements StructuredSerializer<GSecurityPolicyProjectCreateInput> {
  @override
  final Iterable<Type> types = const [
    GSecurityPolicyProjectCreateInput,
    _$GSecurityPolicyProjectCreateInput
  ];
  @override
  final String wireName = 'GSecurityPolicyProjectCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSecurityPolicyProjectCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fullPath;
    if (value != null) {
      result
        ..add('fullPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSecurityPolicyProjectCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSecurityPolicyProjectCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSecurityPolicyProjectUnassignInputSerializer
    implements StructuredSerializer<GSecurityPolicyProjectUnassignInput> {
  @override
  final Iterable<Type> types = const [
    GSecurityPolicyProjectUnassignInput,
    _$GSecurityPolicyProjectUnassignInput
  ];
  @override
  final String wireName = 'GSecurityPolicyProjectUnassignInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSecurityPolicyProjectUnassignInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fullPath;
    if (value != null) {
      result
        ..add('fullPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSecurityPolicyProjectUnassignInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSecurityPolicyProjectUnassignInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullPath':
          result.fullPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSecurityPolicyRelationTypeSerializer
    implements PrimitiveSerializer<GSecurityPolicyRelationType> {
  @override
  final Iterable<Type> types = const <Type>[GSecurityPolicyRelationType];
  @override
  final String wireName = 'GSecurityPolicyRelationType';

  @override
  Object serialize(Serializers serializers, GSecurityPolicyRelationType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSecurityPolicyRelationType deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSecurityPolicyRelationType.valueOf(serialized as String);
}

class _$GSecurityReportTypeEnumSerializer
    implements PrimitiveSerializer<GSecurityReportTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GSecurityReportTypeEnum];
  @override
  final String wireName = 'GSecurityReportTypeEnum';

  @override
  Object serialize(Serializers serializers, GSecurityReportTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSecurityReportTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSecurityReportTypeEnum.valueOf(serialized as String);
}

class _$GSecurityScannerTypeSerializer
    implements PrimitiveSerializer<GSecurityScannerType> {
  @override
  final Iterable<Type> types = const <Type>[GSecurityScannerType];
  @override
  final String wireName = 'GSecurityScannerType';

  @override
  Object serialize(Serializers serializers, GSecurityScannerType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSecurityScannerType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSecurityScannerType.valueOf(serialized as String);
}

class _$GSecurityTrainingUpdateInputSerializer
    implements StructuredSerializer<GSecurityTrainingUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GSecurityTrainingUpdateInput,
    _$GSecurityTrainingUpdateInput
  ];
  @override
  final String wireName = 'GSecurityTrainingUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSecurityTrainingUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'providerId',
      serializers.serialize(object.providerId,
          specifiedType: const FullType(GSecurityTrainingProviderID)),
      'isEnabled',
      serializers.serialize(object.isEnabled,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.isPrimary;
    if (value != null) {
      result
        ..add('isPrimary')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GSecurityTrainingUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSecurityTrainingUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'providerId':
          result.providerId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSecurityTrainingProviderID))!
              as GSecurityTrainingProviderID);
          break;
        case 'isEnabled':
          result.isEnabled = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'isPrimary':
          result.isPrimary = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSentryErrorStatusSerializer
    implements PrimitiveSerializer<GSentryErrorStatus> {
  @override
  final Iterable<Type> types = const <Type>[GSentryErrorStatus];
  @override
  final String wireName = 'GSentryErrorStatus';

  @override
  Object serialize(Serializers serializers, GSentryErrorStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSentryErrorStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSentryErrorStatus.valueOf(serialized as String);
}

class _$GServiceTypeSerializer implements PrimitiveSerializer<GServiceType> {
  @override
  final Iterable<Type> types = const <Type>[GServiceType];
  @override
  final String wireName = 'GServiceType';

  @override
  Object serialize(Serializers serializers, GServiceType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GServiceType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GServiceType.valueOf(serialized as String);
}

class _$GShaFormatSerializer implements PrimitiveSerializer<GShaFormat> {
  @override
  final Iterable<Type> types = const <Type>[GShaFormat];
  @override
  final String wireName = 'GShaFormat';

  @override
  Object serialize(Serializers serializers, GShaFormat object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GShaFormat deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GShaFormat.valueOf(serialized as String);
}

class _$GSharedRunnersSettingSerializer
    implements PrimitiveSerializer<GSharedRunnersSetting> {
  @override
  final Iterable<Type> types = const <Type>[GSharedRunnersSetting];
  @override
  final String wireName = 'GSharedRunnersSetting';

  @override
  Object serialize(Serializers serializers, GSharedRunnersSetting object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSharedRunnersSetting deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSharedRunnersSetting.valueOf(serialized as String);
}

class _$GSnippetBlobActionEnumSerializer
    implements PrimitiveSerializer<GSnippetBlobActionEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'Gupdate': 'update',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'update': 'Gupdate',
  };

  @override
  final Iterable<Type> types = const <Type>[GSnippetBlobActionEnum];
  @override
  final String wireName = 'GSnippetBlobActionEnum';

  @override
  Object serialize(Serializers serializers, GSnippetBlobActionEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GSnippetBlobActionEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSnippetBlobActionEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GSnippetBlobActionInputTypeSerializer
    implements StructuredSerializer<GSnippetBlobActionInputType> {
  @override
  final Iterable<Type> types = const [
    GSnippetBlobActionInputType,
    _$GSnippetBlobActionInputType
  ];
  @override
  final String wireName = 'GSnippetBlobActionInputType';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSnippetBlobActionInputType object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'action',
      serializers.serialize(object.action,
          specifiedType: const FullType(GSnippetBlobActionEnum)),
      'filePath',
      serializers.serialize(object.filePath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.previousPath;
    if (value != null) {
      result
        ..add('previousPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.content;
    if (value != null) {
      result
        ..add('content')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSnippetBlobActionInputType deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSnippetBlobActionInputTypeBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'action':
          result.action = serializers.deserialize(value,
                  specifiedType: const FullType(GSnippetBlobActionEnum))!
              as GSnippetBlobActionEnum;
          break;
        case 'previousPath':
          result.previousPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'filePath':
          result.filePath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'content':
          result.content = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSortSerializer implements PrimitiveSerializer<GSort> {
  @override
  final Iterable<Type> types = const <Type>[GSort];
  @override
  final String wireName = 'GSort';

  @override
  Object serialize(Serializers serializers, GSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSort.valueOf(serialized as String);
}

class _$GSortDirectionEnumSerializer
    implements PrimitiveSerializer<GSortDirectionEnum> {
  @override
  final Iterable<Type> types = const <Type>[GSortDirectionEnum];
  @override
  final String wireName = 'GSortDirectionEnum';

  @override
  Object serialize(Serializers serializers, GSortDirectionEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSortDirectionEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSortDirectionEnum.valueOf(serialized as String);
}

class _$GTerraformStateDeleteInputSerializer
    implements StructuredSerializer<GTerraformStateDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GTerraformStateDeleteInput,
    _$GTerraformStateDeleteInput
  ];
  @override
  final String wireName = 'GTerraformStateDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTerraformStateDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GTerraformStateID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTerraformStateDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTerraformStateDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GTerraformStateID))!
              as GTerraformStateID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GTerraformStateLockInputSerializer
    implements StructuredSerializer<GTerraformStateLockInput> {
  @override
  final Iterable<Type> types = const [
    GTerraformStateLockInput,
    _$GTerraformStateLockInput
  ];
  @override
  final String wireName = 'GTerraformStateLockInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTerraformStateLockInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GTerraformStateID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTerraformStateLockInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTerraformStateLockInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GTerraformStateID))!
              as GTerraformStateID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GTerraformStateUnlockInputSerializer
    implements StructuredSerializer<GTerraformStateUnlockInput> {
  @override
  final Iterable<Type> types = const [
    GTerraformStateUnlockInput,
    _$GTerraformStateUnlockInput
  ];
  @override
  final String wireName = 'GTerraformStateUnlockInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTerraformStateUnlockInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GTerraformStateID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTerraformStateUnlockInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTerraformStateUnlockInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GTerraformStateID))!
              as GTerraformStateID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GTestCaseStatusSerializer
    implements PrimitiveSerializer<GTestCaseStatus> {
  @override
  final Iterable<Type> types = const <Type>[GTestCaseStatus];
  @override
  final String wireName = 'GTestCaseStatus';

  @override
  Object serialize(Serializers serializers, GTestCaseStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTestCaseStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTestCaseStatus.valueOf(serialized as String);
}

class _$GTestReportStateSerializer
    implements PrimitiveSerializer<GTestReportState> {
  @override
  final Iterable<Type> types = const <Type>[GTestReportState];
  @override
  final String wireName = 'GTestReportState';

  @override
  Object serialize(Serializers serializers, GTestReportState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTestReportState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTestReportState.valueOf(serialized as String);
}

class _$GTimeboxReportErrorReasonSerializer
    implements PrimitiveSerializer<GTimeboxReportErrorReason> {
  @override
  final Iterable<Type> types = const <Type>[GTimeboxReportErrorReason];
  @override
  final String wireName = 'GTimeboxReportErrorReason';

  @override
  Object serialize(Serializers serializers, GTimeboxReportErrorReason object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTimeboxReportErrorReason deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTimeboxReportErrorReason.valueOf(serialized as String);
}

class _$GTimeframeSerializer implements StructuredSerializer<GTimeframe> {
  @override
  final Iterable<Type> types = const [GTimeframe, _$GTimeframe];
  @override
  final String wireName = 'GTimeframe';

  @override
  Iterable<Object?> serialize(Serializers serializers, GTimeframe object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'start',
      serializers.serialize(object.start, specifiedType: const FullType(GDate)),
      'end',
      serializers.serialize(object.end, specifiedType: const FullType(GDate)),
    ];

    return result;
  }

  @override
  GTimeframe deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTimeframeBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'start':
          result.start.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'end':
          result.end.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
      }
    }

    return result.build();
  }
}

class _$GTimelineEventCreateInputSerializer
    implements StructuredSerializer<GTimelineEventCreateInput> {
  @override
  final Iterable<Type> types = const [
    GTimelineEventCreateInput,
    _$GTimelineEventCreateInput
  ];
  @override
  final String wireName = 'GTimelineEventCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTimelineEventCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'incidentId',
      serializers.serialize(object.incidentId,
          specifiedType: const FullType(GIssueID)),
      'note',
      serializers.serialize(object.note, specifiedType: const FullType(String)),
      'occurredAt',
      serializers.serialize(object.occurredAt,
          specifiedType: const FullType(GTime)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTimelineEventCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTimelineEventCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'incidentId':
          result.incidentId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIssueID))! as GIssueID);
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'occurredAt':
          result.occurredAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GTimelineEventDestroyInputSerializer
    implements StructuredSerializer<GTimelineEventDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GTimelineEventDestroyInput,
    _$GTimelineEventDestroyInput
  ];
  @override
  final String wireName = 'GTimelineEventDestroyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTimelineEventDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIncidentManagementTimelineEventID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTimelineEventDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTimelineEventDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GIncidentManagementTimelineEventID))!
              as GIncidentManagementTimelineEventID);
          break;
      }
    }

    return result.build();
  }
}

class _$GTimelineEventPromoteFromNoteInputSerializer
    implements StructuredSerializer<GTimelineEventPromoteFromNoteInput> {
  @override
  final Iterable<Type> types = const [
    GTimelineEventPromoteFromNoteInput,
    _$GTimelineEventPromoteFromNoteInput
  ];
  @override
  final String wireName = 'GTimelineEventPromoteFromNoteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTimelineEventPromoteFromNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'noteId',
      serializers.serialize(object.noteId,
          specifiedType: const FullType(GNoteID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTimelineEventPromoteFromNoteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTimelineEventPromoteFromNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'noteId':
          result.noteId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNoteID))! as GNoteID);
          break;
      }
    }

    return result.build();
  }
}

class _$GTimelineEventUpdateInputSerializer
    implements StructuredSerializer<GTimelineEventUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GTimelineEventUpdateInput,
    _$GTimelineEventUpdateInput
  ];
  @override
  final String wireName = 'GTimelineEventUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTimelineEventUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GIncidentManagementTimelineEventID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.occurredAt;
    if (value != null) {
      result
        ..add('occurredAt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    return result;
  }

  @override
  GTimelineEventUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTimelineEventUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GIncidentManagementTimelineEventID))!
              as GIncidentManagementTimelineEventID);
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'occurredAt':
          result.occurredAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GTimelogCreateInputSerializer
    implements StructuredSerializer<GTimelogCreateInput> {
  @override
  final Iterable<Type> types = const [
    GTimelogCreateInput,
    _$GTimelogCreateInput
  ];
  @override
  final String wireName = 'GTimelogCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTimelogCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'timeSpent',
      serializers.serialize(object.timeSpent,
          specifiedType: const FullType(String)),
      'spentAt',
      serializers.serialize(object.spentAt,
          specifiedType: const FullType(GDate)),
      'summary',
      serializers.serialize(object.summary,
          specifiedType: const FullType(String)),
      'issuableId',
      serializers.serialize(object.issuableId,
          specifiedType: const FullType(GIssuableID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTimelogCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTimelogCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'timeSpent':
          result.timeSpent = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'spentAt':
          result.spentAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'summary':
          result.summary = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'issuableId':
          result.issuableId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIssuableID))! as GIssuableID);
          break;
      }
    }

    return result.build();
  }
}

class _$GTimelogDeleteInputSerializer
    implements StructuredSerializer<GTimelogDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GTimelogDeleteInput,
    _$GTimelogDeleteInput
  ];
  @override
  final String wireName = 'GTimelogDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTimelogDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GTimelogID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTimelogDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTimelogDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTimelogID))! as GTimelogID);
          break;
      }
    }

    return result.build();
  }
}

class _$GTodoActionEnumSerializer
    implements PrimitiveSerializer<GTodoActionEnum> {
  @override
  final Iterable<Type> types = const <Type>[GTodoActionEnum];
  @override
  final String wireName = 'GTodoActionEnum';

  @override
  Object serialize(Serializers serializers, GTodoActionEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTodoActionEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTodoActionEnum.valueOf(serialized as String);
}

class _$GTodoCreateInputSerializer
    implements StructuredSerializer<GTodoCreateInput> {
  @override
  final Iterable<Type> types = const [GTodoCreateInput, _$GTodoCreateInput];
  @override
  final String wireName = 'GTodoCreateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GTodoCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'targetId',
      serializers.serialize(object.targetId,
          specifiedType: const FullType(GTodoableID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTodoCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTodoCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'targetId':
          result.targetId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTodoableID))! as GTodoableID);
          break;
      }
    }

    return result.build();
  }
}

class _$GTodoMarkDoneInputSerializer
    implements StructuredSerializer<GTodoMarkDoneInput> {
  @override
  final Iterable<Type> types = const [GTodoMarkDoneInput, _$GTodoMarkDoneInput];
  @override
  final String wireName = 'GTodoMarkDoneInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTodoMarkDoneInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(GTodoID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTodoMarkDoneInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTodoMarkDoneInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTodoID))! as GTodoID);
          break;
      }
    }

    return result.build();
  }
}

class _$GTodoRestoreInputSerializer
    implements StructuredSerializer<GTodoRestoreInput> {
  @override
  final Iterable<Type> types = const [GTodoRestoreInput, _$GTodoRestoreInput];
  @override
  final String wireName = 'GTodoRestoreInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GTodoRestoreInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(GTodoID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTodoRestoreInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTodoRestoreInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTodoID))! as GTodoID);
          break;
      }
    }

    return result.build();
  }
}

class _$GTodoRestoreManyInputSerializer
    implements StructuredSerializer<GTodoRestoreManyInput> {
  @override
  final Iterable<Type> types = const [
    GTodoRestoreManyInput,
    _$GTodoRestoreManyInput
  ];
  @override
  final String wireName = 'GTodoRestoreManyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTodoRestoreManyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'ids',
      serializers.serialize(object.ids,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GTodoID)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTodoRestoreManyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTodoRestoreManyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GTodoID)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GTodosMarkAllDoneInputSerializer
    implements StructuredSerializer<GTodosMarkAllDoneInput> {
  @override
  final Iterable<Type> types = const [
    GTodosMarkAllDoneInput,
    _$GTodosMarkAllDoneInput
  ];
  @override
  final String wireName = 'GTodosMarkAllDoneInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTodosMarkAllDoneInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.targetId;
    if (value != null) {
      result
        ..add('targetId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GTodoableID)));
    }
    return result;
  }

  @override
  GTodosMarkAllDoneInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTodosMarkAllDoneInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'targetId':
          result.targetId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTodoableID))! as GTodoableID);
          break;
      }
    }

    return result.build();
  }
}

class _$GTodoStateEnumSerializer
    implements PrimitiveSerializer<GTodoStateEnum> {
  @override
  final Iterable<Type> types = const <Type>[GTodoStateEnum];
  @override
  final String wireName = 'GTodoStateEnum';

  @override
  Object serialize(Serializers serializers, GTodoStateEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTodoStateEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTodoStateEnum.valueOf(serialized as String);
}

class _$GTodoTargetEnumSerializer
    implements PrimitiveSerializer<GTodoTargetEnum> {
  @override
  final Iterable<Type> types = const <Type>[GTodoTargetEnum];
  @override
  final String wireName = 'GTodoTargetEnum';

  @override
  Object serialize(Serializers serializers, GTodoTargetEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTodoTargetEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTodoTargetEnum.valueOf(serialized as String);
}

class _$GTrainingUrlRequestStatusSerializer
    implements PrimitiveSerializer<GTrainingUrlRequestStatus> {
  @override
  final Iterable<Type> types = const <Type>[GTrainingUrlRequestStatus];
  @override
  final String wireName = 'GTrainingUrlRequestStatus';

  @override
  Object serialize(Serializers serializers, GTrainingUrlRequestStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTrainingUrlRequestStatus deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTrainingUrlRequestStatus.valueOf(serialized as String);
}

class _$GTypeEnumSerializer implements PrimitiveSerializer<GTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GTypeEnum];
  @override
  final String wireName = 'GTypeEnum';

  @override
  Object serialize(Serializers serializers, GTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTypeEnum.valueOf(serialized as String);
}

class _$GUpdateAlertStatusInputSerializer
    implements StructuredSerializer<GUpdateAlertStatusInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateAlertStatusInput,
    _$GUpdateAlertStatusInput
  ];
  @override
  final String wireName = 'GUpdateAlertStatusInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateAlertStatusInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'status',
      serializers.serialize(object.status,
          specifiedType: const FullType(GAlertManagementStatus)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUpdateAlertStatusInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateAlertStatusInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'status':
          result.status = serializers.deserialize(value,
                  specifiedType: const FullType(GAlertManagementStatus))!
              as GAlertManagementStatus;
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateBoardEpicUserPreferencesInputSerializer
    implements StructuredSerializer<GUpdateBoardEpicUserPreferencesInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateBoardEpicUserPreferencesInput,
    _$GUpdateBoardEpicUserPreferencesInput
  ];
  @override
  final String wireName = 'GUpdateBoardEpicUserPreferencesInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateBoardEpicUserPreferencesInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'boardId',
      serializers.serialize(object.boardId,
          specifiedType: const FullType(GBoardID)),
      'epicId',
      serializers.serialize(object.epicId,
          specifiedType: const FullType(GEpicID)),
      'collapsed',
      serializers.serialize(object.collapsed,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUpdateBoardEpicUserPreferencesInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateBoardEpicUserPreferencesInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'boardId':
          result.boardId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GBoardID))! as GBoardID);
          break;
        case 'epicId':
          result.epicId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
        case 'collapsed':
          result.collapsed = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateBoardInputSerializer
    implements StructuredSerializer<GUpdateBoardInput> {
  @override
  final Iterable<Type> types = const [GUpdateBoardInput, _$GUpdateBoardInput];
  @override
  final String wireName = 'GUpdateBoardInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUpdateBoardInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(GBoardID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.hideBacklogList;
    if (value != null) {
      result
        ..add('hideBacklogList')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.hideClosedList;
    if (value != null) {
      result
        ..add('hideClosedList')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.assigneeId;
    if (value != null) {
      result
        ..add('assigneeId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserID)));
    }
    value = object.milestoneId;
    if (value != null) {
      result
        ..add('milestoneId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMilestoneID)));
    }
    value = object.iterationId;
    if (value != null) {
      result
        ..add('iterationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationID)));
    }
    value = object.iterationCadenceId;
    if (value != null) {
      result
        ..add('iterationCadenceId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationsCadenceID)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.labels;
    if (value != null) {
      result
        ..add('labels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.labelIds;
    if (value != null) {
      result
        ..add('labelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GLabelID)])));
    }
    return result;
  }

  @override
  GUpdateBoardInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateBoardInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'hideBacklogList':
          result.hideBacklogList = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'hideClosedList':
          result.hideClosedList = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GBoardID))! as GBoardID);
          break;
        case 'assigneeId':
          result.assigneeId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUserID))! as GUserID);
          break;
        case 'milestoneId':
          result.milestoneId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMilestoneID))! as GMilestoneID);
          break;
        case 'iterationId':
          result.iterationId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIterationID))! as GIterationID);
          break;
        case 'iterationCadenceId':
          result.iterationCadenceId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIterationsCadenceID))!
              as GIterationsCadenceID);
          break;
        case 'weight':
          result.weight = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'labels':
          result.labels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'labelIds':
          result.labelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GLabelID)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateBoardListInputSerializer
    implements StructuredSerializer<GUpdateBoardListInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateBoardListInput,
    _$GUpdateBoardListInput
  ];
  @override
  final String wireName = 'GUpdateBoardListInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateBoardListInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'listId',
      serializers.serialize(object.listId,
          specifiedType: const FullType(GListID)),
    ];
    Object? value;
    value = object.position;
    if (value != null) {
      result
        ..add('position')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.collapsed;
    if (value != null) {
      result
        ..add('collapsed')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUpdateBoardListInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateBoardListInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'position':
          result.position = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'collapsed':
          result.collapsed = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'listId':
          result.listId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GListID))! as GListID);
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateComplianceFrameworkInputSerializer
    implements StructuredSerializer<GUpdateComplianceFrameworkInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateComplianceFrameworkInput,
    _$GUpdateComplianceFrameworkInput
  ];
  @override
  final String wireName = 'GUpdateComplianceFrameworkInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateComplianceFrameworkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GComplianceManagementFrameworkID)),
      'params',
      serializers.serialize(object.params,
          specifiedType: const FullType(GComplianceFrameworkInput)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUpdateComplianceFrameworkInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateComplianceFrameworkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GComplianceManagementFrameworkID))!
              as GComplianceManagementFrameworkID);
          break;
        case 'params':
          result.params.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GComplianceFrameworkInput))!
              as GComplianceFrameworkInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateContainerExpirationPolicyInputSerializer
    implements StructuredSerializer<GUpdateContainerExpirationPolicyInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateContainerExpirationPolicyInput,
    _$GUpdateContainerExpirationPolicyInput
  ];
  @override
  final String wireName = 'GUpdateContainerExpirationPolicyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateContainerExpirationPolicyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.enabled;
    if (value != null) {
      result
        ..add('enabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.cadence;
    if (value != null) {
      result
        ..add('cadence')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GContainerExpirationPolicyCadenceEnum)));
    }
    value = object.olderThan;
    if (value != null) {
      result
        ..add('olderThan')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GContainerExpirationPolicyOlderThanEnum)));
    }
    value = object.keepN;
    if (value != null) {
      result
        ..add('keepN')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GContainerExpirationPolicyKeepEnum)));
    }
    value = object.nameRegex;
    if (value != null) {
      result
        ..add('nameRegex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUntrustedRegexp)));
    }
    value = object.nameRegexKeep;
    if (value != null) {
      result
        ..add('nameRegexKeep')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUntrustedRegexp)));
    }
    return result;
  }

  @override
  GUpdateContainerExpirationPolicyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateContainerExpirationPolicyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'enabled':
          result.enabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'cadence':
          result.cadence = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GContainerExpirationPolicyCadenceEnum))
              as GContainerExpirationPolicyCadenceEnum?;
          break;
        case 'olderThan':
          result.olderThan = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GContainerExpirationPolicyOlderThanEnum))
              as GContainerExpirationPolicyOlderThanEnum?;
          break;
        case 'keepN':
          result.keepN = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GContainerExpirationPolicyKeepEnum))
              as GContainerExpirationPolicyKeepEnum?;
          break;
        case 'nameRegex':
          result.nameRegex.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUntrustedRegexp))!
              as GUntrustedRegexp);
          break;
        case 'nameRegexKeep':
          result.nameRegexKeep.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUntrustedRegexp))!
              as GUntrustedRegexp);
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateDependencyProxyImageTtlGroupPolicyInputSerializer
    implements
        StructuredSerializer<GUpdateDependencyProxyImageTtlGroupPolicyInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateDependencyProxyImageTtlGroupPolicyInput,
    _$GUpdateDependencyProxyImageTtlGroupPolicyInput
  ];
  @override
  final String wireName = 'GUpdateDependencyProxyImageTtlGroupPolicyInput';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GUpdateDependencyProxyImageTtlGroupPolicyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.enabled;
    if (value != null) {
      result
        ..add('enabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.ttl;
    if (value != null) {
      result
        ..add('ttl')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GUpdateDependencyProxyImageTtlGroupPolicyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'enabled':
          result.enabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'ttl':
          result.ttl = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateDependencyProxySettingsInputSerializer
    implements StructuredSerializer<GUpdateDependencyProxySettingsInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateDependencyProxySettingsInput,
    _$GUpdateDependencyProxySettingsInput
  ];
  @override
  final String wireName = 'GUpdateDependencyProxySettingsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateDependencyProxySettingsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.enabled;
    if (value != null) {
      result
        ..add('enabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GUpdateDependencyProxySettingsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateDependencyProxySettingsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'enabled':
          result.enabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateDiffImagePositionInputSerializer
    implements StructuredSerializer<GUpdateDiffImagePositionInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateDiffImagePositionInput,
    _$GUpdateDiffImagePositionInput
  ];
  @override
  final String wireName = 'GUpdateDiffImagePositionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateDiffImagePositionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.x;
    if (value != null) {
      result
        ..add('x')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.y;
    if (value != null) {
      result
        ..add('y')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.width;
    if (value != null) {
      result
        ..add('width')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.height;
    if (value != null) {
      result
        ..add('height')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GUpdateDiffImagePositionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateDiffImagePositionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'x':
          result.x = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'y':
          result.y = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'width':
          result.width = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'height':
          result.height = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateEpicBoardListInputSerializer
    implements StructuredSerializer<GUpdateEpicBoardListInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateEpicBoardListInput,
    _$GUpdateEpicBoardListInput
  ];
  @override
  final String wireName = 'GUpdateEpicBoardListInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateEpicBoardListInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'listId',
      serializers.serialize(object.listId,
          specifiedType: const FullType(GBoardsEpicListID)),
    ];
    Object? value;
    value = object.position;
    if (value != null) {
      result
        ..add('position')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.collapsed;
    if (value != null) {
      result
        ..add('collapsed')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUpdateEpicBoardListInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateEpicBoardListInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'position':
          result.position = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'collapsed':
          result.collapsed = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'listId':
          result.listId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoardsEpicListID))!
              as GBoardsEpicListID);
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateEpicInputSerializer
    implements StructuredSerializer<GUpdateEpicInput> {
  @override
  final Iterable<Type> types = const [GUpdateEpicInput, _$GUpdateEpicInput];
  @override
  final String wireName = 'GUpdateEpicInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUpdateEpicInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.confidential;
    if (value != null) {
      result
        ..add('confidential')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.startDateFixed;
    if (value != null) {
      result
        ..add('startDateFixed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dueDateFixed;
    if (value != null) {
      result
        ..add('dueDateFixed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDateIsFixed;
    if (value != null) {
      result
        ..add('startDateIsFixed')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.dueDateIsFixed;
    if (value != null) {
      result
        ..add('dueDateIsFixed')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.addLabelIds;
    if (value != null) {
      result
        ..add('addLabelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.removeLabelIds;
    if (value != null) {
      result
        ..add('removeLabelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.addLabels;
    if (value != null) {
      result
        ..add('addLabels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.color;
    if (value != null) {
      result
        ..add('color')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GColor)));
    }
    value = object.stateEvent;
    if (value != null) {
      result
        ..add('stateEvent')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicStateEvent)));
    }
    value = object.removeLabels;
    if (value != null) {
      result
        ..add('removeLabels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GUpdateEpicInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateEpicInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'confidential':
          result.confidential = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'startDateFixed':
          result.startDateFixed = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dueDateFixed':
          result.dueDateFixed = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDateIsFixed':
          result.startDateIsFixed = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'dueDateIsFixed':
          result.dueDateIsFixed = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'addLabelIds':
          result.addLabelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'removeLabelIds':
          result.removeLabelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'addLabels':
          result.addLabels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'color':
          result.color.replace(serializers.deserialize(value,
              specifiedType: const FullType(GColor))! as GColor);
          break;
        case 'stateEvent':
          result.stateEvent = serializers.deserialize(value,
                  specifiedType: const FullType(GEpicStateEvent))
              as GEpicStateEvent?;
          break;
        case 'removeLabels':
          result.removeLabels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateImageDiffNoteInputSerializer
    implements StructuredSerializer<GUpdateImageDiffNoteInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateImageDiffNoteInput,
    _$GUpdateImageDiffNoteInput
  ];
  @override
  final String wireName = 'GUpdateImageDiffNoteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateImageDiffNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(GNoteID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.body;
    if (value != null) {
      result
        ..add('body')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.position;
    if (value != null) {
      result
        ..add('position')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUpdateDiffImagePositionInput)));
    }
    return result;
  }

  @override
  GUpdateImageDiffNoteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateImageDiffNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNoteID))! as GNoteID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'body':
          result.body = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'position':
          result.position.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUpdateDiffImagePositionInput))!
              as GUpdateDiffImagePositionInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateIssueInputSerializer
    implements StructuredSerializer<GUpdateIssueInput> {
  @override
  final Iterable<Type> types = const [GUpdateIssueInput, _$GUpdateIssueInput];
  @override
  final String wireName = 'GUpdateIssueInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUpdateIssueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dueDate;
    if (value != null) {
      result
        ..add('dueDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GISO8601Date)));
    }
    value = object.confidential;
    if (value != null) {
      result
        ..add('confidential')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.locked;
    if (value != null) {
      result
        ..add('locked')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIssueType)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.milestoneId;
    if (value != null) {
      result
        ..add('milestoneId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.addLabelIds;
    if (value != null) {
      result
        ..add('addLabelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.removeLabelIds;
    if (value != null) {
      result
        ..add('removeLabelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.labelIds;
    if (value != null) {
      result
        ..add('labelIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.stateEvent;
    if (value != null) {
      result
        ..add('stateEvent')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIssueStateEvent)));
    }
    value = object.healthStatus;
    if (value != null) {
      result
        ..add('healthStatus')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GHealthStatus)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.epicId;
    if (value != null) {
      result
        ..add('epicId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpicID)));
    }
    return result;
  }

  @override
  GUpdateIssueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateIssueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dueDate':
          result.dueDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GISO8601Date))! as GISO8601Date);
          break;
        case 'confidential':
          result.confidential = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'locked':
          result.locked = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(GIssueType)) as GIssueType?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'milestoneId':
          result.milestoneId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'addLabelIds':
          result.addLabelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'removeLabelIds':
          result.removeLabelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'labelIds':
          result.labelIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'stateEvent':
          result.stateEvent = serializers.deserialize(value,
                  specifiedType: const FullType(GIssueStateEvent))
              as GIssueStateEvent?;
          break;
        case 'healthStatus':
          result.healthStatus = serializers.deserialize(value,
              specifiedType: const FullType(GHealthStatus)) as GHealthStatus?;
          break;
        case 'weight':
          result.weight = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'epicId':
          result.epicId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GEpicID))! as GEpicID);
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateIterationInputSerializer
    implements StructuredSerializer<GUpdateIterationInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateIterationInput,
    _$GUpdateIterationInput
  ];
  @override
  final String wireName = 'GUpdateIterationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateIterationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'groupPath',
      serializers.serialize(object.groupPath,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dueDate;
    if (value != null) {
      result
        ..add('dueDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUpdateIterationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateIterationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDate':
          result.startDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dueDate':
          result.dueDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateNamespacePackageSettingsInputSerializer
    implements StructuredSerializer<GUpdateNamespacePackageSettingsInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateNamespacePackageSettingsInput,
    _$GUpdateNamespacePackageSettingsInput
  ];
  @override
  final String wireName = 'GUpdateNamespacePackageSettingsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateNamespacePackageSettingsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'namespacePath',
      serializers.serialize(object.namespacePath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.mavenDuplicatesAllowed;
    if (value != null) {
      result
        ..add('mavenDuplicatesAllowed')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.mavenDuplicateExceptionRegex;
    if (value != null) {
      result
        ..add('mavenDuplicateExceptionRegex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUntrustedRegexp)));
    }
    value = object.genericDuplicatesAllowed;
    if (value != null) {
      result
        ..add('genericDuplicatesAllowed')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.genericDuplicateExceptionRegex;
    if (value != null) {
      result
        ..add('genericDuplicateExceptionRegex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUntrustedRegexp)));
    }
    return result;
  }

  @override
  GUpdateNamespacePackageSettingsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateNamespacePackageSettingsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'namespacePath':
          result.namespacePath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'mavenDuplicatesAllowed':
          result.mavenDuplicatesAllowed = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'mavenDuplicateExceptionRegex':
          result.mavenDuplicateExceptionRegex.replace(serializers.deserialize(
                  value,
                  specifiedType: const FullType(GUntrustedRegexp))!
              as GUntrustedRegexp);
          break;
        case 'genericDuplicatesAllowed':
          result.genericDuplicatesAllowed = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'genericDuplicateExceptionRegex':
          result.genericDuplicateExceptionRegex.replace(serializers.deserialize(
                  value,
                  specifiedType: const FullType(GUntrustedRegexp))!
              as GUntrustedRegexp);
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateNoteInputSerializer
    implements StructuredSerializer<GUpdateNoteInput> {
  @override
  final Iterable<Type> types = const [GUpdateNoteInput, _$GUpdateNoteInput];
  @override
  final String wireName = 'GUpdateNoteInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUpdateNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(GNoteID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.body;
    if (value != null) {
      result
        ..add('body')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUpdateNoteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GNoteID))! as GNoteID);
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'body':
          result.body = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdatePackagesCleanupPolicyInputSerializer
    implements StructuredSerializer<GUpdatePackagesCleanupPolicyInput> {
  @override
  final Iterable<Type> types = const [
    GUpdatePackagesCleanupPolicyInput,
    _$GUpdatePackagesCleanupPolicyInput
  ];
  @override
  final String wireName = 'GUpdatePackagesCleanupPolicyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdatePackagesCleanupPolicyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.keepNDuplicatedPackageFiles;
    if (value != null) {
      result
        ..add('keepNDuplicatedPackageFiles')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GPackagesCleanupKeepDuplicatedPackageFilesEnum)));
    }
    return result;
  }

  @override
  GUpdatePackagesCleanupPolicyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdatePackagesCleanupPolicyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'keepNDuplicatedPackageFiles':
          result.keepNDuplicatedPackageFiles = serializers.deserialize(value,
                  specifiedType: const FullType(
                      GPackagesCleanupKeepDuplicatedPackageFilesEnum))
              as GPackagesCleanupKeepDuplicatedPackageFilesEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateRequirementInputSerializer
    implements StructuredSerializer<GUpdateRequirementInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateRequirementInput,
    _$GUpdateRequirementInput
  ];
  @override
  final String wireName = 'GUpdateRequirementInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateRequirementInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'iid',
      serializers.serialize(object.iid, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.state;
    if (value != null) {
      result
        ..add('state')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GRequirementState)));
    }
    value = object.lastTestReportState;
    if (value != null) {
      result
        ..add('lastTestReportState')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GTestReportState)));
    }
    return result;
  }

  @override
  GUpdateRequirementInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateRequirementInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'state':
          result.state = serializers.deserialize(value,
                  specifiedType: const FullType(GRequirementState))
              as GRequirementState?;
          break;
        case 'iid':
          result.iid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'lastTestReportState':
          result.lastTestReportState = serializers.deserialize(value,
                  specifiedType: const FullType(GTestReportState))
              as GTestReportState?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateSnippetInputSerializer
    implements StructuredSerializer<GUpdateSnippetInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateSnippetInput,
    _$GUpdateSnippetInput
  ];
  @override
  final String wireName = 'GUpdateSnippetInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateSnippetInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GSnippetID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.visibilityLevel;
    if (value != null) {
      result
        ..add('visibilityLevel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GVisibilityLevelsEnum)));
    }
    value = object.blobActions;
    if (value != null) {
      result
        ..add('blobActions')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GSnippetBlobActionInputType)])));
    }
    return result;
  }

  @override
  GUpdateSnippetInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateSnippetInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSnippetID))! as GSnippetID);
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'visibilityLevel':
          result.visibilityLevel = serializers.deserialize(value,
                  specifiedType: const FullType(GVisibilityLevelsEnum))
              as GVisibilityLevelsEnum?;
          break;
        case 'blobActions':
          result.blobActions.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GSnippetBlobActionInputType)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUploadDeleteInputSerializer
    implements StructuredSerializer<GUploadDeleteInput> {
  @override
  final Iterable<Type> types = const [GUploadDeleteInput, _$GUploadDeleteInput];
  @override
  final String wireName = 'GUploadDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUploadDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'secret',
      serializers.serialize(object.secret,
          specifiedType: const FullType(String)),
      'filename',
      serializers.serialize(object.filename,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.projectPath;
    if (value != null) {
      result
        ..add('projectPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.groupPath;
    if (value != null) {
      result
        ..add('groupPath')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUploadDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUploadDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'groupPath':
          result.groupPath = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'secret':
          result.secret = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'filename':
          result.filename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserCalloutCreateInputSerializer
    implements StructuredSerializer<GUserCalloutCreateInput> {
  @override
  final Iterable<Type> types = const [
    GUserCalloutCreateInput,
    _$GUserCalloutCreateInput
  ];
  @override
  final String wireName = 'GUserCalloutCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserCalloutCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'featureName',
      serializers.serialize(object.featureName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUserCalloutCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserCalloutCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'featureName':
          result.featureName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserCalloutFeatureNameEnumSerializer
    implements PrimitiveSerializer<GUserCalloutFeatureNameEnum> {
  @override
  final Iterable<Type> types = const <Type>[GUserCalloutFeatureNameEnum];
  @override
  final String wireName = 'GUserCalloutFeatureNameEnum';

  @override
  Object serialize(Serializers serializers, GUserCalloutFeatureNameEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GUserCalloutFeatureNameEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GUserCalloutFeatureNameEnum.valueOf(serialized as String);
}

class _$GUserPreferencesUpdateInputSerializer
    implements StructuredSerializer<GUserPreferencesUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GUserPreferencesUpdateInput,
    _$GUserPreferencesUpdateInput
  ];
  @override
  final String wireName = 'GUserPreferencesUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserPreferencesUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.issuesSort;
    if (value != null) {
      result
        ..add('issuesSort')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIssueSort)));
    }
    return result;
  }

  @override
  GUserPreferencesUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserPreferencesUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'issuesSort':
          result.issuesSort = serializers.deserialize(value,
              specifiedType: const FullType(GIssueSort)) as GIssueSort?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserStateSerializer implements PrimitiveSerializer<GUserState> {
  @override
  final Iterable<Type> types = const <Type>[GUserState];
  @override
  final String wireName = 'GUserState';

  @override
  Object serialize(Serializers serializers, GUserState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GUserState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GUserState.valueOf(serialized as String);
}

class _$GVerificationStateEnumSerializer
    implements PrimitiveSerializer<GVerificationStateEnum> {
  @override
  final Iterable<Type> types = const <Type>[GVerificationStateEnum];
  @override
  final String wireName = 'GVerificationStateEnum';

  @override
  Object serialize(Serializers serializers, GVerificationStateEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVerificationStateEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVerificationStateEnum.valueOf(serialized as String);
}

class _$GVisibilityLevelsEnumSerializer
    implements PrimitiveSerializer<GVisibilityLevelsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GVisibilityLevelsEnum];
  @override
  final String wireName = 'GVisibilityLevelsEnum';

  @override
  Object serialize(Serializers serializers, GVisibilityLevelsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVisibilityLevelsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVisibilityLevelsEnum.valueOf(serialized as String);
}

class _$GVisibilityScopesEnumSerializer
    implements PrimitiveSerializer<GVisibilityScopesEnum> {
  @override
  final Iterable<Type> types = const <Type>[GVisibilityScopesEnum];
  @override
  final String wireName = 'GVisibilityScopesEnum';

  @override
  Object serialize(Serializers serializers, GVisibilityScopesEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVisibilityScopesEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVisibilityScopesEnum.valueOf(serialized as String);
}

class _$GVulnerabilityConfidenceSerializer
    implements PrimitiveSerializer<GVulnerabilityConfidence> {
  @override
  final Iterable<Type> types = const <Type>[GVulnerabilityConfidence];
  @override
  final String wireName = 'GVulnerabilityConfidence';

  @override
  Object serialize(Serializers serializers, GVulnerabilityConfidence object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVulnerabilityConfidence deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVulnerabilityConfidence.valueOf(serialized as String);
}

class _$GVulnerabilityConfirmInputSerializer
    implements StructuredSerializer<GVulnerabilityConfirmInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityConfirmInput,
    _$GVulnerabilityConfirmInput
  ];
  @override
  final String wireName = 'GVulnerabilityConfirmInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVulnerabilityConfirmInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GVulnerabilityID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVulnerabilityConfirmInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityConfirmInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilityID))!
              as GVulnerabilityID);
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilityCreateInputSerializer
    implements StructuredSerializer<GVulnerabilityCreateInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityCreateInput,
    _$GVulnerabilityCreateInput
  ];
  @override
  final String wireName = 'GVulnerabilityCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVulnerabilityCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'project',
      serializers.serialize(object.project,
          specifiedType: const FullType(GProjectID)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'description',
      serializers.serialize(object.description,
          specifiedType: const FullType(String)),
      'scanner',
      serializers.serialize(object.scanner,
          specifiedType: const FullType(GVulnerabilityScannerInput)),
      'identifiers',
      serializers.serialize(object.identifiers,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GVulnerabilityIdentifierInput)])),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.state;
    if (value != null) {
      result
        ..add('state')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GVulnerabilityState)));
    }
    value = object.severity;
    if (value != null) {
      result
        ..add('severity')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GVulnerabilitySeverity)));
    }
    value = object.solution;
    if (value != null) {
      result
        ..add('solution')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.message;
    if (value != null) {
      result
        ..add('message')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.detectedAt;
    if (value != null) {
      result
        ..add('detectedAt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    value = object.resolvedAt;
    if (value != null) {
      result
        ..add('resolvedAt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    value = object.dismissedAt;
    if (value != null) {
      result
        ..add('dismissedAt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GTime)));
    }
    return result;
  }

  @override
  GVulnerabilityCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'project':
          result.project.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectID))! as GProjectID);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'scanner':
          result.scanner.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilityScannerInput))!
              as GVulnerabilityScannerInput);
          break;
        case 'identifiers':
          result.identifiers.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GVulnerabilityIdentifierInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'state':
          result.state = serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilityState))
              as GVulnerabilityState?;
          break;
        case 'severity':
          result.severity = serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilitySeverity))
              as GVulnerabilitySeverity?;
          break;
        case 'solution':
          result.solution = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'message':
          result.message = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'detectedAt':
          result.detectedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'confirmedAt':
          result.confirmedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'resolvedAt':
          result.resolvedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
        case 'dismissedAt':
          result.dismissedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GTime))! as GTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilityDismissalReasonSerializer
    implements PrimitiveSerializer<GVulnerabilityDismissalReason> {
  @override
  final Iterable<Type> types = const <Type>[GVulnerabilityDismissalReason];
  @override
  final String wireName = 'GVulnerabilityDismissalReason';

  @override
  Object serialize(
          Serializers serializers, GVulnerabilityDismissalReason object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVulnerabilityDismissalReason deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVulnerabilityDismissalReason.valueOf(serialized as String);
}

class _$GVulnerabilityDismissInputSerializer
    implements StructuredSerializer<GVulnerabilityDismissInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityDismissInput,
    _$GVulnerabilityDismissInput
  ];
  @override
  final String wireName = 'GVulnerabilityDismissInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVulnerabilityDismissInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GVulnerabilityID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dismissalReason;
    if (value != null) {
      result
        ..add('dismissalReason')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GVulnerabilityDismissalReason)));
    }
    return result;
  }

  @override
  GVulnerabilityDismissInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityDismissInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilityID))!
              as GVulnerabilityID);
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dismissalReason':
          result.dismissalReason = serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilityDismissalReason))
              as GVulnerabilityDismissalReason?;
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilityExternalIssueLinkCreateInputSerializer
    implements
        StructuredSerializer<GVulnerabilityExternalIssueLinkCreateInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityExternalIssueLinkCreateInput,
    _$GVulnerabilityExternalIssueLinkCreateInput
  ];
  @override
  final String wireName = 'GVulnerabilityExternalIssueLinkCreateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GVulnerabilityExternalIssueLinkCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GVulnerabilityID)),
      'linkType',
      serializers.serialize(object.linkType,
          specifiedType: const FullType(GVulnerabilityExternalIssueLinkType)),
      'externalTracker',
      serializers.serialize(object.externalTracker,
          specifiedType:
              const FullType(GVulnerabilityExternalIssueLinkExternalTracker)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVulnerabilityExternalIssueLinkCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityExternalIssueLinkCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilityID))!
              as GVulnerabilityID);
          break;
        case 'linkType':
          result.linkType = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GVulnerabilityExternalIssueLinkType))!
              as GVulnerabilityExternalIssueLinkType;
          break;
        case 'externalTracker':
          result.externalTracker = serializers.deserialize(value,
                  specifiedType: const FullType(
                      GVulnerabilityExternalIssueLinkExternalTracker))!
              as GVulnerabilityExternalIssueLinkExternalTracker;
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilityExternalIssueLinkDestroyInputSerializer
    implements
        StructuredSerializer<GVulnerabilityExternalIssueLinkDestroyInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityExternalIssueLinkDestroyInput,
    _$GVulnerabilityExternalIssueLinkDestroyInput
  ];
  @override
  final String wireName = 'GVulnerabilityExternalIssueLinkDestroyInput';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GVulnerabilityExternalIssueLinkDestroyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GVulnerabilitiesExternalIssueLinkID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVulnerabilityExternalIssueLinkDestroyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityExternalIssueLinkDestroyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GVulnerabilitiesExternalIssueLinkID))!
              as GVulnerabilitiesExternalIssueLinkID);
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilityExternalIssueLinkExternalTrackerSerializer
    implements
        PrimitiveSerializer<GVulnerabilityExternalIssueLinkExternalTracker> {
  @override
  final Iterable<Type> types = const <Type>[
    GVulnerabilityExternalIssueLinkExternalTracker
  ];
  @override
  final String wireName = 'GVulnerabilityExternalIssueLinkExternalTracker';

  @override
  Object serialize(Serializers serializers,
          GVulnerabilityExternalIssueLinkExternalTracker object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVulnerabilityExternalIssueLinkExternalTracker deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVulnerabilityExternalIssueLinkExternalTracker.valueOf(
          serialized as String);
}

class _$GVulnerabilityExternalIssueLinkTypeSerializer
    implements PrimitiveSerializer<GVulnerabilityExternalIssueLinkType> {
  @override
  final Iterable<Type> types = const <Type>[
    GVulnerabilityExternalIssueLinkType
  ];
  @override
  final String wireName = 'GVulnerabilityExternalIssueLinkType';

  @override
  Object serialize(
          Serializers serializers, GVulnerabilityExternalIssueLinkType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVulnerabilityExternalIssueLinkType deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVulnerabilityExternalIssueLinkType.valueOf(serialized as String);
}

class _$GVulnerabilityFindingDismissInputSerializer
    implements StructuredSerializer<GVulnerabilityFindingDismissInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityFindingDismissInput,
    _$GVulnerabilityFindingDismissInput
  ];
  @override
  final String wireName = 'GVulnerabilityFindingDismissInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVulnerabilityFindingDismissInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dismissalReason;
    if (value != null) {
      result
        ..add('dismissalReason')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GVulnerabilityDismissalReason)));
    }
    return result;
  }

  @override
  GVulnerabilityFindingDismissInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityFindingDismissInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'uuid':
          result.uuid = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dismissalReason':
          result.dismissalReason = serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilityDismissalReason))
              as GVulnerabilityDismissalReason?;
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilityGradeSerializer
    implements PrimitiveSerializer<GVulnerabilityGrade> {
  @override
  final Iterable<Type> types = const <Type>[GVulnerabilityGrade];
  @override
  final String wireName = 'GVulnerabilityGrade';

  @override
  Object serialize(Serializers serializers, GVulnerabilityGrade object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVulnerabilityGrade deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVulnerabilityGrade.valueOf(serialized as String);
}

class _$GVulnerabilityIdentifierInputSerializer
    implements StructuredSerializer<GVulnerabilityIdentifierInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityIdentifierInput,
    _$GVulnerabilityIdentifierInput
  ];
  @override
  final String wireName = 'GVulnerabilityIdentifierInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVulnerabilityIdentifierInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'url',
      serializers.serialize(object.url, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.externalType;
    if (value != null) {
      result
        ..add('externalType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.externalId;
    if (value != null) {
      result
        ..add('externalId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVulnerabilityIdentifierInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityIdentifierInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'externalType':
          result.externalType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'externalId':
          result.externalId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilityIssueLinkTypeSerializer
    implements PrimitiveSerializer<GVulnerabilityIssueLinkType> {
  @override
  final Iterable<Type> types = const <Type>[GVulnerabilityIssueLinkType];
  @override
  final String wireName = 'GVulnerabilityIssueLinkType';

  @override
  Object serialize(Serializers serializers, GVulnerabilityIssueLinkType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVulnerabilityIssueLinkType deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVulnerabilityIssueLinkType.valueOf(serialized as String);
}

class _$GVulnerabilityReportTypeSerializer
    implements PrimitiveSerializer<GVulnerabilityReportType> {
  @override
  final Iterable<Type> types = const <Type>[GVulnerabilityReportType];
  @override
  final String wireName = 'GVulnerabilityReportType';

  @override
  Object serialize(Serializers serializers, GVulnerabilityReportType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVulnerabilityReportType deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVulnerabilityReportType.valueOf(serialized as String);
}

class _$GVulnerabilityResolveInputSerializer
    implements StructuredSerializer<GVulnerabilityResolveInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityResolveInput,
    _$GVulnerabilityResolveInput
  ];
  @override
  final String wireName = 'GVulnerabilityResolveInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVulnerabilityResolveInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GVulnerabilityID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVulnerabilityResolveInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityResolveInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilityID))!
              as GVulnerabilityID);
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilityRevertToDetectedInputSerializer
    implements StructuredSerializer<GVulnerabilityRevertToDetectedInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityRevertToDetectedInput,
    _$GVulnerabilityRevertToDetectedInput
  ];
  @override
  final String wireName = 'GVulnerabilityRevertToDetectedInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVulnerabilityRevertToDetectedInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GVulnerabilityID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVulnerabilityRevertToDetectedInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityRevertToDetectedInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GVulnerabilityID))!
              as GVulnerabilityID);
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilityScannerInputSerializer
    implements StructuredSerializer<GVulnerabilityScannerInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityScannerInput,
    _$GVulnerabilityScannerInput
  ];
  @override
  final String wireName = 'GVulnerabilityScannerInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVulnerabilityScannerInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'url',
      serializers.serialize(object.url, specifiedType: const FullType(String)),
      'version',
      serializers.serialize(object.version,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.vendor;
    if (value != null) {
      result
        ..add('vendor')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GVulnerabilityScannerVendorInput)));
    }
    return result;
  }

  @override
  GVulnerabilityScannerInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityScannerInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'vendor':
          result.vendor.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GVulnerabilityScannerVendorInput))!
              as GVulnerabilityScannerVendorInput);
          break;
        case 'version':
          result.version = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilityScannerVendorInputSerializer
    implements StructuredSerializer<GVulnerabilityScannerVendorInput> {
  @override
  final Iterable<Type> types = const [
    GVulnerabilityScannerVendorInput,
    _$GVulnerabilityScannerVendorInput
  ];
  @override
  final String wireName = 'GVulnerabilityScannerVendorInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVulnerabilityScannerVendorInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GVulnerabilityScannerVendorInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVulnerabilityScannerVendorInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GVulnerabilitySeveritySerializer
    implements PrimitiveSerializer<GVulnerabilitySeverity> {
  @override
  final Iterable<Type> types = const <Type>[GVulnerabilitySeverity];
  @override
  final String wireName = 'GVulnerabilitySeverity';

  @override
  Object serialize(Serializers serializers, GVulnerabilitySeverity object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVulnerabilitySeverity deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVulnerabilitySeverity.valueOf(serialized as String);
}

class _$GVulnerabilitySortSerializer
    implements PrimitiveSerializer<GVulnerabilitySort> {
  @override
  final Iterable<Type> types = const <Type>[GVulnerabilitySort];
  @override
  final String wireName = 'GVulnerabilitySort';

  @override
  Object serialize(Serializers serializers, GVulnerabilitySort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVulnerabilitySort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVulnerabilitySort.valueOf(serialized as String);
}

class _$GVulnerabilityStateSerializer
    implements PrimitiveSerializer<GVulnerabilityState> {
  @override
  final Iterable<Type> types = const <Type>[GVulnerabilityState];
  @override
  final String wireName = 'GVulnerabilityState';

  @override
  Object serialize(Serializers serializers, GVulnerabilityState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVulnerabilityState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVulnerabilityState.valueOf(serialized as String);
}

class _$GWeightWildcardIdSerializer
    implements PrimitiveSerializer<GWeightWildcardId> {
  @override
  final Iterable<Type> types = const <Type>[GWeightWildcardId];
  @override
  final String wireName = 'GWeightWildcardId';

  @override
  Object serialize(Serializers serializers, GWeightWildcardId object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWeightWildcardId deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWeightWildcardId.valueOf(serialized as String);
}

class _$GWorkItemConvertTaskInputSerializer
    implements StructuredSerializer<GWorkItemConvertTaskInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemConvertTaskInput,
    _$GWorkItemConvertTaskInput
  ];
  @override
  final String wireName = 'GWorkItemConvertTaskInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemConvertTaskInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'lineNumberEnd',
      serializers.serialize(object.lineNumberEnd,
          specifiedType: const FullType(int)),
      'lineNumberStart',
      serializers.serialize(object.lineNumberStart,
          specifiedType: const FullType(int)),
      'lockVersion',
      serializers.serialize(object.lockVersion,
          specifiedType: const FullType(int)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'workItemTypeId',
      serializers.serialize(object.workItemTypeId,
          specifiedType: const FullType(GWorkItemsTypeID)),
    ];

    return result;
  }

  @override
  GWorkItemConvertTaskInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemConvertTaskInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'lineNumberEnd':
          result.lineNumberEnd = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'lineNumberStart':
          result.lineNumberStart = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'lockVersion':
          result.lockVersion = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'workItemTypeId':
          result.workItemTypeId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemsTypeID))!
              as GWorkItemsTypeID);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemCreateFromTaskInputSerializer
    implements StructuredSerializer<GWorkItemCreateFromTaskInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemCreateFromTaskInput,
    _$GWorkItemCreateFromTaskInput
  ];
  @override
  final String wireName = 'GWorkItemCreateFromTaskInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemCreateFromTaskInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GWorkItemID)),
      'workItemData',
      serializers.serialize(object.workItemData,
          specifiedType: const FullType(GWorkItemConvertTaskInput)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GWorkItemCreateFromTaskInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemCreateFromTaskInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWorkItemID))! as GWorkItemID);
          break;
        case 'workItemData':
          result.workItemData.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemConvertTaskInput))!
              as GWorkItemConvertTaskInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemCreateInputSerializer
    implements StructuredSerializer<GWorkItemCreateInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemCreateInput,
    _$GWorkItemCreateInput
  ];
  @override
  final String wireName = 'GWorkItemCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'projectPath',
      serializers.serialize(object.projectPath,
          specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'workItemTypeId',
      serializers.serialize(object.workItemTypeId,
          specifiedType: const FullType(GWorkItemsTypeID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.confidential;
    if (value != null) {
      result
        ..add('confidential')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.hierarchyWidget;
    if (value != null) {
      result
        ..add('hierarchyWidget')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GWorkItemWidgetHierarchyCreateInput)));
    }
    return result;
  }

  @override
  GWorkItemCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'confidential':
          result.confidential = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'hierarchyWidget':
          result.hierarchyWidget.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GWorkItemWidgetHierarchyCreateInput))!
              as GWorkItemWidgetHierarchyCreateInput);
          break;
        case 'projectPath':
          result.projectPath = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'workItemTypeId':
          result.workItemTypeId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemsTypeID))!
              as GWorkItemsTypeID);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemDeletedTaskInputSerializer
    implements StructuredSerializer<GWorkItemDeletedTaskInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemDeletedTaskInput,
    _$GWorkItemDeletedTaskInput
  ];
  @override
  final String wireName = 'GWorkItemDeletedTaskInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemDeletedTaskInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GWorkItemID)),
      'lineNumberEnd',
      serializers.serialize(object.lineNumberEnd,
          specifiedType: const FullType(int)),
      'lineNumberStart',
      serializers.serialize(object.lineNumberStart,
          specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  GWorkItemDeletedTaskInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemDeletedTaskInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWorkItemID))! as GWorkItemID);
          break;
        case 'lineNumberEnd':
          result.lineNumberEnd = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'lineNumberStart':
          result.lineNumberStart = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemDeleteInputSerializer
    implements StructuredSerializer<GWorkItemDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemDeleteInput,
    _$GWorkItemDeleteInput
  ];
  @override
  final String wireName = 'GWorkItemDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GWorkItemID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GWorkItemDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWorkItemID))! as GWorkItemID);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemDeleteTaskInputSerializer
    implements StructuredSerializer<GWorkItemDeleteTaskInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemDeleteTaskInput,
    _$GWorkItemDeleteTaskInput
  ];
  @override
  final String wireName = 'GWorkItemDeleteTaskInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemDeleteTaskInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GWorkItemID)),
      'lockVersion',
      serializers.serialize(object.lockVersion,
          specifiedType: const FullType(int)),
      'taskData',
      serializers.serialize(object.taskData,
          specifiedType: const FullType(GWorkItemDeletedTaskInput)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GWorkItemDeleteTaskInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemDeleteTaskInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWorkItemID))! as GWorkItemID);
          break;
        case 'lockVersion':
          result.lockVersion = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'taskData':
          result.taskData.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemDeletedTaskInput))!
              as GWorkItemDeletedTaskInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemSortSerializer implements PrimitiveSerializer<GWorkItemSort> {
  @override
  final Iterable<Type> types = const <Type>[GWorkItemSort];
  @override
  final String wireName = 'GWorkItemSort';

  @override
  Object serialize(Serializers serializers, GWorkItemSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWorkItemSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWorkItemSort.valueOf(serialized as String);
}

class _$GWorkItemStateSerializer
    implements PrimitiveSerializer<GWorkItemState> {
  @override
  final Iterable<Type> types = const <Type>[GWorkItemState];
  @override
  final String wireName = 'GWorkItemState';

  @override
  Object serialize(Serializers serializers, GWorkItemState object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWorkItemState deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWorkItemState.valueOf(serialized as String);
}

class _$GWorkItemStateEventSerializer
    implements PrimitiveSerializer<GWorkItemStateEvent> {
  @override
  final Iterable<Type> types = const <Type>[GWorkItemStateEvent];
  @override
  final String wireName = 'GWorkItemStateEvent';

  @override
  Object serialize(Serializers serializers, GWorkItemStateEvent object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWorkItemStateEvent deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWorkItemStateEvent.valueOf(serialized as String);
}

class _$GWorkItemUpdatedTaskInputSerializer
    implements StructuredSerializer<GWorkItemUpdatedTaskInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemUpdatedTaskInput,
    _$GWorkItemUpdatedTaskInput
  ];
  @override
  final String wireName = 'GWorkItemUpdatedTaskInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemUpdatedTaskInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GWorkItemID)),
    ];
    Object? value;
    value = object.stateEvent;
    if (value != null) {
      result
        ..add('stateEvent')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWorkItemStateEvent)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.confidential;
    if (value != null) {
      result
        ..add('confidential')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.descriptionWidget;
    if (value != null) {
      result
        ..add('descriptionWidget')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWorkItemWidgetDescriptionInput)));
    }
    value = object.assigneesWidget;
    if (value != null) {
      result
        ..add('assigneesWidget')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWorkItemWidgetAssigneesInput)));
    }
    value = object.hierarchyWidget;
    if (value != null) {
      result
        ..add('hierarchyWidget')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GWorkItemWidgetHierarchyUpdateInput)));
    }
    value = object.startAndDueDateWidget;
    if (value != null) {
      result
        ..add('startAndDueDateWidget')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GWorkItemWidgetStartAndDueDateUpdateInput)));
    }
    return result;
  }

  @override
  GWorkItemUpdatedTaskInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemUpdatedTaskInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWorkItemID))! as GWorkItemID);
          break;
        case 'stateEvent':
          result.stateEvent = serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemStateEvent))
              as GWorkItemStateEvent?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'confidential':
          result.confidential = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'descriptionWidget':
          result.descriptionWidget.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GWorkItemWidgetDescriptionInput))!
              as GWorkItemWidgetDescriptionInput);
          break;
        case 'assigneesWidget':
          result.assigneesWidget.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemWidgetAssigneesInput))!
              as GWorkItemWidgetAssigneesInput);
          break;
        case 'hierarchyWidget':
          result.hierarchyWidget.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GWorkItemWidgetHierarchyUpdateInput))!
              as GWorkItemWidgetHierarchyUpdateInput);
          break;
        case 'startAndDueDateWidget':
          result.startAndDueDateWidget.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GWorkItemWidgetStartAndDueDateUpdateInput))!
              as GWorkItemWidgetStartAndDueDateUpdateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemUpdateInputSerializer
    implements StructuredSerializer<GWorkItemUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemUpdateInput,
    _$GWorkItemUpdateInput
  ];
  @override
  final String wireName = 'GWorkItemUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GWorkItemID)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.stateEvent;
    if (value != null) {
      result
        ..add('stateEvent')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWorkItemStateEvent)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.confidential;
    if (value != null) {
      result
        ..add('confidential')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.descriptionWidget;
    if (value != null) {
      result
        ..add('descriptionWidget')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWorkItemWidgetDescriptionInput)));
    }
    value = object.assigneesWidget;
    if (value != null) {
      result
        ..add('assigneesWidget')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWorkItemWidgetAssigneesInput)));
    }
    value = object.hierarchyWidget;
    if (value != null) {
      result
        ..add('hierarchyWidget')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GWorkItemWidgetHierarchyUpdateInput)));
    }
    value = object.startAndDueDateWidget;
    if (value != null) {
      result
        ..add('startAndDueDateWidget')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GWorkItemWidgetStartAndDueDateUpdateInput)));
    }
    value = object.iterationWidget;
    if (value != null) {
      result
        ..add('iterationWidget')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWorkItemWidgetIterationInput)));
    }
    value = object.weightWidget;
    if (value != null) {
      result
        ..add('weightWidget')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWorkItemWidgetWeightInput)));
    }
    return result;
  }

  @override
  GWorkItemUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWorkItemID))! as GWorkItemID);
          break;
        case 'stateEvent':
          result.stateEvent = serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemStateEvent))
              as GWorkItemStateEvent?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'confidential':
          result.confidential = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'descriptionWidget':
          result.descriptionWidget.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GWorkItemWidgetDescriptionInput))!
              as GWorkItemWidgetDescriptionInput);
          break;
        case 'assigneesWidget':
          result.assigneesWidget.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemWidgetAssigneesInput))!
              as GWorkItemWidgetAssigneesInput);
          break;
        case 'hierarchyWidget':
          result.hierarchyWidget.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GWorkItemWidgetHierarchyUpdateInput))!
              as GWorkItemWidgetHierarchyUpdateInput);
          break;
        case 'startAndDueDateWidget':
          result.startAndDueDateWidget.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GWorkItemWidgetStartAndDueDateUpdateInput))!
              as GWorkItemWidgetStartAndDueDateUpdateInput);
          break;
        case 'iterationWidget':
          result.iterationWidget.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemWidgetIterationInput))!
              as GWorkItemWidgetIterationInput);
          break;
        case 'weightWidget':
          result.weightWidget.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemWidgetWeightInput))!
              as GWorkItemWidgetWeightInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemUpdateTaskInputSerializer
    implements StructuredSerializer<GWorkItemUpdateTaskInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemUpdateTaskInput,
    _$GWorkItemUpdateTaskInput
  ];
  @override
  final String wireName = 'GWorkItemUpdateTaskInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemUpdateTaskInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id,
          specifiedType: const FullType(GWorkItemID)),
      'taskData',
      serializers.serialize(object.taskData,
          specifiedType: const FullType(GWorkItemUpdatedTaskInput)),
    ];
    Object? value;
    value = object.clientMutationId;
    if (value != null) {
      result
        ..add('clientMutationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GWorkItemUpdateTaskInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemUpdateTaskInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clientMutationId':
          result.clientMutationId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWorkItemID))! as GWorkItemID);
          break;
        case 'taskData':
          result.taskData.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWorkItemUpdatedTaskInput))!
              as GWorkItemUpdatedTaskInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemWidgetAssigneesInputSerializer
    implements StructuredSerializer<GWorkItemWidgetAssigneesInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemWidgetAssigneesInput,
    _$GWorkItemWidgetAssigneesInput
  ];
  @override
  final String wireName = 'GWorkItemWidgetAssigneesInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemWidgetAssigneesInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'assigneeIds',
      serializers.serialize(object.assigneeIds,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GUserID)])),
    ];

    return result;
  }

  @override
  GWorkItemWidgetAssigneesInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemWidgetAssigneesInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'assigneeIds':
          result.assigneeIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GUserID)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemWidgetDescriptionInputSerializer
    implements StructuredSerializer<GWorkItemWidgetDescriptionInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemWidgetDescriptionInput,
    _$GWorkItemWidgetDescriptionInput
  ];
  @override
  final String wireName = 'GWorkItemWidgetDescriptionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemWidgetDescriptionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'description',
      serializers.serialize(object.description,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GWorkItemWidgetDescriptionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemWidgetDescriptionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemWidgetHierarchyCreateInputSerializer
    implements StructuredSerializer<GWorkItemWidgetHierarchyCreateInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemWidgetHierarchyCreateInput,
    _$GWorkItemWidgetHierarchyCreateInput
  ];
  @override
  final String wireName = 'GWorkItemWidgetHierarchyCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemWidgetHierarchyCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.parentId;
    if (value != null) {
      result
        ..add('parentId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWorkItemID)));
    }
    return result;
  }

  @override
  GWorkItemWidgetHierarchyCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemWidgetHierarchyCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'parentId':
          result.parentId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWorkItemID))! as GWorkItemID);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemWidgetHierarchyUpdateInputSerializer
    implements StructuredSerializer<GWorkItemWidgetHierarchyUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemWidgetHierarchyUpdateInput,
    _$GWorkItemWidgetHierarchyUpdateInput
  ];
  @override
  final String wireName = 'GWorkItemWidgetHierarchyUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemWidgetHierarchyUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.parentId;
    if (value != null) {
      result
        ..add('parentId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWorkItemID)));
    }
    value = object.childrenIds;
    if (value != null) {
      result
        ..add('childrenIds')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GWorkItemID)])));
    }
    return result;
  }

  @override
  GWorkItemWidgetHierarchyUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemWidgetHierarchyUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'parentId':
          result.parentId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWorkItemID))! as GWorkItemID);
          break;
        case 'childrenIds':
          result.childrenIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GWorkItemID)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemWidgetIterationInputSerializer
    implements StructuredSerializer<GWorkItemWidgetIterationInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemWidgetIterationInput,
    _$GWorkItemWidgetIterationInput
  ];
  @override
  final String wireName = 'GWorkItemWidgetIterationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemWidgetIterationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.iterationId;
    if (value != null) {
      result
        ..add('iterationId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIterationID)));
    }
    return result;
  }

  @override
  GWorkItemWidgetIterationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemWidgetIterationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'iterationId':
          result.iterationId.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIterationID))! as GIterationID);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemWidgetStartAndDueDateUpdateInputSerializer
    implements StructuredSerializer<GWorkItemWidgetStartAndDueDateUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemWidgetStartAndDueDateUpdateInput,
    _$GWorkItemWidgetStartAndDueDateUpdateInput
  ];
  @override
  final String wireName = 'GWorkItemWidgetStartAndDueDateUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemWidgetStartAndDueDateUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.dueDate;
    if (value != null) {
      result
        ..add('dueDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    return result;
  }

  @override
  GWorkItemWidgetStartAndDueDateUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemWidgetStartAndDueDateUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'dueDate':
          result.dueDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
      }
    }

    return result.build();
  }
}

class _$GWorkItemWidgetTypeSerializer
    implements PrimitiveSerializer<GWorkItemWidgetType> {
  @override
  final Iterable<Type> types = const <Type>[GWorkItemWidgetType];
  @override
  final String wireName = 'GWorkItemWidgetType';

  @override
  Object serialize(Serializers serializers, GWorkItemWidgetType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWorkItemWidgetType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWorkItemWidgetType.valueOf(serialized as String);
}

class _$GWorkItemWidgetWeightInputSerializer
    implements StructuredSerializer<GWorkItemWidgetWeightInput> {
  @override
  final Iterable<Type> types = const [
    GWorkItemWidgetWeightInput,
    _$GWorkItemWidgetWeightInput
  ];
  @override
  final String wireName = 'GWorkItemWidgetWeightInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWorkItemWidgetWeightInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GWorkItemWidgetWeightInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWorkItemWidgetWeightInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'weight':
          result.weight = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAddProjectToSecurityDashboardInput
    extends GAddProjectToSecurityDashboardInput {
  @override
  final String? clientMutationId;
  @override
  final GProjectID id;

  factory _$GAddProjectToSecurityDashboardInput(
          [void Function(GAddProjectToSecurityDashboardInputBuilder)?
              updates]) =>
      (new GAddProjectToSecurityDashboardInputBuilder()..update(updates))
          ._build();

  _$GAddProjectToSecurityDashboardInput._(
      {this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GAddProjectToSecurityDashboardInput', 'id');
  }

  @override
  GAddProjectToSecurityDashboardInput rebuild(
          void Function(GAddProjectToSecurityDashboardInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAddProjectToSecurityDashboardInputBuilder toBuilder() =>
      new GAddProjectToSecurityDashboardInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAddProjectToSecurityDashboardInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAddProjectToSecurityDashboardInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GAddProjectToSecurityDashboardInputBuilder
    implements
        Builder<GAddProjectToSecurityDashboardInput,
            GAddProjectToSecurityDashboardInputBuilder> {
  _$GAddProjectToSecurityDashboardInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GProjectIDBuilder? _id;
  GProjectIDBuilder get id => _$this._id ??= new GProjectIDBuilder();
  set id(GProjectIDBuilder? id) => _$this._id = id;

  GAddProjectToSecurityDashboardInputBuilder();

  GAddProjectToSecurityDashboardInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAddProjectToSecurityDashboardInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAddProjectToSecurityDashboardInput;
  }

  @override
  void update(
      void Function(GAddProjectToSecurityDashboardInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAddProjectToSecurityDashboardInput build() => _build();

  _$GAddProjectToSecurityDashboardInput _build() {
    _$GAddProjectToSecurityDashboardInput _$result;
    try {
      _$result = _$v ??
          new _$GAddProjectToSecurityDashboardInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAddProjectToSecurityDashboardInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAdminSidekiqQueuesDeleteJobsInput
    extends GAdminSidekiqQueuesDeleteJobsInput {
  @override
  final String? clientMutationId;
  @override
  final String? user;
  @override
  final String? project;
  @override
  final String? rootNamespace;
  @override
  final String? clientId;
  @override
  final String? callerId;
  @override
  final String? remoteIp;
  @override
  final String? jobId;
  @override
  final String? pipelineId;
  @override
  final String? relatedClass;
  @override
  final String? featureCategory;
  @override
  final String? artifactSize;
  @override
  final String? artifactUsedCdn;
  @override
  final String? artifactsDependenciesSize;
  @override
  final String? artifactsDependenciesCount;
  @override
  final String? rootCallerId;
  @override
  final String? subscriptionPlan;
  @override
  final String? workerClass;
  @override
  final String queueName;

  factory _$GAdminSidekiqQueuesDeleteJobsInput(
          [void Function(GAdminSidekiqQueuesDeleteJobsInputBuilder)?
              updates]) =>
      (new GAdminSidekiqQueuesDeleteJobsInputBuilder()..update(updates))
          ._build();

  _$GAdminSidekiqQueuesDeleteJobsInput._(
      {this.clientMutationId,
      this.user,
      this.project,
      this.rootNamespace,
      this.clientId,
      this.callerId,
      this.remoteIp,
      this.jobId,
      this.pipelineId,
      this.relatedClass,
      this.featureCategory,
      this.artifactSize,
      this.artifactUsedCdn,
      this.artifactsDependenciesSize,
      this.artifactsDependenciesCount,
      this.rootCallerId,
      this.subscriptionPlan,
      this.workerClass,
      required this.queueName})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        queueName, r'GAdminSidekiqQueuesDeleteJobsInput', 'queueName');
  }

  @override
  GAdminSidekiqQueuesDeleteJobsInput rebuild(
          void Function(GAdminSidekiqQueuesDeleteJobsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAdminSidekiqQueuesDeleteJobsInputBuilder toBuilder() =>
      new GAdminSidekiqQueuesDeleteJobsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAdminSidekiqQueuesDeleteJobsInput &&
        clientMutationId == other.clientMutationId &&
        user == other.user &&
        project == other.project &&
        rootNamespace == other.rootNamespace &&
        clientId == other.clientId &&
        callerId == other.callerId &&
        remoteIp == other.remoteIp &&
        jobId == other.jobId &&
        pipelineId == other.pipelineId &&
        relatedClass == other.relatedClass &&
        featureCategory == other.featureCategory &&
        artifactSize == other.artifactSize &&
        artifactUsedCdn == other.artifactUsedCdn &&
        artifactsDependenciesSize == other.artifactsDependenciesSize &&
        artifactsDependenciesCount == other.artifactsDependenciesCount &&
        rootCallerId == other.rootCallerId &&
        subscriptionPlan == other.subscriptionPlan &&
        workerClass == other.workerClass &&
        queueName == other.queueName;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc(
                                                                                0,
                                                                                clientMutationId
                                                                                    .hashCode),
                                                                            user
                                                                                .hashCode),
                                                                        project
                                                                            .hashCode),
                                                                    rootNamespace
                                                                        .hashCode),
                                                                clientId
                                                                    .hashCode),
                                                            callerId.hashCode),
                                                        remoteIp.hashCode),
                                                    jobId.hashCode),
                                                pipelineId.hashCode),
                                            relatedClass.hashCode),
                                        featureCategory.hashCode),
                                    artifactSize.hashCode),
                                artifactUsedCdn.hashCode),
                            artifactsDependenciesSize.hashCode),
                        artifactsDependenciesCount.hashCode),
                    rootCallerId.hashCode),
                subscriptionPlan.hashCode),
            workerClass.hashCode),
        queueName.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAdminSidekiqQueuesDeleteJobsInput')
          ..add('clientMutationId', clientMutationId)
          ..add('user', user)
          ..add('project', project)
          ..add('rootNamespace', rootNamespace)
          ..add('clientId', clientId)
          ..add('callerId', callerId)
          ..add('remoteIp', remoteIp)
          ..add('jobId', jobId)
          ..add('pipelineId', pipelineId)
          ..add('relatedClass', relatedClass)
          ..add('featureCategory', featureCategory)
          ..add('artifactSize', artifactSize)
          ..add('artifactUsedCdn', artifactUsedCdn)
          ..add('artifactsDependenciesSize', artifactsDependenciesSize)
          ..add('artifactsDependenciesCount', artifactsDependenciesCount)
          ..add('rootCallerId', rootCallerId)
          ..add('subscriptionPlan', subscriptionPlan)
          ..add('workerClass', workerClass)
          ..add('queueName', queueName))
        .toString();
  }
}

class GAdminSidekiqQueuesDeleteJobsInputBuilder
    implements
        Builder<GAdminSidekiqQueuesDeleteJobsInput,
            GAdminSidekiqQueuesDeleteJobsInputBuilder> {
  _$GAdminSidekiqQueuesDeleteJobsInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _user;
  String? get user => _$this._user;
  set user(String? user) => _$this._user = user;

  String? _project;
  String? get project => _$this._project;
  set project(String? project) => _$this._project = project;

  String? _rootNamespace;
  String? get rootNamespace => _$this._rootNamespace;
  set rootNamespace(String? rootNamespace) =>
      _$this._rootNamespace = rootNamespace;

  String? _clientId;
  String? get clientId => _$this._clientId;
  set clientId(String? clientId) => _$this._clientId = clientId;

  String? _callerId;
  String? get callerId => _$this._callerId;
  set callerId(String? callerId) => _$this._callerId = callerId;

  String? _remoteIp;
  String? get remoteIp => _$this._remoteIp;
  set remoteIp(String? remoteIp) => _$this._remoteIp = remoteIp;

  String? _jobId;
  String? get jobId => _$this._jobId;
  set jobId(String? jobId) => _$this._jobId = jobId;

  String? _pipelineId;
  String? get pipelineId => _$this._pipelineId;
  set pipelineId(String? pipelineId) => _$this._pipelineId = pipelineId;

  String? _relatedClass;
  String? get relatedClass => _$this._relatedClass;
  set relatedClass(String? relatedClass) => _$this._relatedClass = relatedClass;

  String? _featureCategory;
  String? get featureCategory => _$this._featureCategory;
  set featureCategory(String? featureCategory) =>
      _$this._featureCategory = featureCategory;

  String? _artifactSize;
  String? get artifactSize => _$this._artifactSize;
  set artifactSize(String? artifactSize) => _$this._artifactSize = artifactSize;

  String? _artifactUsedCdn;
  String? get artifactUsedCdn => _$this._artifactUsedCdn;
  set artifactUsedCdn(String? artifactUsedCdn) =>
      _$this._artifactUsedCdn = artifactUsedCdn;

  String? _artifactsDependenciesSize;
  String? get artifactsDependenciesSize => _$this._artifactsDependenciesSize;
  set artifactsDependenciesSize(String? artifactsDependenciesSize) =>
      _$this._artifactsDependenciesSize = artifactsDependenciesSize;

  String? _artifactsDependenciesCount;
  String? get artifactsDependenciesCount => _$this._artifactsDependenciesCount;
  set artifactsDependenciesCount(String? artifactsDependenciesCount) =>
      _$this._artifactsDependenciesCount = artifactsDependenciesCount;

  String? _rootCallerId;
  String? get rootCallerId => _$this._rootCallerId;
  set rootCallerId(String? rootCallerId) => _$this._rootCallerId = rootCallerId;

  String? _subscriptionPlan;
  String? get subscriptionPlan => _$this._subscriptionPlan;
  set subscriptionPlan(String? subscriptionPlan) =>
      _$this._subscriptionPlan = subscriptionPlan;

  String? _workerClass;
  String? get workerClass => _$this._workerClass;
  set workerClass(String? workerClass) => _$this._workerClass = workerClass;

  String? _queueName;
  String? get queueName => _$this._queueName;
  set queueName(String? queueName) => _$this._queueName = queueName;

  GAdminSidekiqQueuesDeleteJobsInputBuilder();

  GAdminSidekiqQueuesDeleteJobsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _user = $v.user;
      _project = $v.project;
      _rootNamespace = $v.rootNamespace;
      _clientId = $v.clientId;
      _callerId = $v.callerId;
      _remoteIp = $v.remoteIp;
      _jobId = $v.jobId;
      _pipelineId = $v.pipelineId;
      _relatedClass = $v.relatedClass;
      _featureCategory = $v.featureCategory;
      _artifactSize = $v.artifactSize;
      _artifactUsedCdn = $v.artifactUsedCdn;
      _artifactsDependenciesSize = $v.artifactsDependenciesSize;
      _artifactsDependenciesCount = $v.artifactsDependenciesCount;
      _rootCallerId = $v.rootCallerId;
      _subscriptionPlan = $v.subscriptionPlan;
      _workerClass = $v.workerClass;
      _queueName = $v.queueName;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAdminSidekiqQueuesDeleteJobsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAdminSidekiqQueuesDeleteJobsInput;
  }

  @override
  void update(
      void Function(GAdminSidekiqQueuesDeleteJobsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAdminSidekiqQueuesDeleteJobsInput build() => _build();

  _$GAdminSidekiqQueuesDeleteJobsInput _build() {
    final _$result = _$v ??
        new _$GAdminSidekiqQueuesDeleteJobsInput._(
            clientMutationId: clientMutationId,
            user: user,
            project: project,
            rootNamespace: rootNamespace,
            clientId: clientId,
            callerId: callerId,
            remoteIp: remoteIp,
            jobId: jobId,
            pipelineId: pipelineId,
            relatedClass: relatedClass,
            featureCategory: featureCategory,
            artifactSize: artifactSize,
            artifactUsedCdn: artifactUsedCdn,
            artifactsDependenciesSize: artifactsDependenciesSize,
            artifactsDependenciesCount: artifactsDependenciesCount,
            rootCallerId: rootCallerId,
            subscriptionPlan: subscriptionPlan,
            workerClass: workerClass,
            queueName: BuiltValueNullFieldError.checkNotNull(
                queueName, r'GAdminSidekiqQueuesDeleteJobsInput', 'queueName'));
    replace(_$result);
    return _$result;
  }
}

class _$GAlertManagementHttpIntegrationID
    extends GAlertManagementHttpIntegrationID {
  @override
  final String value;

  factory _$GAlertManagementHttpIntegrationID(
          [void Function(GAlertManagementHttpIntegrationIDBuilder)? updates]) =>
      (new GAlertManagementHttpIntegrationIDBuilder()..update(updates))
          ._build();

  _$GAlertManagementHttpIntegrationID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GAlertManagementHttpIntegrationID', 'value');
  }

  @override
  GAlertManagementHttpIntegrationID rebuild(
          void Function(GAlertManagementHttpIntegrationIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAlertManagementHttpIntegrationIDBuilder toBuilder() =>
      new GAlertManagementHttpIntegrationIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAlertManagementHttpIntegrationID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAlertManagementHttpIntegrationID')
          ..add('value', value))
        .toString();
  }
}

class GAlertManagementHttpIntegrationIDBuilder
    implements
        Builder<GAlertManagementHttpIntegrationID,
            GAlertManagementHttpIntegrationIDBuilder> {
  _$GAlertManagementHttpIntegrationID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GAlertManagementHttpIntegrationIDBuilder();

  GAlertManagementHttpIntegrationIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAlertManagementHttpIntegrationID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAlertManagementHttpIntegrationID;
  }

  @override
  void update(
      void Function(GAlertManagementHttpIntegrationIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAlertManagementHttpIntegrationID build() => _build();

  _$GAlertManagementHttpIntegrationID _build() {
    final _$result = _$v ??
        new _$GAlertManagementHttpIntegrationID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GAlertManagementHttpIntegrationID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GAlertManagementPayloadAlertFieldInput
    extends GAlertManagementPayloadAlertFieldInput {
  @override
  final GAlertManagementPayloadAlertFieldName fieldName;
  @override
  final BuiltList<GPayloadAlertFieldPathSegment> path;
  @override
  final String? label;
  @override
  final GAlertManagementPayloadAlertFieldType type;

  factory _$GAlertManagementPayloadAlertFieldInput(
          [void Function(GAlertManagementPayloadAlertFieldInputBuilder)?
              updates]) =>
      (new GAlertManagementPayloadAlertFieldInputBuilder()..update(updates))
          ._build();

  _$GAlertManagementPayloadAlertFieldInput._(
      {required this.fieldName,
      required this.path,
      this.label,
      required this.type})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fieldName, r'GAlertManagementPayloadAlertFieldInput', 'fieldName');
    BuiltValueNullFieldError.checkNotNull(
        path, r'GAlertManagementPayloadAlertFieldInput', 'path');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GAlertManagementPayloadAlertFieldInput', 'type');
  }

  @override
  GAlertManagementPayloadAlertFieldInput rebuild(
          void Function(GAlertManagementPayloadAlertFieldInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAlertManagementPayloadAlertFieldInputBuilder toBuilder() =>
      new GAlertManagementPayloadAlertFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAlertManagementPayloadAlertFieldInput &&
        fieldName == other.fieldName &&
        path == other.path &&
        label == other.label &&
        type == other.type;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, fieldName.hashCode), path.hashCode), label.hashCode),
        type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GAlertManagementPayloadAlertFieldInput')
          ..add('fieldName', fieldName)
          ..add('path', path)
          ..add('label', label)
          ..add('type', type))
        .toString();
  }
}

class GAlertManagementPayloadAlertFieldInputBuilder
    implements
        Builder<GAlertManagementPayloadAlertFieldInput,
            GAlertManagementPayloadAlertFieldInputBuilder> {
  _$GAlertManagementPayloadAlertFieldInput? _$v;

  GAlertManagementPayloadAlertFieldName? _fieldName;
  GAlertManagementPayloadAlertFieldName? get fieldName => _$this._fieldName;
  set fieldName(GAlertManagementPayloadAlertFieldName? fieldName) =>
      _$this._fieldName = fieldName;

  ListBuilder<GPayloadAlertFieldPathSegment>? _path;
  ListBuilder<GPayloadAlertFieldPathSegment> get path =>
      _$this._path ??= new ListBuilder<GPayloadAlertFieldPathSegment>();
  set path(ListBuilder<GPayloadAlertFieldPathSegment>? path) =>
      _$this._path = path;

  String? _label;
  String? get label => _$this._label;
  set label(String? label) => _$this._label = label;

  GAlertManagementPayloadAlertFieldType? _type;
  GAlertManagementPayloadAlertFieldType? get type => _$this._type;
  set type(GAlertManagementPayloadAlertFieldType? type) => _$this._type = type;

  GAlertManagementPayloadAlertFieldInputBuilder();

  GAlertManagementPayloadAlertFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _fieldName = $v.fieldName;
      _path = $v.path.toBuilder();
      _label = $v.label;
      _type = $v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAlertManagementPayloadAlertFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAlertManagementPayloadAlertFieldInput;
  }

  @override
  void update(
      void Function(GAlertManagementPayloadAlertFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAlertManagementPayloadAlertFieldInput build() => _build();

  _$GAlertManagementPayloadAlertFieldInput _build() {
    _$GAlertManagementPayloadAlertFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GAlertManagementPayloadAlertFieldInput._(
              fieldName: BuiltValueNullFieldError.checkNotNull(fieldName,
                  r'GAlertManagementPayloadAlertFieldInput', 'fieldName'),
              path: path.build(),
              label: label,
              type: BuiltValueNullFieldError.checkNotNull(
                  type, r'GAlertManagementPayloadAlertFieldInput', 'type'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'path';
        path.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAlertManagementPayloadAlertFieldInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAlertSetAssigneesInput extends GAlertSetAssigneesInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final BuiltList<String> assigneeUsernames;
  @override
  final GMutationOperationMode? operationMode;

  factory _$GAlertSetAssigneesInput(
          [void Function(GAlertSetAssigneesInputBuilder)? updates]) =>
      (new GAlertSetAssigneesInputBuilder()..update(updates))._build();

  _$GAlertSetAssigneesInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.assigneeUsernames,
      this.operationMode})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GAlertSetAssigneesInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GAlertSetAssigneesInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        assigneeUsernames, r'GAlertSetAssigneesInput', 'assigneeUsernames');
  }

  @override
  GAlertSetAssigneesInput rebuild(
          void Function(GAlertSetAssigneesInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAlertSetAssigneesInputBuilder toBuilder() =>
      new GAlertSetAssigneesInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAlertSetAssigneesInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        assigneeUsernames == other.assigneeUsernames &&
        operationMode == other.operationMode;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
                clientMutationId.hashCode),
            assigneeUsernames.hashCode),
        operationMode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAlertSetAssigneesInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('assigneeUsernames', assigneeUsernames)
          ..add('operationMode', operationMode))
        .toString();
  }
}

class GAlertSetAssigneesInputBuilder
    implements
        Builder<GAlertSetAssigneesInput, GAlertSetAssigneesInputBuilder> {
  _$GAlertSetAssigneesInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<String>? _assigneeUsernames;
  ListBuilder<String> get assigneeUsernames =>
      _$this._assigneeUsernames ??= new ListBuilder<String>();
  set assigneeUsernames(ListBuilder<String>? assigneeUsernames) =>
      _$this._assigneeUsernames = assigneeUsernames;

  GMutationOperationMode? _operationMode;
  GMutationOperationMode? get operationMode => _$this._operationMode;
  set operationMode(GMutationOperationMode? operationMode) =>
      _$this._operationMode = operationMode;

  GAlertSetAssigneesInputBuilder();

  GAlertSetAssigneesInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _assigneeUsernames = $v.assigneeUsernames.toBuilder();
      _operationMode = $v.operationMode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAlertSetAssigneesInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAlertSetAssigneesInput;
  }

  @override
  void update(void Function(GAlertSetAssigneesInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAlertSetAssigneesInput build() => _build();

  _$GAlertSetAssigneesInput _build() {
    _$GAlertSetAssigneesInput _$result;
    try {
      _$result = _$v ??
          new _$GAlertSetAssigneesInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GAlertSetAssigneesInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GAlertSetAssigneesInput', 'iid'),
              clientMutationId: clientMutationId,
              assigneeUsernames: assigneeUsernames.build(),
              operationMode: operationMode);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'assigneeUsernames';
        assigneeUsernames.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAlertSetAssigneesInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAlertTodoCreateInput extends GAlertTodoCreateInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;

  factory _$GAlertTodoCreateInput(
          [void Function(GAlertTodoCreateInputBuilder)? updates]) =>
      (new GAlertTodoCreateInputBuilder()..update(updates))._build();

  _$GAlertTodoCreateInput._(
      {required this.projectPath, required this.iid, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GAlertTodoCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(iid, r'GAlertTodoCreateInput', 'iid');
  }

  @override
  GAlertTodoCreateInput rebuild(
          void Function(GAlertTodoCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAlertTodoCreateInputBuilder toBuilder() =>
      new GAlertTodoCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAlertTodoCreateInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
        clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAlertTodoCreateInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GAlertTodoCreateInputBuilder
    implements Builder<GAlertTodoCreateInput, GAlertTodoCreateInputBuilder> {
  _$GAlertTodoCreateInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAlertTodoCreateInputBuilder();

  GAlertTodoCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAlertTodoCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAlertTodoCreateInput;
  }

  @override
  void update(void Function(GAlertTodoCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAlertTodoCreateInput build() => _build();

  _$GAlertTodoCreateInput _build() {
    final _$result = _$v ??
        new _$GAlertTodoCreateInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GAlertTodoCreateInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GAlertTodoCreateInput', 'iid'),
            clientMutationId: clientMutationId);
    replace(_$result);
    return _$result;
  }
}

class _$GAnalyticsDevopsAdoptionEnabledNamespaceID
    extends GAnalyticsDevopsAdoptionEnabledNamespaceID {
  @override
  final String value;

  factory _$GAnalyticsDevopsAdoptionEnabledNamespaceID(
          [void Function(GAnalyticsDevopsAdoptionEnabledNamespaceIDBuilder)?
              updates]) =>
      (new GAnalyticsDevopsAdoptionEnabledNamespaceIDBuilder()..update(updates))
          ._build();

  _$GAnalyticsDevopsAdoptionEnabledNamespaceID._({required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GAnalyticsDevopsAdoptionEnabledNamespaceID', 'value');
  }

  @override
  GAnalyticsDevopsAdoptionEnabledNamespaceID rebuild(
          void Function(GAnalyticsDevopsAdoptionEnabledNamespaceIDBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAnalyticsDevopsAdoptionEnabledNamespaceIDBuilder toBuilder() =>
      new GAnalyticsDevopsAdoptionEnabledNamespaceIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAnalyticsDevopsAdoptionEnabledNamespaceID &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GAnalyticsDevopsAdoptionEnabledNamespaceID')
          ..add('value', value))
        .toString();
  }
}

class GAnalyticsDevopsAdoptionEnabledNamespaceIDBuilder
    implements
        Builder<GAnalyticsDevopsAdoptionEnabledNamespaceID,
            GAnalyticsDevopsAdoptionEnabledNamespaceIDBuilder> {
  _$GAnalyticsDevopsAdoptionEnabledNamespaceID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GAnalyticsDevopsAdoptionEnabledNamespaceIDBuilder();

  GAnalyticsDevopsAdoptionEnabledNamespaceIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAnalyticsDevopsAdoptionEnabledNamespaceID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAnalyticsDevopsAdoptionEnabledNamespaceID;
  }

  @override
  void update(
      void Function(GAnalyticsDevopsAdoptionEnabledNamespaceIDBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GAnalyticsDevopsAdoptionEnabledNamespaceID build() => _build();

  _$GAnalyticsDevopsAdoptionEnabledNamespaceID _build() {
    final _$result = _$v ??
        new _$GAnalyticsDevopsAdoptionEnabledNamespaceID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GAnalyticsDevopsAdoptionEnabledNamespaceID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GApiFuzzingCiConfigurationCreateInput
    extends GApiFuzzingCiConfigurationCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String apiSpecificationFile;
  @override
  final String? authPassword;
  @override
  final String? authUsername;
  @override
  final GApiFuzzingScanMode scanMode;
  @override
  final String? scanProfile;
  @override
  final String target;

  factory _$GApiFuzzingCiConfigurationCreateInput(
          [void Function(GApiFuzzingCiConfigurationCreateInputBuilder)?
              updates]) =>
      (new GApiFuzzingCiConfigurationCreateInputBuilder()..update(updates))
          ._build();

  _$GApiFuzzingCiConfigurationCreateInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.apiSpecificationFile,
      this.authPassword,
      this.authUsername,
      required this.scanMode,
      this.scanProfile,
      required this.target})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GApiFuzzingCiConfigurationCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(apiSpecificationFile,
        r'GApiFuzzingCiConfigurationCreateInput', 'apiSpecificationFile');
    BuiltValueNullFieldError.checkNotNull(
        scanMode, r'GApiFuzzingCiConfigurationCreateInput', 'scanMode');
    BuiltValueNullFieldError.checkNotNull(
        target, r'GApiFuzzingCiConfigurationCreateInput', 'target');
  }

  @override
  GApiFuzzingCiConfigurationCreateInput rebuild(
          void Function(GApiFuzzingCiConfigurationCreateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GApiFuzzingCiConfigurationCreateInputBuilder toBuilder() =>
      new GApiFuzzingCiConfigurationCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GApiFuzzingCiConfigurationCreateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        apiSpecificationFile == other.apiSpecificationFile &&
        authPassword == other.authPassword &&
        authUsername == other.authUsername &&
        scanMode == other.scanMode &&
        scanProfile == other.scanProfile &&
        target == other.target;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, clientMutationId.hashCode),
                                projectPath.hashCode),
                            apiSpecificationFile.hashCode),
                        authPassword.hashCode),
                    authUsername.hashCode),
                scanMode.hashCode),
            scanProfile.hashCode),
        target.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GApiFuzzingCiConfigurationCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('apiSpecificationFile', apiSpecificationFile)
          ..add('authPassword', authPassword)
          ..add('authUsername', authUsername)
          ..add('scanMode', scanMode)
          ..add('scanProfile', scanProfile)
          ..add('target', target))
        .toString();
  }
}

class GApiFuzzingCiConfigurationCreateInputBuilder
    implements
        Builder<GApiFuzzingCiConfigurationCreateInput,
            GApiFuzzingCiConfigurationCreateInputBuilder> {
  _$GApiFuzzingCiConfigurationCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _apiSpecificationFile;
  String? get apiSpecificationFile => _$this._apiSpecificationFile;
  set apiSpecificationFile(String? apiSpecificationFile) =>
      _$this._apiSpecificationFile = apiSpecificationFile;

  String? _authPassword;
  String? get authPassword => _$this._authPassword;
  set authPassword(String? authPassword) => _$this._authPassword = authPassword;

  String? _authUsername;
  String? get authUsername => _$this._authUsername;
  set authUsername(String? authUsername) => _$this._authUsername = authUsername;

  GApiFuzzingScanMode? _scanMode;
  GApiFuzzingScanMode? get scanMode => _$this._scanMode;
  set scanMode(GApiFuzzingScanMode? scanMode) => _$this._scanMode = scanMode;

  String? _scanProfile;
  String? get scanProfile => _$this._scanProfile;
  set scanProfile(String? scanProfile) => _$this._scanProfile = scanProfile;

  String? _target;
  String? get target => _$this._target;
  set target(String? target) => _$this._target = target;

  GApiFuzzingCiConfigurationCreateInputBuilder();

  GApiFuzzingCiConfigurationCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _apiSpecificationFile = $v.apiSpecificationFile;
      _authPassword = $v.authPassword;
      _authUsername = $v.authUsername;
      _scanMode = $v.scanMode;
      _scanProfile = $v.scanProfile;
      _target = $v.target;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GApiFuzzingCiConfigurationCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GApiFuzzingCiConfigurationCreateInput;
  }

  @override
  void update(
      void Function(GApiFuzzingCiConfigurationCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GApiFuzzingCiConfigurationCreateInput build() => _build();

  _$GApiFuzzingCiConfigurationCreateInput _build() {
    final _$result = _$v ??
        new _$GApiFuzzingCiConfigurationCreateInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                r'GApiFuzzingCiConfigurationCreateInput', 'projectPath'),
            apiSpecificationFile: BuiltValueNullFieldError.checkNotNull(
                apiSpecificationFile,
                r'GApiFuzzingCiConfigurationCreateInput',
                'apiSpecificationFile'),
            authPassword: authPassword,
            authUsername: authUsername,
            scanMode: BuiltValueNullFieldError.checkNotNull(
                scanMode, r'GApiFuzzingCiConfigurationCreateInput', 'scanMode'),
            scanProfile: scanProfile,
            target: BuiltValueNullFieldError.checkNotNull(
                target, r'GApiFuzzingCiConfigurationCreateInput', 'target'));
    replace(_$result);
    return _$result;
  }
}

class _$GAppSecFuzzingCoverageCorpusID extends GAppSecFuzzingCoverageCorpusID {
  @override
  final String value;

  factory _$GAppSecFuzzingCoverageCorpusID(
          [void Function(GAppSecFuzzingCoverageCorpusIDBuilder)? updates]) =>
      (new GAppSecFuzzingCoverageCorpusIDBuilder()..update(updates))._build();

  _$GAppSecFuzzingCoverageCorpusID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GAppSecFuzzingCoverageCorpusID', 'value');
  }

  @override
  GAppSecFuzzingCoverageCorpusID rebuild(
          void Function(GAppSecFuzzingCoverageCorpusIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppSecFuzzingCoverageCorpusIDBuilder toBuilder() =>
      new GAppSecFuzzingCoverageCorpusIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppSecFuzzingCoverageCorpusID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAppSecFuzzingCoverageCorpusID')
          ..add('value', value))
        .toString();
  }
}

class GAppSecFuzzingCoverageCorpusIDBuilder
    implements
        Builder<GAppSecFuzzingCoverageCorpusID,
            GAppSecFuzzingCoverageCorpusIDBuilder> {
  _$GAppSecFuzzingCoverageCorpusID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GAppSecFuzzingCoverageCorpusIDBuilder();

  GAppSecFuzzingCoverageCorpusIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppSecFuzzingCoverageCorpusID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAppSecFuzzingCoverageCorpusID;
  }

  @override
  void update(void Function(GAppSecFuzzingCoverageCorpusIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAppSecFuzzingCoverageCorpusID build() => _build();

  _$GAppSecFuzzingCoverageCorpusID _build() {
    final _$result = _$v ??
        new _$GAppSecFuzzingCoverageCorpusID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GAppSecFuzzingCoverageCorpusID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GArtifactDestroyInput extends GArtifactDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GCiJobArtifactID id;

  factory _$GArtifactDestroyInput(
          [void Function(GArtifactDestroyInputBuilder)? updates]) =>
      (new GArtifactDestroyInputBuilder()..update(updates))._build();

  _$GArtifactDestroyInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GArtifactDestroyInput', 'id');
  }

  @override
  GArtifactDestroyInput rebuild(
          void Function(GArtifactDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GArtifactDestroyInputBuilder toBuilder() =>
      new GArtifactDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GArtifactDestroyInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GArtifactDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GArtifactDestroyInputBuilder
    implements Builder<GArtifactDestroyInput, GArtifactDestroyInputBuilder> {
  _$GArtifactDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCiJobArtifactIDBuilder? _id;
  GCiJobArtifactIDBuilder get id =>
      _$this._id ??= new GCiJobArtifactIDBuilder();
  set id(GCiJobArtifactIDBuilder? id) => _$this._id = id;

  GArtifactDestroyInputBuilder();

  GArtifactDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GArtifactDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GArtifactDestroyInput;
  }

  @override
  void update(void Function(GArtifactDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GArtifactDestroyInput build() => _build();

  _$GArtifactDestroyInput _build() {
    _$GArtifactDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GArtifactDestroyInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GArtifactDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAuditEventsExternalAuditEventDestinationID
    extends GAuditEventsExternalAuditEventDestinationID {
  @override
  final String value;

  factory _$GAuditEventsExternalAuditEventDestinationID(
          [void Function(GAuditEventsExternalAuditEventDestinationIDBuilder)?
              updates]) =>
      (new GAuditEventsExternalAuditEventDestinationIDBuilder()
            ..update(updates))
          ._build();

  _$GAuditEventsExternalAuditEventDestinationID._({required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GAuditEventsExternalAuditEventDestinationID', 'value');
  }

  @override
  GAuditEventsExternalAuditEventDestinationID rebuild(
          void Function(GAuditEventsExternalAuditEventDestinationIDBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAuditEventsExternalAuditEventDestinationIDBuilder toBuilder() =>
      new GAuditEventsExternalAuditEventDestinationIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAuditEventsExternalAuditEventDestinationID &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GAuditEventsExternalAuditEventDestinationID')
          ..add('value', value))
        .toString();
  }
}

class GAuditEventsExternalAuditEventDestinationIDBuilder
    implements
        Builder<GAuditEventsExternalAuditEventDestinationID,
            GAuditEventsExternalAuditEventDestinationIDBuilder> {
  _$GAuditEventsExternalAuditEventDestinationID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GAuditEventsExternalAuditEventDestinationIDBuilder();

  GAuditEventsExternalAuditEventDestinationIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAuditEventsExternalAuditEventDestinationID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAuditEventsExternalAuditEventDestinationID;
  }

  @override
  void update(
      void Function(GAuditEventsExternalAuditEventDestinationIDBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GAuditEventsExternalAuditEventDestinationID build() => _build();

  _$GAuditEventsExternalAuditEventDestinationID _build() {
    final _$result = _$v ??
        new _$GAuditEventsExternalAuditEventDestinationID._(
            value: BuiltValueNullFieldError.checkNotNull(value,
                r'GAuditEventsExternalAuditEventDestinationID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GAuditEventsStreamingHeaderID extends GAuditEventsStreamingHeaderID {
  @override
  final String value;

  factory _$GAuditEventsStreamingHeaderID(
          [void Function(GAuditEventsStreamingHeaderIDBuilder)? updates]) =>
      (new GAuditEventsStreamingHeaderIDBuilder()..update(updates))._build();

  _$GAuditEventsStreamingHeaderID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GAuditEventsStreamingHeaderID', 'value');
  }

  @override
  GAuditEventsStreamingHeaderID rebuild(
          void Function(GAuditEventsStreamingHeaderIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAuditEventsStreamingHeaderIDBuilder toBuilder() =>
      new GAuditEventsStreamingHeaderIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAuditEventsStreamingHeaderID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAuditEventsStreamingHeaderID')
          ..add('value', value))
        .toString();
  }
}

class GAuditEventsStreamingHeaderIDBuilder
    implements
        Builder<GAuditEventsStreamingHeaderID,
            GAuditEventsStreamingHeaderIDBuilder> {
  _$GAuditEventsStreamingHeaderID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GAuditEventsStreamingHeaderIDBuilder();

  GAuditEventsStreamingHeaderIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAuditEventsStreamingHeaderID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAuditEventsStreamingHeaderID;
  }

  @override
  void update(void Function(GAuditEventsStreamingHeaderIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAuditEventsStreamingHeaderID build() => _build();

  _$GAuditEventsStreamingHeaderID _build() {
    final _$result = _$v ??
        new _$GAuditEventsStreamingHeaderID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GAuditEventsStreamingHeaderID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GAuditEventsStreamingHeadersCreateInput
    extends GAuditEventsStreamingHeadersCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String key;
  @override
  final String value;
  @override
  final GAuditEventsExternalAuditEventDestinationID destinationId;

  factory _$GAuditEventsStreamingHeadersCreateInput(
          [void Function(GAuditEventsStreamingHeadersCreateInputBuilder)?
              updates]) =>
      (new GAuditEventsStreamingHeadersCreateInputBuilder()..update(updates))
          ._build();

  _$GAuditEventsStreamingHeadersCreateInput._(
      {this.clientMutationId,
      required this.key,
      required this.value,
      required this.destinationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        key, r'GAuditEventsStreamingHeadersCreateInput', 'key');
    BuiltValueNullFieldError.checkNotNull(
        value, r'GAuditEventsStreamingHeadersCreateInput', 'value');
    BuiltValueNullFieldError.checkNotNull(destinationId,
        r'GAuditEventsStreamingHeadersCreateInput', 'destinationId');
  }

  @override
  GAuditEventsStreamingHeadersCreateInput rebuild(
          void Function(GAuditEventsStreamingHeadersCreateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAuditEventsStreamingHeadersCreateInputBuilder toBuilder() =>
      new GAuditEventsStreamingHeadersCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAuditEventsStreamingHeadersCreateInput &&
        clientMutationId == other.clientMutationId &&
        key == other.key &&
        value == other.value &&
        destinationId == other.destinationId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), key.hashCode),
            value.hashCode),
        destinationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GAuditEventsStreamingHeadersCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('key', key)
          ..add('value', value)
          ..add('destinationId', destinationId))
        .toString();
  }
}

class GAuditEventsStreamingHeadersCreateInputBuilder
    implements
        Builder<GAuditEventsStreamingHeadersCreateInput,
            GAuditEventsStreamingHeadersCreateInputBuilder> {
  _$GAuditEventsStreamingHeadersCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GAuditEventsExternalAuditEventDestinationIDBuilder? _destinationId;
  GAuditEventsExternalAuditEventDestinationIDBuilder get destinationId =>
      _$this._destinationId ??=
          new GAuditEventsExternalAuditEventDestinationIDBuilder();
  set destinationId(
          GAuditEventsExternalAuditEventDestinationIDBuilder? destinationId) =>
      _$this._destinationId = destinationId;

  GAuditEventsStreamingHeadersCreateInputBuilder();

  GAuditEventsStreamingHeadersCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _key = $v.key;
      _value = $v.value;
      _destinationId = $v.destinationId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAuditEventsStreamingHeadersCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAuditEventsStreamingHeadersCreateInput;
  }

  @override
  void update(
      void Function(GAuditEventsStreamingHeadersCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAuditEventsStreamingHeadersCreateInput build() => _build();

  _$GAuditEventsStreamingHeadersCreateInput _build() {
    _$GAuditEventsStreamingHeadersCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GAuditEventsStreamingHeadersCreateInput._(
              clientMutationId: clientMutationId,
              key: BuiltValueNullFieldError.checkNotNull(
                  key, r'GAuditEventsStreamingHeadersCreateInput', 'key'),
              value: BuiltValueNullFieldError.checkNotNull(
                  value, r'GAuditEventsStreamingHeadersCreateInput', 'value'),
              destinationId: destinationId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'destinationId';
        destinationId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAuditEventsStreamingHeadersCreateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAuditEventsStreamingHeadersDestroyInput
    extends GAuditEventsStreamingHeadersDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GAuditEventsStreamingHeaderID headerId;

  factory _$GAuditEventsStreamingHeadersDestroyInput(
          [void Function(GAuditEventsStreamingHeadersDestroyInputBuilder)?
              updates]) =>
      (new GAuditEventsStreamingHeadersDestroyInputBuilder()..update(updates))
          ._build();

  _$GAuditEventsStreamingHeadersDestroyInput._(
      {this.clientMutationId, required this.headerId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        headerId, r'GAuditEventsStreamingHeadersDestroyInput', 'headerId');
  }

  @override
  GAuditEventsStreamingHeadersDestroyInput rebuild(
          void Function(GAuditEventsStreamingHeadersDestroyInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAuditEventsStreamingHeadersDestroyInputBuilder toBuilder() =>
      new GAuditEventsStreamingHeadersDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAuditEventsStreamingHeadersDestroyInput &&
        clientMutationId == other.clientMutationId &&
        headerId == other.headerId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), headerId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GAuditEventsStreamingHeadersDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('headerId', headerId))
        .toString();
  }
}

class GAuditEventsStreamingHeadersDestroyInputBuilder
    implements
        Builder<GAuditEventsStreamingHeadersDestroyInput,
            GAuditEventsStreamingHeadersDestroyInputBuilder> {
  _$GAuditEventsStreamingHeadersDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAuditEventsStreamingHeaderIDBuilder? _headerId;
  GAuditEventsStreamingHeaderIDBuilder get headerId =>
      _$this._headerId ??= new GAuditEventsStreamingHeaderIDBuilder();
  set headerId(GAuditEventsStreamingHeaderIDBuilder? headerId) =>
      _$this._headerId = headerId;

  GAuditEventsStreamingHeadersDestroyInputBuilder();

  GAuditEventsStreamingHeadersDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _headerId = $v.headerId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAuditEventsStreamingHeadersDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAuditEventsStreamingHeadersDestroyInput;
  }

  @override
  void update(
      void Function(GAuditEventsStreamingHeadersDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAuditEventsStreamingHeadersDestroyInput build() => _build();

  _$GAuditEventsStreamingHeadersDestroyInput _build() {
    _$GAuditEventsStreamingHeadersDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GAuditEventsStreamingHeadersDestroyInput._(
              clientMutationId: clientMutationId, headerId: headerId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'headerId';
        headerId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAuditEventsStreamingHeadersDestroyInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAuditEventsStreamingHeadersUpdateInput
    extends GAuditEventsStreamingHeadersUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GAuditEventsStreamingHeaderID headerId;
  @override
  final String key;
  @override
  final String value;

  factory _$GAuditEventsStreamingHeadersUpdateInput(
          [void Function(GAuditEventsStreamingHeadersUpdateInputBuilder)?
              updates]) =>
      (new GAuditEventsStreamingHeadersUpdateInputBuilder()..update(updates))
          ._build();

  _$GAuditEventsStreamingHeadersUpdateInput._(
      {this.clientMutationId,
      required this.headerId,
      required this.key,
      required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        headerId, r'GAuditEventsStreamingHeadersUpdateInput', 'headerId');
    BuiltValueNullFieldError.checkNotNull(
        key, r'GAuditEventsStreamingHeadersUpdateInput', 'key');
    BuiltValueNullFieldError.checkNotNull(
        value, r'GAuditEventsStreamingHeadersUpdateInput', 'value');
  }

  @override
  GAuditEventsStreamingHeadersUpdateInput rebuild(
          void Function(GAuditEventsStreamingHeadersUpdateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAuditEventsStreamingHeadersUpdateInputBuilder toBuilder() =>
      new GAuditEventsStreamingHeadersUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAuditEventsStreamingHeadersUpdateInput &&
        clientMutationId == other.clientMutationId &&
        headerId == other.headerId &&
        key == other.key &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), headerId.hashCode),
            key.hashCode),
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GAuditEventsStreamingHeadersUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('headerId', headerId)
          ..add('key', key)
          ..add('value', value))
        .toString();
  }
}

class GAuditEventsStreamingHeadersUpdateInputBuilder
    implements
        Builder<GAuditEventsStreamingHeadersUpdateInput,
            GAuditEventsStreamingHeadersUpdateInputBuilder> {
  _$GAuditEventsStreamingHeadersUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAuditEventsStreamingHeaderIDBuilder? _headerId;
  GAuditEventsStreamingHeaderIDBuilder get headerId =>
      _$this._headerId ??= new GAuditEventsStreamingHeaderIDBuilder();
  set headerId(GAuditEventsStreamingHeaderIDBuilder? headerId) =>
      _$this._headerId = headerId;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GAuditEventsStreamingHeadersUpdateInputBuilder();

  GAuditEventsStreamingHeadersUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _headerId = $v.headerId.toBuilder();
      _key = $v.key;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAuditEventsStreamingHeadersUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAuditEventsStreamingHeadersUpdateInput;
  }

  @override
  void update(
      void Function(GAuditEventsStreamingHeadersUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAuditEventsStreamingHeadersUpdateInput build() => _build();

  _$GAuditEventsStreamingHeadersUpdateInput _build() {
    _$GAuditEventsStreamingHeadersUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GAuditEventsStreamingHeadersUpdateInput._(
              clientMutationId: clientMutationId,
              headerId: headerId.build(),
              key: BuiltValueNullFieldError.checkNotNull(
                  key, r'GAuditEventsStreamingHeadersUpdateInput', 'key'),
              value: BuiltValueNullFieldError.checkNotNull(
                  value, r'GAuditEventsStreamingHeadersUpdateInput', 'value'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'headerId';
        headerId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAuditEventsStreamingHeadersUpdateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAwardableID extends GAwardableID {
  @override
  final String value;

  factory _$GAwardableID([void Function(GAwardableIDBuilder)? updates]) =>
      (new GAwardableIDBuilder()..update(updates))._build();

  _$GAwardableID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GAwardableID', 'value');
  }

  @override
  GAwardableID rebuild(void Function(GAwardableIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAwardableIDBuilder toBuilder() => new GAwardableIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAwardableID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAwardableID')..add('value', value))
        .toString();
  }
}

class GAwardableIDBuilder
    implements Builder<GAwardableID, GAwardableIDBuilder> {
  _$GAwardableID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GAwardableIDBuilder();

  GAwardableIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAwardableID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAwardableID;
  }

  @override
  void update(void Function(GAwardableIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAwardableID build() => _build();

  _$GAwardableID _build() {
    final _$result = _$v ??
        new _$GAwardableID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GAwardableID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GAwardEmojiAddInput extends GAwardEmojiAddInput {
  @override
  final GAwardableID awardableId;
  @override
  final String name;
  @override
  final String? clientMutationId;

  factory _$GAwardEmojiAddInput(
          [void Function(GAwardEmojiAddInputBuilder)? updates]) =>
      (new GAwardEmojiAddInputBuilder()..update(updates))._build();

  _$GAwardEmojiAddInput._(
      {required this.awardableId, required this.name, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        awardableId, r'GAwardEmojiAddInput', 'awardableId');
    BuiltValueNullFieldError.checkNotNull(name, r'GAwardEmojiAddInput', 'name');
  }

  @override
  GAwardEmojiAddInput rebuild(
          void Function(GAwardEmojiAddInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAwardEmojiAddInputBuilder toBuilder() =>
      new GAwardEmojiAddInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAwardEmojiAddInput &&
        awardableId == other.awardableId &&
        name == other.name &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, awardableId.hashCode), name.hashCode),
        clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAwardEmojiAddInput')
          ..add('awardableId', awardableId)
          ..add('name', name)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GAwardEmojiAddInputBuilder
    implements Builder<GAwardEmojiAddInput, GAwardEmojiAddInputBuilder> {
  _$GAwardEmojiAddInput? _$v;

  GAwardableIDBuilder? _awardableId;
  GAwardableIDBuilder get awardableId =>
      _$this._awardableId ??= new GAwardableIDBuilder();
  set awardableId(GAwardableIDBuilder? awardableId) =>
      _$this._awardableId = awardableId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAwardEmojiAddInputBuilder();

  GAwardEmojiAddInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _awardableId = $v.awardableId.toBuilder();
      _name = $v.name;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAwardEmojiAddInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAwardEmojiAddInput;
  }

  @override
  void update(void Function(GAwardEmojiAddInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAwardEmojiAddInput build() => _build();

  _$GAwardEmojiAddInput _build() {
    _$GAwardEmojiAddInput _$result;
    try {
      _$result = _$v ??
          new _$GAwardEmojiAddInput._(
              awardableId: awardableId.build(),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GAwardEmojiAddInput', 'name'),
              clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'awardableId';
        awardableId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAwardEmojiAddInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAwardEmojiRemoveInput extends GAwardEmojiRemoveInput {
  @override
  final GAwardableID awardableId;
  @override
  final String name;
  @override
  final String? clientMutationId;

  factory _$GAwardEmojiRemoveInput(
          [void Function(GAwardEmojiRemoveInputBuilder)? updates]) =>
      (new GAwardEmojiRemoveInputBuilder()..update(updates))._build();

  _$GAwardEmojiRemoveInput._(
      {required this.awardableId, required this.name, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        awardableId, r'GAwardEmojiRemoveInput', 'awardableId');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GAwardEmojiRemoveInput', 'name');
  }

  @override
  GAwardEmojiRemoveInput rebuild(
          void Function(GAwardEmojiRemoveInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAwardEmojiRemoveInputBuilder toBuilder() =>
      new GAwardEmojiRemoveInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAwardEmojiRemoveInput &&
        awardableId == other.awardableId &&
        name == other.name &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, awardableId.hashCode), name.hashCode),
        clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAwardEmojiRemoveInput')
          ..add('awardableId', awardableId)
          ..add('name', name)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GAwardEmojiRemoveInputBuilder
    implements Builder<GAwardEmojiRemoveInput, GAwardEmojiRemoveInputBuilder> {
  _$GAwardEmojiRemoveInput? _$v;

  GAwardableIDBuilder? _awardableId;
  GAwardableIDBuilder get awardableId =>
      _$this._awardableId ??= new GAwardableIDBuilder();
  set awardableId(GAwardableIDBuilder? awardableId) =>
      _$this._awardableId = awardableId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAwardEmojiRemoveInputBuilder();

  GAwardEmojiRemoveInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _awardableId = $v.awardableId.toBuilder();
      _name = $v.name;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAwardEmojiRemoveInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAwardEmojiRemoveInput;
  }

  @override
  void update(void Function(GAwardEmojiRemoveInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAwardEmojiRemoveInput build() => _build();

  _$GAwardEmojiRemoveInput _build() {
    _$GAwardEmojiRemoveInput _$result;
    try {
      _$result = _$v ??
          new _$GAwardEmojiRemoveInput._(
              awardableId: awardableId.build(),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GAwardEmojiRemoveInput', 'name'),
              clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'awardableId';
        awardableId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAwardEmojiRemoveInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAwardEmojiToggleInput extends GAwardEmojiToggleInput {
  @override
  final GAwardableID awardableId;
  @override
  final String name;
  @override
  final String? clientMutationId;

  factory _$GAwardEmojiToggleInput(
          [void Function(GAwardEmojiToggleInputBuilder)? updates]) =>
      (new GAwardEmojiToggleInputBuilder()..update(updates))._build();

  _$GAwardEmojiToggleInput._(
      {required this.awardableId, required this.name, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        awardableId, r'GAwardEmojiToggleInput', 'awardableId');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GAwardEmojiToggleInput', 'name');
  }

  @override
  GAwardEmojiToggleInput rebuild(
          void Function(GAwardEmojiToggleInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAwardEmojiToggleInputBuilder toBuilder() =>
      new GAwardEmojiToggleInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAwardEmojiToggleInput &&
        awardableId == other.awardableId &&
        name == other.name &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, awardableId.hashCode), name.hashCode),
        clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAwardEmojiToggleInput')
          ..add('awardableId', awardableId)
          ..add('name', name)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GAwardEmojiToggleInputBuilder
    implements Builder<GAwardEmojiToggleInput, GAwardEmojiToggleInputBuilder> {
  _$GAwardEmojiToggleInput? _$v;

  GAwardableIDBuilder? _awardableId;
  GAwardableIDBuilder get awardableId =>
      _$this._awardableId ??= new GAwardableIDBuilder();
  set awardableId(GAwardableIDBuilder? awardableId) =>
      _$this._awardableId = awardableId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAwardEmojiToggleInputBuilder();

  GAwardEmojiToggleInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _awardableId = $v.awardableId.toBuilder();
      _name = $v.name;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAwardEmojiToggleInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAwardEmojiToggleInput;
  }

  @override
  void update(void Function(GAwardEmojiToggleInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAwardEmojiToggleInput build() => _build();

  _$GAwardEmojiToggleInput _build() {
    _$GAwardEmojiToggleInput _$result;
    try {
      _$result = _$v ??
          new _$GAwardEmojiToggleInput._(
              awardableId: awardableId.build(),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GAwardEmojiToggleInput', 'name'),
              clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'awardableId';
        awardableId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAwardEmojiToggleInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GBigInt extends GBigInt {
  @override
  final String value;

  factory _$GBigInt([void Function(GBigIntBuilder)? updates]) =>
      (new GBigIntBuilder()..update(updates))._build();

  _$GBigInt._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GBigInt', 'value');
  }

  @override
  GBigInt rebuild(void Function(GBigIntBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBigIntBuilder toBuilder() => new GBigIntBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBigInt && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBigInt')..add('value', value))
        .toString();
  }
}

class GBigIntBuilder implements Builder<GBigInt, GBigIntBuilder> {
  _$GBigInt? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GBigIntBuilder();

  GBigIntBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBigInt other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBigInt;
  }

  @override
  void update(void Function(GBigIntBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBigInt build() => _build();

  _$GBigInt _build() {
    final _$result = _$v ??
        new _$GBigInt._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GBigInt', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GBoardEpicCreateInput extends GBoardEpicCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String groupPath;
  @override
  final GBoardsEpicBoardID boardId;
  @override
  final GBoardsEpicListID listId;
  @override
  final String title;

  factory _$GBoardEpicCreateInput(
          [void Function(GBoardEpicCreateInputBuilder)? updates]) =>
      (new GBoardEpicCreateInputBuilder()..update(updates))._build();

  _$GBoardEpicCreateInput._(
      {this.clientMutationId,
      required this.groupPath,
      required this.boardId,
      required this.listId,
      required this.title})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        groupPath, r'GBoardEpicCreateInput', 'groupPath');
    BuiltValueNullFieldError.checkNotNull(
        boardId, r'GBoardEpicCreateInput', 'boardId');
    BuiltValueNullFieldError.checkNotNull(
        listId, r'GBoardEpicCreateInput', 'listId');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GBoardEpicCreateInput', 'title');
  }

  @override
  GBoardEpicCreateInput rebuild(
          void Function(GBoardEpicCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBoardEpicCreateInputBuilder toBuilder() =>
      new GBoardEpicCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBoardEpicCreateInput &&
        clientMutationId == other.clientMutationId &&
        groupPath == other.groupPath &&
        boardId == other.boardId &&
        listId == other.listId &&
        title == other.title;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), groupPath.hashCode),
                boardId.hashCode),
            listId.hashCode),
        title.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBoardEpicCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('groupPath', groupPath)
          ..add('boardId', boardId)
          ..add('listId', listId)
          ..add('title', title))
        .toString();
  }
}

class GBoardEpicCreateInputBuilder
    implements Builder<GBoardEpicCreateInput, GBoardEpicCreateInputBuilder> {
  _$GBoardEpicCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  GBoardsEpicBoardIDBuilder? _boardId;
  GBoardsEpicBoardIDBuilder get boardId =>
      _$this._boardId ??= new GBoardsEpicBoardIDBuilder();
  set boardId(GBoardsEpicBoardIDBuilder? boardId) => _$this._boardId = boardId;

  GBoardsEpicListIDBuilder? _listId;
  GBoardsEpicListIDBuilder get listId =>
      _$this._listId ??= new GBoardsEpicListIDBuilder();
  set listId(GBoardsEpicListIDBuilder? listId) => _$this._listId = listId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GBoardEpicCreateInputBuilder();

  GBoardEpicCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _groupPath = $v.groupPath;
      _boardId = $v.boardId.toBuilder();
      _listId = $v.listId.toBuilder();
      _title = $v.title;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBoardEpicCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBoardEpicCreateInput;
  }

  @override
  void update(void Function(GBoardEpicCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBoardEpicCreateInput build() => _build();

  _$GBoardEpicCreateInput _build() {
    _$GBoardEpicCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GBoardEpicCreateInput._(
              clientMutationId: clientMutationId,
              groupPath: BuiltValueNullFieldError.checkNotNull(
                  groupPath, r'GBoardEpicCreateInput', 'groupPath'),
              boardId: boardId.build(),
              listId: listId.build(),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GBoardEpicCreateInput', 'title'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'boardId';
        boardId.build();
        _$failedField = 'listId';
        listId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GBoardEpicCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GBoardID extends GBoardID {
  @override
  final String value;

  factory _$GBoardID([void Function(GBoardIDBuilder)? updates]) =>
      (new GBoardIDBuilder()..update(updates))._build();

  _$GBoardID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GBoardID', 'value');
  }

  @override
  GBoardID rebuild(void Function(GBoardIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBoardIDBuilder toBuilder() => new GBoardIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBoardID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBoardID')..add('value', value))
        .toString();
  }
}

class GBoardIDBuilder implements Builder<GBoardID, GBoardIDBuilder> {
  _$GBoardID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GBoardIDBuilder();

  GBoardIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBoardID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBoardID;
  }

  @override
  void update(void Function(GBoardIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBoardID build() => _build();

  _$GBoardID _build() {
    final _$result = _$v ??
        new _$GBoardID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GBoardID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GBoardIssueInput extends GBoardIssueInput {
  @override
  final BuiltList<String>? labelName;
  @override
  final String? authorUsername;
  @override
  final String? myReactionEmoji;
  @override
  final BuiltList<String>? iids;
  @override
  final String? milestoneTitle;
  @override
  final BuiltList<String>? assigneeUsername;
  @override
  final String? releaseTag;
  @override
  final BuiltList<GIssueType>? types;
  @override
  final GMilestoneWildcardId? milestoneWildcardId;
  @override
  final GEpicID? epicId;
  @override
  final String? iterationTitle;
  @override
  final String? weight;
  @override
  final BuiltList<GIterationID>? iterationId;
  @override
  final GNegatedBoardIssueInput? not;
  @override
  final String? search;
  @override
  final GAssigneeWildcardId? assigneeWildcardId;
  @override
  final bool? confidential;
  @override
  final GEpicWildcardId? epicWildcardId;
  @override
  final GIterationWildcardId? iterationWildcardId;
  @override
  final BuiltList<GIterationsCadenceID>? iterationCadenceId;
  @override
  final GWeightWildcardId? weightWildcardId;

  factory _$GBoardIssueInput(
          [void Function(GBoardIssueInputBuilder)? updates]) =>
      (new GBoardIssueInputBuilder()..update(updates))._build();

  _$GBoardIssueInput._(
      {this.labelName,
      this.authorUsername,
      this.myReactionEmoji,
      this.iids,
      this.milestoneTitle,
      this.assigneeUsername,
      this.releaseTag,
      this.types,
      this.milestoneWildcardId,
      this.epicId,
      this.iterationTitle,
      this.weight,
      this.iterationId,
      this.not,
      this.search,
      this.assigneeWildcardId,
      this.confidential,
      this.epicWildcardId,
      this.iterationWildcardId,
      this.iterationCadenceId,
      this.weightWildcardId})
      : super._();

  @override
  GBoardIssueInput rebuild(void Function(GBoardIssueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBoardIssueInputBuilder toBuilder() =>
      new GBoardIssueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBoardIssueInput &&
        labelName == other.labelName &&
        authorUsername == other.authorUsername &&
        myReactionEmoji == other.myReactionEmoji &&
        iids == other.iids &&
        milestoneTitle == other.milestoneTitle &&
        assigneeUsername == other.assigneeUsername &&
        releaseTag == other.releaseTag &&
        types == other.types &&
        milestoneWildcardId == other.milestoneWildcardId &&
        epicId == other.epicId &&
        iterationTitle == other.iterationTitle &&
        weight == other.weight &&
        iterationId == other.iterationId &&
        not == other.not &&
        search == other.search &&
        assigneeWildcardId == other.assigneeWildcardId &&
        confidential == other.confidential &&
        epicWildcardId == other.epicWildcardId &&
        iterationWildcardId == other.iterationWildcardId &&
        iterationCadenceId == other.iterationCadenceId &&
        weightWildcardId == other.weightWildcardId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc(0, labelName.hashCode), authorUsername.hashCode),
                                                                                myReactionEmoji.hashCode),
                                                                            iids.hashCode),
                                                                        milestoneTitle.hashCode),
                                                                    assigneeUsername.hashCode),
                                                                releaseTag.hashCode),
                                                            types.hashCode),
                                                        milestoneWildcardId.hashCode),
                                                    epicId.hashCode),
                                                iterationTitle.hashCode),
                                            weight.hashCode),
                                        iterationId.hashCode),
                                    not.hashCode),
                                search.hashCode),
                            assigneeWildcardId.hashCode),
                        confidential.hashCode),
                    epicWildcardId.hashCode),
                iterationWildcardId.hashCode),
            iterationCadenceId.hashCode),
        weightWildcardId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBoardIssueInput')
          ..add('labelName', labelName)
          ..add('authorUsername', authorUsername)
          ..add('myReactionEmoji', myReactionEmoji)
          ..add('iids', iids)
          ..add('milestoneTitle', milestoneTitle)
          ..add('assigneeUsername', assigneeUsername)
          ..add('releaseTag', releaseTag)
          ..add('types', types)
          ..add('milestoneWildcardId', milestoneWildcardId)
          ..add('epicId', epicId)
          ..add('iterationTitle', iterationTitle)
          ..add('weight', weight)
          ..add('iterationId', iterationId)
          ..add('not', not)
          ..add('search', search)
          ..add('assigneeWildcardId', assigneeWildcardId)
          ..add('confidential', confidential)
          ..add('epicWildcardId', epicWildcardId)
          ..add('iterationWildcardId', iterationWildcardId)
          ..add('iterationCadenceId', iterationCadenceId)
          ..add('weightWildcardId', weightWildcardId))
        .toString();
  }
}

class GBoardIssueInputBuilder
    implements Builder<GBoardIssueInput, GBoardIssueInputBuilder> {
  _$GBoardIssueInput? _$v;

  ListBuilder<String>? _labelName;
  ListBuilder<String> get labelName =>
      _$this._labelName ??= new ListBuilder<String>();
  set labelName(ListBuilder<String>? labelName) =>
      _$this._labelName = labelName;

  String? _authorUsername;
  String? get authorUsername => _$this._authorUsername;
  set authorUsername(String? authorUsername) =>
      _$this._authorUsername = authorUsername;

  String? _myReactionEmoji;
  String? get myReactionEmoji => _$this._myReactionEmoji;
  set myReactionEmoji(String? myReactionEmoji) =>
      _$this._myReactionEmoji = myReactionEmoji;

  ListBuilder<String>? _iids;
  ListBuilder<String> get iids => _$this._iids ??= new ListBuilder<String>();
  set iids(ListBuilder<String>? iids) => _$this._iids = iids;

  String? _milestoneTitle;
  String? get milestoneTitle => _$this._milestoneTitle;
  set milestoneTitle(String? milestoneTitle) =>
      _$this._milestoneTitle = milestoneTitle;

  ListBuilder<String>? _assigneeUsername;
  ListBuilder<String> get assigneeUsername =>
      _$this._assigneeUsername ??= new ListBuilder<String>();
  set assigneeUsername(ListBuilder<String>? assigneeUsername) =>
      _$this._assigneeUsername = assigneeUsername;

  String? _releaseTag;
  String? get releaseTag => _$this._releaseTag;
  set releaseTag(String? releaseTag) => _$this._releaseTag = releaseTag;

  ListBuilder<GIssueType>? _types;
  ListBuilder<GIssueType> get types =>
      _$this._types ??= new ListBuilder<GIssueType>();
  set types(ListBuilder<GIssueType>? types) => _$this._types = types;

  GMilestoneWildcardId? _milestoneWildcardId;
  GMilestoneWildcardId? get milestoneWildcardId => _$this._milestoneWildcardId;
  set milestoneWildcardId(GMilestoneWildcardId? milestoneWildcardId) =>
      _$this._milestoneWildcardId = milestoneWildcardId;

  GEpicIDBuilder? _epicId;
  GEpicIDBuilder get epicId => _$this._epicId ??= new GEpicIDBuilder();
  set epicId(GEpicIDBuilder? epicId) => _$this._epicId = epicId;

  String? _iterationTitle;
  String? get iterationTitle => _$this._iterationTitle;
  set iterationTitle(String? iterationTitle) =>
      _$this._iterationTitle = iterationTitle;

  String? _weight;
  String? get weight => _$this._weight;
  set weight(String? weight) => _$this._weight = weight;

  ListBuilder<GIterationID>? _iterationId;
  ListBuilder<GIterationID> get iterationId =>
      _$this._iterationId ??= new ListBuilder<GIterationID>();
  set iterationId(ListBuilder<GIterationID>? iterationId) =>
      _$this._iterationId = iterationId;

  GNegatedBoardIssueInputBuilder? _not;
  GNegatedBoardIssueInputBuilder get not =>
      _$this._not ??= new GNegatedBoardIssueInputBuilder();
  set not(GNegatedBoardIssueInputBuilder? not) => _$this._not = not;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  GAssigneeWildcardId? _assigneeWildcardId;
  GAssigneeWildcardId? get assigneeWildcardId => _$this._assigneeWildcardId;
  set assigneeWildcardId(GAssigneeWildcardId? assigneeWildcardId) =>
      _$this._assigneeWildcardId = assigneeWildcardId;

  bool? _confidential;
  bool? get confidential => _$this._confidential;
  set confidential(bool? confidential) => _$this._confidential = confidential;

  GEpicWildcardId? _epicWildcardId;
  GEpicWildcardId? get epicWildcardId => _$this._epicWildcardId;
  set epicWildcardId(GEpicWildcardId? epicWildcardId) =>
      _$this._epicWildcardId = epicWildcardId;

  GIterationWildcardId? _iterationWildcardId;
  GIterationWildcardId? get iterationWildcardId => _$this._iterationWildcardId;
  set iterationWildcardId(GIterationWildcardId? iterationWildcardId) =>
      _$this._iterationWildcardId = iterationWildcardId;

  ListBuilder<GIterationsCadenceID>? _iterationCadenceId;
  ListBuilder<GIterationsCadenceID> get iterationCadenceId =>
      _$this._iterationCadenceId ??= new ListBuilder<GIterationsCadenceID>();
  set iterationCadenceId(
          ListBuilder<GIterationsCadenceID>? iterationCadenceId) =>
      _$this._iterationCadenceId = iterationCadenceId;

  GWeightWildcardId? _weightWildcardId;
  GWeightWildcardId? get weightWildcardId => _$this._weightWildcardId;
  set weightWildcardId(GWeightWildcardId? weightWildcardId) =>
      _$this._weightWildcardId = weightWildcardId;

  GBoardIssueInputBuilder();

  GBoardIssueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _labelName = $v.labelName?.toBuilder();
      _authorUsername = $v.authorUsername;
      _myReactionEmoji = $v.myReactionEmoji;
      _iids = $v.iids?.toBuilder();
      _milestoneTitle = $v.milestoneTitle;
      _assigneeUsername = $v.assigneeUsername?.toBuilder();
      _releaseTag = $v.releaseTag;
      _types = $v.types?.toBuilder();
      _milestoneWildcardId = $v.milestoneWildcardId;
      _epicId = $v.epicId?.toBuilder();
      _iterationTitle = $v.iterationTitle;
      _weight = $v.weight;
      _iterationId = $v.iterationId?.toBuilder();
      _not = $v.not?.toBuilder();
      _search = $v.search;
      _assigneeWildcardId = $v.assigneeWildcardId;
      _confidential = $v.confidential;
      _epicWildcardId = $v.epicWildcardId;
      _iterationWildcardId = $v.iterationWildcardId;
      _iterationCadenceId = $v.iterationCadenceId?.toBuilder();
      _weightWildcardId = $v.weightWildcardId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBoardIssueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBoardIssueInput;
  }

  @override
  void update(void Function(GBoardIssueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBoardIssueInput build() => _build();

  _$GBoardIssueInput _build() {
    _$GBoardIssueInput _$result;
    try {
      _$result = _$v ??
          new _$GBoardIssueInput._(
              labelName: _labelName?.build(),
              authorUsername: authorUsername,
              myReactionEmoji: myReactionEmoji,
              iids: _iids?.build(),
              milestoneTitle: milestoneTitle,
              assigneeUsername: _assigneeUsername?.build(),
              releaseTag: releaseTag,
              types: _types?.build(),
              milestoneWildcardId: milestoneWildcardId,
              epicId: _epicId?.build(),
              iterationTitle: iterationTitle,
              weight: weight,
              iterationId: _iterationId?.build(),
              not: _not?.build(),
              search: search,
              assigneeWildcardId: assigneeWildcardId,
              confidential: confidential,
              epicWildcardId: epicWildcardId,
              iterationWildcardId: iterationWildcardId,
              iterationCadenceId: _iterationCadenceId?.build(),
              weightWildcardId: weightWildcardId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labelName';
        _labelName?.build();

        _$failedField = 'iids';
        _iids?.build();

        _$failedField = 'assigneeUsername';
        _assigneeUsername?.build();

        _$failedField = 'types';
        _types?.build();

        _$failedField = 'epicId';
        _epicId?.build();

        _$failedField = 'iterationId';
        _iterationId?.build();
        _$failedField = 'not';
        _not?.build();

        _$failedField = 'iterationCadenceId';
        _iterationCadenceId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GBoardIssueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GBoardListCreateInput extends GBoardListCreateInput {
  @override
  final bool? backlog;
  @override
  final GLabelID? labelId;
  @override
  final String? clientMutationId;
  @override
  final GBoardID boardId;
  @override
  final GMilestoneID? milestoneId;
  @override
  final GIterationID? iterationId;
  @override
  final GUserID? assigneeId;

  factory _$GBoardListCreateInput(
          [void Function(GBoardListCreateInputBuilder)? updates]) =>
      (new GBoardListCreateInputBuilder()..update(updates))._build();

  _$GBoardListCreateInput._(
      {this.backlog,
      this.labelId,
      this.clientMutationId,
      required this.boardId,
      this.milestoneId,
      this.iterationId,
      this.assigneeId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        boardId, r'GBoardListCreateInput', 'boardId');
  }

  @override
  GBoardListCreateInput rebuild(
          void Function(GBoardListCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBoardListCreateInputBuilder toBuilder() =>
      new GBoardListCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBoardListCreateInput &&
        backlog == other.backlog &&
        labelId == other.labelId &&
        clientMutationId == other.clientMutationId &&
        boardId == other.boardId &&
        milestoneId == other.milestoneId &&
        iterationId == other.iterationId &&
        assigneeId == other.assigneeId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, backlog.hashCode), labelId.hashCode),
                        clientMutationId.hashCode),
                    boardId.hashCode),
                milestoneId.hashCode),
            iterationId.hashCode),
        assigneeId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBoardListCreateInput')
          ..add('backlog', backlog)
          ..add('labelId', labelId)
          ..add('clientMutationId', clientMutationId)
          ..add('boardId', boardId)
          ..add('milestoneId', milestoneId)
          ..add('iterationId', iterationId)
          ..add('assigneeId', assigneeId))
        .toString();
  }
}

class GBoardListCreateInputBuilder
    implements Builder<GBoardListCreateInput, GBoardListCreateInputBuilder> {
  _$GBoardListCreateInput? _$v;

  bool? _backlog;
  bool? get backlog => _$this._backlog;
  set backlog(bool? backlog) => _$this._backlog = backlog;

  GLabelIDBuilder? _labelId;
  GLabelIDBuilder get labelId => _$this._labelId ??= new GLabelIDBuilder();
  set labelId(GLabelIDBuilder? labelId) => _$this._labelId = labelId;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GBoardIDBuilder? _boardId;
  GBoardIDBuilder get boardId => _$this._boardId ??= new GBoardIDBuilder();
  set boardId(GBoardIDBuilder? boardId) => _$this._boardId = boardId;

  GMilestoneIDBuilder? _milestoneId;
  GMilestoneIDBuilder get milestoneId =>
      _$this._milestoneId ??= new GMilestoneIDBuilder();
  set milestoneId(GMilestoneIDBuilder? milestoneId) =>
      _$this._milestoneId = milestoneId;

  GIterationIDBuilder? _iterationId;
  GIterationIDBuilder get iterationId =>
      _$this._iterationId ??= new GIterationIDBuilder();
  set iterationId(GIterationIDBuilder? iterationId) =>
      _$this._iterationId = iterationId;

  GUserIDBuilder? _assigneeId;
  GUserIDBuilder get assigneeId => _$this._assigneeId ??= new GUserIDBuilder();
  set assigneeId(GUserIDBuilder? assigneeId) => _$this._assigneeId = assigneeId;

  GBoardListCreateInputBuilder();

  GBoardListCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _backlog = $v.backlog;
      _labelId = $v.labelId?.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _boardId = $v.boardId.toBuilder();
      _milestoneId = $v.milestoneId?.toBuilder();
      _iterationId = $v.iterationId?.toBuilder();
      _assigneeId = $v.assigneeId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBoardListCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBoardListCreateInput;
  }

  @override
  void update(void Function(GBoardListCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBoardListCreateInput build() => _build();

  _$GBoardListCreateInput _build() {
    _$GBoardListCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GBoardListCreateInput._(
              backlog: backlog,
              labelId: _labelId?.build(),
              clientMutationId: clientMutationId,
              boardId: boardId.build(),
              milestoneId: _milestoneId?.build(),
              iterationId: _iterationId?.build(),
              assigneeId: _assigneeId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labelId';
        _labelId?.build();

        _$failedField = 'boardId';
        boardId.build();
        _$failedField = 'milestoneId';
        _milestoneId?.build();
        _$failedField = 'iterationId';
        _iterationId?.build();
        _$failedField = 'assigneeId';
        _assigneeId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GBoardListCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GBoardListUpdateLimitMetricsInput
    extends GBoardListUpdateLimitMetricsInput {
  @override
  final String? clientMutationId;
  @override
  final GListID listId;
  @override
  final GListLimitMetric? limitMetric;
  @override
  final int? maxIssueCount;
  @override
  final int? maxIssueWeight;

  factory _$GBoardListUpdateLimitMetricsInput(
          [void Function(GBoardListUpdateLimitMetricsInputBuilder)? updates]) =>
      (new GBoardListUpdateLimitMetricsInputBuilder()..update(updates))
          ._build();

  _$GBoardListUpdateLimitMetricsInput._(
      {this.clientMutationId,
      required this.listId,
      this.limitMetric,
      this.maxIssueCount,
      this.maxIssueWeight})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        listId, r'GBoardListUpdateLimitMetricsInput', 'listId');
  }

  @override
  GBoardListUpdateLimitMetricsInput rebuild(
          void Function(GBoardListUpdateLimitMetricsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBoardListUpdateLimitMetricsInputBuilder toBuilder() =>
      new GBoardListUpdateLimitMetricsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBoardListUpdateLimitMetricsInput &&
        clientMutationId == other.clientMutationId &&
        listId == other.listId &&
        limitMetric == other.limitMetric &&
        maxIssueCount == other.maxIssueCount &&
        maxIssueWeight == other.maxIssueWeight;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), listId.hashCode),
                limitMetric.hashCode),
            maxIssueCount.hashCode),
        maxIssueWeight.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBoardListUpdateLimitMetricsInput')
          ..add('clientMutationId', clientMutationId)
          ..add('listId', listId)
          ..add('limitMetric', limitMetric)
          ..add('maxIssueCount', maxIssueCount)
          ..add('maxIssueWeight', maxIssueWeight))
        .toString();
  }
}

class GBoardListUpdateLimitMetricsInputBuilder
    implements
        Builder<GBoardListUpdateLimitMetricsInput,
            GBoardListUpdateLimitMetricsInputBuilder> {
  _$GBoardListUpdateLimitMetricsInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GListIDBuilder? _listId;
  GListIDBuilder get listId => _$this._listId ??= new GListIDBuilder();
  set listId(GListIDBuilder? listId) => _$this._listId = listId;

  GListLimitMetric? _limitMetric;
  GListLimitMetric? get limitMetric => _$this._limitMetric;
  set limitMetric(GListLimitMetric? limitMetric) =>
      _$this._limitMetric = limitMetric;

  int? _maxIssueCount;
  int? get maxIssueCount => _$this._maxIssueCount;
  set maxIssueCount(int? maxIssueCount) =>
      _$this._maxIssueCount = maxIssueCount;

  int? _maxIssueWeight;
  int? get maxIssueWeight => _$this._maxIssueWeight;
  set maxIssueWeight(int? maxIssueWeight) =>
      _$this._maxIssueWeight = maxIssueWeight;

  GBoardListUpdateLimitMetricsInputBuilder();

  GBoardListUpdateLimitMetricsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _listId = $v.listId.toBuilder();
      _limitMetric = $v.limitMetric;
      _maxIssueCount = $v.maxIssueCount;
      _maxIssueWeight = $v.maxIssueWeight;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBoardListUpdateLimitMetricsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBoardListUpdateLimitMetricsInput;
  }

  @override
  void update(
      void Function(GBoardListUpdateLimitMetricsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBoardListUpdateLimitMetricsInput build() => _build();

  _$GBoardListUpdateLimitMetricsInput _build() {
    _$GBoardListUpdateLimitMetricsInput _$result;
    try {
      _$result = _$v ??
          new _$GBoardListUpdateLimitMetricsInput._(
              clientMutationId: clientMutationId,
              listId: listId.build(),
              limitMetric: limitMetric,
              maxIssueCount: maxIssueCount,
              maxIssueWeight: maxIssueWeight);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'listId';
        listId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GBoardListUpdateLimitMetricsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GBoardsEpicBoardID extends GBoardsEpicBoardID {
  @override
  final String value;

  factory _$GBoardsEpicBoardID(
          [void Function(GBoardsEpicBoardIDBuilder)? updates]) =>
      (new GBoardsEpicBoardIDBuilder()..update(updates))._build();

  _$GBoardsEpicBoardID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GBoardsEpicBoardID', 'value');
  }

  @override
  GBoardsEpicBoardID rebuild(
          void Function(GBoardsEpicBoardIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBoardsEpicBoardIDBuilder toBuilder() =>
      new GBoardsEpicBoardIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBoardsEpicBoardID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBoardsEpicBoardID')
          ..add('value', value))
        .toString();
  }
}

class GBoardsEpicBoardIDBuilder
    implements Builder<GBoardsEpicBoardID, GBoardsEpicBoardIDBuilder> {
  _$GBoardsEpicBoardID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GBoardsEpicBoardIDBuilder();

  GBoardsEpicBoardIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBoardsEpicBoardID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBoardsEpicBoardID;
  }

  @override
  void update(void Function(GBoardsEpicBoardIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBoardsEpicBoardID build() => _build();

  _$GBoardsEpicBoardID _build() {
    final _$result = _$v ??
        new _$GBoardsEpicBoardID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GBoardsEpicBoardID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GBoardsEpicListID extends GBoardsEpicListID {
  @override
  final String value;

  factory _$GBoardsEpicListID(
          [void Function(GBoardsEpicListIDBuilder)? updates]) =>
      (new GBoardsEpicListIDBuilder()..update(updates))._build();

  _$GBoardsEpicListID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GBoardsEpicListID', 'value');
  }

  @override
  GBoardsEpicListID rebuild(void Function(GBoardsEpicListIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBoardsEpicListIDBuilder toBuilder() =>
      new GBoardsEpicListIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBoardsEpicListID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBoardsEpicListID')
          ..add('value', value))
        .toString();
  }
}

class GBoardsEpicListIDBuilder
    implements Builder<GBoardsEpicListID, GBoardsEpicListIDBuilder> {
  _$GBoardsEpicListID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GBoardsEpicListIDBuilder();

  GBoardsEpicListIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBoardsEpicListID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBoardsEpicListID;
  }

  @override
  void update(void Function(GBoardsEpicListIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBoardsEpicListID build() => _build();

  _$GBoardsEpicListID _build() {
    final _$result = _$v ??
        new _$GBoardsEpicListID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GBoardsEpicListID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GBulkEnableDevopsAdoptionNamespacesInput
    extends GBulkEnableDevopsAdoptionNamespacesInput {
  @override
  final String? clientMutationId;
  @override
  final BuiltList<GNamespaceID> namespaceIds;
  @override
  final GNamespaceID? displayNamespaceId;

  factory _$GBulkEnableDevopsAdoptionNamespacesInput(
          [void Function(GBulkEnableDevopsAdoptionNamespacesInputBuilder)?
              updates]) =>
      (new GBulkEnableDevopsAdoptionNamespacesInputBuilder()..update(updates))
          ._build();

  _$GBulkEnableDevopsAdoptionNamespacesInput._(
      {this.clientMutationId,
      required this.namespaceIds,
      this.displayNamespaceId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(namespaceIds,
        r'GBulkEnableDevopsAdoptionNamespacesInput', 'namespaceIds');
  }

  @override
  GBulkEnableDevopsAdoptionNamespacesInput rebuild(
          void Function(GBulkEnableDevopsAdoptionNamespacesInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBulkEnableDevopsAdoptionNamespacesInputBuilder toBuilder() =>
      new GBulkEnableDevopsAdoptionNamespacesInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBulkEnableDevopsAdoptionNamespacesInput &&
        clientMutationId == other.clientMutationId &&
        namespaceIds == other.namespaceIds &&
        displayNamespaceId == other.displayNamespaceId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, clientMutationId.hashCode), namespaceIds.hashCode),
        displayNamespaceId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GBulkEnableDevopsAdoptionNamespacesInput')
          ..add('clientMutationId', clientMutationId)
          ..add('namespaceIds', namespaceIds)
          ..add('displayNamespaceId', displayNamespaceId))
        .toString();
  }
}

class GBulkEnableDevopsAdoptionNamespacesInputBuilder
    implements
        Builder<GBulkEnableDevopsAdoptionNamespacesInput,
            GBulkEnableDevopsAdoptionNamespacesInputBuilder> {
  _$GBulkEnableDevopsAdoptionNamespacesInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<GNamespaceID>? _namespaceIds;
  ListBuilder<GNamespaceID> get namespaceIds =>
      _$this._namespaceIds ??= new ListBuilder<GNamespaceID>();
  set namespaceIds(ListBuilder<GNamespaceID>? namespaceIds) =>
      _$this._namespaceIds = namespaceIds;

  GNamespaceIDBuilder? _displayNamespaceId;
  GNamespaceIDBuilder get displayNamespaceId =>
      _$this._displayNamespaceId ??= new GNamespaceIDBuilder();
  set displayNamespaceId(GNamespaceIDBuilder? displayNamespaceId) =>
      _$this._displayNamespaceId = displayNamespaceId;

  GBulkEnableDevopsAdoptionNamespacesInputBuilder();

  GBulkEnableDevopsAdoptionNamespacesInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _namespaceIds = $v.namespaceIds.toBuilder();
      _displayNamespaceId = $v.displayNamespaceId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBulkEnableDevopsAdoptionNamespacesInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBulkEnableDevopsAdoptionNamespacesInput;
  }

  @override
  void update(
      void Function(GBulkEnableDevopsAdoptionNamespacesInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBulkEnableDevopsAdoptionNamespacesInput build() => _build();

  _$GBulkEnableDevopsAdoptionNamespacesInput _build() {
    _$GBulkEnableDevopsAdoptionNamespacesInput _$result;
    try {
      _$result = _$v ??
          new _$GBulkEnableDevopsAdoptionNamespacesInput._(
              clientMutationId: clientMutationId,
              namespaceIds: namespaceIds.build(),
              displayNamespaceId: _displayNamespaceId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'namespaceIds';
        namespaceIds.build();
        _$failedField = 'displayNamespaceId';
        _displayNamespaceId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GBulkEnableDevopsAdoptionNamespacesInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GBulkRunnerDeleteInput extends GBulkRunnerDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final BuiltList<GCiRunnerID>? ids;

  factory _$GBulkRunnerDeleteInput(
          [void Function(GBulkRunnerDeleteInputBuilder)? updates]) =>
      (new GBulkRunnerDeleteInputBuilder()..update(updates))._build();

  _$GBulkRunnerDeleteInput._({this.clientMutationId, this.ids}) : super._();

  @override
  GBulkRunnerDeleteInput rebuild(
          void Function(GBulkRunnerDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBulkRunnerDeleteInputBuilder toBuilder() =>
      new GBulkRunnerDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBulkRunnerDeleteInput &&
        clientMutationId == other.clientMutationId &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBulkRunnerDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('ids', ids))
        .toString();
  }
}

class GBulkRunnerDeleteInputBuilder
    implements Builder<GBulkRunnerDeleteInput, GBulkRunnerDeleteInputBuilder> {
  _$GBulkRunnerDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<GCiRunnerID>? _ids;
  ListBuilder<GCiRunnerID> get ids =>
      _$this._ids ??= new ListBuilder<GCiRunnerID>();
  set ids(ListBuilder<GCiRunnerID>? ids) => _$this._ids = ids;

  GBulkRunnerDeleteInputBuilder();

  GBulkRunnerDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _ids = $v.ids?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBulkRunnerDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBulkRunnerDeleteInput;
  }

  @override
  void update(void Function(GBulkRunnerDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBulkRunnerDeleteInput build() => _build();

  _$GBulkRunnerDeleteInput _build() {
    _$GBulkRunnerDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GBulkRunnerDeleteInput._(
              clientMutationId: clientMutationId, ids: _ids?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GBulkRunnerDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCiBuildID extends GCiBuildID {
  @override
  final String value;

  factory _$GCiBuildID([void Function(GCiBuildIDBuilder)? updates]) =>
      (new GCiBuildIDBuilder()..update(updates))._build();

  _$GCiBuildID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GCiBuildID', 'value');
  }

  @override
  GCiBuildID rebuild(void Function(GCiBuildIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCiBuildIDBuilder toBuilder() => new GCiBuildIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCiBuildID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCiBuildID')..add('value', value))
        .toString();
  }
}

class GCiBuildIDBuilder implements Builder<GCiBuildID, GCiBuildIDBuilder> {
  _$GCiBuildID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GCiBuildIDBuilder();

  GCiBuildIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCiBuildID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCiBuildID;
  }

  @override
  void update(void Function(GCiBuildIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCiBuildID build() => _build();

  _$GCiBuildID _build() {
    final _$result = _$v ??
        new _$GCiBuildID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GCiBuildID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GCiCdSettingsUpdateInput extends GCiCdSettingsUpdateInput {
  @override
  final String fullPath;
  @override
  final bool? keepLatestArtifact;
  @override
  final bool? jobTokenScopeEnabled;
  @override
  final bool? mergePipelinesEnabled;
  @override
  final bool? mergeTrainsEnabled;
  @override
  final String? clientMutationId;

  factory _$GCiCdSettingsUpdateInput(
          [void Function(GCiCdSettingsUpdateInputBuilder)? updates]) =>
      (new GCiCdSettingsUpdateInputBuilder()..update(updates))._build();

  _$GCiCdSettingsUpdateInput._(
      {required this.fullPath,
      this.keepLatestArtifact,
      this.jobTokenScopeEnabled,
      this.mergePipelinesEnabled,
      this.mergeTrainsEnabled,
      this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GCiCdSettingsUpdateInput', 'fullPath');
  }

  @override
  GCiCdSettingsUpdateInput rebuild(
          void Function(GCiCdSettingsUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCiCdSettingsUpdateInputBuilder toBuilder() =>
      new GCiCdSettingsUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCiCdSettingsUpdateInput &&
        fullPath == other.fullPath &&
        keepLatestArtifact == other.keepLatestArtifact &&
        jobTokenScopeEnabled == other.jobTokenScopeEnabled &&
        mergePipelinesEnabled == other.mergePipelinesEnabled &&
        mergeTrainsEnabled == other.mergeTrainsEnabled &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, fullPath.hashCode), keepLatestArtifact.hashCode),
                    jobTokenScopeEnabled.hashCode),
                mergePipelinesEnabled.hashCode),
            mergeTrainsEnabled.hashCode),
        clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCiCdSettingsUpdateInput')
          ..add('fullPath', fullPath)
          ..add('keepLatestArtifact', keepLatestArtifact)
          ..add('jobTokenScopeEnabled', jobTokenScopeEnabled)
          ..add('mergePipelinesEnabled', mergePipelinesEnabled)
          ..add('mergeTrainsEnabled', mergeTrainsEnabled)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GCiCdSettingsUpdateInputBuilder
    implements
        Builder<GCiCdSettingsUpdateInput, GCiCdSettingsUpdateInputBuilder> {
  _$GCiCdSettingsUpdateInput? _$v;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  bool? _keepLatestArtifact;
  bool? get keepLatestArtifact => _$this._keepLatestArtifact;
  set keepLatestArtifact(bool? keepLatestArtifact) =>
      _$this._keepLatestArtifact = keepLatestArtifact;

  bool? _jobTokenScopeEnabled;
  bool? get jobTokenScopeEnabled => _$this._jobTokenScopeEnabled;
  set jobTokenScopeEnabled(bool? jobTokenScopeEnabled) =>
      _$this._jobTokenScopeEnabled = jobTokenScopeEnabled;

  bool? _mergePipelinesEnabled;
  bool? get mergePipelinesEnabled => _$this._mergePipelinesEnabled;
  set mergePipelinesEnabled(bool? mergePipelinesEnabled) =>
      _$this._mergePipelinesEnabled = mergePipelinesEnabled;

  bool? _mergeTrainsEnabled;
  bool? get mergeTrainsEnabled => _$this._mergeTrainsEnabled;
  set mergeTrainsEnabled(bool? mergeTrainsEnabled) =>
      _$this._mergeTrainsEnabled = mergeTrainsEnabled;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCiCdSettingsUpdateInputBuilder();

  GCiCdSettingsUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _fullPath = $v.fullPath;
      _keepLatestArtifact = $v.keepLatestArtifact;
      _jobTokenScopeEnabled = $v.jobTokenScopeEnabled;
      _mergePipelinesEnabled = $v.mergePipelinesEnabled;
      _mergeTrainsEnabled = $v.mergeTrainsEnabled;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCiCdSettingsUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCiCdSettingsUpdateInput;
  }

  @override
  void update(void Function(GCiCdSettingsUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCiCdSettingsUpdateInput build() => _build();

  _$GCiCdSettingsUpdateInput _build() {
    final _$result = _$v ??
        new _$GCiCdSettingsUpdateInput._(
            fullPath: BuiltValueNullFieldError.checkNotNull(
                fullPath, r'GCiCdSettingsUpdateInput', 'fullPath'),
            keepLatestArtifact: keepLatestArtifact,
            jobTokenScopeEnabled: jobTokenScopeEnabled,
            mergePipelinesEnabled: mergePipelinesEnabled,
            mergeTrainsEnabled: mergeTrainsEnabled,
            clientMutationId: clientMutationId);
    replace(_$result);
    return _$result;
  }
}

class _$GCiJobArtifactID extends GCiJobArtifactID {
  @override
  final String value;

  factory _$GCiJobArtifactID(
          [void Function(GCiJobArtifactIDBuilder)? updates]) =>
      (new GCiJobArtifactIDBuilder()..update(updates))._build();

  _$GCiJobArtifactID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GCiJobArtifactID', 'value');
  }

  @override
  GCiJobArtifactID rebuild(void Function(GCiJobArtifactIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCiJobArtifactIDBuilder toBuilder() =>
      new GCiJobArtifactIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCiJobArtifactID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCiJobArtifactID')
          ..add('value', value))
        .toString();
  }
}

class GCiJobArtifactIDBuilder
    implements Builder<GCiJobArtifactID, GCiJobArtifactIDBuilder> {
  _$GCiJobArtifactID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GCiJobArtifactIDBuilder();

  GCiJobArtifactIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCiJobArtifactID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCiJobArtifactID;
  }

  @override
  void update(void Function(GCiJobArtifactIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCiJobArtifactID build() => _build();

  _$GCiJobArtifactID _build() {
    final _$result = _$v ??
        new _$GCiJobArtifactID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GCiJobArtifactID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GCiJobTokenScopeAddProjectInput
    extends GCiJobTokenScopeAddProjectInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String targetProjectPath;

  factory _$GCiJobTokenScopeAddProjectInput(
          [void Function(GCiJobTokenScopeAddProjectInputBuilder)? updates]) =>
      (new GCiJobTokenScopeAddProjectInputBuilder()..update(updates))._build();

  _$GCiJobTokenScopeAddProjectInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.targetProjectPath})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GCiJobTokenScopeAddProjectInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(targetProjectPath,
        r'GCiJobTokenScopeAddProjectInput', 'targetProjectPath');
  }

  @override
  GCiJobTokenScopeAddProjectInput rebuild(
          void Function(GCiJobTokenScopeAddProjectInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCiJobTokenScopeAddProjectInputBuilder toBuilder() =>
      new GCiJobTokenScopeAddProjectInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCiJobTokenScopeAddProjectInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        targetProjectPath == other.targetProjectPath;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
        targetProjectPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCiJobTokenScopeAddProjectInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('targetProjectPath', targetProjectPath))
        .toString();
  }
}

class GCiJobTokenScopeAddProjectInputBuilder
    implements
        Builder<GCiJobTokenScopeAddProjectInput,
            GCiJobTokenScopeAddProjectInputBuilder> {
  _$GCiJobTokenScopeAddProjectInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _targetProjectPath;
  String? get targetProjectPath => _$this._targetProjectPath;
  set targetProjectPath(String? targetProjectPath) =>
      _$this._targetProjectPath = targetProjectPath;

  GCiJobTokenScopeAddProjectInputBuilder();

  GCiJobTokenScopeAddProjectInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _targetProjectPath = $v.targetProjectPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCiJobTokenScopeAddProjectInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCiJobTokenScopeAddProjectInput;
  }

  @override
  void update(void Function(GCiJobTokenScopeAddProjectInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCiJobTokenScopeAddProjectInput build() => _build();

  _$GCiJobTokenScopeAddProjectInput _build() {
    final _$result = _$v ??
        new _$GCiJobTokenScopeAddProjectInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GCiJobTokenScopeAddProjectInput', 'projectPath'),
            targetProjectPath: BuiltValueNullFieldError.checkNotNull(
                targetProjectPath,
                r'GCiJobTokenScopeAddProjectInput',
                'targetProjectPath'));
    replace(_$result);
    return _$result;
  }
}

class _$GCiJobTokenScopeRemoveProjectInput
    extends GCiJobTokenScopeRemoveProjectInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String targetProjectPath;

  factory _$GCiJobTokenScopeRemoveProjectInput(
          [void Function(GCiJobTokenScopeRemoveProjectInputBuilder)?
              updates]) =>
      (new GCiJobTokenScopeRemoveProjectInputBuilder()..update(updates))
          ._build();

  _$GCiJobTokenScopeRemoveProjectInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.targetProjectPath})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GCiJobTokenScopeRemoveProjectInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(targetProjectPath,
        r'GCiJobTokenScopeRemoveProjectInput', 'targetProjectPath');
  }

  @override
  GCiJobTokenScopeRemoveProjectInput rebuild(
          void Function(GCiJobTokenScopeRemoveProjectInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCiJobTokenScopeRemoveProjectInputBuilder toBuilder() =>
      new GCiJobTokenScopeRemoveProjectInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCiJobTokenScopeRemoveProjectInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        targetProjectPath == other.targetProjectPath;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
        targetProjectPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCiJobTokenScopeRemoveProjectInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('targetProjectPath', targetProjectPath))
        .toString();
  }
}

class GCiJobTokenScopeRemoveProjectInputBuilder
    implements
        Builder<GCiJobTokenScopeRemoveProjectInput,
            GCiJobTokenScopeRemoveProjectInputBuilder> {
  _$GCiJobTokenScopeRemoveProjectInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _targetProjectPath;
  String? get targetProjectPath => _$this._targetProjectPath;
  set targetProjectPath(String? targetProjectPath) =>
      _$this._targetProjectPath = targetProjectPath;

  GCiJobTokenScopeRemoveProjectInputBuilder();

  GCiJobTokenScopeRemoveProjectInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _targetProjectPath = $v.targetProjectPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCiJobTokenScopeRemoveProjectInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCiJobTokenScopeRemoveProjectInput;
  }

  @override
  void update(
      void Function(GCiJobTokenScopeRemoveProjectInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCiJobTokenScopeRemoveProjectInput build() => _build();

  _$GCiJobTokenScopeRemoveProjectInput _build() {
    final _$result = _$v ??
        new _$GCiJobTokenScopeRemoveProjectInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                r'GCiJobTokenScopeRemoveProjectInput', 'projectPath'),
            targetProjectPath: BuiltValueNullFieldError.checkNotNull(
                targetProjectPath,
                r'GCiJobTokenScopeRemoveProjectInput',
                'targetProjectPath'));
    replace(_$result);
    return _$result;
  }
}

class _$GCiPipelineID extends GCiPipelineID {
  @override
  final String value;

  factory _$GCiPipelineID([void Function(GCiPipelineIDBuilder)? updates]) =>
      (new GCiPipelineIDBuilder()..update(updates))._build();

  _$GCiPipelineID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GCiPipelineID', 'value');
  }

  @override
  GCiPipelineID rebuild(void Function(GCiPipelineIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCiPipelineIDBuilder toBuilder() => new GCiPipelineIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCiPipelineID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCiPipelineID')..add('value', value))
        .toString();
  }
}

class GCiPipelineIDBuilder
    implements Builder<GCiPipelineID, GCiPipelineIDBuilder> {
  _$GCiPipelineID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GCiPipelineIDBuilder();

  GCiPipelineIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCiPipelineID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCiPipelineID;
  }

  @override
  void update(void Function(GCiPipelineIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCiPipelineID build() => _build();

  _$GCiPipelineID _build() {
    final _$result = _$v ??
        new _$GCiPipelineID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GCiPipelineID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GCiRunnerID extends GCiRunnerID {
  @override
  final String value;

  factory _$GCiRunnerID([void Function(GCiRunnerIDBuilder)? updates]) =>
      (new GCiRunnerIDBuilder()..update(updates))._build();

  _$GCiRunnerID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GCiRunnerID', 'value');
  }

  @override
  GCiRunnerID rebuild(void Function(GCiRunnerIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCiRunnerIDBuilder toBuilder() => new GCiRunnerIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCiRunnerID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCiRunnerID')..add('value', value))
        .toString();
  }
}

class GCiRunnerIDBuilder implements Builder<GCiRunnerID, GCiRunnerIDBuilder> {
  _$GCiRunnerID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GCiRunnerIDBuilder();

  GCiRunnerIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCiRunnerID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCiRunnerID;
  }

  @override
  void update(void Function(GCiRunnerIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCiRunnerID build() => _build();

  _$GCiRunnerID _build() {
    final _$result = _$v ??
        new _$GCiRunnerID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GCiRunnerID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GCiVariableInput extends GCiVariableInput {
  @override
  final String key;
  @override
  final String value;

  factory _$GCiVariableInput(
          [void Function(GCiVariableInputBuilder)? updates]) =>
      (new GCiVariableInputBuilder()..update(updates))._build();

  _$GCiVariableInput._({required this.key, required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(key, r'GCiVariableInput', 'key');
    BuiltValueNullFieldError.checkNotNull(value, r'GCiVariableInput', 'value');
  }

  @override
  GCiVariableInput rebuild(void Function(GCiVariableInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCiVariableInputBuilder toBuilder() =>
      new GCiVariableInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCiVariableInput &&
        key == other.key &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, key.hashCode), value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCiVariableInput')
          ..add('key', key)
          ..add('value', value))
        .toString();
  }
}

class GCiVariableInputBuilder
    implements Builder<GCiVariableInput, GCiVariableInputBuilder> {
  _$GCiVariableInput? _$v;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GCiVariableInputBuilder();

  GCiVariableInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _key = $v.key;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCiVariableInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCiVariableInput;
  }

  @override
  void update(void Function(GCiVariableInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCiVariableInput build() => _build();

  _$GCiVariableInput _build() {
    final _$result = _$v ??
        new _$GCiVariableInput._(
            key: BuiltValueNullFieldError.checkNotNull(
                key, r'GCiVariableInput', 'key'),
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GCiVariableInput', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GClusterAgentDeleteInput extends GClusterAgentDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final GClustersAgentID id;

  factory _$GClusterAgentDeleteInput(
          [void Function(GClusterAgentDeleteInputBuilder)? updates]) =>
      (new GClusterAgentDeleteInputBuilder()..update(updates))._build();

  _$GClusterAgentDeleteInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GClusterAgentDeleteInput', 'id');
  }

  @override
  GClusterAgentDeleteInput rebuild(
          void Function(GClusterAgentDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GClusterAgentDeleteInputBuilder toBuilder() =>
      new GClusterAgentDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GClusterAgentDeleteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GClusterAgentDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GClusterAgentDeleteInputBuilder
    implements
        Builder<GClusterAgentDeleteInput, GClusterAgentDeleteInputBuilder> {
  _$GClusterAgentDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GClustersAgentIDBuilder? _id;
  GClustersAgentIDBuilder get id =>
      _$this._id ??= new GClustersAgentIDBuilder();
  set id(GClustersAgentIDBuilder? id) => _$this._id = id;

  GClusterAgentDeleteInputBuilder();

  GClusterAgentDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GClusterAgentDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GClusterAgentDeleteInput;
  }

  @override
  void update(void Function(GClusterAgentDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GClusterAgentDeleteInput build() => _build();

  _$GClusterAgentDeleteInput _build() {
    _$GClusterAgentDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GClusterAgentDeleteInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GClusterAgentDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GClusterAgentTokenCreateInput extends GClusterAgentTokenCreateInput {
  @override
  final String? clientMutationId;
  @override
  final GClustersAgentID clusterAgentId;
  @override
  final String? description;
  @override
  final String name;

  factory _$GClusterAgentTokenCreateInput(
          [void Function(GClusterAgentTokenCreateInputBuilder)? updates]) =>
      (new GClusterAgentTokenCreateInputBuilder()..update(updates))._build();

  _$GClusterAgentTokenCreateInput._(
      {this.clientMutationId,
      required this.clusterAgentId,
      this.description,
      required this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        clusterAgentId, r'GClusterAgentTokenCreateInput', 'clusterAgentId');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GClusterAgentTokenCreateInput', 'name');
  }

  @override
  GClusterAgentTokenCreateInput rebuild(
          void Function(GClusterAgentTokenCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GClusterAgentTokenCreateInputBuilder toBuilder() =>
      new GClusterAgentTokenCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GClusterAgentTokenCreateInput &&
        clientMutationId == other.clientMutationId &&
        clusterAgentId == other.clusterAgentId &&
        description == other.description &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), clusterAgentId.hashCode),
            description.hashCode),
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GClusterAgentTokenCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('clusterAgentId', clusterAgentId)
          ..add('description', description)
          ..add('name', name))
        .toString();
  }
}

class GClusterAgentTokenCreateInputBuilder
    implements
        Builder<GClusterAgentTokenCreateInput,
            GClusterAgentTokenCreateInputBuilder> {
  _$GClusterAgentTokenCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GClustersAgentIDBuilder? _clusterAgentId;
  GClustersAgentIDBuilder get clusterAgentId =>
      _$this._clusterAgentId ??= new GClustersAgentIDBuilder();
  set clusterAgentId(GClustersAgentIDBuilder? clusterAgentId) =>
      _$this._clusterAgentId = clusterAgentId;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GClusterAgentTokenCreateInputBuilder();

  GClusterAgentTokenCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _clusterAgentId = $v.clusterAgentId.toBuilder();
      _description = $v.description;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GClusterAgentTokenCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GClusterAgentTokenCreateInput;
  }

  @override
  void update(void Function(GClusterAgentTokenCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GClusterAgentTokenCreateInput build() => _build();

  _$GClusterAgentTokenCreateInput _build() {
    _$GClusterAgentTokenCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GClusterAgentTokenCreateInput._(
              clientMutationId: clientMutationId,
              clusterAgentId: clusterAgentId.build(),
              description: description,
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GClusterAgentTokenCreateInput', 'name'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'clusterAgentId';
        clusterAgentId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GClusterAgentTokenCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GClusterAgentTokenRevokeInput extends GClusterAgentTokenRevokeInput {
  @override
  final String? clientMutationId;
  @override
  final GClustersAgentTokenID id;

  factory _$GClusterAgentTokenRevokeInput(
          [void Function(GClusterAgentTokenRevokeInputBuilder)? updates]) =>
      (new GClusterAgentTokenRevokeInputBuilder()..update(updates))._build();

  _$GClusterAgentTokenRevokeInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GClusterAgentTokenRevokeInput', 'id');
  }

  @override
  GClusterAgentTokenRevokeInput rebuild(
          void Function(GClusterAgentTokenRevokeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GClusterAgentTokenRevokeInputBuilder toBuilder() =>
      new GClusterAgentTokenRevokeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GClusterAgentTokenRevokeInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GClusterAgentTokenRevokeInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GClusterAgentTokenRevokeInputBuilder
    implements
        Builder<GClusterAgentTokenRevokeInput,
            GClusterAgentTokenRevokeInputBuilder> {
  _$GClusterAgentTokenRevokeInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GClustersAgentTokenIDBuilder? _id;
  GClustersAgentTokenIDBuilder get id =>
      _$this._id ??= new GClustersAgentTokenIDBuilder();
  set id(GClustersAgentTokenIDBuilder? id) => _$this._id = id;

  GClusterAgentTokenRevokeInputBuilder();

  GClusterAgentTokenRevokeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GClusterAgentTokenRevokeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GClusterAgentTokenRevokeInput;
  }

  @override
  void update(void Function(GClusterAgentTokenRevokeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GClusterAgentTokenRevokeInput build() => _build();

  _$GClusterAgentTokenRevokeInput _build() {
    _$GClusterAgentTokenRevokeInput _$result;
    try {
      _$result = _$v ??
          new _$GClusterAgentTokenRevokeInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GClusterAgentTokenRevokeInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GClustersAgentID extends GClustersAgentID {
  @override
  final String value;

  factory _$GClustersAgentID(
          [void Function(GClustersAgentIDBuilder)? updates]) =>
      (new GClustersAgentIDBuilder()..update(updates))._build();

  _$GClustersAgentID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GClustersAgentID', 'value');
  }

  @override
  GClustersAgentID rebuild(void Function(GClustersAgentIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GClustersAgentIDBuilder toBuilder() =>
      new GClustersAgentIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GClustersAgentID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GClustersAgentID')
          ..add('value', value))
        .toString();
  }
}

class GClustersAgentIDBuilder
    implements Builder<GClustersAgentID, GClustersAgentIDBuilder> {
  _$GClustersAgentID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GClustersAgentIDBuilder();

  GClustersAgentIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GClustersAgentID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GClustersAgentID;
  }

  @override
  void update(void Function(GClustersAgentIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GClustersAgentID build() => _build();

  _$GClustersAgentID _build() {
    final _$result = _$v ??
        new _$GClustersAgentID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GClustersAgentID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GClustersAgentTokenID extends GClustersAgentTokenID {
  @override
  final String value;

  factory _$GClustersAgentTokenID(
          [void Function(GClustersAgentTokenIDBuilder)? updates]) =>
      (new GClustersAgentTokenIDBuilder()..update(updates))._build();

  _$GClustersAgentTokenID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GClustersAgentTokenID', 'value');
  }

  @override
  GClustersAgentTokenID rebuild(
          void Function(GClustersAgentTokenIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GClustersAgentTokenIDBuilder toBuilder() =>
      new GClustersAgentTokenIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GClustersAgentTokenID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GClustersAgentTokenID')
          ..add('value', value))
        .toString();
  }
}

class GClustersAgentTokenIDBuilder
    implements Builder<GClustersAgentTokenID, GClustersAgentTokenIDBuilder> {
  _$GClustersAgentTokenID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GClustersAgentTokenIDBuilder();

  GClustersAgentTokenIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GClustersAgentTokenID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GClustersAgentTokenID;
  }

  @override
  void update(void Function(GClustersAgentTokenIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GClustersAgentTokenID build() => _build();

  _$GClustersAgentTokenID _build() {
    final _$result = _$v ??
        new _$GClustersAgentTokenID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GClustersAgentTokenID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GClustersClusterID extends GClustersClusterID {
  @override
  final String value;

  factory _$GClustersClusterID(
          [void Function(GClustersClusterIDBuilder)? updates]) =>
      (new GClustersClusterIDBuilder()..update(updates))._build();

  _$GClustersClusterID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GClustersClusterID', 'value');
  }

  @override
  GClustersClusterID rebuild(
          void Function(GClustersClusterIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GClustersClusterIDBuilder toBuilder() =>
      new GClustersClusterIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GClustersClusterID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GClustersClusterID')
          ..add('value', value))
        .toString();
  }
}

class GClustersClusterIDBuilder
    implements Builder<GClustersClusterID, GClustersClusterIDBuilder> {
  _$GClustersClusterID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GClustersClusterIDBuilder();

  GClustersClusterIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GClustersClusterID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GClustersClusterID;
  }

  @override
  void update(void Function(GClustersClusterIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GClustersClusterID build() => _build();

  _$GClustersClusterID _build() {
    final _$result = _$v ??
        new _$GClustersClusterID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GClustersClusterID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GColor extends GColor {
  @override
  final String value;

  factory _$GColor([void Function(GColorBuilder)? updates]) =>
      (new GColorBuilder()..update(updates))._build();

  _$GColor._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GColor', 'value');
  }

  @override
  GColor rebuild(void Function(GColorBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GColorBuilder toBuilder() => new GColorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GColor && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GColor')..add('value', value))
        .toString();
  }
}

class GColorBuilder implements Builder<GColor, GColorBuilder> {
  _$GColor? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GColorBuilder();

  GColorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GColor other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GColor;
  }

  @override
  void update(void Function(GColorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GColor build() => _build();

  _$GColor _build() {
    final _$result = _$v ??
        new _$GColor._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GColor', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GCommitAction extends GCommitAction {
  @override
  final GCommitActionMode action;
  @override
  final String? content;
  @override
  final GCommitEncoding? encoding;
  @override
  final bool? executeFilemode;
  @override
  final String filePath;
  @override
  final String? lastCommitId;
  @override
  final String? previousPath;

  factory _$GCommitAction([void Function(GCommitActionBuilder)? updates]) =>
      (new GCommitActionBuilder()..update(updates))._build();

  _$GCommitAction._(
      {required this.action,
      this.content,
      this.encoding,
      this.executeFilemode,
      required this.filePath,
      this.lastCommitId,
      this.previousPath})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(action, r'GCommitAction', 'action');
    BuiltValueNullFieldError.checkNotNull(
        filePath, r'GCommitAction', 'filePath');
  }

  @override
  GCommitAction rebuild(void Function(GCommitActionBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCommitActionBuilder toBuilder() => new GCommitActionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCommitAction &&
        action == other.action &&
        content == other.content &&
        encoding == other.encoding &&
        executeFilemode == other.executeFilemode &&
        filePath == other.filePath &&
        lastCommitId == other.lastCommitId &&
        previousPath == other.previousPath;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, action.hashCode), content.hashCode),
                        encoding.hashCode),
                    executeFilemode.hashCode),
                filePath.hashCode),
            lastCommitId.hashCode),
        previousPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCommitAction')
          ..add('action', action)
          ..add('content', content)
          ..add('encoding', encoding)
          ..add('executeFilemode', executeFilemode)
          ..add('filePath', filePath)
          ..add('lastCommitId', lastCommitId)
          ..add('previousPath', previousPath))
        .toString();
  }
}

class GCommitActionBuilder
    implements Builder<GCommitAction, GCommitActionBuilder> {
  _$GCommitAction? _$v;

  GCommitActionMode? _action;
  GCommitActionMode? get action => _$this._action;
  set action(GCommitActionMode? action) => _$this._action = action;

  String? _content;
  String? get content => _$this._content;
  set content(String? content) => _$this._content = content;

  GCommitEncoding? _encoding;
  GCommitEncoding? get encoding => _$this._encoding;
  set encoding(GCommitEncoding? encoding) => _$this._encoding = encoding;

  bool? _executeFilemode;
  bool? get executeFilemode => _$this._executeFilemode;
  set executeFilemode(bool? executeFilemode) =>
      _$this._executeFilemode = executeFilemode;

  String? _filePath;
  String? get filePath => _$this._filePath;
  set filePath(String? filePath) => _$this._filePath = filePath;

  String? _lastCommitId;
  String? get lastCommitId => _$this._lastCommitId;
  set lastCommitId(String? lastCommitId) => _$this._lastCommitId = lastCommitId;

  String? _previousPath;
  String? get previousPath => _$this._previousPath;
  set previousPath(String? previousPath) => _$this._previousPath = previousPath;

  GCommitActionBuilder();

  GCommitActionBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _action = $v.action;
      _content = $v.content;
      _encoding = $v.encoding;
      _executeFilemode = $v.executeFilemode;
      _filePath = $v.filePath;
      _lastCommitId = $v.lastCommitId;
      _previousPath = $v.previousPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCommitAction other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCommitAction;
  }

  @override
  void update(void Function(GCommitActionBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCommitAction build() => _build();

  _$GCommitAction _build() {
    final _$result = _$v ??
        new _$GCommitAction._(
            action: BuiltValueNullFieldError.checkNotNull(
                action, r'GCommitAction', 'action'),
            content: content,
            encoding: encoding,
            executeFilemode: executeFilemode,
            filePath: BuiltValueNullFieldError.checkNotNull(
                filePath, r'GCommitAction', 'filePath'),
            lastCommitId: lastCommitId,
            previousPath: previousPath);
    replace(_$result);
    return _$result;
  }
}

class _$GCommitCreateInput extends GCommitCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String branch;
  @override
  final String? startBranch;
  @override
  final String message;
  @override
  final BuiltList<GCommitAction> actions;

  factory _$GCommitCreateInput(
          [void Function(GCommitCreateInputBuilder)? updates]) =>
      (new GCommitCreateInputBuilder()..update(updates))._build();

  _$GCommitCreateInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.branch,
      this.startBranch,
      required this.message,
      required this.actions})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GCommitCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        branch, r'GCommitCreateInput', 'branch');
    BuiltValueNullFieldError.checkNotNull(
        message, r'GCommitCreateInput', 'message');
    BuiltValueNullFieldError.checkNotNull(
        actions, r'GCommitCreateInput', 'actions');
  }

  @override
  GCommitCreateInput rebuild(
          void Function(GCommitCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCommitCreateInputBuilder toBuilder() =>
      new GCommitCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCommitCreateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        branch == other.branch &&
        startBranch == other.startBranch &&
        message == other.message &&
        actions == other.actions;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc(0, clientMutationId.hashCode),
                        projectPath.hashCode),
                    branch.hashCode),
                startBranch.hashCode),
            message.hashCode),
        actions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCommitCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('branch', branch)
          ..add('startBranch', startBranch)
          ..add('message', message)
          ..add('actions', actions))
        .toString();
  }
}

class GCommitCreateInputBuilder
    implements Builder<GCommitCreateInput, GCommitCreateInputBuilder> {
  _$GCommitCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _branch;
  String? get branch => _$this._branch;
  set branch(String? branch) => _$this._branch = branch;

  String? _startBranch;
  String? get startBranch => _$this._startBranch;
  set startBranch(String? startBranch) => _$this._startBranch = startBranch;

  String? _message;
  String? get message => _$this._message;
  set message(String? message) => _$this._message = message;

  ListBuilder<GCommitAction>? _actions;
  ListBuilder<GCommitAction> get actions =>
      _$this._actions ??= new ListBuilder<GCommitAction>();
  set actions(ListBuilder<GCommitAction>? actions) => _$this._actions = actions;

  GCommitCreateInputBuilder();

  GCommitCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _branch = $v.branch;
      _startBranch = $v.startBranch;
      _message = $v.message;
      _actions = $v.actions.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCommitCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCommitCreateInput;
  }

  @override
  void update(void Function(GCommitCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCommitCreateInput build() => _build();

  _$GCommitCreateInput _build() {
    _$GCommitCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GCommitCreateInput._(
              clientMutationId: clientMutationId,
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GCommitCreateInput', 'projectPath'),
              branch: BuiltValueNullFieldError.checkNotNull(
                  branch, r'GCommitCreateInput', 'branch'),
              startBranch: startBranch,
              message: BuiltValueNullFieldError.checkNotNull(
                  message, r'GCommitCreateInput', 'message'),
              actions: actions.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'actions';
        actions.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCommitCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GComplianceFrameworkInput extends GComplianceFrameworkInput {
  @override
  final String? name;
  @override
  final String? description;
  @override
  final String? color;
  @override
  final String? pipelineConfigurationFullPath;

  factory _$GComplianceFrameworkInput(
          [void Function(GComplianceFrameworkInputBuilder)? updates]) =>
      (new GComplianceFrameworkInputBuilder()..update(updates))._build();

  _$GComplianceFrameworkInput._(
      {this.name,
      this.description,
      this.color,
      this.pipelineConfigurationFullPath})
      : super._();

  @override
  GComplianceFrameworkInput rebuild(
          void Function(GComplianceFrameworkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GComplianceFrameworkInputBuilder toBuilder() =>
      new GComplianceFrameworkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GComplianceFrameworkInput &&
        name == other.name &&
        description == other.description &&
        color == other.color &&
        pipelineConfigurationFullPath == other.pipelineConfigurationFullPath;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, name.hashCode), description.hashCode), color.hashCode),
        pipelineConfigurationFullPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GComplianceFrameworkInput')
          ..add('name', name)
          ..add('description', description)
          ..add('color', color)
          ..add('pipelineConfigurationFullPath', pipelineConfigurationFullPath))
        .toString();
  }
}

class GComplianceFrameworkInputBuilder
    implements
        Builder<GComplianceFrameworkInput, GComplianceFrameworkInputBuilder> {
  _$GComplianceFrameworkInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _color;
  String? get color => _$this._color;
  set color(String? color) => _$this._color = color;

  String? _pipelineConfigurationFullPath;
  String? get pipelineConfigurationFullPath =>
      _$this._pipelineConfigurationFullPath;
  set pipelineConfigurationFullPath(String? pipelineConfigurationFullPath) =>
      _$this._pipelineConfigurationFullPath = pipelineConfigurationFullPath;

  GComplianceFrameworkInputBuilder();

  GComplianceFrameworkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _description = $v.description;
      _color = $v.color;
      _pipelineConfigurationFullPath = $v.pipelineConfigurationFullPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GComplianceFrameworkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GComplianceFrameworkInput;
  }

  @override
  void update(void Function(GComplianceFrameworkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GComplianceFrameworkInput build() => _build();

  _$GComplianceFrameworkInput _build() {
    final _$result = _$v ??
        new _$GComplianceFrameworkInput._(
            name: name,
            description: description,
            color: color,
            pipelineConfigurationFullPath: pipelineConfigurationFullPath);
    replace(_$result);
    return _$result;
  }
}

class _$GComplianceManagementFrameworkID
    extends GComplianceManagementFrameworkID {
  @override
  final String value;

  factory _$GComplianceManagementFrameworkID(
          [void Function(GComplianceManagementFrameworkIDBuilder)? updates]) =>
      (new GComplianceManagementFrameworkIDBuilder()..update(updates))._build();

  _$GComplianceManagementFrameworkID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GComplianceManagementFrameworkID', 'value');
  }

  @override
  GComplianceManagementFrameworkID rebuild(
          void Function(GComplianceManagementFrameworkIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GComplianceManagementFrameworkIDBuilder toBuilder() =>
      new GComplianceManagementFrameworkIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GComplianceManagementFrameworkID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GComplianceManagementFrameworkID')
          ..add('value', value))
        .toString();
  }
}

class GComplianceManagementFrameworkIDBuilder
    implements
        Builder<GComplianceManagementFrameworkID,
            GComplianceManagementFrameworkIDBuilder> {
  _$GComplianceManagementFrameworkID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GComplianceManagementFrameworkIDBuilder();

  GComplianceManagementFrameworkIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GComplianceManagementFrameworkID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GComplianceManagementFrameworkID;
  }

  @override
  void update(void Function(GComplianceManagementFrameworkIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GComplianceManagementFrameworkID build() => _build();

  _$GComplianceManagementFrameworkID _build() {
    final _$result = _$v ??
        new _$GComplianceManagementFrameworkID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GComplianceManagementFrameworkID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GComplianceViolationInput extends GComplianceViolationInput {
  @override
  final BuiltList<GProjectID>? projectIds;
  @override
  final GDate? mergedBefore;
  @override
  final GDate? mergedAfter;

  factory _$GComplianceViolationInput(
          [void Function(GComplianceViolationInputBuilder)? updates]) =>
      (new GComplianceViolationInputBuilder()..update(updates))._build();

  _$GComplianceViolationInput._(
      {this.projectIds, this.mergedBefore, this.mergedAfter})
      : super._();

  @override
  GComplianceViolationInput rebuild(
          void Function(GComplianceViolationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GComplianceViolationInputBuilder toBuilder() =>
      new GComplianceViolationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GComplianceViolationInput &&
        projectIds == other.projectIds &&
        mergedBefore == other.mergedBefore &&
        mergedAfter == other.mergedAfter;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, projectIds.hashCode), mergedBefore.hashCode),
        mergedAfter.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GComplianceViolationInput')
          ..add('projectIds', projectIds)
          ..add('mergedBefore', mergedBefore)
          ..add('mergedAfter', mergedAfter))
        .toString();
  }
}

class GComplianceViolationInputBuilder
    implements
        Builder<GComplianceViolationInput, GComplianceViolationInputBuilder> {
  _$GComplianceViolationInput? _$v;

  ListBuilder<GProjectID>? _projectIds;
  ListBuilder<GProjectID> get projectIds =>
      _$this._projectIds ??= new ListBuilder<GProjectID>();
  set projectIds(ListBuilder<GProjectID>? projectIds) =>
      _$this._projectIds = projectIds;

  GDateBuilder? _mergedBefore;
  GDateBuilder get mergedBefore => _$this._mergedBefore ??= new GDateBuilder();
  set mergedBefore(GDateBuilder? mergedBefore) =>
      _$this._mergedBefore = mergedBefore;

  GDateBuilder? _mergedAfter;
  GDateBuilder get mergedAfter => _$this._mergedAfter ??= new GDateBuilder();
  set mergedAfter(GDateBuilder? mergedAfter) =>
      _$this._mergedAfter = mergedAfter;

  GComplianceViolationInputBuilder();

  GComplianceViolationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectIds = $v.projectIds?.toBuilder();
      _mergedBefore = $v.mergedBefore?.toBuilder();
      _mergedAfter = $v.mergedAfter?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GComplianceViolationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GComplianceViolationInput;
  }

  @override
  void update(void Function(GComplianceViolationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GComplianceViolationInput build() => _build();

  _$GComplianceViolationInput _build() {
    _$GComplianceViolationInput _$result;
    try {
      _$result = _$v ??
          new _$GComplianceViolationInput._(
              projectIds: _projectIds?.build(),
              mergedBefore: _mergedBefore?.build(),
              mergedAfter: _mergedAfter?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'projectIds';
        _projectIds?.build();
        _$failedField = 'mergedBefore';
        _mergedBefore?.build();
        _$failedField = 'mergedAfter';
        _mergedAfter?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GComplianceViolationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GConfigureContainerScanningInput
    extends GConfigureContainerScanningInput {
  @override
  final String projectPath;
  @override
  final String? clientMutationId;

  factory _$GConfigureContainerScanningInput(
          [void Function(GConfigureContainerScanningInputBuilder)? updates]) =>
      (new GConfigureContainerScanningInputBuilder()..update(updates))._build();

  _$GConfigureContainerScanningInput._(
      {required this.projectPath, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GConfigureContainerScanningInput', 'projectPath');
  }

  @override
  GConfigureContainerScanningInput rebuild(
          void Function(GConfigureContainerScanningInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GConfigureContainerScanningInputBuilder toBuilder() =>
      new GConfigureContainerScanningInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GConfigureContainerScanningInput &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, projectPath.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GConfigureContainerScanningInput')
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GConfigureContainerScanningInputBuilder
    implements
        Builder<GConfigureContainerScanningInput,
            GConfigureContainerScanningInputBuilder> {
  _$GConfigureContainerScanningInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GConfigureContainerScanningInputBuilder();

  GConfigureContainerScanningInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GConfigureContainerScanningInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GConfigureContainerScanningInput;
  }

  @override
  void update(void Function(GConfigureContainerScanningInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GConfigureContainerScanningInput build() => _build();

  _$GConfigureContainerScanningInput _build() {
    final _$result = _$v ??
        new _$GConfigureContainerScanningInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                r'GConfigureContainerScanningInput', 'projectPath'),
            clientMutationId: clientMutationId);
    replace(_$result);
    return _$result;
  }
}

class _$GConfigureDependencyScanningInput
    extends GConfigureDependencyScanningInput {
  @override
  final String projectPath;
  @override
  final String? clientMutationId;

  factory _$GConfigureDependencyScanningInput(
          [void Function(GConfigureDependencyScanningInputBuilder)? updates]) =>
      (new GConfigureDependencyScanningInputBuilder()..update(updates))
          ._build();

  _$GConfigureDependencyScanningInput._(
      {required this.projectPath, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GConfigureDependencyScanningInput', 'projectPath');
  }

  @override
  GConfigureDependencyScanningInput rebuild(
          void Function(GConfigureDependencyScanningInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GConfigureDependencyScanningInputBuilder toBuilder() =>
      new GConfigureDependencyScanningInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GConfigureDependencyScanningInput &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, projectPath.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GConfigureDependencyScanningInput')
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GConfigureDependencyScanningInputBuilder
    implements
        Builder<GConfigureDependencyScanningInput,
            GConfigureDependencyScanningInputBuilder> {
  _$GConfigureDependencyScanningInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GConfigureDependencyScanningInputBuilder();

  GConfigureDependencyScanningInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GConfigureDependencyScanningInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GConfigureDependencyScanningInput;
  }

  @override
  void update(
      void Function(GConfigureDependencyScanningInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GConfigureDependencyScanningInput build() => _build();

  _$GConfigureDependencyScanningInput _build() {
    final _$result = _$v ??
        new _$GConfigureDependencyScanningInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                r'GConfigureDependencyScanningInput', 'projectPath'),
            clientMutationId: clientMutationId);
    replace(_$result);
    return _$result;
  }
}

class _$GConfigureSastIacInput extends GConfigureSastIacInput {
  @override
  final String projectPath;
  @override
  final String? clientMutationId;

  factory _$GConfigureSastIacInput(
          [void Function(GConfigureSastIacInputBuilder)? updates]) =>
      (new GConfigureSastIacInputBuilder()..update(updates))._build();

  _$GConfigureSastIacInput._({required this.projectPath, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GConfigureSastIacInput', 'projectPath');
  }

  @override
  GConfigureSastIacInput rebuild(
          void Function(GConfigureSastIacInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GConfigureSastIacInputBuilder toBuilder() =>
      new GConfigureSastIacInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GConfigureSastIacInput &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, projectPath.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GConfigureSastIacInput')
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GConfigureSastIacInputBuilder
    implements Builder<GConfigureSastIacInput, GConfigureSastIacInputBuilder> {
  _$GConfigureSastIacInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GConfigureSastIacInputBuilder();

  GConfigureSastIacInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GConfigureSastIacInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GConfigureSastIacInput;
  }

  @override
  void update(void Function(GConfigureSastIacInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GConfigureSastIacInput build() => _build();

  _$GConfigureSastIacInput _build() {
    final _$result = _$v ??
        new _$GConfigureSastIacInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GConfigureSastIacInput', 'projectPath'),
            clientMutationId: clientMutationId);
    replace(_$result);
    return _$result;
  }
}

class _$GConfigureSastInput extends GConfigureSastInput {
  @override
  final String projectPath;
  @override
  final String? clientMutationId;
  @override
  final GSastCiConfigurationInput configuration;

  factory _$GConfigureSastInput(
          [void Function(GConfigureSastInputBuilder)? updates]) =>
      (new GConfigureSastInputBuilder()..update(updates))._build();

  _$GConfigureSastInput._(
      {required this.projectPath,
      this.clientMutationId,
      required this.configuration})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GConfigureSastInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        configuration, r'GConfigureSastInput', 'configuration');
  }

  @override
  GConfigureSastInput rebuild(
          void Function(GConfigureSastInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GConfigureSastInputBuilder toBuilder() =>
      new GConfigureSastInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GConfigureSastInput &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId &&
        configuration == other.configuration;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, projectPath.hashCode), clientMutationId.hashCode),
        configuration.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GConfigureSastInput')
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId)
          ..add('configuration', configuration))
        .toString();
  }
}

class GConfigureSastInputBuilder
    implements Builder<GConfigureSastInput, GConfigureSastInputBuilder> {
  _$GConfigureSastInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GSastCiConfigurationInputBuilder? _configuration;
  GSastCiConfigurationInputBuilder get configuration =>
      _$this._configuration ??= new GSastCiConfigurationInputBuilder();
  set configuration(GSastCiConfigurationInputBuilder? configuration) =>
      _$this._configuration = configuration;

  GConfigureSastInputBuilder();

  GConfigureSastInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _configuration = $v.configuration.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GConfigureSastInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GConfigureSastInput;
  }

  @override
  void update(void Function(GConfigureSastInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GConfigureSastInput build() => _build();

  _$GConfigureSastInput _build() {
    _$GConfigureSastInput _$result;
    try {
      _$result = _$v ??
          new _$GConfigureSastInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GConfigureSastInput', 'projectPath'),
              clientMutationId: clientMutationId,
              configuration: configuration.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'configuration';
        configuration.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GConfigureSastInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GConfigureSecretDetectionInput extends GConfigureSecretDetectionInput {
  @override
  final String projectPath;
  @override
  final String? clientMutationId;

  factory _$GConfigureSecretDetectionInput(
          [void Function(GConfigureSecretDetectionInputBuilder)? updates]) =>
      (new GConfigureSecretDetectionInputBuilder()..update(updates))._build();

  _$GConfigureSecretDetectionInput._(
      {required this.projectPath, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GConfigureSecretDetectionInput', 'projectPath');
  }

  @override
  GConfigureSecretDetectionInput rebuild(
          void Function(GConfigureSecretDetectionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GConfigureSecretDetectionInputBuilder toBuilder() =>
      new GConfigureSecretDetectionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GConfigureSecretDetectionInput &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, projectPath.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GConfigureSecretDetectionInput')
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GConfigureSecretDetectionInputBuilder
    implements
        Builder<GConfigureSecretDetectionInput,
            GConfigureSecretDetectionInputBuilder> {
  _$GConfigureSecretDetectionInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GConfigureSecretDetectionInputBuilder();

  GConfigureSecretDetectionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GConfigureSecretDetectionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GConfigureSecretDetectionInput;
  }

  @override
  void update(void Function(GConfigureSecretDetectionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GConfigureSecretDetectionInput build() => _build();

  _$GConfigureSecretDetectionInput _build() {
    final _$result = _$v ??
        new _$GConfigureSecretDetectionInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GConfigureSecretDetectionInput', 'projectPath'),
            clientMutationId: clientMutationId);
    replace(_$result);
    return _$result;
  }
}

class _$GContainerRepositoryID extends GContainerRepositoryID {
  @override
  final String value;

  factory _$GContainerRepositoryID(
          [void Function(GContainerRepositoryIDBuilder)? updates]) =>
      (new GContainerRepositoryIDBuilder()..update(updates))._build();

  _$GContainerRepositoryID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GContainerRepositoryID', 'value');
  }

  @override
  GContainerRepositoryID rebuild(
          void Function(GContainerRepositoryIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GContainerRepositoryIDBuilder toBuilder() =>
      new GContainerRepositoryIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GContainerRepositoryID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GContainerRepositoryID')
          ..add('value', value))
        .toString();
  }
}

class GContainerRepositoryIDBuilder
    implements Builder<GContainerRepositoryID, GContainerRepositoryIDBuilder> {
  _$GContainerRepositoryID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GContainerRepositoryIDBuilder();

  GContainerRepositoryIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GContainerRepositoryID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GContainerRepositoryID;
  }

  @override
  void update(void Function(GContainerRepositoryIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GContainerRepositoryID build() => _build();

  _$GContainerRepositoryID _build() {
    final _$result = _$v ??
        new _$GContainerRepositoryID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GContainerRepositoryID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GCorpusCreateInput extends GCorpusCreateInput {
  @override
  final String? clientMutationId;
  @override
  final GPackagesPackageID packageId;
  @override
  final String fullPath;

  factory _$GCorpusCreateInput(
          [void Function(GCorpusCreateInputBuilder)? updates]) =>
      (new GCorpusCreateInputBuilder()..update(updates))._build();

  _$GCorpusCreateInput._(
      {this.clientMutationId, required this.packageId, required this.fullPath})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        packageId, r'GCorpusCreateInput', 'packageId');
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GCorpusCreateInput', 'fullPath');
  }

  @override
  GCorpusCreateInput rebuild(
          void Function(GCorpusCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCorpusCreateInputBuilder toBuilder() =>
      new GCorpusCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCorpusCreateInput &&
        clientMutationId == other.clientMutationId &&
        packageId == other.packageId &&
        fullPath == other.fullPath;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), packageId.hashCode),
        fullPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCorpusCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('packageId', packageId)
          ..add('fullPath', fullPath))
        .toString();
  }
}

class GCorpusCreateInputBuilder
    implements Builder<GCorpusCreateInput, GCorpusCreateInputBuilder> {
  _$GCorpusCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GPackagesPackageIDBuilder? _packageId;
  GPackagesPackageIDBuilder get packageId =>
      _$this._packageId ??= new GPackagesPackageIDBuilder();
  set packageId(GPackagesPackageIDBuilder? packageId) =>
      _$this._packageId = packageId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  GCorpusCreateInputBuilder();

  GCorpusCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _packageId = $v.packageId.toBuilder();
      _fullPath = $v.fullPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCorpusCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCorpusCreateInput;
  }

  @override
  void update(void Function(GCorpusCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCorpusCreateInput build() => _build();

  _$GCorpusCreateInput _build() {
    _$GCorpusCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GCorpusCreateInput._(
              clientMutationId: clientMutationId,
              packageId: packageId.build(),
              fullPath: BuiltValueNullFieldError.checkNotNull(
                  fullPath, r'GCorpusCreateInput', 'fullPath'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'packageId';
        packageId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCorpusCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateAlertIssueInput extends GCreateAlertIssueInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;

  factory _$GCreateAlertIssueInput(
          [void Function(GCreateAlertIssueInputBuilder)? updates]) =>
      (new GCreateAlertIssueInputBuilder()..update(updates))._build();

  _$GCreateAlertIssueInput._(
      {required this.projectPath, required this.iid, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GCreateAlertIssueInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GCreateAlertIssueInput', 'iid');
  }

  @override
  GCreateAlertIssueInput rebuild(
          void Function(GCreateAlertIssueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateAlertIssueInputBuilder toBuilder() =>
      new GCreateAlertIssueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateAlertIssueInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
        clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateAlertIssueInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GCreateAlertIssueInputBuilder
    implements Builder<GCreateAlertIssueInput, GCreateAlertIssueInputBuilder> {
  _$GCreateAlertIssueInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCreateAlertIssueInputBuilder();

  GCreateAlertIssueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateAlertIssueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateAlertIssueInput;
  }

  @override
  void update(void Function(GCreateAlertIssueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateAlertIssueInput build() => _build();

  _$GCreateAlertIssueInput _build() {
    final _$result = _$v ??
        new _$GCreateAlertIssueInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GCreateAlertIssueInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GCreateAlertIssueInput', 'iid'),
            clientMutationId: clientMutationId);
    replace(_$result);
    return _$result;
  }
}

class _$GCreateAnnotationInput extends GCreateAnnotationInput {
  @override
  final String? clientMutationId;
  @override
  final GEnvironmentID? environmentId;
  @override
  final GClustersClusterID? clusterId;
  @override
  final GTime startingAt;
  @override
  final GTime? endingAt;
  @override
  final String dashboardPath;
  @override
  final String description;

  factory _$GCreateAnnotationInput(
          [void Function(GCreateAnnotationInputBuilder)? updates]) =>
      (new GCreateAnnotationInputBuilder()..update(updates))._build();

  _$GCreateAnnotationInput._(
      {this.clientMutationId,
      this.environmentId,
      this.clusterId,
      required this.startingAt,
      this.endingAt,
      required this.dashboardPath,
      required this.description})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        startingAt, r'GCreateAnnotationInput', 'startingAt');
    BuiltValueNullFieldError.checkNotNull(
        dashboardPath, r'GCreateAnnotationInput', 'dashboardPath');
    BuiltValueNullFieldError.checkNotNull(
        description, r'GCreateAnnotationInput', 'description');
  }

  @override
  GCreateAnnotationInput rebuild(
          void Function(GCreateAnnotationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateAnnotationInputBuilder toBuilder() =>
      new GCreateAnnotationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateAnnotationInput &&
        clientMutationId == other.clientMutationId &&
        environmentId == other.environmentId &&
        clusterId == other.clusterId &&
        startingAt == other.startingAt &&
        endingAt == other.endingAt &&
        dashboardPath == other.dashboardPath &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, clientMutationId.hashCode),
                            environmentId.hashCode),
                        clusterId.hashCode),
                    startingAt.hashCode),
                endingAt.hashCode),
            dashboardPath.hashCode),
        description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateAnnotationInput')
          ..add('clientMutationId', clientMutationId)
          ..add('environmentId', environmentId)
          ..add('clusterId', clusterId)
          ..add('startingAt', startingAt)
          ..add('endingAt', endingAt)
          ..add('dashboardPath', dashboardPath)
          ..add('description', description))
        .toString();
  }
}

class GCreateAnnotationInputBuilder
    implements Builder<GCreateAnnotationInput, GCreateAnnotationInputBuilder> {
  _$GCreateAnnotationInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GEnvironmentIDBuilder? _environmentId;
  GEnvironmentIDBuilder get environmentId =>
      _$this._environmentId ??= new GEnvironmentIDBuilder();
  set environmentId(GEnvironmentIDBuilder? environmentId) =>
      _$this._environmentId = environmentId;

  GClustersClusterIDBuilder? _clusterId;
  GClustersClusterIDBuilder get clusterId =>
      _$this._clusterId ??= new GClustersClusterIDBuilder();
  set clusterId(GClustersClusterIDBuilder? clusterId) =>
      _$this._clusterId = clusterId;

  GTimeBuilder? _startingAt;
  GTimeBuilder get startingAt => _$this._startingAt ??= new GTimeBuilder();
  set startingAt(GTimeBuilder? startingAt) => _$this._startingAt = startingAt;

  GTimeBuilder? _endingAt;
  GTimeBuilder get endingAt => _$this._endingAt ??= new GTimeBuilder();
  set endingAt(GTimeBuilder? endingAt) => _$this._endingAt = endingAt;

  String? _dashboardPath;
  String? get dashboardPath => _$this._dashboardPath;
  set dashboardPath(String? dashboardPath) =>
      _$this._dashboardPath = dashboardPath;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GCreateAnnotationInputBuilder();

  GCreateAnnotationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _environmentId = $v.environmentId?.toBuilder();
      _clusterId = $v.clusterId?.toBuilder();
      _startingAt = $v.startingAt.toBuilder();
      _endingAt = $v.endingAt?.toBuilder();
      _dashboardPath = $v.dashboardPath;
      _description = $v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateAnnotationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateAnnotationInput;
  }

  @override
  void update(void Function(GCreateAnnotationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateAnnotationInput build() => _build();

  _$GCreateAnnotationInput _build() {
    _$GCreateAnnotationInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateAnnotationInput._(
              clientMutationId: clientMutationId,
              environmentId: _environmentId?.build(),
              clusterId: _clusterId?.build(),
              startingAt: startingAt.build(),
              endingAt: _endingAt?.build(),
              dashboardPath: BuiltValueNullFieldError.checkNotNull(
                  dashboardPath, r'GCreateAnnotationInput', 'dashboardPath'),
              description: BuiltValueNullFieldError.checkNotNull(
                  description, r'GCreateAnnotationInput', 'description'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'environmentId';
        _environmentId?.build();
        _$failedField = 'clusterId';
        _clusterId?.build();
        _$failedField = 'startingAt';
        startingAt.build();
        _$failedField = 'endingAt';
        _endingAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateAnnotationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateBoardInput extends GCreateBoardInput {
  @override
  final String? clientMutationId;
  @override
  final String? projectPath;
  @override
  final String? groupPath;
  @override
  final String? name;
  @override
  final bool? hideBacklogList;
  @override
  final bool? hideClosedList;
  @override
  final GUserID? assigneeId;
  @override
  final GMilestoneID? milestoneId;
  @override
  final GIterationID? iterationId;
  @override
  final GIterationsCadenceID? iterationCadenceId;
  @override
  final int? weight;
  @override
  final BuiltList<String>? labels;
  @override
  final BuiltList<GLabelID>? labelIds;

  factory _$GCreateBoardInput(
          [void Function(GCreateBoardInputBuilder)? updates]) =>
      (new GCreateBoardInputBuilder()..update(updates))._build();

  _$GCreateBoardInput._(
      {this.clientMutationId,
      this.projectPath,
      this.groupPath,
      this.name,
      this.hideBacklogList,
      this.hideClosedList,
      this.assigneeId,
      this.milestoneId,
      this.iterationId,
      this.iterationCadenceId,
      this.weight,
      this.labels,
      this.labelIds})
      : super._();

  @override
  GCreateBoardInput rebuild(void Function(GCreateBoardInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateBoardInputBuilder toBuilder() =>
      new GCreateBoardInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateBoardInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        groupPath == other.groupPath &&
        name == other.name &&
        hideBacklogList == other.hideBacklogList &&
        hideClosedList == other.hideClosedList &&
        assigneeId == other.assigneeId &&
        milestoneId == other.milestoneId &&
        iterationId == other.iterationId &&
        iterationCadenceId == other.iterationCadenceId &&
        weight == other.weight &&
        labels == other.labels &&
        labelIds == other.labelIds;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        0,
                                                        clientMutationId
                                                            .hashCode),
                                                    projectPath.hashCode),
                                                groupPath.hashCode),
                                            name.hashCode),
                                        hideBacklogList.hashCode),
                                    hideClosedList.hashCode),
                                assigneeId.hashCode),
                            milestoneId.hashCode),
                        iterationId.hashCode),
                    iterationCadenceId.hashCode),
                weight.hashCode),
            labels.hashCode),
        labelIds.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateBoardInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('groupPath', groupPath)
          ..add('name', name)
          ..add('hideBacklogList', hideBacklogList)
          ..add('hideClosedList', hideClosedList)
          ..add('assigneeId', assigneeId)
          ..add('milestoneId', milestoneId)
          ..add('iterationId', iterationId)
          ..add('iterationCadenceId', iterationCadenceId)
          ..add('weight', weight)
          ..add('labels', labels)
          ..add('labelIds', labelIds))
        .toString();
  }
}

class GCreateBoardInputBuilder
    implements Builder<GCreateBoardInput, GCreateBoardInputBuilder> {
  _$GCreateBoardInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  bool? _hideBacklogList;
  bool? get hideBacklogList => _$this._hideBacklogList;
  set hideBacklogList(bool? hideBacklogList) =>
      _$this._hideBacklogList = hideBacklogList;

  bool? _hideClosedList;
  bool? get hideClosedList => _$this._hideClosedList;
  set hideClosedList(bool? hideClosedList) =>
      _$this._hideClosedList = hideClosedList;

  GUserIDBuilder? _assigneeId;
  GUserIDBuilder get assigneeId => _$this._assigneeId ??= new GUserIDBuilder();
  set assigneeId(GUserIDBuilder? assigneeId) => _$this._assigneeId = assigneeId;

  GMilestoneIDBuilder? _milestoneId;
  GMilestoneIDBuilder get milestoneId =>
      _$this._milestoneId ??= new GMilestoneIDBuilder();
  set milestoneId(GMilestoneIDBuilder? milestoneId) =>
      _$this._milestoneId = milestoneId;

  GIterationIDBuilder? _iterationId;
  GIterationIDBuilder get iterationId =>
      _$this._iterationId ??= new GIterationIDBuilder();
  set iterationId(GIterationIDBuilder? iterationId) =>
      _$this._iterationId = iterationId;

  GIterationsCadenceIDBuilder? _iterationCadenceId;
  GIterationsCadenceIDBuilder get iterationCadenceId =>
      _$this._iterationCadenceId ??= new GIterationsCadenceIDBuilder();
  set iterationCadenceId(GIterationsCadenceIDBuilder? iterationCadenceId) =>
      _$this._iterationCadenceId = iterationCadenceId;

  int? _weight;
  int? get weight => _$this._weight;
  set weight(int? weight) => _$this._weight = weight;

  ListBuilder<String>? _labels;
  ListBuilder<String> get labels =>
      _$this._labels ??= new ListBuilder<String>();
  set labels(ListBuilder<String>? labels) => _$this._labels = labels;

  ListBuilder<GLabelID>? _labelIds;
  ListBuilder<GLabelID> get labelIds =>
      _$this._labelIds ??= new ListBuilder<GLabelID>();
  set labelIds(ListBuilder<GLabelID>? labelIds) => _$this._labelIds = labelIds;

  GCreateBoardInputBuilder();

  GCreateBoardInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _groupPath = $v.groupPath;
      _name = $v.name;
      _hideBacklogList = $v.hideBacklogList;
      _hideClosedList = $v.hideClosedList;
      _assigneeId = $v.assigneeId?.toBuilder();
      _milestoneId = $v.milestoneId?.toBuilder();
      _iterationId = $v.iterationId?.toBuilder();
      _iterationCadenceId = $v.iterationCadenceId?.toBuilder();
      _weight = $v.weight;
      _labels = $v.labels?.toBuilder();
      _labelIds = $v.labelIds?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateBoardInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateBoardInput;
  }

  @override
  void update(void Function(GCreateBoardInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateBoardInput build() => _build();

  _$GCreateBoardInput _build() {
    _$GCreateBoardInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateBoardInput._(
              clientMutationId: clientMutationId,
              projectPath: projectPath,
              groupPath: groupPath,
              name: name,
              hideBacklogList: hideBacklogList,
              hideClosedList: hideClosedList,
              assigneeId: _assigneeId?.build(),
              milestoneId: _milestoneId?.build(),
              iterationId: _iterationId?.build(),
              iterationCadenceId: _iterationCadenceId?.build(),
              weight: weight,
              labels: _labels?.build(),
              labelIds: _labelIds?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'assigneeId';
        _assigneeId?.build();
        _$failedField = 'milestoneId';
        _milestoneId?.build();
        _$failedField = 'iterationId';
        _iterationId?.build();
        _$failedField = 'iterationCadenceId';
        _iterationCadenceId?.build();

        _$failedField = 'labels';
        _labels?.build();
        _$failedField = 'labelIds';
        _labelIds?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateBoardInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateBranchInput extends GCreateBranchInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String name;
  @override
  final String ref;

  factory _$GCreateBranchInput(
          [void Function(GCreateBranchInputBuilder)? updates]) =>
      (new GCreateBranchInputBuilder()..update(updates))._build();

  _$GCreateBranchInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.name,
      required this.ref})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GCreateBranchInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(name, r'GCreateBranchInput', 'name');
    BuiltValueNullFieldError.checkNotNull(ref, r'GCreateBranchInput', 'ref');
  }

  @override
  GCreateBranchInput rebuild(
          void Function(GCreateBranchInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateBranchInputBuilder toBuilder() =>
      new GCreateBranchInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateBranchInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        name == other.name &&
        ref == other.ref;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
            name.hashCode),
        ref.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateBranchInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('name', name)
          ..add('ref', ref))
        .toString();
  }
}

class GCreateBranchInputBuilder
    implements Builder<GCreateBranchInput, GCreateBranchInputBuilder> {
  _$GCreateBranchInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _ref;
  String? get ref => _$this._ref;
  set ref(String? ref) => _$this._ref = ref;

  GCreateBranchInputBuilder();

  GCreateBranchInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _name = $v.name;
      _ref = $v.ref;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateBranchInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateBranchInput;
  }

  @override
  void update(void Function(GCreateBranchInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateBranchInput build() => _build();

  _$GCreateBranchInput _build() {
    final _$result = _$v ??
        new _$GCreateBranchInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GCreateBranchInput', 'projectPath'),
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GCreateBranchInput', 'name'),
            ref: BuiltValueNullFieldError.checkNotNull(
                ref, r'GCreateBranchInput', 'ref'));
    replace(_$result);
    return _$result;
  }
}

class _$GCreateClusterAgentInput extends GCreateClusterAgentInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String name;

  factory _$GCreateClusterAgentInput(
          [void Function(GCreateClusterAgentInputBuilder)? updates]) =>
      (new GCreateClusterAgentInputBuilder()..update(updates))._build();

  _$GCreateClusterAgentInput._(
      {this.clientMutationId, required this.projectPath, required this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GCreateClusterAgentInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GCreateClusterAgentInput', 'name');
  }

  @override
  GCreateClusterAgentInput rebuild(
          void Function(GCreateClusterAgentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateClusterAgentInputBuilder toBuilder() =>
      new GCreateClusterAgentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateClusterAgentInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateClusterAgentInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('name', name))
        .toString();
  }
}

class GCreateClusterAgentInputBuilder
    implements
        Builder<GCreateClusterAgentInput, GCreateClusterAgentInputBuilder> {
  _$GCreateClusterAgentInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GCreateClusterAgentInputBuilder();

  GCreateClusterAgentInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateClusterAgentInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateClusterAgentInput;
  }

  @override
  void update(void Function(GCreateClusterAgentInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateClusterAgentInput build() => _build();

  _$GCreateClusterAgentInput _build() {
    final _$result = _$v ??
        new _$GCreateClusterAgentInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GCreateClusterAgentInput', 'projectPath'),
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GCreateClusterAgentInput', 'name'));
    replace(_$result);
    return _$result;
  }
}

class _$GCreateComplianceFrameworkInput
    extends GCreateComplianceFrameworkInput {
  @override
  final String? clientMutationId;
  @override
  final String namespacePath;
  @override
  final GComplianceFrameworkInput params;

  factory _$GCreateComplianceFrameworkInput(
          [void Function(GCreateComplianceFrameworkInputBuilder)? updates]) =>
      (new GCreateComplianceFrameworkInputBuilder()..update(updates))._build();

  _$GCreateComplianceFrameworkInput._(
      {this.clientMutationId,
      required this.namespacePath,
      required this.params})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        namespacePath, r'GCreateComplianceFrameworkInput', 'namespacePath');
    BuiltValueNullFieldError.checkNotNull(
        params, r'GCreateComplianceFrameworkInput', 'params');
  }

  @override
  GCreateComplianceFrameworkInput rebuild(
          void Function(GCreateComplianceFrameworkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateComplianceFrameworkInputBuilder toBuilder() =>
      new GCreateComplianceFrameworkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateComplianceFrameworkInput &&
        clientMutationId == other.clientMutationId &&
        namespacePath == other.namespacePath &&
        params == other.params;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, clientMutationId.hashCode), namespacePath.hashCode),
        params.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateComplianceFrameworkInput')
          ..add('clientMutationId', clientMutationId)
          ..add('namespacePath', namespacePath)
          ..add('params', params))
        .toString();
  }
}

class GCreateComplianceFrameworkInputBuilder
    implements
        Builder<GCreateComplianceFrameworkInput,
            GCreateComplianceFrameworkInputBuilder> {
  _$GCreateComplianceFrameworkInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _namespacePath;
  String? get namespacePath => _$this._namespacePath;
  set namespacePath(String? namespacePath) =>
      _$this._namespacePath = namespacePath;

  GComplianceFrameworkInputBuilder? _params;
  GComplianceFrameworkInputBuilder get params =>
      _$this._params ??= new GComplianceFrameworkInputBuilder();
  set params(GComplianceFrameworkInputBuilder? params) =>
      _$this._params = params;

  GCreateComplianceFrameworkInputBuilder();

  GCreateComplianceFrameworkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _namespacePath = $v.namespacePath;
      _params = $v.params.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateComplianceFrameworkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateComplianceFrameworkInput;
  }

  @override
  void update(void Function(GCreateComplianceFrameworkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateComplianceFrameworkInput build() => _build();

  _$GCreateComplianceFrameworkInput _build() {
    _$GCreateComplianceFrameworkInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateComplianceFrameworkInput._(
              clientMutationId: clientMutationId,
              namespacePath: BuiltValueNullFieldError.checkNotNull(
                  namespacePath,
                  r'GCreateComplianceFrameworkInput',
                  'namespacePath'),
              params: params.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'params';
        params.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateComplianceFrameworkInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateCustomEmojiInput extends GCreateCustomEmojiInput {
  @override
  final String? clientMutationId;
  @override
  final String groupPath;
  @override
  final String name;
  @override
  final String url;

  factory _$GCreateCustomEmojiInput(
          [void Function(GCreateCustomEmojiInputBuilder)? updates]) =>
      (new GCreateCustomEmojiInputBuilder()..update(updates))._build();

  _$GCreateCustomEmojiInput._(
      {this.clientMutationId,
      required this.groupPath,
      required this.name,
      required this.url})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        groupPath, r'GCreateCustomEmojiInput', 'groupPath');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GCreateCustomEmojiInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        url, r'GCreateCustomEmojiInput', 'url');
  }

  @override
  GCreateCustomEmojiInput rebuild(
          void Function(GCreateCustomEmojiInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateCustomEmojiInputBuilder toBuilder() =>
      new GCreateCustomEmojiInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateCustomEmojiInput &&
        clientMutationId == other.clientMutationId &&
        groupPath == other.groupPath &&
        name == other.name &&
        url == other.url;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), groupPath.hashCode),
            name.hashCode),
        url.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateCustomEmojiInput')
          ..add('clientMutationId', clientMutationId)
          ..add('groupPath', groupPath)
          ..add('name', name)
          ..add('url', url))
        .toString();
  }
}

class GCreateCustomEmojiInputBuilder
    implements
        Builder<GCreateCustomEmojiInput, GCreateCustomEmojiInputBuilder> {
  _$GCreateCustomEmojiInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GCreateCustomEmojiInputBuilder();

  GCreateCustomEmojiInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _groupPath = $v.groupPath;
      _name = $v.name;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateCustomEmojiInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateCustomEmojiInput;
  }

  @override
  void update(void Function(GCreateCustomEmojiInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateCustomEmojiInput build() => _build();

  _$GCreateCustomEmojiInput _build() {
    final _$result = _$v ??
        new _$GCreateCustomEmojiInput._(
            clientMutationId: clientMutationId,
            groupPath: BuiltValueNullFieldError.checkNotNull(
                groupPath, r'GCreateCustomEmojiInput', 'groupPath'),
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GCreateCustomEmojiInput', 'name'),
            url: BuiltValueNullFieldError.checkNotNull(
                url, r'GCreateCustomEmojiInput', 'url'));
    replace(_$result);
    return _$result;
  }
}

class _$GCreateDiffNoteInput extends GCreateDiffNoteInput {
  @override
  final GNoteableID noteableId;
  @override
  final String body;
  @override
  final bool? internal;
  @override
  final String? clientMutationId;
  @override
  final GDiffPositionInput position;

  factory _$GCreateDiffNoteInput(
          [void Function(GCreateDiffNoteInputBuilder)? updates]) =>
      (new GCreateDiffNoteInputBuilder()..update(updates))._build();

  _$GCreateDiffNoteInput._(
      {required this.noteableId,
      required this.body,
      this.internal,
      this.clientMutationId,
      required this.position})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        noteableId, r'GCreateDiffNoteInput', 'noteableId');
    BuiltValueNullFieldError.checkNotNull(
        body, r'GCreateDiffNoteInput', 'body');
    BuiltValueNullFieldError.checkNotNull(
        position, r'GCreateDiffNoteInput', 'position');
  }

  @override
  GCreateDiffNoteInput rebuild(
          void Function(GCreateDiffNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateDiffNoteInputBuilder toBuilder() =>
      new GCreateDiffNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateDiffNoteInput &&
        noteableId == other.noteableId &&
        body == other.body &&
        internal == other.internal &&
        clientMutationId == other.clientMutationId &&
        position == other.position;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, noteableId.hashCode), body.hashCode),
                internal.hashCode),
            clientMutationId.hashCode),
        position.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateDiffNoteInput')
          ..add('noteableId', noteableId)
          ..add('body', body)
          ..add('internal', internal)
          ..add('clientMutationId', clientMutationId)
          ..add('position', position))
        .toString();
  }
}

class GCreateDiffNoteInputBuilder
    implements Builder<GCreateDiffNoteInput, GCreateDiffNoteInputBuilder> {
  _$GCreateDiffNoteInput? _$v;

  GNoteableIDBuilder? _noteableId;
  GNoteableIDBuilder get noteableId =>
      _$this._noteableId ??= new GNoteableIDBuilder();
  set noteableId(GNoteableIDBuilder? noteableId) =>
      _$this._noteableId = noteableId;

  String? _body;
  String? get body => _$this._body;
  set body(String? body) => _$this._body = body;

  bool? _internal;
  bool? get internal => _$this._internal;
  set internal(bool? internal) => _$this._internal = internal;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDiffPositionInputBuilder? _position;
  GDiffPositionInputBuilder get position =>
      _$this._position ??= new GDiffPositionInputBuilder();
  set position(GDiffPositionInputBuilder? position) =>
      _$this._position = position;

  GCreateDiffNoteInputBuilder();

  GCreateDiffNoteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _noteableId = $v.noteableId.toBuilder();
      _body = $v.body;
      _internal = $v.internal;
      _clientMutationId = $v.clientMutationId;
      _position = $v.position.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateDiffNoteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateDiffNoteInput;
  }

  @override
  void update(void Function(GCreateDiffNoteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateDiffNoteInput build() => _build();

  _$GCreateDiffNoteInput _build() {
    _$GCreateDiffNoteInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateDiffNoteInput._(
              noteableId: noteableId.build(),
              body: BuiltValueNullFieldError.checkNotNull(
                  body, r'GCreateDiffNoteInput', 'body'),
              internal: internal,
              clientMutationId: clientMutationId,
              position: position.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'noteableId';
        noteableId.build();

        _$failedField = 'position';
        position.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateDiffNoteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateEpicInput extends GCreateEpicInput {
  @override
  final String? clientMutationId;
  @override
  final String groupPath;
  @override
  final String? title;
  @override
  final String? description;
  @override
  final bool? confidential;
  @override
  final String? startDateFixed;
  @override
  final String? dueDateFixed;
  @override
  final bool? startDateIsFixed;
  @override
  final bool? dueDateIsFixed;
  @override
  final BuiltList<String>? addLabelIds;
  @override
  final BuiltList<String>? removeLabelIds;
  @override
  final BuiltList<String>? addLabels;
  @override
  final GColor? color;

  factory _$GCreateEpicInput(
          [void Function(GCreateEpicInputBuilder)? updates]) =>
      (new GCreateEpicInputBuilder()..update(updates))._build();

  _$GCreateEpicInput._(
      {this.clientMutationId,
      required this.groupPath,
      this.title,
      this.description,
      this.confidential,
      this.startDateFixed,
      this.dueDateFixed,
      this.startDateIsFixed,
      this.dueDateIsFixed,
      this.addLabelIds,
      this.removeLabelIds,
      this.addLabels,
      this.color})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        groupPath, r'GCreateEpicInput', 'groupPath');
  }

  @override
  GCreateEpicInput rebuild(void Function(GCreateEpicInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateEpicInputBuilder toBuilder() =>
      new GCreateEpicInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateEpicInput &&
        clientMutationId == other.clientMutationId &&
        groupPath == other.groupPath &&
        title == other.title &&
        description == other.description &&
        confidential == other.confidential &&
        startDateFixed == other.startDateFixed &&
        dueDateFixed == other.dueDateFixed &&
        startDateIsFixed == other.startDateIsFixed &&
        dueDateIsFixed == other.dueDateIsFixed &&
        addLabelIds == other.addLabelIds &&
        removeLabelIds == other.removeLabelIds &&
        addLabels == other.addLabels &&
        color == other.color;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        0,
                                                        clientMutationId
                                                            .hashCode),
                                                    groupPath.hashCode),
                                                title.hashCode),
                                            description.hashCode),
                                        confidential.hashCode),
                                    startDateFixed.hashCode),
                                dueDateFixed.hashCode),
                            startDateIsFixed.hashCode),
                        dueDateIsFixed.hashCode),
                    addLabelIds.hashCode),
                removeLabelIds.hashCode),
            addLabels.hashCode),
        color.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateEpicInput')
          ..add('clientMutationId', clientMutationId)
          ..add('groupPath', groupPath)
          ..add('title', title)
          ..add('description', description)
          ..add('confidential', confidential)
          ..add('startDateFixed', startDateFixed)
          ..add('dueDateFixed', dueDateFixed)
          ..add('startDateIsFixed', startDateIsFixed)
          ..add('dueDateIsFixed', dueDateIsFixed)
          ..add('addLabelIds', addLabelIds)
          ..add('removeLabelIds', removeLabelIds)
          ..add('addLabels', addLabels)
          ..add('color', color))
        .toString();
  }
}

class GCreateEpicInputBuilder
    implements Builder<GCreateEpicInput, GCreateEpicInputBuilder> {
  _$GCreateEpicInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _confidential;
  bool? get confidential => _$this._confidential;
  set confidential(bool? confidential) => _$this._confidential = confidential;

  String? _startDateFixed;
  String? get startDateFixed => _$this._startDateFixed;
  set startDateFixed(String? startDateFixed) =>
      _$this._startDateFixed = startDateFixed;

  String? _dueDateFixed;
  String? get dueDateFixed => _$this._dueDateFixed;
  set dueDateFixed(String? dueDateFixed) => _$this._dueDateFixed = dueDateFixed;

  bool? _startDateIsFixed;
  bool? get startDateIsFixed => _$this._startDateIsFixed;
  set startDateIsFixed(bool? startDateIsFixed) =>
      _$this._startDateIsFixed = startDateIsFixed;

  bool? _dueDateIsFixed;
  bool? get dueDateIsFixed => _$this._dueDateIsFixed;
  set dueDateIsFixed(bool? dueDateIsFixed) =>
      _$this._dueDateIsFixed = dueDateIsFixed;

  ListBuilder<String>? _addLabelIds;
  ListBuilder<String> get addLabelIds =>
      _$this._addLabelIds ??= new ListBuilder<String>();
  set addLabelIds(ListBuilder<String>? addLabelIds) =>
      _$this._addLabelIds = addLabelIds;

  ListBuilder<String>? _removeLabelIds;
  ListBuilder<String> get removeLabelIds =>
      _$this._removeLabelIds ??= new ListBuilder<String>();
  set removeLabelIds(ListBuilder<String>? removeLabelIds) =>
      _$this._removeLabelIds = removeLabelIds;

  ListBuilder<String>? _addLabels;
  ListBuilder<String> get addLabels =>
      _$this._addLabels ??= new ListBuilder<String>();
  set addLabels(ListBuilder<String>? addLabels) =>
      _$this._addLabels = addLabels;

  GColorBuilder? _color;
  GColorBuilder get color => _$this._color ??= new GColorBuilder();
  set color(GColorBuilder? color) => _$this._color = color;

  GCreateEpicInputBuilder();

  GCreateEpicInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _groupPath = $v.groupPath;
      _title = $v.title;
      _description = $v.description;
      _confidential = $v.confidential;
      _startDateFixed = $v.startDateFixed;
      _dueDateFixed = $v.dueDateFixed;
      _startDateIsFixed = $v.startDateIsFixed;
      _dueDateIsFixed = $v.dueDateIsFixed;
      _addLabelIds = $v.addLabelIds?.toBuilder();
      _removeLabelIds = $v.removeLabelIds?.toBuilder();
      _addLabels = $v.addLabels?.toBuilder();
      _color = $v.color?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateEpicInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateEpicInput;
  }

  @override
  void update(void Function(GCreateEpicInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateEpicInput build() => _build();

  _$GCreateEpicInput _build() {
    _$GCreateEpicInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateEpicInput._(
              clientMutationId: clientMutationId,
              groupPath: BuiltValueNullFieldError.checkNotNull(
                  groupPath, r'GCreateEpicInput', 'groupPath'),
              title: title,
              description: description,
              confidential: confidential,
              startDateFixed: startDateFixed,
              dueDateFixed: dueDateFixed,
              startDateIsFixed: startDateIsFixed,
              dueDateIsFixed: dueDateIsFixed,
              addLabelIds: _addLabelIds?.build(),
              removeLabelIds: _removeLabelIds?.build(),
              addLabels: _addLabels?.build(),
              color: _color?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addLabelIds';
        _addLabelIds?.build();
        _$failedField = 'removeLabelIds';
        _removeLabelIds?.build();
        _$failedField = 'addLabels';
        _addLabels?.build();
        _$failedField = 'color';
        _color?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateEpicInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateImageDiffNoteInput extends GCreateImageDiffNoteInput {
  @override
  final GNoteableID noteableId;
  @override
  final String body;
  @override
  final bool? internal;
  @override
  final String? clientMutationId;
  @override
  final GDiffImagePositionInput position;

  factory _$GCreateImageDiffNoteInput(
          [void Function(GCreateImageDiffNoteInputBuilder)? updates]) =>
      (new GCreateImageDiffNoteInputBuilder()..update(updates))._build();

  _$GCreateImageDiffNoteInput._(
      {required this.noteableId,
      required this.body,
      this.internal,
      this.clientMutationId,
      required this.position})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        noteableId, r'GCreateImageDiffNoteInput', 'noteableId');
    BuiltValueNullFieldError.checkNotNull(
        body, r'GCreateImageDiffNoteInput', 'body');
    BuiltValueNullFieldError.checkNotNull(
        position, r'GCreateImageDiffNoteInput', 'position');
  }

  @override
  GCreateImageDiffNoteInput rebuild(
          void Function(GCreateImageDiffNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateImageDiffNoteInputBuilder toBuilder() =>
      new GCreateImageDiffNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateImageDiffNoteInput &&
        noteableId == other.noteableId &&
        body == other.body &&
        internal == other.internal &&
        clientMutationId == other.clientMutationId &&
        position == other.position;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, noteableId.hashCode), body.hashCode),
                internal.hashCode),
            clientMutationId.hashCode),
        position.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateImageDiffNoteInput')
          ..add('noteableId', noteableId)
          ..add('body', body)
          ..add('internal', internal)
          ..add('clientMutationId', clientMutationId)
          ..add('position', position))
        .toString();
  }
}

class GCreateImageDiffNoteInputBuilder
    implements
        Builder<GCreateImageDiffNoteInput, GCreateImageDiffNoteInputBuilder> {
  _$GCreateImageDiffNoteInput? _$v;

  GNoteableIDBuilder? _noteableId;
  GNoteableIDBuilder get noteableId =>
      _$this._noteableId ??= new GNoteableIDBuilder();
  set noteableId(GNoteableIDBuilder? noteableId) =>
      _$this._noteableId = noteableId;

  String? _body;
  String? get body => _$this._body;
  set body(String? body) => _$this._body = body;

  bool? _internal;
  bool? get internal => _$this._internal;
  set internal(bool? internal) => _$this._internal = internal;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDiffImagePositionInputBuilder? _position;
  GDiffImagePositionInputBuilder get position =>
      _$this._position ??= new GDiffImagePositionInputBuilder();
  set position(GDiffImagePositionInputBuilder? position) =>
      _$this._position = position;

  GCreateImageDiffNoteInputBuilder();

  GCreateImageDiffNoteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _noteableId = $v.noteableId.toBuilder();
      _body = $v.body;
      _internal = $v.internal;
      _clientMutationId = $v.clientMutationId;
      _position = $v.position.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateImageDiffNoteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateImageDiffNoteInput;
  }

  @override
  void update(void Function(GCreateImageDiffNoteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateImageDiffNoteInput build() => _build();

  _$GCreateImageDiffNoteInput _build() {
    _$GCreateImageDiffNoteInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateImageDiffNoteInput._(
              noteableId: noteableId.build(),
              body: BuiltValueNullFieldError.checkNotNull(
                  body, r'GCreateImageDiffNoteInput', 'body'),
              internal: internal,
              clientMutationId: clientMutationId,
              position: position.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'noteableId';
        noteableId.build();

        _$failedField = 'position';
        position.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateImageDiffNoteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateIssueInput extends GCreateIssueInput {
  @override
  final String? clientMutationId;
  @override
  final String? description;
  @override
  final GISO8601Date? dueDate;
  @override
  final bool? confidential;
  @override
  final bool? locked;
  @override
  final GIssueType? type;
  @override
  final String projectPath;
  @override
  final int? iid;
  @override
  final String title;
  @override
  final GMilestoneID? milestoneId;
  @override
  final BuiltList<String>? labels;
  @override
  final BuiltList<GLabelID>? labelIds;
  @override
  final GTime? createdAt;
  @override
  final GMergeRequestID? mergeRequestToResolveDiscussionsOf;
  @override
  final String? discussionToResolve;
  @override
  final BuiltList<GUserID>? assigneeIds;
  @override
  final GIssueID? moveBeforeId;
  @override
  final GIssueID? moveAfterId;
  @override
  final GHealthStatus? healthStatus;
  @override
  final int? weight;
  @override
  final GEpicID? epicId;
  @override
  final GIterationID? iterationId;
  @override
  final GIssueCreationIterationWildcardId? iterationWildcardId;
  @override
  final GIterationsCadenceID? iterationCadenceId;

  factory _$GCreateIssueInput(
          [void Function(GCreateIssueInputBuilder)? updates]) =>
      (new GCreateIssueInputBuilder()..update(updates))._build();

  _$GCreateIssueInput._(
      {this.clientMutationId,
      this.description,
      this.dueDate,
      this.confidential,
      this.locked,
      this.type,
      required this.projectPath,
      this.iid,
      required this.title,
      this.milestoneId,
      this.labels,
      this.labelIds,
      this.createdAt,
      this.mergeRequestToResolveDiscussionsOf,
      this.discussionToResolve,
      this.assigneeIds,
      this.moveBeforeId,
      this.moveAfterId,
      this.healthStatus,
      this.weight,
      this.epicId,
      this.iterationId,
      this.iterationWildcardId,
      this.iterationCadenceId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GCreateIssueInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(title, r'GCreateIssueInput', 'title');
  }

  @override
  GCreateIssueInput rebuild(void Function(GCreateIssueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateIssueInputBuilder toBuilder() =>
      new GCreateIssueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateIssueInput &&
        clientMutationId == other.clientMutationId &&
        description == other.description &&
        dueDate == other.dueDate &&
        confidential == other.confidential &&
        locked == other.locked &&
        type == other.type &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        title == other.title &&
        milestoneId == other.milestoneId &&
        labels == other.labels &&
        labelIds == other.labelIds &&
        createdAt == other.createdAt &&
        mergeRequestToResolveDiscussionsOf ==
            other.mergeRequestToResolveDiscussionsOf &&
        discussionToResolve == other.discussionToResolve &&
        assigneeIds == other.assigneeIds &&
        moveBeforeId == other.moveBeforeId &&
        moveAfterId == other.moveAfterId &&
        healthStatus == other.healthStatus &&
        weight == other.weight &&
        epicId == other.epicId &&
        iterationId == other.iterationId &&
        iterationWildcardId == other.iterationWildcardId &&
        iterationCadenceId == other.iterationCadenceId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc(0, clientMutationId.hashCode), description.hashCode), dueDate.hashCode), confidential.hashCode), locked.hashCode),
                                                                                type.hashCode),
                                                                            projectPath.hashCode),
                                                                        iid.hashCode),
                                                                    title.hashCode),
                                                                milestoneId.hashCode),
                                                            labels.hashCode),
                                                        labelIds.hashCode),
                                                    createdAt.hashCode),
                                                mergeRequestToResolveDiscussionsOf.hashCode),
                                            discussionToResolve.hashCode),
                                        assigneeIds.hashCode),
                                    moveBeforeId.hashCode),
                                moveAfterId.hashCode),
                            healthStatus.hashCode),
                        weight.hashCode),
                    epicId.hashCode),
                iterationId.hashCode),
            iterationWildcardId.hashCode),
        iterationCadenceId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateIssueInput')
          ..add('clientMutationId', clientMutationId)
          ..add('description', description)
          ..add('dueDate', dueDate)
          ..add('confidential', confidential)
          ..add('locked', locked)
          ..add('type', type)
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('title', title)
          ..add('milestoneId', milestoneId)
          ..add('labels', labels)
          ..add('labelIds', labelIds)
          ..add('createdAt', createdAt)
          ..add('mergeRequestToResolveDiscussionsOf',
              mergeRequestToResolveDiscussionsOf)
          ..add('discussionToResolve', discussionToResolve)
          ..add('assigneeIds', assigneeIds)
          ..add('moveBeforeId', moveBeforeId)
          ..add('moveAfterId', moveAfterId)
          ..add('healthStatus', healthStatus)
          ..add('weight', weight)
          ..add('epicId', epicId)
          ..add('iterationId', iterationId)
          ..add('iterationWildcardId', iterationWildcardId)
          ..add('iterationCadenceId', iterationCadenceId))
        .toString();
  }
}

class GCreateIssueInputBuilder
    implements Builder<GCreateIssueInput, GCreateIssueInputBuilder> {
  _$GCreateIssueInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GISO8601DateBuilder? _dueDate;
  GISO8601DateBuilder get dueDate =>
      _$this._dueDate ??= new GISO8601DateBuilder();
  set dueDate(GISO8601DateBuilder? dueDate) => _$this._dueDate = dueDate;

  bool? _confidential;
  bool? get confidential => _$this._confidential;
  set confidential(bool? confidential) => _$this._confidential = confidential;

  bool? _locked;
  bool? get locked => _$this._locked;
  set locked(bool? locked) => _$this._locked = locked;

  GIssueType? _type;
  GIssueType? get type => _$this._type;
  set type(GIssueType? type) => _$this._type = type;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  int? _iid;
  int? get iid => _$this._iid;
  set iid(int? iid) => _$this._iid = iid;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GMilestoneIDBuilder? _milestoneId;
  GMilestoneIDBuilder get milestoneId =>
      _$this._milestoneId ??= new GMilestoneIDBuilder();
  set milestoneId(GMilestoneIDBuilder? milestoneId) =>
      _$this._milestoneId = milestoneId;

  ListBuilder<String>? _labels;
  ListBuilder<String> get labels =>
      _$this._labels ??= new ListBuilder<String>();
  set labels(ListBuilder<String>? labels) => _$this._labels = labels;

  ListBuilder<GLabelID>? _labelIds;
  ListBuilder<GLabelID> get labelIds =>
      _$this._labelIds ??= new ListBuilder<GLabelID>();
  set labelIds(ListBuilder<GLabelID>? labelIds) => _$this._labelIds = labelIds;

  GTimeBuilder? _createdAt;
  GTimeBuilder get createdAt => _$this._createdAt ??= new GTimeBuilder();
  set createdAt(GTimeBuilder? createdAt) => _$this._createdAt = createdAt;

  GMergeRequestIDBuilder? _mergeRequestToResolveDiscussionsOf;
  GMergeRequestIDBuilder get mergeRequestToResolveDiscussionsOf =>
      _$this._mergeRequestToResolveDiscussionsOf ??=
          new GMergeRequestIDBuilder();
  set mergeRequestToResolveDiscussionsOf(
          GMergeRequestIDBuilder? mergeRequestToResolveDiscussionsOf) =>
      _$this._mergeRequestToResolveDiscussionsOf =
          mergeRequestToResolveDiscussionsOf;

  String? _discussionToResolve;
  String? get discussionToResolve => _$this._discussionToResolve;
  set discussionToResolve(String? discussionToResolve) =>
      _$this._discussionToResolve = discussionToResolve;

  ListBuilder<GUserID>? _assigneeIds;
  ListBuilder<GUserID> get assigneeIds =>
      _$this._assigneeIds ??= new ListBuilder<GUserID>();
  set assigneeIds(ListBuilder<GUserID>? assigneeIds) =>
      _$this._assigneeIds = assigneeIds;

  GIssueIDBuilder? _moveBeforeId;
  GIssueIDBuilder get moveBeforeId =>
      _$this._moveBeforeId ??= new GIssueIDBuilder();
  set moveBeforeId(GIssueIDBuilder? moveBeforeId) =>
      _$this._moveBeforeId = moveBeforeId;

  GIssueIDBuilder? _moveAfterId;
  GIssueIDBuilder get moveAfterId =>
      _$this._moveAfterId ??= new GIssueIDBuilder();
  set moveAfterId(GIssueIDBuilder? moveAfterId) =>
      _$this._moveAfterId = moveAfterId;

  GHealthStatus? _healthStatus;
  GHealthStatus? get healthStatus => _$this._healthStatus;
  set healthStatus(GHealthStatus? healthStatus) =>
      _$this._healthStatus = healthStatus;

  int? _weight;
  int? get weight => _$this._weight;
  set weight(int? weight) => _$this._weight = weight;

  GEpicIDBuilder? _epicId;
  GEpicIDBuilder get epicId => _$this._epicId ??= new GEpicIDBuilder();
  set epicId(GEpicIDBuilder? epicId) => _$this._epicId = epicId;

  GIterationIDBuilder? _iterationId;
  GIterationIDBuilder get iterationId =>
      _$this._iterationId ??= new GIterationIDBuilder();
  set iterationId(GIterationIDBuilder? iterationId) =>
      _$this._iterationId = iterationId;

  GIssueCreationIterationWildcardId? _iterationWildcardId;
  GIssueCreationIterationWildcardId? get iterationWildcardId =>
      _$this._iterationWildcardId;
  set iterationWildcardId(
          GIssueCreationIterationWildcardId? iterationWildcardId) =>
      _$this._iterationWildcardId = iterationWildcardId;

  GIterationsCadenceIDBuilder? _iterationCadenceId;
  GIterationsCadenceIDBuilder get iterationCadenceId =>
      _$this._iterationCadenceId ??= new GIterationsCadenceIDBuilder();
  set iterationCadenceId(GIterationsCadenceIDBuilder? iterationCadenceId) =>
      _$this._iterationCadenceId = iterationCadenceId;

  GCreateIssueInputBuilder();

  GCreateIssueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _description = $v.description;
      _dueDate = $v.dueDate?.toBuilder();
      _confidential = $v.confidential;
      _locked = $v.locked;
      _type = $v.type;
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _title = $v.title;
      _milestoneId = $v.milestoneId?.toBuilder();
      _labels = $v.labels?.toBuilder();
      _labelIds = $v.labelIds?.toBuilder();
      _createdAt = $v.createdAt?.toBuilder();
      _mergeRequestToResolveDiscussionsOf =
          $v.mergeRequestToResolveDiscussionsOf?.toBuilder();
      _discussionToResolve = $v.discussionToResolve;
      _assigneeIds = $v.assigneeIds?.toBuilder();
      _moveBeforeId = $v.moveBeforeId?.toBuilder();
      _moveAfterId = $v.moveAfterId?.toBuilder();
      _healthStatus = $v.healthStatus;
      _weight = $v.weight;
      _epicId = $v.epicId?.toBuilder();
      _iterationId = $v.iterationId?.toBuilder();
      _iterationWildcardId = $v.iterationWildcardId;
      _iterationCadenceId = $v.iterationCadenceId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateIssueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateIssueInput;
  }

  @override
  void update(void Function(GCreateIssueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateIssueInput build() => _build();

  _$GCreateIssueInput _build() {
    _$GCreateIssueInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateIssueInput._(
              clientMutationId: clientMutationId,
              description: description,
              dueDate: _dueDate?.build(),
              confidential: confidential,
              locked: locked,
              type: type,
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GCreateIssueInput', 'projectPath'),
              iid: iid,
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GCreateIssueInput', 'title'),
              milestoneId: _milestoneId?.build(),
              labels: _labels?.build(),
              labelIds: _labelIds?.build(),
              createdAt: _createdAt?.build(),
              mergeRequestToResolveDiscussionsOf:
                  _mergeRequestToResolveDiscussionsOf?.build(),
              discussionToResolve: discussionToResolve,
              assigneeIds: _assigneeIds?.build(),
              moveBeforeId: _moveBeforeId?.build(),
              moveAfterId: _moveAfterId?.build(),
              healthStatus: healthStatus,
              weight: weight,
              epicId: _epicId?.build(),
              iterationId: _iterationId?.build(),
              iterationWildcardId: iterationWildcardId,
              iterationCadenceId: _iterationCadenceId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'dueDate';
        _dueDate?.build();

        _$failedField = 'milestoneId';
        _milestoneId?.build();
        _$failedField = 'labels';
        _labels?.build();
        _$failedField = 'labelIds';
        _labelIds?.build();
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'mergeRequestToResolveDiscussionsOf';
        _mergeRequestToResolveDiscussionsOf?.build();

        _$failedField = 'assigneeIds';
        _assigneeIds?.build();
        _$failedField = 'moveBeforeId';
        _moveBeforeId?.build();
        _$failedField = 'moveAfterId';
        _moveAfterId?.build();

        _$failedField = 'epicId';
        _epicId?.build();
        _$failedField = 'iterationId';
        _iterationId?.build();

        _$failedField = 'iterationCadenceId';
        _iterationCadenceId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateIssueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateIterationInput extends GCreateIterationInput {
  @override
  final String? projectPath;
  @override
  final String? groupPath;
  @override
  final GIterationsCadenceID? iterationsCadenceId;
  @override
  final String? title;
  @override
  final String? description;
  @override
  final String? startDate;
  @override
  final String? dueDate;
  @override
  final String? clientMutationId;

  factory _$GCreateIterationInput(
          [void Function(GCreateIterationInputBuilder)? updates]) =>
      (new GCreateIterationInputBuilder()..update(updates))._build();

  _$GCreateIterationInput._(
      {this.projectPath,
      this.groupPath,
      this.iterationsCadenceId,
      this.title,
      this.description,
      this.startDate,
      this.dueDate,
      this.clientMutationId})
      : super._();

  @override
  GCreateIterationInput rebuild(
          void Function(GCreateIterationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateIterationInputBuilder toBuilder() =>
      new GCreateIterationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateIterationInput &&
        projectPath == other.projectPath &&
        groupPath == other.groupPath &&
        iterationsCadenceId == other.iterationsCadenceId &&
        title == other.title &&
        description == other.description &&
        startDate == other.startDate &&
        dueDate == other.dueDate &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, projectPath.hashCode),
                                groupPath.hashCode),
                            iterationsCadenceId.hashCode),
                        title.hashCode),
                    description.hashCode),
                startDate.hashCode),
            dueDate.hashCode),
        clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateIterationInput')
          ..add('projectPath', projectPath)
          ..add('groupPath', groupPath)
          ..add('iterationsCadenceId', iterationsCadenceId)
          ..add('title', title)
          ..add('description', description)
          ..add('startDate', startDate)
          ..add('dueDate', dueDate)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GCreateIterationInputBuilder
    implements Builder<GCreateIterationInput, GCreateIterationInputBuilder> {
  _$GCreateIterationInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  GIterationsCadenceIDBuilder? _iterationsCadenceId;
  GIterationsCadenceIDBuilder get iterationsCadenceId =>
      _$this._iterationsCadenceId ??= new GIterationsCadenceIDBuilder();
  set iterationsCadenceId(GIterationsCadenceIDBuilder? iterationsCadenceId) =>
      _$this._iterationsCadenceId = iterationsCadenceId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _startDate;
  String? get startDate => _$this._startDate;
  set startDate(String? startDate) => _$this._startDate = startDate;

  String? _dueDate;
  String? get dueDate => _$this._dueDate;
  set dueDate(String? dueDate) => _$this._dueDate = dueDate;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCreateIterationInputBuilder();

  GCreateIterationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _groupPath = $v.groupPath;
      _iterationsCadenceId = $v.iterationsCadenceId?.toBuilder();
      _title = $v.title;
      _description = $v.description;
      _startDate = $v.startDate;
      _dueDate = $v.dueDate;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateIterationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateIterationInput;
  }

  @override
  void update(void Function(GCreateIterationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateIterationInput build() => _build();

  _$GCreateIterationInput _build() {
    _$GCreateIterationInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateIterationInput._(
              projectPath: projectPath,
              groupPath: groupPath,
              iterationsCadenceId: _iterationsCadenceId?.build(),
              title: title,
              description: description,
              startDate: startDate,
              dueDate: dueDate,
              clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'iterationsCadenceId';
        _iterationsCadenceId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateIterationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateNoteInput extends GCreateNoteInput {
  @override
  final GNoteableID noteableId;
  @override
  final String body;
  @override
  final bool? internal;
  @override
  final String? clientMutationId;
  @override
  final GDiscussionID? discussionId;
  @override
  final String? mergeRequestDiffHeadSha;

  factory _$GCreateNoteInput(
          [void Function(GCreateNoteInputBuilder)? updates]) =>
      (new GCreateNoteInputBuilder()..update(updates))._build();

  _$GCreateNoteInput._(
      {required this.noteableId,
      required this.body,
      this.internal,
      this.clientMutationId,
      this.discussionId,
      this.mergeRequestDiffHeadSha})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        noteableId, r'GCreateNoteInput', 'noteableId');
    BuiltValueNullFieldError.checkNotNull(body, r'GCreateNoteInput', 'body');
  }

  @override
  GCreateNoteInput rebuild(void Function(GCreateNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateNoteInputBuilder toBuilder() =>
      new GCreateNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateNoteInput &&
        noteableId == other.noteableId &&
        body == other.body &&
        internal == other.internal &&
        clientMutationId == other.clientMutationId &&
        discussionId == other.discussionId &&
        mergeRequestDiffHeadSha == other.mergeRequestDiffHeadSha;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, noteableId.hashCode), body.hashCode),
                    internal.hashCode),
                clientMutationId.hashCode),
            discussionId.hashCode),
        mergeRequestDiffHeadSha.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateNoteInput')
          ..add('noteableId', noteableId)
          ..add('body', body)
          ..add('internal', internal)
          ..add('clientMutationId', clientMutationId)
          ..add('discussionId', discussionId)
          ..add('mergeRequestDiffHeadSha', mergeRequestDiffHeadSha))
        .toString();
  }
}

class GCreateNoteInputBuilder
    implements Builder<GCreateNoteInput, GCreateNoteInputBuilder> {
  _$GCreateNoteInput? _$v;

  GNoteableIDBuilder? _noteableId;
  GNoteableIDBuilder get noteableId =>
      _$this._noteableId ??= new GNoteableIDBuilder();
  set noteableId(GNoteableIDBuilder? noteableId) =>
      _$this._noteableId = noteableId;

  String? _body;
  String? get body => _$this._body;
  set body(String? body) => _$this._body = body;

  bool? _internal;
  bool? get internal => _$this._internal;
  set internal(bool? internal) => _$this._internal = internal;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDiscussionIDBuilder? _discussionId;
  GDiscussionIDBuilder get discussionId =>
      _$this._discussionId ??= new GDiscussionIDBuilder();
  set discussionId(GDiscussionIDBuilder? discussionId) =>
      _$this._discussionId = discussionId;

  String? _mergeRequestDiffHeadSha;
  String? get mergeRequestDiffHeadSha => _$this._mergeRequestDiffHeadSha;
  set mergeRequestDiffHeadSha(String? mergeRequestDiffHeadSha) =>
      _$this._mergeRequestDiffHeadSha = mergeRequestDiffHeadSha;

  GCreateNoteInputBuilder();

  GCreateNoteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _noteableId = $v.noteableId.toBuilder();
      _body = $v.body;
      _internal = $v.internal;
      _clientMutationId = $v.clientMutationId;
      _discussionId = $v.discussionId?.toBuilder();
      _mergeRequestDiffHeadSha = $v.mergeRequestDiffHeadSha;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateNoteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateNoteInput;
  }

  @override
  void update(void Function(GCreateNoteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateNoteInput build() => _build();

  _$GCreateNoteInput _build() {
    _$GCreateNoteInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateNoteInput._(
              noteableId: noteableId.build(),
              body: BuiltValueNullFieldError.checkNotNull(
                  body, r'GCreateNoteInput', 'body'),
              internal: internal,
              clientMutationId: clientMutationId,
              discussionId: _discussionId?.build(),
              mergeRequestDiffHeadSha: mergeRequestDiffHeadSha);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'noteableId';
        noteableId.build();

        _$failedField = 'discussionId';
        _discussionId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateNoteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateRequirementInput extends GCreateRequirementInput {
  @override
  final String? title;
  @override
  final String? description;
  @override
  final String projectPath;
  @override
  final String? clientMutationId;

  factory _$GCreateRequirementInput(
          [void Function(GCreateRequirementInputBuilder)? updates]) =>
      (new GCreateRequirementInputBuilder()..update(updates))._build();

  _$GCreateRequirementInput._(
      {this.title,
      this.description,
      required this.projectPath,
      this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GCreateRequirementInput', 'projectPath');
  }

  @override
  GCreateRequirementInput rebuild(
          void Function(GCreateRequirementInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateRequirementInputBuilder toBuilder() =>
      new GCreateRequirementInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateRequirementInput &&
        title == other.title &&
        description == other.description &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, title.hashCode), description.hashCode),
            projectPath.hashCode),
        clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateRequirementInput')
          ..add('title', title)
          ..add('description', description)
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GCreateRequirementInputBuilder
    implements
        Builder<GCreateRequirementInput, GCreateRequirementInputBuilder> {
  _$GCreateRequirementInput? _$v;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCreateRequirementInputBuilder();

  GCreateRequirementInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _title = $v.title;
      _description = $v.description;
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateRequirementInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateRequirementInput;
  }

  @override
  void update(void Function(GCreateRequirementInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateRequirementInput build() => _build();

  _$GCreateRequirementInput _build() {
    final _$result = _$v ??
        new _$GCreateRequirementInput._(
            title: title,
            description: description,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GCreateRequirementInput', 'projectPath'),
            clientMutationId: clientMutationId);
    replace(_$result);
    return _$result;
  }
}

class _$GCreateSnippetInput extends GCreateSnippetInput {
  @override
  final String? clientMutationId;
  @override
  final String title;
  @override
  final String? description;
  @override
  final GVisibilityLevelsEnum visibilityLevel;
  @override
  final String? projectPath;
  @override
  final BuiltList<String>? uploadedFiles;
  @override
  final BuiltList<GSnippetBlobActionInputType>? blobActions;

  factory _$GCreateSnippetInput(
          [void Function(GCreateSnippetInputBuilder)? updates]) =>
      (new GCreateSnippetInputBuilder()..update(updates))._build();

  _$GCreateSnippetInput._(
      {this.clientMutationId,
      required this.title,
      this.description,
      required this.visibilityLevel,
      this.projectPath,
      this.uploadedFiles,
      this.blobActions})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        title, r'GCreateSnippetInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        visibilityLevel, r'GCreateSnippetInput', 'visibilityLevel');
  }

  @override
  GCreateSnippetInput rebuild(
          void Function(GCreateSnippetInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateSnippetInputBuilder toBuilder() =>
      new GCreateSnippetInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateSnippetInput &&
        clientMutationId == other.clientMutationId &&
        title == other.title &&
        description == other.description &&
        visibilityLevel == other.visibilityLevel &&
        projectPath == other.projectPath &&
        uploadedFiles == other.uploadedFiles &&
        blobActions == other.blobActions;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, clientMutationId.hashCode), title.hashCode),
                        description.hashCode),
                    visibilityLevel.hashCode),
                projectPath.hashCode),
            uploadedFiles.hashCode),
        blobActions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateSnippetInput')
          ..add('clientMutationId', clientMutationId)
          ..add('title', title)
          ..add('description', description)
          ..add('visibilityLevel', visibilityLevel)
          ..add('projectPath', projectPath)
          ..add('uploadedFiles', uploadedFiles)
          ..add('blobActions', blobActions))
        .toString();
  }
}

class GCreateSnippetInputBuilder
    implements Builder<GCreateSnippetInput, GCreateSnippetInputBuilder> {
  _$GCreateSnippetInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GVisibilityLevelsEnum? _visibilityLevel;
  GVisibilityLevelsEnum? get visibilityLevel => _$this._visibilityLevel;
  set visibilityLevel(GVisibilityLevelsEnum? visibilityLevel) =>
      _$this._visibilityLevel = visibilityLevel;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  ListBuilder<String>? _uploadedFiles;
  ListBuilder<String> get uploadedFiles =>
      _$this._uploadedFiles ??= new ListBuilder<String>();
  set uploadedFiles(ListBuilder<String>? uploadedFiles) =>
      _$this._uploadedFiles = uploadedFiles;

  ListBuilder<GSnippetBlobActionInputType>? _blobActions;
  ListBuilder<GSnippetBlobActionInputType> get blobActions =>
      _$this._blobActions ??= new ListBuilder<GSnippetBlobActionInputType>();
  set blobActions(ListBuilder<GSnippetBlobActionInputType>? blobActions) =>
      _$this._blobActions = blobActions;

  GCreateSnippetInputBuilder();

  GCreateSnippetInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _title = $v.title;
      _description = $v.description;
      _visibilityLevel = $v.visibilityLevel;
      _projectPath = $v.projectPath;
      _uploadedFiles = $v.uploadedFiles?.toBuilder();
      _blobActions = $v.blobActions?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateSnippetInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateSnippetInput;
  }

  @override
  void update(void Function(GCreateSnippetInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateSnippetInput build() => _build();

  _$GCreateSnippetInput _build() {
    _$GCreateSnippetInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateSnippetInput._(
              clientMutationId: clientMutationId,
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GCreateSnippetInput', 'title'),
              description: description,
              visibilityLevel: BuiltValueNullFieldError.checkNotNull(
                  visibilityLevel, r'GCreateSnippetInput', 'visibilityLevel'),
              projectPath: projectPath,
              uploadedFiles: _uploadedFiles?.build(),
              blobActions: _blobActions?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'uploadedFiles';
        _uploadedFiles?.build();
        _$failedField = 'blobActions';
        _blobActions?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateSnippetInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateTestCaseInput extends GCreateTestCaseInput {
  @override
  final String? clientMutationId;
  @override
  final String title;
  @override
  final String? description;
  @override
  final BuiltList<String>? labelIds;
  @override
  final String projectPath;

  factory _$GCreateTestCaseInput(
          [void Function(GCreateTestCaseInputBuilder)? updates]) =>
      (new GCreateTestCaseInputBuilder()..update(updates))._build();

  _$GCreateTestCaseInput._(
      {this.clientMutationId,
      required this.title,
      this.description,
      this.labelIds,
      required this.projectPath})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        title, r'GCreateTestCaseInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GCreateTestCaseInput', 'projectPath');
  }

  @override
  GCreateTestCaseInput rebuild(
          void Function(GCreateTestCaseInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateTestCaseInputBuilder toBuilder() =>
      new GCreateTestCaseInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateTestCaseInput &&
        clientMutationId == other.clientMutationId &&
        title == other.title &&
        description == other.description &&
        labelIds == other.labelIds &&
        projectPath == other.projectPath;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), title.hashCode),
                description.hashCode),
            labelIds.hashCode),
        projectPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateTestCaseInput')
          ..add('clientMutationId', clientMutationId)
          ..add('title', title)
          ..add('description', description)
          ..add('labelIds', labelIds)
          ..add('projectPath', projectPath))
        .toString();
  }
}

class GCreateTestCaseInputBuilder
    implements Builder<GCreateTestCaseInput, GCreateTestCaseInputBuilder> {
  _$GCreateTestCaseInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  ListBuilder<String>? _labelIds;
  ListBuilder<String> get labelIds =>
      _$this._labelIds ??= new ListBuilder<String>();
  set labelIds(ListBuilder<String>? labelIds) => _$this._labelIds = labelIds;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  GCreateTestCaseInputBuilder();

  GCreateTestCaseInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _title = $v.title;
      _description = $v.description;
      _labelIds = $v.labelIds?.toBuilder();
      _projectPath = $v.projectPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateTestCaseInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateTestCaseInput;
  }

  @override
  void update(void Function(GCreateTestCaseInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateTestCaseInput build() => _build();

  _$GCreateTestCaseInput _build() {
    _$GCreateTestCaseInput _$result;
    try {
      _$result = _$v ??
          new _$GCreateTestCaseInput._(
              clientMutationId: clientMutationId,
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GCreateTestCaseInput', 'title'),
              description: description,
              labelIds: _labelIds?.build(),
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GCreateTestCaseInput', 'projectPath'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labelIds';
        _labelIds?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCreateTestCaseInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCustomEmojiID extends GCustomEmojiID {
  @override
  final String value;

  factory _$GCustomEmojiID([void Function(GCustomEmojiIDBuilder)? updates]) =>
      (new GCustomEmojiIDBuilder()..update(updates))._build();

  _$GCustomEmojiID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GCustomEmojiID', 'value');
  }

  @override
  GCustomEmojiID rebuild(void Function(GCustomEmojiIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomEmojiIDBuilder toBuilder() =>
      new GCustomEmojiIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomEmojiID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCustomEmojiID')..add('value', value))
        .toString();
  }
}

class GCustomEmojiIDBuilder
    implements Builder<GCustomEmojiID, GCustomEmojiIDBuilder> {
  _$GCustomEmojiID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GCustomEmojiIDBuilder();

  GCustomEmojiIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomEmojiID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCustomEmojiID;
  }

  @override
  void update(void Function(GCustomEmojiIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCustomEmojiID build() => _build();

  _$GCustomEmojiID _build() {
    final _$result = _$v ??
        new _$GCustomEmojiID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GCustomEmojiID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GCustomerRelationsContactCreateInput
    extends GCustomerRelationsContactCreateInput {
  @override
  final String? clientMutationId;
  @override
  final GGroupID groupId;
  @override
  final GCustomerRelationsOrganizationID? organizationId;
  @override
  final String firstName;
  @override
  final String lastName;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final String? description;

  factory _$GCustomerRelationsContactCreateInput(
          [void Function(GCustomerRelationsContactCreateInputBuilder)?
              updates]) =>
      (new GCustomerRelationsContactCreateInputBuilder()..update(updates))
          ._build();

  _$GCustomerRelationsContactCreateInput._(
      {this.clientMutationId,
      required this.groupId,
      this.organizationId,
      required this.firstName,
      required this.lastName,
      this.phone,
      this.email,
      this.description})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GCustomerRelationsContactCreateInput', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        firstName, r'GCustomerRelationsContactCreateInput', 'firstName');
    BuiltValueNullFieldError.checkNotNull(
        lastName, r'GCustomerRelationsContactCreateInput', 'lastName');
  }

  @override
  GCustomerRelationsContactCreateInput rebuild(
          void Function(GCustomerRelationsContactCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomerRelationsContactCreateInputBuilder toBuilder() =>
      new GCustomerRelationsContactCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomerRelationsContactCreateInput &&
        clientMutationId == other.clientMutationId &&
        groupId == other.groupId &&
        organizationId == other.organizationId &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        phone == other.phone &&
        email == other.email &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, clientMutationId.hashCode),
                                groupId.hashCode),
                            organizationId.hashCode),
                        firstName.hashCode),
                    lastName.hashCode),
                phone.hashCode),
            email.hashCode),
        description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCustomerRelationsContactCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('groupId', groupId)
          ..add('organizationId', organizationId)
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('phone', phone)
          ..add('email', email)
          ..add('description', description))
        .toString();
  }
}

class GCustomerRelationsContactCreateInputBuilder
    implements
        Builder<GCustomerRelationsContactCreateInput,
            GCustomerRelationsContactCreateInputBuilder> {
  _$GCustomerRelationsContactCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GGroupIDBuilder? _groupId;
  GGroupIDBuilder get groupId => _$this._groupId ??= new GGroupIDBuilder();
  set groupId(GGroupIDBuilder? groupId) => _$this._groupId = groupId;

  GCustomerRelationsOrganizationIDBuilder? _organizationId;
  GCustomerRelationsOrganizationIDBuilder get organizationId =>
      _$this._organizationId ??= new GCustomerRelationsOrganizationIDBuilder();
  set organizationId(GCustomerRelationsOrganizationIDBuilder? organizationId) =>
      _$this._organizationId = organizationId;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GCustomerRelationsContactCreateInputBuilder();

  GCustomerRelationsContactCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _groupId = $v.groupId.toBuilder();
      _organizationId = $v.organizationId?.toBuilder();
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _phone = $v.phone;
      _email = $v.email;
      _description = $v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomerRelationsContactCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCustomerRelationsContactCreateInput;
  }

  @override
  void update(
      void Function(GCustomerRelationsContactCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCustomerRelationsContactCreateInput build() => _build();

  _$GCustomerRelationsContactCreateInput _build() {
    _$GCustomerRelationsContactCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GCustomerRelationsContactCreateInput._(
              clientMutationId: clientMutationId,
              groupId: groupId.build(),
              organizationId: _organizationId?.build(),
              firstName: BuiltValueNullFieldError.checkNotNull(firstName,
                  r'GCustomerRelationsContactCreateInput', 'firstName'),
              lastName: BuiltValueNullFieldError.checkNotNull(lastName,
                  r'GCustomerRelationsContactCreateInput', 'lastName'),
              phone: phone,
              email: email,
              description: description);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'groupId';
        groupId.build();
        _$failedField = 'organizationId';
        _organizationId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCustomerRelationsContactCreateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCustomerRelationsContactID extends GCustomerRelationsContactID {
  @override
  final String value;

  factory _$GCustomerRelationsContactID(
          [void Function(GCustomerRelationsContactIDBuilder)? updates]) =>
      (new GCustomerRelationsContactIDBuilder()..update(updates))._build();

  _$GCustomerRelationsContactID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GCustomerRelationsContactID', 'value');
  }

  @override
  GCustomerRelationsContactID rebuild(
          void Function(GCustomerRelationsContactIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomerRelationsContactIDBuilder toBuilder() =>
      new GCustomerRelationsContactIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomerRelationsContactID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCustomerRelationsContactID')
          ..add('value', value))
        .toString();
  }
}

class GCustomerRelationsContactIDBuilder
    implements
        Builder<GCustomerRelationsContactID,
            GCustomerRelationsContactIDBuilder> {
  _$GCustomerRelationsContactID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GCustomerRelationsContactIDBuilder();

  GCustomerRelationsContactIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomerRelationsContactID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCustomerRelationsContactID;
  }

  @override
  void update(void Function(GCustomerRelationsContactIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCustomerRelationsContactID build() => _build();

  _$GCustomerRelationsContactID _build() {
    final _$result = _$v ??
        new _$GCustomerRelationsContactID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GCustomerRelationsContactID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GCustomerRelationsContactUpdateInput
    extends GCustomerRelationsContactUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GCustomerRelationsContactID id;
  @override
  final GCustomerRelationsOrganizationID? organizationId;
  @override
  final String? firstName;
  @override
  final String? lastName;
  @override
  final String? phone;
  @override
  final String? email;
  @override
  final String? description;
  @override
  final bool? active;

  factory _$GCustomerRelationsContactUpdateInput(
          [void Function(GCustomerRelationsContactUpdateInputBuilder)?
              updates]) =>
      (new GCustomerRelationsContactUpdateInputBuilder()..update(updates))
          ._build();

  _$GCustomerRelationsContactUpdateInput._(
      {this.clientMutationId,
      required this.id,
      this.organizationId,
      this.firstName,
      this.lastName,
      this.phone,
      this.email,
      this.description,
      this.active})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GCustomerRelationsContactUpdateInput', 'id');
  }

  @override
  GCustomerRelationsContactUpdateInput rebuild(
          void Function(GCustomerRelationsContactUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomerRelationsContactUpdateInputBuilder toBuilder() =>
      new GCustomerRelationsContactUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomerRelationsContactUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        organizationId == other.organizationId &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        phone == other.phone &&
        email == other.email &&
        description == other.description &&
        active == other.active;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, clientMutationId.hashCode),
                                    id.hashCode),
                                organizationId.hashCode),
                            firstName.hashCode),
                        lastName.hashCode),
                    phone.hashCode),
                email.hashCode),
            description.hashCode),
        active.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCustomerRelationsContactUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('organizationId', organizationId)
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('phone', phone)
          ..add('email', email)
          ..add('description', description)
          ..add('active', active))
        .toString();
  }
}

class GCustomerRelationsContactUpdateInputBuilder
    implements
        Builder<GCustomerRelationsContactUpdateInput,
            GCustomerRelationsContactUpdateInputBuilder> {
  _$GCustomerRelationsContactUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCustomerRelationsContactIDBuilder? _id;
  GCustomerRelationsContactIDBuilder get id =>
      _$this._id ??= new GCustomerRelationsContactIDBuilder();
  set id(GCustomerRelationsContactIDBuilder? id) => _$this._id = id;

  GCustomerRelationsOrganizationIDBuilder? _organizationId;
  GCustomerRelationsOrganizationIDBuilder get organizationId =>
      _$this._organizationId ??= new GCustomerRelationsOrganizationIDBuilder();
  set organizationId(GCustomerRelationsOrganizationIDBuilder? organizationId) =>
      _$this._organizationId = organizationId;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  GCustomerRelationsContactUpdateInputBuilder();

  GCustomerRelationsContactUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _organizationId = $v.organizationId?.toBuilder();
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _phone = $v.phone;
      _email = $v.email;
      _description = $v.description;
      _active = $v.active;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomerRelationsContactUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCustomerRelationsContactUpdateInput;
  }

  @override
  void update(
      void Function(GCustomerRelationsContactUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCustomerRelationsContactUpdateInput build() => _build();

  _$GCustomerRelationsContactUpdateInput _build() {
    _$GCustomerRelationsContactUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GCustomerRelationsContactUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              organizationId: _organizationId?.build(),
              firstName: firstName,
              lastName: lastName,
              phone: phone,
              email: email,
              description: description,
              active: active);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
        _$failedField = 'organizationId';
        _organizationId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCustomerRelationsContactUpdateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCustomerRelationsOrganizationCreateInput
    extends GCustomerRelationsOrganizationCreateInput {
  @override
  final String? clientMutationId;
  @override
  final GGroupID groupId;
  @override
  final String name;
  @override
  final double? defaultRate;
  @override
  final String? description;

  factory _$GCustomerRelationsOrganizationCreateInput(
          [void Function(GCustomerRelationsOrganizationCreateInputBuilder)?
              updates]) =>
      (new GCustomerRelationsOrganizationCreateInputBuilder()..update(updates))
          ._build();

  _$GCustomerRelationsOrganizationCreateInput._(
      {this.clientMutationId,
      required this.groupId,
      required this.name,
      this.defaultRate,
      this.description})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        groupId, r'GCustomerRelationsOrganizationCreateInput', 'groupId');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GCustomerRelationsOrganizationCreateInput', 'name');
  }

  @override
  GCustomerRelationsOrganizationCreateInput rebuild(
          void Function(GCustomerRelationsOrganizationCreateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomerRelationsOrganizationCreateInputBuilder toBuilder() =>
      new GCustomerRelationsOrganizationCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomerRelationsOrganizationCreateInput &&
        clientMutationId == other.clientMutationId &&
        groupId == other.groupId &&
        name == other.name &&
        defaultRate == other.defaultRate &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), groupId.hashCode),
                name.hashCode),
            defaultRate.hashCode),
        description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GCustomerRelationsOrganizationCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('groupId', groupId)
          ..add('name', name)
          ..add('defaultRate', defaultRate)
          ..add('description', description))
        .toString();
  }
}

class GCustomerRelationsOrganizationCreateInputBuilder
    implements
        Builder<GCustomerRelationsOrganizationCreateInput,
            GCustomerRelationsOrganizationCreateInputBuilder> {
  _$GCustomerRelationsOrganizationCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GGroupIDBuilder? _groupId;
  GGroupIDBuilder get groupId => _$this._groupId ??= new GGroupIDBuilder();
  set groupId(GGroupIDBuilder? groupId) => _$this._groupId = groupId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  double? _defaultRate;
  double? get defaultRate => _$this._defaultRate;
  set defaultRate(double? defaultRate) => _$this._defaultRate = defaultRate;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GCustomerRelationsOrganizationCreateInputBuilder();

  GCustomerRelationsOrganizationCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _groupId = $v.groupId.toBuilder();
      _name = $v.name;
      _defaultRate = $v.defaultRate;
      _description = $v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomerRelationsOrganizationCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCustomerRelationsOrganizationCreateInput;
  }

  @override
  void update(
      void Function(GCustomerRelationsOrganizationCreateInputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GCustomerRelationsOrganizationCreateInput build() => _build();

  _$GCustomerRelationsOrganizationCreateInput _build() {
    _$GCustomerRelationsOrganizationCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GCustomerRelationsOrganizationCreateInput._(
              clientMutationId: clientMutationId,
              groupId: groupId.build(),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GCustomerRelationsOrganizationCreateInput', 'name'),
              defaultRate: defaultRate,
              description: description);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'groupId';
        groupId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCustomerRelationsOrganizationCreateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCustomerRelationsOrganizationID
    extends GCustomerRelationsOrganizationID {
  @override
  final String value;

  factory _$GCustomerRelationsOrganizationID(
          [void Function(GCustomerRelationsOrganizationIDBuilder)? updates]) =>
      (new GCustomerRelationsOrganizationIDBuilder()..update(updates))._build();

  _$GCustomerRelationsOrganizationID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GCustomerRelationsOrganizationID', 'value');
  }

  @override
  GCustomerRelationsOrganizationID rebuild(
          void Function(GCustomerRelationsOrganizationIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomerRelationsOrganizationIDBuilder toBuilder() =>
      new GCustomerRelationsOrganizationIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomerRelationsOrganizationID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCustomerRelationsOrganizationID')
          ..add('value', value))
        .toString();
  }
}

class GCustomerRelationsOrganizationIDBuilder
    implements
        Builder<GCustomerRelationsOrganizationID,
            GCustomerRelationsOrganizationIDBuilder> {
  _$GCustomerRelationsOrganizationID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GCustomerRelationsOrganizationIDBuilder();

  GCustomerRelationsOrganizationIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomerRelationsOrganizationID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCustomerRelationsOrganizationID;
  }

  @override
  void update(void Function(GCustomerRelationsOrganizationIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCustomerRelationsOrganizationID build() => _build();

  _$GCustomerRelationsOrganizationID _build() {
    final _$result = _$v ??
        new _$GCustomerRelationsOrganizationID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GCustomerRelationsOrganizationID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GCustomerRelationsOrganizationUpdateInput
    extends GCustomerRelationsOrganizationUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GCustomerRelationsOrganizationID id;
  @override
  final String? name;
  @override
  final double? defaultRate;
  @override
  final String? description;
  @override
  final bool? active;

  factory _$GCustomerRelationsOrganizationUpdateInput(
          [void Function(GCustomerRelationsOrganizationUpdateInputBuilder)?
              updates]) =>
      (new GCustomerRelationsOrganizationUpdateInputBuilder()..update(updates))
          ._build();

  _$GCustomerRelationsOrganizationUpdateInput._(
      {this.clientMutationId,
      required this.id,
      this.name,
      this.defaultRate,
      this.description,
      this.active})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GCustomerRelationsOrganizationUpdateInput', 'id');
  }

  @override
  GCustomerRelationsOrganizationUpdateInput rebuild(
          void Function(GCustomerRelationsOrganizationUpdateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomerRelationsOrganizationUpdateInputBuilder toBuilder() =>
      new GCustomerRelationsOrganizationUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomerRelationsOrganizationUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        name == other.name &&
        defaultRate == other.defaultRate &&
        description == other.description &&
        active == other.active;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
                    name.hashCode),
                defaultRate.hashCode),
            description.hashCode),
        active.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GCustomerRelationsOrganizationUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('name', name)
          ..add('defaultRate', defaultRate)
          ..add('description', description)
          ..add('active', active))
        .toString();
  }
}

class GCustomerRelationsOrganizationUpdateInputBuilder
    implements
        Builder<GCustomerRelationsOrganizationUpdateInput,
            GCustomerRelationsOrganizationUpdateInputBuilder> {
  _$GCustomerRelationsOrganizationUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCustomerRelationsOrganizationIDBuilder? _id;
  GCustomerRelationsOrganizationIDBuilder get id =>
      _$this._id ??= new GCustomerRelationsOrganizationIDBuilder();
  set id(GCustomerRelationsOrganizationIDBuilder? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  double? _defaultRate;
  double? get defaultRate => _$this._defaultRate;
  set defaultRate(double? defaultRate) => _$this._defaultRate = defaultRate;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  GCustomerRelationsOrganizationUpdateInputBuilder();

  GCustomerRelationsOrganizationUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _name = $v.name;
      _defaultRate = $v.defaultRate;
      _description = $v.description;
      _active = $v.active;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomerRelationsOrganizationUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCustomerRelationsOrganizationUpdateInput;
  }

  @override
  void update(
      void Function(GCustomerRelationsOrganizationUpdateInputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GCustomerRelationsOrganizationUpdateInput build() => _build();

  _$GCustomerRelationsOrganizationUpdateInput _build() {
    _$GCustomerRelationsOrganizationUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GCustomerRelationsOrganizationUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              name: name,
              defaultRate: defaultRate,
              description: description,
              active: active);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCustomerRelationsOrganizationUpdateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastOnDemandScanCreateInput extends GDastOnDemandScanCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String fullPath;
  @override
  final GDastSiteProfileID dastSiteProfileId;
  @override
  final GDastScannerProfileID? dastScannerProfileId;

  factory _$GDastOnDemandScanCreateInput(
          [void Function(GDastOnDemandScanCreateInputBuilder)? updates]) =>
      (new GDastOnDemandScanCreateInputBuilder()..update(updates))._build();

  _$GDastOnDemandScanCreateInput._(
      {this.clientMutationId,
      required this.fullPath,
      required this.dastSiteProfileId,
      this.dastScannerProfileId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GDastOnDemandScanCreateInput', 'fullPath');
    BuiltValueNullFieldError.checkNotNull(dastSiteProfileId,
        r'GDastOnDemandScanCreateInput', 'dastSiteProfileId');
  }

  @override
  GDastOnDemandScanCreateInput rebuild(
          void Function(GDastOnDemandScanCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastOnDemandScanCreateInputBuilder toBuilder() =>
      new GDastOnDemandScanCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastOnDemandScanCreateInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath &&
        dastSiteProfileId == other.dastSiteProfileId &&
        dastScannerProfileId == other.dastScannerProfileId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), fullPath.hashCode),
            dastSiteProfileId.hashCode),
        dastScannerProfileId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastOnDemandScanCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath)
          ..add('dastSiteProfileId', dastSiteProfileId)
          ..add('dastScannerProfileId', dastScannerProfileId))
        .toString();
  }
}

class GDastOnDemandScanCreateInputBuilder
    implements
        Builder<GDastOnDemandScanCreateInput,
            GDastOnDemandScanCreateInputBuilder> {
  _$GDastOnDemandScanCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  GDastSiteProfileIDBuilder? _dastSiteProfileId;
  GDastSiteProfileIDBuilder get dastSiteProfileId =>
      _$this._dastSiteProfileId ??= new GDastSiteProfileIDBuilder();
  set dastSiteProfileId(GDastSiteProfileIDBuilder? dastSiteProfileId) =>
      _$this._dastSiteProfileId = dastSiteProfileId;

  GDastScannerProfileIDBuilder? _dastScannerProfileId;
  GDastScannerProfileIDBuilder get dastScannerProfileId =>
      _$this._dastScannerProfileId ??= new GDastScannerProfileIDBuilder();
  set dastScannerProfileId(
          GDastScannerProfileIDBuilder? dastScannerProfileId) =>
      _$this._dastScannerProfileId = dastScannerProfileId;

  GDastOnDemandScanCreateInputBuilder();

  GDastOnDemandScanCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _dastSiteProfileId = $v.dastSiteProfileId.toBuilder();
      _dastScannerProfileId = $v.dastScannerProfileId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastOnDemandScanCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastOnDemandScanCreateInput;
  }

  @override
  void update(void Function(GDastOnDemandScanCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastOnDemandScanCreateInput build() => _build();

  _$GDastOnDemandScanCreateInput _build() {
    _$GDastOnDemandScanCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GDastOnDemandScanCreateInput._(
              clientMutationId: clientMutationId,
              fullPath: BuiltValueNullFieldError.checkNotNull(
                  fullPath, r'GDastOnDemandScanCreateInput', 'fullPath'),
              dastSiteProfileId: dastSiteProfileId.build(),
              dastScannerProfileId: _dastScannerProfileId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'dastSiteProfileId';
        dastSiteProfileId.build();
        _$failedField = 'dastScannerProfileId';
        _dastScannerProfileId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastOnDemandScanCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastProfileCadenceInput extends GDastProfileCadenceInput {
  @override
  final GDastProfileCadenceUnit? unit;
  @override
  final int? duration;

  factory _$GDastProfileCadenceInput(
          [void Function(GDastProfileCadenceInputBuilder)? updates]) =>
      (new GDastProfileCadenceInputBuilder()..update(updates))._build();

  _$GDastProfileCadenceInput._({this.unit, this.duration}) : super._();

  @override
  GDastProfileCadenceInput rebuild(
          void Function(GDastProfileCadenceInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastProfileCadenceInputBuilder toBuilder() =>
      new GDastProfileCadenceInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastProfileCadenceInput &&
        unit == other.unit &&
        duration == other.duration;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, unit.hashCode), duration.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastProfileCadenceInput')
          ..add('unit', unit)
          ..add('duration', duration))
        .toString();
  }
}

class GDastProfileCadenceInputBuilder
    implements
        Builder<GDastProfileCadenceInput, GDastProfileCadenceInputBuilder> {
  _$GDastProfileCadenceInput? _$v;

  GDastProfileCadenceUnit? _unit;
  GDastProfileCadenceUnit? get unit => _$this._unit;
  set unit(GDastProfileCadenceUnit? unit) => _$this._unit = unit;

  int? _duration;
  int? get duration => _$this._duration;
  set duration(int? duration) => _$this._duration = duration;

  GDastProfileCadenceInputBuilder();

  GDastProfileCadenceInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _unit = $v.unit;
      _duration = $v.duration;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastProfileCadenceInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastProfileCadenceInput;
  }

  @override
  void update(void Function(GDastProfileCadenceInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastProfileCadenceInput build() => _build();

  _$GDastProfileCadenceInput _build() {
    final _$result =
        _$v ?? new _$GDastProfileCadenceInput._(unit: unit, duration: duration);
    replace(_$result);
    return _$result;
  }
}

class _$GDastProfileCreateInput extends GDastProfileCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String fullPath;
  @override
  final GDastProfileScheduleInput? dastProfileSchedule;
  @override
  final String name;
  @override
  final String? description;
  @override
  final String? branchName;
  @override
  final GDastSiteProfileID dastSiteProfileId;
  @override
  final GDastScannerProfileID dastScannerProfileId;
  @override
  final bool? runAfterCreate;

  factory _$GDastProfileCreateInput(
          [void Function(GDastProfileCreateInputBuilder)? updates]) =>
      (new GDastProfileCreateInputBuilder()..update(updates))._build();

  _$GDastProfileCreateInput._(
      {this.clientMutationId,
      required this.fullPath,
      this.dastProfileSchedule,
      required this.name,
      this.description,
      this.branchName,
      required this.dastSiteProfileId,
      required this.dastScannerProfileId,
      this.runAfterCreate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GDastProfileCreateInput', 'fullPath');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GDastProfileCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        dastSiteProfileId, r'GDastProfileCreateInput', 'dastSiteProfileId');
    BuiltValueNullFieldError.checkNotNull(dastScannerProfileId,
        r'GDastProfileCreateInput', 'dastScannerProfileId');
  }

  @override
  GDastProfileCreateInput rebuild(
          void Function(GDastProfileCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastProfileCreateInputBuilder toBuilder() =>
      new GDastProfileCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastProfileCreateInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath &&
        dastProfileSchedule == other.dastProfileSchedule &&
        name == other.name &&
        description == other.description &&
        branchName == other.branchName &&
        dastSiteProfileId == other.dastSiteProfileId &&
        dastScannerProfileId == other.dastScannerProfileId &&
        runAfterCreate == other.runAfterCreate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, clientMutationId.hashCode),
                                    fullPath.hashCode),
                                dastProfileSchedule.hashCode),
                            name.hashCode),
                        description.hashCode),
                    branchName.hashCode),
                dastSiteProfileId.hashCode),
            dastScannerProfileId.hashCode),
        runAfterCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastProfileCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath)
          ..add('dastProfileSchedule', dastProfileSchedule)
          ..add('name', name)
          ..add('description', description)
          ..add('branchName', branchName)
          ..add('dastSiteProfileId', dastSiteProfileId)
          ..add('dastScannerProfileId', dastScannerProfileId)
          ..add('runAfterCreate', runAfterCreate))
        .toString();
  }
}

class GDastProfileCreateInputBuilder
    implements
        Builder<GDastProfileCreateInput, GDastProfileCreateInputBuilder> {
  _$GDastProfileCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  GDastProfileScheduleInputBuilder? _dastProfileSchedule;
  GDastProfileScheduleInputBuilder get dastProfileSchedule =>
      _$this._dastProfileSchedule ??= new GDastProfileScheduleInputBuilder();
  set dastProfileSchedule(
          GDastProfileScheduleInputBuilder? dastProfileSchedule) =>
      _$this._dastProfileSchedule = dastProfileSchedule;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _branchName;
  String? get branchName => _$this._branchName;
  set branchName(String? branchName) => _$this._branchName = branchName;

  GDastSiteProfileIDBuilder? _dastSiteProfileId;
  GDastSiteProfileIDBuilder get dastSiteProfileId =>
      _$this._dastSiteProfileId ??= new GDastSiteProfileIDBuilder();
  set dastSiteProfileId(GDastSiteProfileIDBuilder? dastSiteProfileId) =>
      _$this._dastSiteProfileId = dastSiteProfileId;

  GDastScannerProfileIDBuilder? _dastScannerProfileId;
  GDastScannerProfileIDBuilder get dastScannerProfileId =>
      _$this._dastScannerProfileId ??= new GDastScannerProfileIDBuilder();
  set dastScannerProfileId(
          GDastScannerProfileIDBuilder? dastScannerProfileId) =>
      _$this._dastScannerProfileId = dastScannerProfileId;

  bool? _runAfterCreate;
  bool? get runAfterCreate => _$this._runAfterCreate;
  set runAfterCreate(bool? runAfterCreate) =>
      _$this._runAfterCreate = runAfterCreate;

  GDastProfileCreateInputBuilder();

  GDastProfileCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _dastProfileSchedule = $v.dastProfileSchedule?.toBuilder();
      _name = $v.name;
      _description = $v.description;
      _branchName = $v.branchName;
      _dastSiteProfileId = $v.dastSiteProfileId.toBuilder();
      _dastScannerProfileId = $v.dastScannerProfileId.toBuilder();
      _runAfterCreate = $v.runAfterCreate;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastProfileCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastProfileCreateInput;
  }

  @override
  void update(void Function(GDastProfileCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastProfileCreateInput build() => _build();

  _$GDastProfileCreateInput _build() {
    _$GDastProfileCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GDastProfileCreateInput._(
              clientMutationId: clientMutationId,
              fullPath: BuiltValueNullFieldError.checkNotNull(
                  fullPath, r'GDastProfileCreateInput', 'fullPath'),
              dastProfileSchedule: _dastProfileSchedule?.build(),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GDastProfileCreateInput', 'name'),
              description: description,
              branchName: branchName,
              dastSiteProfileId: dastSiteProfileId.build(),
              dastScannerProfileId: dastScannerProfileId.build(),
              runAfterCreate: runAfterCreate);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'dastProfileSchedule';
        _dastProfileSchedule?.build();

        _$failedField = 'dastSiteProfileId';
        dastSiteProfileId.build();
        _$failedField = 'dastScannerProfileId';
        dastScannerProfileId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastProfileCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastProfileDeleteInput extends GDastProfileDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final GDastProfileID id;

  factory _$GDastProfileDeleteInput(
          [void Function(GDastProfileDeleteInputBuilder)? updates]) =>
      (new GDastProfileDeleteInputBuilder()..update(updates))._build();

  _$GDastProfileDeleteInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDastProfileDeleteInput', 'id');
  }

  @override
  GDastProfileDeleteInput rebuild(
          void Function(GDastProfileDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastProfileDeleteInputBuilder toBuilder() =>
      new GDastProfileDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastProfileDeleteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastProfileDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDastProfileDeleteInputBuilder
    implements
        Builder<GDastProfileDeleteInput, GDastProfileDeleteInputBuilder> {
  _$GDastProfileDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDastProfileIDBuilder? _id;
  GDastProfileIDBuilder get id => _$this._id ??= new GDastProfileIDBuilder();
  set id(GDastProfileIDBuilder? id) => _$this._id = id;

  GDastProfileDeleteInputBuilder();

  GDastProfileDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastProfileDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastProfileDeleteInput;
  }

  @override
  void update(void Function(GDastProfileDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastProfileDeleteInput build() => _build();

  _$GDastProfileDeleteInput _build() {
    _$GDastProfileDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GDastProfileDeleteInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastProfileDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastProfileID extends GDastProfileID {
  @override
  final String value;

  factory _$GDastProfileID([void Function(GDastProfileIDBuilder)? updates]) =>
      (new GDastProfileIDBuilder()..update(updates))._build();

  _$GDastProfileID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDastProfileID', 'value');
  }

  @override
  GDastProfileID rebuild(void Function(GDastProfileIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastProfileIDBuilder toBuilder() =>
      new GDastProfileIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastProfileID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastProfileID')..add('value', value))
        .toString();
  }
}

class GDastProfileIDBuilder
    implements Builder<GDastProfileID, GDastProfileIDBuilder> {
  _$GDastProfileID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDastProfileIDBuilder();

  GDastProfileIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastProfileID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastProfileID;
  }

  @override
  void update(void Function(GDastProfileIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastProfileID build() => _build();

  _$GDastProfileID _build() {
    final _$result = _$v ??
        new _$GDastProfileID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDastProfileID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDastProfileRunInput extends GDastProfileRunInput {
  @override
  final String? clientMutationId;
  @override
  final GDastProfileID id;

  factory _$GDastProfileRunInput(
          [void Function(GDastProfileRunInputBuilder)? updates]) =>
      (new GDastProfileRunInputBuilder()..update(updates))._build();

  _$GDastProfileRunInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDastProfileRunInput', 'id');
  }

  @override
  GDastProfileRunInput rebuild(
          void Function(GDastProfileRunInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastProfileRunInputBuilder toBuilder() =>
      new GDastProfileRunInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastProfileRunInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastProfileRunInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDastProfileRunInputBuilder
    implements Builder<GDastProfileRunInput, GDastProfileRunInputBuilder> {
  _$GDastProfileRunInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDastProfileIDBuilder? _id;
  GDastProfileIDBuilder get id => _$this._id ??= new GDastProfileIDBuilder();
  set id(GDastProfileIDBuilder? id) => _$this._id = id;

  GDastProfileRunInputBuilder();

  GDastProfileRunInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastProfileRunInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastProfileRunInput;
  }

  @override
  void update(void Function(GDastProfileRunInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastProfileRunInput build() => _build();

  _$GDastProfileRunInput _build() {
    _$GDastProfileRunInput _$result;
    try {
      _$result = _$v ??
          new _$GDastProfileRunInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastProfileRunInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastProfileScheduleID extends GDastProfileScheduleID {
  @override
  final String value;

  factory _$GDastProfileScheduleID(
          [void Function(GDastProfileScheduleIDBuilder)? updates]) =>
      (new GDastProfileScheduleIDBuilder()..update(updates))._build();

  _$GDastProfileScheduleID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GDastProfileScheduleID', 'value');
  }

  @override
  GDastProfileScheduleID rebuild(
          void Function(GDastProfileScheduleIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastProfileScheduleIDBuilder toBuilder() =>
      new GDastProfileScheduleIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastProfileScheduleID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastProfileScheduleID')
          ..add('value', value))
        .toString();
  }
}

class GDastProfileScheduleIDBuilder
    implements Builder<GDastProfileScheduleID, GDastProfileScheduleIDBuilder> {
  _$GDastProfileScheduleID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDastProfileScheduleIDBuilder();

  GDastProfileScheduleIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastProfileScheduleID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastProfileScheduleID;
  }

  @override
  void update(void Function(GDastProfileScheduleIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastProfileScheduleID build() => _build();

  _$GDastProfileScheduleID _build() {
    final _$result = _$v ??
        new _$GDastProfileScheduleID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDastProfileScheduleID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDastProfileScheduleInput extends GDastProfileScheduleInput {
  @override
  final bool? active;
  @override
  final GTime? startsAt;
  @override
  final String? timezone;
  @override
  final GDastProfileCadenceInput? cadence;

  factory _$GDastProfileScheduleInput(
          [void Function(GDastProfileScheduleInputBuilder)? updates]) =>
      (new GDastProfileScheduleInputBuilder()..update(updates))._build();

  _$GDastProfileScheduleInput._(
      {this.active, this.startsAt, this.timezone, this.cadence})
      : super._();

  @override
  GDastProfileScheduleInput rebuild(
          void Function(GDastProfileScheduleInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastProfileScheduleInputBuilder toBuilder() =>
      new GDastProfileScheduleInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastProfileScheduleInput &&
        active == other.active &&
        startsAt == other.startsAt &&
        timezone == other.timezone &&
        cadence == other.cadence;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, active.hashCode), startsAt.hashCode), timezone.hashCode),
        cadence.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastProfileScheduleInput')
          ..add('active', active)
          ..add('startsAt', startsAt)
          ..add('timezone', timezone)
          ..add('cadence', cadence))
        .toString();
  }
}

class GDastProfileScheduleInputBuilder
    implements
        Builder<GDastProfileScheduleInput, GDastProfileScheduleInputBuilder> {
  _$GDastProfileScheduleInput? _$v;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  GTimeBuilder? _startsAt;
  GTimeBuilder get startsAt => _$this._startsAt ??= new GTimeBuilder();
  set startsAt(GTimeBuilder? startsAt) => _$this._startsAt = startsAt;

  String? _timezone;
  String? get timezone => _$this._timezone;
  set timezone(String? timezone) => _$this._timezone = timezone;

  GDastProfileCadenceInputBuilder? _cadence;
  GDastProfileCadenceInputBuilder get cadence =>
      _$this._cadence ??= new GDastProfileCadenceInputBuilder();
  set cadence(GDastProfileCadenceInputBuilder? cadence) =>
      _$this._cadence = cadence;

  GDastProfileScheduleInputBuilder();

  GDastProfileScheduleInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _active = $v.active;
      _startsAt = $v.startsAt?.toBuilder();
      _timezone = $v.timezone;
      _cadence = $v.cadence?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastProfileScheduleInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastProfileScheduleInput;
  }

  @override
  void update(void Function(GDastProfileScheduleInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastProfileScheduleInput build() => _build();

  _$GDastProfileScheduleInput _build() {
    _$GDastProfileScheduleInput _$result;
    try {
      _$result = _$v ??
          new _$GDastProfileScheduleInput._(
              active: active,
              startsAt: _startsAt?.build(),
              timezone: timezone,
              cadence: _cadence?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'startsAt';
        _startsAt?.build();

        _$failedField = 'cadence';
        _cadence?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastProfileScheduleInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastProfileUpdateInput extends GDastProfileUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GDastProfileID id;
  @override
  final GDastProfileScheduleInput? dastProfileSchedule;
  @override
  final String? name;
  @override
  final String? description;
  @override
  final String? branchName;
  @override
  final GDastSiteProfileID? dastSiteProfileId;
  @override
  final GDastScannerProfileID? dastScannerProfileId;
  @override
  final bool? runAfterUpdate;

  factory _$GDastProfileUpdateInput(
          [void Function(GDastProfileUpdateInputBuilder)? updates]) =>
      (new GDastProfileUpdateInputBuilder()..update(updates))._build();

  _$GDastProfileUpdateInput._(
      {this.clientMutationId,
      required this.id,
      this.dastProfileSchedule,
      this.name,
      this.description,
      this.branchName,
      this.dastSiteProfileId,
      this.dastScannerProfileId,
      this.runAfterUpdate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDastProfileUpdateInput', 'id');
  }

  @override
  GDastProfileUpdateInput rebuild(
          void Function(GDastProfileUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastProfileUpdateInputBuilder toBuilder() =>
      new GDastProfileUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastProfileUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        dastProfileSchedule == other.dastProfileSchedule &&
        name == other.name &&
        description == other.description &&
        branchName == other.branchName &&
        dastSiteProfileId == other.dastSiteProfileId &&
        dastScannerProfileId == other.dastScannerProfileId &&
        runAfterUpdate == other.runAfterUpdate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, clientMutationId.hashCode),
                                    id.hashCode),
                                dastProfileSchedule.hashCode),
                            name.hashCode),
                        description.hashCode),
                    branchName.hashCode),
                dastSiteProfileId.hashCode),
            dastScannerProfileId.hashCode),
        runAfterUpdate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastProfileUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('dastProfileSchedule', dastProfileSchedule)
          ..add('name', name)
          ..add('description', description)
          ..add('branchName', branchName)
          ..add('dastSiteProfileId', dastSiteProfileId)
          ..add('dastScannerProfileId', dastScannerProfileId)
          ..add('runAfterUpdate', runAfterUpdate))
        .toString();
  }
}

class GDastProfileUpdateInputBuilder
    implements
        Builder<GDastProfileUpdateInput, GDastProfileUpdateInputBuilder> {
  _$GDastProfileUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDastProfileIDBuilder? _id;
  GDastProfileIDBuilder get id => _$this._id ??= new GDastProfileIDBuilder();
  set id(GDastProfileIDBuilder? id) => _$this._id = id;

  GDastProfileScheduleInputBuilder? _dastProfileSchedule;
  GDastProfileScheduleInputBuilder get dastProfileSchedule =>
      _$this._dastProfileSchedule ??= new GDastProfileScheduleInputBuilder();
  set dastProfileSchedule(
          GDastProfileScheduleInputBuilder? dastProfileSchedule) =>
      _$this._dastProfileSchedule = dastProfileSchedule;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _branchName;
  String? get branchName => _$this._branchName;
  set branchName(String? branchName) => _$this._branchName = branchName;

  GDastSiteProfileIDBuilder? _dastSiteProfileId;
  GDastSiteProfileIDBuilder get dastSiteProfileId =>
      _$this._dastSiteProfileId ??= new GDastSiteProfileIDBuilder();
  set dastSiteProfileId(GDastSiteProfileIDBuilder? dastSiteProfileId) =>
      _$this._dastSiteProfileId = dastSiteProfileId;

  GDastScannerProfileIDBuilder? _dastScannerProfileId;
  GDastScannerProfileIDBuilder get dastScannerProfileId =>
      _$this._dastScannerProfileId ??= new GDastScannerProfileIDBuilder();
  set dastScannerProfileId(
          GDastScannerProfileIDBuilder? dastScannerProfileId) =>
      _$this._dastScannerProfileId = dastScannerProfileId;

  bool? _runAfterUpdate;
  bool? get runAfterUpdate => _$this._runAfterUpdate;
  set runAfterUpdate(bool? runAfterUpdate) =>
      _$this._runAfterUpdate = runAfterUpdate;

  GDastProfileUpdateInputBuilder();

  GDastProfileUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _dastProfileSchedule = $v.dastProfileSchedule?.toBuilder();
      _name = $v.name;
      _description = $v.description;
      _branchName = $v.branchName;
      _dastSiteProfileId = $v.dastSiteProfileId?.toBuilder();
      _dastScannerProfileId = $v.dastScannerProfileId?.toBuilder();
      _runAfterUpdate = $v.runAfterUpdate;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastProfileUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastProfileUpdateInput;
  }

  @override
  void update(void Function(GDastProfileUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastProfileUpdateInput build() => _build();

  _$GDastProfileUpdateInput _build() {
    _$GDastProfileUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GDastProfileUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              dastProfileSchedule: _dastProfileSchedule?.build(),
              name: name,
              description: description,
              branchName: branchName,
              dastSiteProfileId: _dastSiteProfileId?.build(),
              dastScannerProfileId: _dastScannerProfileId?.build(),
              runAfterUpdate: runAfterUpdate);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
        _$failedField = 'dastProfileSchedule';
        _dastProfileSchedule?.build();

        _$failedField = 'dastSiteProfileId';
        _dastSiteProfileId?.build();
        _$failedField = 'dastScannerProfileId';
        _dastScannerProfileId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastProfileUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastScannerProfileCreateInput extends GDastScannerProfileCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String fullPath;
  @override
  final String profileName;
  @override
  final int? spiderTimeout;
  @override
  final int? targetTimeout;
  @override
  final GDastScanTypeEnum? scanType;
  @override
  final bool? useAjaxSpider;
  @override
  final bool? showDebugMessages;

  factory _$GDastScannerProfileCreateInput(
          [void Function(GDastScannerProfileCreateInputBuilder)? updates]) =>
      (new GDastScannerProfileCreateInputBuilder()..update(updates))._build();

  _$GDastScannerProfileCreateInput._(
      {this.clientMutationId,
      required this.fullPath,
      required this.profileName,
      this.spiderTimeout,
      this.targetTimeout,
      this.scanType,
      this.useAjaxSpider,
      this.showDebugMessages})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GDastScannerProfileCreateInput', 'fullPath');
    BuiltValueNullFieldError.checkNotNull(
        profileName, r'GDastScannerProfileCreateInput', 'profileName');
  }

  @override
  GDastScannerProfileCreateInput rebuild(
          void Function(GDastScannerProfileCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastScannerProfileCreateInputBuilder toBuilder() =>
      new GDastScannerProfileCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastScannerProfileCreateInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath &&
        profileName == other.profileName &&
        spiderTimeout == other.spiderTimeout &&
        targetTimeout == other.targetTimeout &&
        scanType == other.scanType &&
        useAjaxSpider == other.useAjaxSpider &&
        showDebugMessages == other.showDebugMessages;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, clientMutationId.hashCode),
                                fullPath.hashCode),
                            profileName.hashCode),
                        spiderTimeout.hashCode),
                    targetTimeout.hashCode),
                scanType.hashCode),
            useAjaxSpider.hashCode),
        showDebugMessages.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastScannerProfileCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath)
          ..add('profileName', profileName)
          ..add('spiderTimeout', spiderTimeout)
          ..add('targetTimeout', targetTimeout)
          ..add('scanType', scanType)
          ..add('useAjaxSpider', useAjaxSpider)
          ..add('showDebugMessages', showDebugMessages))
        .toString();
  }
}

class GDastScannerProfileCreateInputBuilder
    implements
        Builder<GDastScannerProfileCreateInput,
            GDastScannerProfileCreateInputBuilder> {
  _$GDastScannerProfileCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  String? _profileName;
  String? get profileName => _$this._profileName;
  set profileName(String? profileName) => _$this._profileName = profileName;

  int? _spiderTimeout;
  int? get spiderTimeout => _$this._spiderTimeout;
  set spiderTimeout(int? spiderTimeout) =>
      _$this._spiderTimeout = spiderTimeout;

  int? _targetTimeout;
  int? get targetTimeout => _$this._targetTimeout;
  set targetTimeout(int? targetTimeout) =>
      _$this._targetTimeout = targetTimeout;

  GDastScanTypeEnum? _scanType;
  GDastScanTypeEnum? get scanType => _$this._scanType;
  set scanType(GDastScanTypeEnum? scanType) => _$this._scanType = scanType;

  bool? _useAjaxSpider;
  bool? get useAjaxSpider => _$this._useAjaxSpider;
  set useAjaxSpider(bool? useAjaxSpider) =>
      _$this._useAjaxSpider = useAjaxSpider;

  bool? _showDebugMessages;
  bool? get showDebugMessages => _$this._showDebugMessages;
  set showDebugMessages(bool? showDebugMessages) =>
      _$this._showDebugMessages = showDebugMessages;

  GDastScannerProfileCreateInputBuilder();

  GDastScannerProfileCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _profileName = $v.profileName;
      _spiderTimeout = $v.spiderTimeout;
      _targetTimeout = $v.targetTimeout;
      _scanType = $v.scanType;
      _useAjaxSpider = $v.useAjaxSpider;
      _showDebugMessages = $v.showDebugMessages;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastScannerProfileCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastScannerProfileCreateInput;
  }

  @override
  void update(void Function(GDastScannerProfileCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastScannerProfileCreateInput build() => _build();

  _$GDastScannerProfileCreateInput _build() {
    final _$result = _$v ??
        new _$GDastScannerProfileCreateInput._(
            clientMutationId: clientMutationId,
            fullPath: BuiltValueNullFieldError.checkNotNull(
                fullPath, r'GDastScannerProfileCreateInput', 'fullPath'),
            profileName: BuiltValueNullFieldError.checkNotNull(
                profileName, r'GDastScannerProfileCreateInput', 'profileName'),
            spiderTimeout: spiderTimeout,
            targetTimeout: targetTimeout,
            scanType: scanType,
            useAjaxSpider: useAjaxSpider,
            showDebugMessages: showDebugMessages);
    replace(_$result);
    return _$result;
  }
}

class _$GDastScannerProfileDeleteInput extends GDastScannerProfileDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final GDastScannerProfileID id;

  factory _$GDastScannerProfileDeleteInput(
          [void Function(GDastScannerProfileDeleteInputBuilder)? updates]) =>
      (new GDastScannerProfileDeleteInputBuilder()..update(updates))._build();

  _$GDastScannerProfileDeleteInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDastScannerProfileDeleteInput', 'id');
  }

  @override
  GDastScannerProfileDeleteInput rebuild(
          void Function(GDastScannerProfileDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastScannerProfileDeleteInputBuilder toBuilder() =>
      new GDastScannerProfileDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastScannerProfileDeleteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastScannerProfileDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDastScannerProfileDeleteInputBuilder
    implements
        Builder<GDastScannerProfileDeleteInput,
            GDastScannerProfileDeleteInputBuilder> {
  _$GDastScannerProfileDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDastScannerProfileIDBuilder? _id;
  GDastScannerProfileIDBuilder get id =>
      _$this._id ??= new GDastScannerProfileIDBuilder();
  set id(GDastScannerProfileIDBuilder? id) => _$this._id = id;

  GDastScannerProfileDeleteInputBuilder();

  GDastScannerProfileDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastScannerProfileDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastScannerProfileDeleteInput;
  }

  @override
  void update(void Function(GDastScannerProfileDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastScannerProfileDeleteInput build() => _build();

  _$GDastScannerProfileDeleteInput _build() {
    _$GDastScannerProfileDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GDastScannerProfileDeleteInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastScannerProfileDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastScannerProfileID extends GDastScannerProfileID {
  @override
  final String value;

  factory _$GDastScannerProfileID(
          [void Function(GDastScannerProfileIDBuilder)? updates]) =>
      (new GDastScannerProfileIDBuilder()..update(updates))._build();

  _$GDastScannerProfileID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GDastScannerProfileID', 'value');
  }

  @override
  GDastScannerProfileID rebuild(
          void Function(GDastScannerProfileIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastScannerProfileIDBuilder toBuilder() =>
      new GDastScannerProfileIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastScannerProfileID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastScannerProfileID')
          ..add('value', value))
        .toString();
  }
}

class GDastScannerProfileIDBuilder
    implements Builder<GDastScannerProfileID, GDastScannerProfileIDBuilder> {
  _$GDastScannerProfileID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDastScannerProfileIDBuilder();

  GDastScannerProfileIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastScannerProfileID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastScannerProfileID;
  }

  @override
  void update(void Function(GDastScannerProfileIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastScannerProfileID build() => _build();

  _$GDastScannerProfileID _build() {
    final _$result = _$v ??
        new _$GDastScannerProfileID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDastScannerProfileID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDastScannerProfileUpdateInput extends GDastScannerProfileUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GDastScannerProfileID id;
  @override
  final String profileName;
  @override
  final int spiderTimeout;
  @override
  final int targetTimeout;
  @override
  final GDastScanTypeEnum? scanType;
  @override
  final bool? useAjaxSpider;
  @override
  final bool? showDebugMessages;

  factory _$GDastScannerProfileUpdateInput(
          [void Function(GDastScannerProfileUpdateInputBuilder)? updates]) =>
      (new GDastScannerProfileUpdateInputBuilder()..update(updates))._build();

  _$GDastScannerProfileUpdateInput._(
      {this.clientMutationId,
      required this.id,
      required this.profileName,
      required this.spiderTimeout,
      required this.targetTimeout,
      this.scanType,
      this.useAjaxSpider,
      this.showDebugMessages})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDastScannerProfileUpdateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        profileName, r'GDastScannerProfileUpdateInput', 'profileName');
    BuiltValueNullFieldError.checkNotNull(
        spiderTimeout, r'GDastScannerProfileUpdateInput', 'spiderTimeout');
    BuiltValueNullFieldError.checkNotNull(
        targetTimeout, r'GDastScannerProfileUpdateInput', 'targetTimeout');
  }

  @override
  GDastScannerProfileUpdateInput rebuild(
          void Function(GDastScannerProfileUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastScannerProfileUpdateInputBuilder toBuilder() =>
      new GDastScannerProfileUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastScannerProfileUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        profileName == other.profileName &&
        spiderTimeout == other.spiderTimeout &&
        targetTimeout == other.targetTimeout &&
        scanType == other.scanType &&
        useAjaxSpider == other.useAjaxSpider &&
        showDebugMessages == other.showDebugMessages;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
                            profileName.hashCode),
                        spiderTimeout.hashCode),
                    targetTimeout.hashCode),
                scanType.hashCode),
            useAjaxSpider.hashCode),
        showDebugMessages.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastScannerProfileUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('profileName', profileName)
          ..add('spiderTimeout', spiderTimeout)
          ..add('targetTimeout', targetTimeout)
          ..add('scanType', scanType)
          ..add('useAjaxSpider', useAjaxSpider)
          ..add('showDebugMessages', showDebugMessages))
        .toString();
  }
}

class GDastScannerProfileUpdateInputBuilder
    implements
        Builder<GDastScannerProfileUpdateInput,
            GDastScannerProfileUpdateInputBuilder> {
  _$GDastScannerProfileUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDastScannerProfileIDBuilder? _id;
  GDastScannerProfileIDBuilder get id =>
      _$this._id ??= new GDastScannerProfileIDBuilder();
  set id(GDastScannerProfileIDBuilder? id) => _$this._id = id;

  String? _profileName;
  String? get profileName => _$this._profileName;
  set profileName(String? profileName) => _$this._profileName = profileName;

  int? _spiderTimeout;
  int? get spiderTimeout => _$this._spiderTimeout;
  set spiderTimeout(int? spiderTimeout) =>
      _$this._spiderTimeout = spiderTimeout;

  int? _targetTimeout;
  int? get targetTimeout => _$this._targetTimeout;
  set targetTimeout(int? targetTimeout) =>
      _$this._targetTimeout = targetTimeout;

  GDastScanTypeEnum? _scanType;
  GDastScanTypeEnum? get scanType => _$this._scanType;
  set scanType(GDastScanTypeEnum? scanType) => _$this._scanType = scanType;

  bool? _useAjaxSpider;
  bool? get useAjaxSpider => _$this._useAjaxSpider;
  set useAjaxSpider(bool? useAjaxSpider) =>
      _$this._useAjaxSpider = useAjaxSpider;

  bool? _showDebugMessages;
  bool? get showDebugMessages => _$this._showDebugMessages;
  set showDebugMessages(bool? showDebugMessages) =>
      _$this._showDebugMessages = showDebugMessages;

  GDastScannerProfileUpdateInputBuilder();

  GDastScannerProfileUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _profileName = $v.profileName;
      _spiderTimeout = $v.spiderTimeout;
      _targetTimeout = $v.targetTimeout;
      _scanType = $v.scanType;
      _useAjaxSpider = $v.useAjaxSpider;
      _showDebugMessages = $v.showDebugMessages;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastScannerProfileUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastScannerProfileUpdateInput;
  }

  @override
  void update(void Function(GDastScannerProfileUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastScannerProfileUpdateInput build() => _build();

  _$GDastScannerProfileUpdateInput _build() {
    _$GDastScannerProfileUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GDastScannerProfileUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              profileName: BuiltValueNullFieldError.checkNotNull(profileName,
                  r'GDastScannerProfileUpdateInput', 'profileName'),
              spiderTimeout: BuiltValueNullFieldError.checkNotNull(
                  spiderTimeout,
                  r'GDastScannerProfileUpdateInput',
                  'spiderTimeout'),
              targetTimeout: BuiltValueNullFieldError.checkNotNull(
                  targetTimeout,
                  r'GDastScannerProfileUpdateInput',
                  'targetTimeout'),
              scanType: scanType,
              useAjaxSpider: useAjaxSpider,
              showDebugMessages: showDebugMessages);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastScannerProfileUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastSiteProfileAuthInput extends GDastSiteProfileAuthInput {
  @override
  final bool? enabled;
  @override
  final String? url;
  @override
  final String? usernameField;
  @override
  final String? passwordField;
  @override
  final String? username;
  @override
  final String? password;
  @override
  final String? submitField;

  factory _$GDastSiteProfileAuthInput(
          [void Function(GDastSiteProfileAuthInputBuilder)? updates]) =>
      (new GDastSiteProfileAuthInputBuilder()..update(updates))._build();

  _$GDastSiteProfileAuthInput._(
      {this.enabled,
      this.url,
      this.usernameField,
      this.passwordField,
      this.username,
      this.password,
      this.submitField})
      : super._();

  @override
  GDastSiteProfileAuthInput rebuild(
          void Function(GDastSiteProfileAuthInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastSiteProfileAuthInputBuilder toBuilder() =>
      new GDastSiteProfileAuthInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastSiteProfileAuthInput &&
        enabled == other.enabled &&
        url == other.url &&
        usernameField == other.usernameField &&
        passwordField == other.passwordField &&
        username == other.username &&
        password == other.password &&
        submitField == other.submitField;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, enabled.hashCode), url.hashCode),
                        usernameField.hashCode),
                    passwordField.hashCode),
                username.hashCode),
            password.hashCode),
        submitField.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastSiteProfileAuthInput')
          ..add('enabled', enabled)
          ..add('url', url)
          ..add('usernameField', usernameField)
          ..add('passwordField', passwordField)
          ..add('username', username)
          ..add('password', password)
          ..add('submitField', submitField))
        .toString();
  }
}

class GDastSiteProfileAuthInputBuilder
    implements
        Builder<GDastSiteProfileAuthInput, GDastSiteProfileAuthInputBuilder> {
  _$GDastSiteProfileAuthInput? _$v;

  bool? _enabled;
  bool? get enabled => _$this._enabled;
  set enabled(bool? enabled) => _$this._enabled = enabled;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  String? _usernameField;
  String? get usernameField => _$this._usernameField;
  set usernameField(String? usernameField) =>
      _$this._usernameField = usernameField;

  String? _passwordField;
  String? get passwordField => _$this._passwordField;
  set passwordField(String? passwordField) =>
      _$this._passwordField = passwordField;

  String? _username;
  String? get username => _$this._username;
  set username(String? username) => _$this._username = username;

  String? _password;
  String? get password => _$this._password;
  set password(String? password) => _$this._password = password;

  String? _submitField;
  String? get submitField => _$this._submitField;
  set submitField(String? submitField) => _$this._submitField = submitField;

  GDastSiteProfileAuthInputBuilder();

  GDastSiteProfileAuthInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _enabled = $v.enabled;
      _url = $v.url;
      _usernameField = $v.usernameField;
      _passwordField = $v.passwordField;
      _username = $v.username;
      _password = $v.password;
      _submitField = $v.submitField;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastSiteProfileAuthInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastSiteProfileAuthInput;
  }

  @override
  void update(void Function(GDastSiteProfileAuthInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastSiteProfileAuthInput build() => _build();

  _$GDastSiteProfileAuthInput _build() {
    final _$result = _$v ??
        new _$GDastSiteProfileAuthInput._(
            enabled: enabled,
            url: url,
            usernameField: usernameField,
            passwordField: passwordField,
            username: username,
            password: password,
            submitField: submitField);
    replace(_$result);
    return _$result;
  }
}

class _$GDastSiteProfileCreateInput extends GDastSiteProfileCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String profileName;
  @override
  final String? targetUrl;
  @override
  final GDastTargetTypeEnum? targetType;
  @override
  final GDastScanMethodType? scanMethod;
  @override
  final String? requestHeaders;
  @override
  final GDastSiteProfileAuthInput? auth;
  @override
  final String fullPath;
  @override
  final BuiltList<String>? excludedUrls;

  factory _$GDastSiteProfileCreateInput(
          [void Function(GDastSiteProfileCreateInputBuilder)? updates]) =>
      (new GDastSiteProfileCreateInputBuilder()..update(updates))._build();

  _$GDastSiteProfileCreateInput._(
      {this.clientMutationId,
      required this.profileName,
      this.targetUrl,
      this.targetType,
      this.scanMethod,
      this.requestHeaders,
      this.auth,
      required this.fullPath,
      this.excludedUrls})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        profileName, r'GDastSiteProfileCreateInput', 'profileName');
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GDastSiteProfileCreateInput', 'fullPath');
  }

  @override
  GDastSiteProfileCreateInput rebuild(
          void Function(GDastSiteProfileCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastSiteProfileCreateInputBuilder toBuilder() =>
      new GDastSiteProfileCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastSiteProfileCreateInput &&
        clientMutationId == other.clientMutationId &&
        profileName == other.profileName &&
        targetUrl == other.targetUrl &&
        targetType == other.targetType &&
        scanMethod == other.scanMethod &&
        requestHeaders == other.requestHeaders &&
        auth == other.auth &&
        fullPath == other.fullPath &&
        excludedUrls == other.excludedUrls;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, clientMutationId.hashCode),
                                    profileName.hashCode),
                                targetUrl.hashCode),
                            targetType.hashCode),
                        scanMethod.hashCode),
                    requestHeaders.hashCode),
                auth.hashCode),
            fullPath.hashCode),
        excludedUrls.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastSiteProfileCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('profileName', profileName)
          ..add('targetUrl', targetUrl)
          ..add('targetType', targetType)
          ..add('scanMethod', scanMethod)
          ..add('requestHeaders', requestHeaders)
          ..add('auth', auth)
          ..add('fullPath', fullPath)
          ..add('excludedUrls', excludedUrls))
        .toString();
  }
}

class GDastSiteProfileCreateInputBuilder
    implements
        Builder<GDastSiteProfileCreateInput,
            GDastSiteProfileCreateInputBuilder> {
  _$GDastSiteProfileCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _profileName;
  String? get profileName => _$this._profileName;
  set profileName(String? profileName) => _$this._profileName = profileName;

  String? _targetUrl;
  String? get targetUrl => _$this._targetUrl;
  set targetUrl(String? targetUrl) => _$this._targetUrl = targetUrl;

  GDastTargetTypeEnum? _targetType;
  GDastTargetTypeEnum? get targetType => _$this._targetType;
  set targetType(GDastTargetTypeEnum? targetType) =>
      _$this._targetType = targetType;

  GDastScanMethodType? _scanMethod;
  GDastScanMethodType? get scanMethod => _$this._scanMethod;
  set scanMethod(GDastScanMethodType? scanMethod) =>
      _$this._scanMethod = scanMethod;

  String? _requestHeaders;
  String? get requestHeaders => _$this._requestHeaders;
  set requestHeaders(String? requestHeaders) =>
      _$this._requestHeaders = requestHeaders;

  GDastSiteProfileAuthInputBuilder? _auth;
  GDastSiteProfileAuthInputBuilder get auth =>
      _$this._auth ??= new GDastSiteProfileAuthInputBuilder();
  set auth(GDastSiteProfileAuthInputBuilder? auth) => _$this._auth = auth;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  ListBuilder<String>? _excludedUrls;
  ListBuilder<String> get excludedUrls =>
      _$this._excludedUrls ??= new ListBuilder<String>();
  set excludedUrls(ListBuilder<String>? excludedUrls) =>
      _$this._excludedUrls = excludedUrls;

  GDastSiteProfileCreateInputBuilder();

  GDastSiteProfileCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _profileName = $v.profileName;
      _targetUrl = $v.targetUrl;
      _targetType = $v.targetType;
      _scanMethod = $v.scanMethod;
      _requestHeaders = $v.requestHeaders;
      _auth = $v.auth?.toBuilder();
      _fullPath = $v.fullPath;
      _excludedUrls = $v.excludedUrls?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastSiteProfileCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastSiteProfileCreateInput;
  }

  @override
  void update(void Function(GDastSiteProfileCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastSiteProfileCreateInput build() => _build();

  _$GDastSiteProfileCreateInput _build() {
    _$GDastSiteProfileCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GDastSiteProfileCreateInput._(
              clientMutationId: clientMutationId,
              profileName: BuiltValueNullFieldError.checkNotNull(
                  profileName, r'GDastSiteProfileCreateInput', 'profileName'),
              targetUrl: targetUrl,
              targetType: targetType,
              scanMethod: scanMethod,
              requestHeaders: requestHeaders,
              auth: _auth?.build(),
              fullPath: BuiltValueNullFieldError.checkNotNull(
                  fullPath, r'GDastSiteProfileCreateInput', 'fullPath'),
              excludedUrls: _excludedUrls?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'auth';
        _auth?.build();

        _$failedField = 'excludedUrls';
        _excludedUrls?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastSiteProfileCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastSiteProfileDeleteInput extends GDastSiteProfileDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final GDastSiteProfileID id;

  factory _$GDastSiteProfileDeleteInput(
          [void Function(GDastSiteProfileDeleteInputBuilder)? updates]) =>
      (new GDastSiteProfileDeleteInputBuilder()..update(updates))._build();

  _$GDastSiteProfileDeleteInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDastSiteProfileDeleteInput', 'id');
  }

  @override
  GDastSiteProfileDeleteInput rebuild(
          void Function(GDastSiteProfileDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastSiteProfileDeleteInputBuilder toBuilder() =>
      new GDastSiteProfileDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastSiteProfileDeleteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastSiteProfileDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDastSiteProfileDeleteInputBuilder
    implements
        Builder<GDastSiteProfileDeleteInput,
            GDastSiteProfileDeleteInputBuilder> {
  _$GDastSiteProfileDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDastSiteProfileIDBuilder? _id;
  GDastSiteProfileIDBuilder get id =>
      _$this._id ??= new GDastSiteProfileIDBuilder();
  set id(GDastSiteProfileIDBuilder? id) => _$this._id = id;

  GDastSiteProfileDeleteInputBuilder();

  GDastSiteProfileDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastSiteProfileDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastSiteProfileDeleteInput;
  }

  @override
  void update(void Function(GDastSiteProfileDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastSiteProfileDeleteInput build() => _build();

  _$GDastSiteProfileDeleteInput _build() {
    _$GDastSiteProfileDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GDastSiteProfileDeleteInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastSiteProfileDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastSiteProfileID extends GDastSiteProfileID {
  @override
  final String value;

  factory _$GDastSiteProfileID(
          [void Function(GDastSiteProfileIDBuilder)? updates]) =>
      (new GDastSiteProfileIDBuilder()..update(updates))._build();

  _$GDastSiteProfileID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GDastSiteProfileID', 'value');
  }

  @override
  GDastSiteProfileID rebuild(
          void Function(GDastSiteProfileIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastSiteProfileIDBuilder toBuilder() =>
      new GDastSiteProfileIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastSiteProfileID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastSiteProfileID')
          ..add('value', value))
        .toString();
  }
}

class GDastSiteProfileIDBuilder
    implements Builder<GDastSiteProfileID, GDastSiteProfileIDBuilder> {
  _$GDastSiteProfileID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDastSiteProfileIDBuilder();

  GDastSiteProfileIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastSiteProfileID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastSiteProfileID;
  }

  @override
  void update(void Function(GDastSiteProfileIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastSiteProfileID build() => _build();

  _$GDastSiteProfileID _build() {
    final _$result = _$v ??
        new _$GDastSiteProfileID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDastSiteProfileID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDastSiteProfileUpdateInput extends GDastSiteProfileUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final String profileName;
  @override
  final String? targetUrl;
  @override
  final GDastTargetTypeEnum? targetType;
  @override
  final GDastScanMethodType? scanMethod;
  @override
  final String? requestHeaders;
  @override
  final GDastSiteProfileAuthInput? auth;
  @override
  final GDastSiteProfileID id;
  @override
  final BuiltList<String>? excludedUrls;

  factory _$GDastSiteProfileUpdateInput(
          [void Function(GDastSiteProfileUpdateInputBuilder)? updates]) =>
      (new GDastSiteProfileUpdateInputBuilder()..update(updates))._build();

  _$GDastSiteProfileUpdateInput._(
      {this.clientMutationId,
      required this.profileName,
      this.targetUrl,
      this.targetType,
      this.scanMethod,
      this.requestHeaders,
      this.auth,
      required this.id,
      this.excludedUrls})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        profileName, r'GDastSiteProfileUpdateInput', 'profileName');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDastSiteProfileUpdateInput', 'id');
  }

  @override
  GDastSiteProfileUpdateInput rebuild(
          void Function(GDastSiteProfileUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastSiteProfileUpdateInputBuilder toBuilder() =>
      new GDastSiteProfileUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastSiteProfileUpdateInput &&
        clientMutationId == other.clientMutationId &&
        profileName == other.profileName &&
        targetUrl == other.targetUrl &&
        targetType == other.targetType &&
        scanMethod == other.scanMethod &&
        requestHeaders == other.requestHeaders &&
        auth == other.auth &&
        id == other.id &&
        excludedUrls == other.excludedUrls;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, clientMutationId.hashCode),
                                    profileName.hashCode),
                                targetUrl.hashCode),
                            targetType.hashCode),
                        scanMethod.hashCode),
                    requestHeaders.hashCode),
                auth.hashCode),
            id.hashCode),
        excludedUrls.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastSiteProfileUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('profileName', profileName)
          ..add('targetUrl', targetUrl)
          ..add('targetType', targetType)
          ..add('scanMethod', scanMethod)
          ..add('requestHeaders', requestHeaders)
          ..add('auth', auth)
          ..add('id', id)
          ..add('excludedUrls', excludedUrls))
        .toString();
  }
}

class GDastSiteProfileUpdateInputBuilder
    implements
        Builder<GDastSiteProfileUpdateInput,
            GDastSiteProfileUpdateInputBuilder> {
  _$GDastSiteProfileUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _profileName;
  String? get profileName => _$this._profileName;
  set profileName(String? profileName) => _$this._profileName = profileName;

  String? _targetUrl;
  String? get targetUrl => _$this._targetUrl;
  set targetUrl(String? targetUrl) => _$this._targetUrl = targetUrl;

  GDastTargetTypeEnum? _targetType;
  GDastTargetTypeEnum? get targetType => _$this._targetType;
  set targetType(GDastTargetTypeEnum? targetType) =>
      _$this._targetType = targetType;

  GDastScanMethodType? _scanMethod;
  GDastScanMethodType? get scanMethod => _$this._scanMethod;
  set scanMethod(GDastScanMethodType? scanMethod) =>
      _$this._scanMethod = scanMethod;

  String? _requestHeaders;
  String? get requestHeaders => _$this._requestHeaders;
  set requestHeaders(String? requestHeaders) =>
      _$this._requestHeaders = requestHeaders;

  GDastSiteProfileAuthInputBuilder? _auth;
  GDastSiteProfileAuthInputBuilder get auth =>
      _$this._auth ??= new GDastSiteProfileAuthInputBuilder();
  set auth(GDastSiteProfileAuthInputBuilder? auth) => _$this._auth = auth;

  GDastSiteProfileIDBuilder? _id;
  GDastSiteProfileIDBuilder get id =>
      _$this._id ??= new GDastSiteProfileIDBuilder();
  set id(GDastSiteProfileIDBuilder? id) => _$this._id = id;

  ListBuilder<String>? _excludedUrls;
  ListBuilder<String> get excludedUrls =>
      _$this._excludedUrls ??= new ListBuilder<String>();
  set excludedUrls(ListBuilder<String>? excludedUrls) =>
      _$this._excludedUrls = excludedUrls;

  GDastSiteProfileUpdateInputBuilder();

  GDastSiteProfileUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _profileName = $v.profileName;
      _targetUrl = $v.targetUrl;
      _targetType = $v.targetType;
      _scanMethod = $v.scanMethod;
      _requestHeaders = $v.requestHeaders;
      _auth = $v.auth?.toBuilder();
      _id = $v.id.toBuilder();
      _excludedUrls = $v.excludedUrls?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastSiteProfileUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastSiteProfileUpdateInput;
  }

  @override
  void update(void Function(GDastSiteProfileUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastSiteProfileUpdateInput build() => _build();

  _$GDastSiteProfileUpdateInput _build() {
    _$GDastSiteProfileUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GDastSiteProfileUpdateInput._(
              clientMutationId: clientMutationId,
              profileName: BuiltValueNullFieldError.checkNotNull(
                  profileName, r'GDastSiteProfileUpdateInput', 'profileName'),
              targetUrl: targetUrl,
              targetType: targetType,
              scanMethod: scanMethod,
              requestHeaders: requestHeaders,
              auth: _auth?.build(),
              id: id.build(),
              excludedUrls: _excludedUrls?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'auth';
        _auth?.build();
        _$failedField = 'id';
        id.build();
        _$failedField = 'excludedUrls';
        _excludedUrls?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastSiteProfileUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastSiteTokenCreateInput extends GDastSiteTokenCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String fullPath;
  @override
  final String? targetUrl;

  factory _$GDastSiteTokenCreateInput(
          [void Function(GDastSiteTokenCreateInputBuilder)? updates]) =>
      (new GDastSiteTokenCreateInputBuilder()..update(updates))._build();

  _$GDastSiteTokenCreateInput._(
      {this.clientMutationId, required this.fullPath, this.targetUrl})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GDastSiteTokenCreateInput', 'fullPath');
  }

  @override
  GDastSiteTokenCreateInput rebuild(
          void Function(GDastSiteTokenCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastSiteTokenCreateInputBuilder toBuilder() =>
      new GDastSiteTokenCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastSiteTokenCreateInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath &&
        targetUrl == other.targetUrl;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), fullPath.hashCode),
        targetUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastSiteTokenCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath)
          ..add('targetUrl', targetUrl))
        .toString();
  }
}

class GDastSiteTokenCreateInputBuilder
    implements
        Builder<GDastSiteTokenCreateInput, GDastSiteTokenCreateInputBuilder> {
  _$GDastSiteTokenCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  String? _targetUrl;
  String? get targetUrl => _$this._targetUrl;
  set targetUrl(String? targetUrl) => _$this._targetUrl = targetUrl;

  GDastSiteTokenCreateInputBuilder();

  GDastSiteTokenCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _targetUrl = $v.targetUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastSiteTokenCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastSiteTokenCreateInput;
  }

  @override
  void update(void Function(GDastSiteTokenCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastSiteTokenCreateInput build() => _build();

  _$GDastSiteTokenCreateInput _build() {
    final _$result = _$v ??
        new _$GDastSiteTokenCreateInput._(
            clientMutationId: clientMutationId,
            fullPath: BuiltValueNullFieldError.checkNotNull(
                fullPath, r'GDastSiteTokenCreateInput', 'fullPath'),
            targetUrl: targetUrl);
    replace(_$result);
    return _$result;
  }
}

class _$GDastSiteTokenID extends GDastSiteTokenID {
  @override
  final String value;

  factory _$GDastSiteTokenID(
          [void Function(GDastSiteTokenIDBuilder)? updates]) =>
      (new GDastSiteTokenIDBuilder()..update(updates))._build();

  _$GDastSiteTokenID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDastSiteTokenID', 'value');
  }

  @override
  GDastSiteTokenID rebuild(void Function(GDastSiteTokenIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastSiteTokenIDBuilder toBuilder() =>
      new GDastSiteTokenIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastSiteTokenID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastSiteTokenID')
          ..add('value', value))
        .toString();
  }
}

class GDastSiteTokenIDBuilder
    implements Builder<GDastSiteTokenID, GDastSiteTokenIDBuilder> {
  _$GDastSiteTokenID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDastSiteTokenIDBuilder();

  GDastSiteTokenIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastSiteTokenID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastSiteTokenID;
  }

  @override
  void update(void Function(GDastSiteTokenIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastSiteTokenID build() => _build();

  _$GDastSiteTokenID _build() {
    final _$result = _$v ??
        new _$GDastSiteTokenID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDastSiteTokenID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDastSiteValidationCreateInput extends GDastSiteValidationCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String fullPath;
  @override
  final GDastSiteTokenID dastSiteTokenId;
  @override
  final String validationPath;
  @override
  final GDastSiteValidationStrategyEnum? strategy;

  factory _$GDastSiteValidationCreateInput(
          [void Function(GDastSiteValidationCreateInputBuilder)? updates]) =>
      (new GDastSiteValidationCreateInputBuilder()..update(updates))._build();

  _$GDastSiteValidationCreateInput._(
      {this.clientMutationId,
      required this.fullPath,
      required this.dastSiteTokenId,
      required this.validationPath,
      this.strategy})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GDastSiteValidationCreateInput', 'fullPath');
    BuiltValueNullFieldError.checkNotNull(
        dastSiteTokenId, r'GDastSiteValidationCreateInput', 'dastSiteTokenId');
    BuiltValueNullFieldError.checkNotNull(
        validationPath, r'GDastSiteValidationCreateInput', 'validationPath');
  }

  @override
  GDastSiteValidationCreateInput rebuild(
          void Function(GDastSiteValidationCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastSiteValidationCreateInputBuilder toBuilder() =>
      new GDastSiteValidationCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastSiteValidationCreateInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath &&
        dastSiteTokenId == other.dastSiteTokenId &&
        validationPath == other.validationPath &&
        strategy == other.strategy;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), fullPath.hashCode),
                dastSiteTokenId.hashCode),
            validationPath.hashCode),
        strategy.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastSiteValidationCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath)
          ..add('dastSiteTokenId', dastSiteTokenId)
          ..add('validationPath', validationPath)
          ..add('strategy', strategy))
        .toString();
  }
}

class GDastSiteValidationCreateInputBuilder
    implements
        Builder<GDastSiteValidationCreateInput,
            GDastSiteValidationCreateInputBuilder> {
  _$GDastSiteValidationCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  GDastSiteTokenIDBuilder? _dastSiteTokenId;
  GDastSiteTokenIDBuilder get dastSiteTokenId =>
      _$this._dastSiteTokenId ??= new GDastSiteTokenIDBuilder();
  set dastSiteTokenId(GDastSiteTokenIDBuilder? dastSiteTokenId) =>
      _$this._dastSiteTokenId = dastSiteTokenId;

  String? _validationPath;
  String? get validationPath => _$this._validationPath;
  set validationPath(String? validationPath) =>
      _$this._validationPath = validationPath;

  GDastSiteValidationStrategyEnum? _strategy;
  GDastSiteValidationStrategyEnum? get strategy => _$this._strategy;
  set strategy(GDastSiteValidationStrategyEnum? strategy) =>
      _$this._strategy = strategy;

  GDastSiteValidationCreateInputBuilder();

  GDastSiteValidationCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _dastSiteTokenId = $v.dastSiteTokenId.toBuilder();
      _validationPath = $v.validationPath;
      _strategy = $v.strategy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastSiteValidationCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastSiteValidationCreateInput;
  }

  @override
  void update(void Function(GDastSiteValidationCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastSiteValidationCreateInput build() => _build();

  _$GDastSiteValidationCreateInput _build() {
    _$GDastSiteValidationCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GDastSiteValidationCreateInput._(
              clientMutationId: clientMutationId,
              fullPath: BuiltValueNullFieldError.checkNotNull(
                  fullPath, r'GDastSiteValidationCreateInput', 'fullPath'),
              dastSiteTokenId: dastSiteTokenId.build(),
              validationPath: BuiltValueNullFieldError.checkNotNull(
                  validationPath,
                  r'GDastSiteValidationCreateInput',
                  'validationPath'),
              strategy: strategy);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'dastSiteTokenId';
        dastSiteTokenId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDastSiteValidationCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDastSiteValidationID extends GDastSiteValidationID {
  @override
  final String value;

  factory _$GDastSiteValidationID(
          [void Function(GDastSiteValidationIDBuilder)? updates]) =>
      (new GDastSiteValidationIDBuilder()..update(updates))._build();

  _$GDastSiteValidationID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GDastSiteValidationID', 'value');
  }

  @override
  GDastSiteValidationID rebuild(
          void Function(GDastSiteValidationIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastSiteValidationIDBuilder toBuilder() =>
      new GDastSiteValidationIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastSiteValidationID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastSiteValidationID')
          ..add('value', value))
        .toString();
  }
}

class GDastSiteValidationIDBuilder
    implements Builder<GDastSiteValidationID, GDastSiteValidationIDBuilder> {
  _$GDastSiteValidationID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDastSiteValidationIDBuilder();

  GDastSiteValidationIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastSiteValidationID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastSiteValidationID;
  }

  @override
  void update(void Function(GDastSiteValidationIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastSiteValidationID build() => _build();

  _$GDastSiteValidationID _build() {
    final _$result = _$v ??
        new _$GDastSiteValidationID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDastSiteValidationID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDastSiteValidationRevokeInput extends GDastSiteValidationRevokeInput {
  @override
  final String? clientMutationId;
  @override
  final String fullPath;
  @override
  final String normalizedTargetUrl;

  factory _$GDastSiteValidationRevokeInput(
          [void Function(GDastSiteValidationRevokeInputBuilder)? updates]) =>
      (new GDastSiteValidationRevokeInputBuilder()..update(updates))._build();

  _$GDastSiteValidationRevokeInput._(
      {this.clientMutationId,
      required this.fullPath,
      required this.normalizedTargetUrl})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GDastSiteValidationRevokeInput', 'fullPath');
    BuiltValueNullFieldError.checkNotNull(normalizedTargetUrl,
        r'GDastSiteValidationRevokeInput', 'normalizedTargetUrl');
  }

  @override
  GDastSiteValidationRevokeInput rebuild(
          void Function(GDastSiteValidationRevokeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDastSiteValidationRevokeInputBuilder toBuilder() =>
      new GDastSiteValidationRevokeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDastSiteValidationRevokeInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath &&
        normalizedTargetUrl == other.normalizedTargetUrl;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), fullPath.hashCode),
        normalizedTargetUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDastSiteValidationRevokeInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath)
          ..add('normalizedTargetUrl', normalizedTargetUrl))
        .toString();
  }
}

class GDastSiteValidationRevokeInputBuilder
    implements
        Builder<GDastSiteValidationRevokeInput,
            GDastSiteValidationRevokeInputBuilder> {
  _$GDastSiteValidationRevokeInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  String? _normalizedTargetUrl;
  String? get normalizedTargetUrl => _$this._normalizedTargetUrl;
  set normalizedTargetUrl(String? normalizedTargetUrl) =>
      _$this._normalizedTargetUrl = normalizedTargetUrl;

  GDastSiteValidationRevokeInputBuilder();

  GDastSiteValidationRevokeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _normalizedTargetUrl = $v.normalizedTargetUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDastSiteValidationRevokeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDastSiteValidationRevokeInput;
  }

  @override
  void update(void Function(GDastSiteValidationRevokeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDastSiteValidationRevokeInput build() => _build();

  _$GDastSiteValidationRevokeInput _build() {
    final _$result = _$v ??
        new _$GDastSiteValidationRevokeInput._(
            clientMutationId: clientMutationId,
            fullPath: BuiltValueNullFieldError.checkNotNull(
                fullPath, r'GDastSiteValidationRevokeInput', 'fullPath'),
            normalizedTargetUrl: BuiltValueNullFieldError.checkNotNull(
                normalizedTargetUrl,
                r'GDastSiteValidationRevokeInput',
                'normalizedTargetUrl'));
    replace(_$result);
    return _$result;
  }
}

class _$GDate extends GDate {
  @override
  final String value;

  factory _$GDate([void Function(GDateBuilder)? updates]) =>
      (new GDateBuilder()..update(updates))._build();

  _$GDate._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDate', 'value');
  }

  @override
  GDate rebuild(void Function(GDateBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateBuilder toBuilder() => new GDateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDate && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDate')..add('value', value))
        .toString();
  }
}

class GDateBuilder implements Builder<GDate, GDateBuilder> {
  _$GDate? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDateBuilder();

  GDateBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDate other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDate;
  }

  @override
  void update(void Function(GDateBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDate build() => _build();

  _$GDate _build() {
    final _$result = _$v ??
        new _$GDate._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDate', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteAnnotationInput extends GDeleteAnnotationInput {
  @override
  final String? clientMutationId;
  @override
  final GMetricsDashboardAnnotationID id;

  factory _$GDeleteAnnotationInput(
          [void Function(GDeleteAnnotationInputBuilder)? updates]) =>
      (new GDeleteAnnotationInputBuilder()..update(updates))._build();

  _$GDeleteAnnotationInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDeleteAnnotationInput', 'id');
  }

  @override
  GDeleteAnnotationInput rebuild(
          void Function(GDeleteAnnotationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDeleteAnnotationInputBuilder toBuilder() =>
      new GDeleteAnnotationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteAnnotationInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDeleteAnnotationInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDeleteAnnotationInputBuilder
    implements Builder<GDeleteAnnotationInput, GDeleteAnnotationInputBuilder> {
  _$GDeleteAnnotationInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GMetricsDashboardAnnotationIDBuilder? _id;
  GMetricsDashboardAnnotationIDBuilder get id =>
      _$this._id ??= new GMetricsDashboardAnnotationIDBuilder();
  set id(GMetricsDashboardAnnotationIDBuilder? id) => _$this._id = id;

  GDeleteAnnotationInputBuilder();

  GDeleteAnnotationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteAnnotationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDeleteAnnotationInput;
  }

  @override
  void update(void Function(GDeleteAnnotationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteAnnotationInput build() => _build();

  _$GDeleteAnnotationInput _build() {
    _$GDeleteAnnotationInput _$result;
    try {
      _$result = _$v ??
          new _$GDeleteAnnotationInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDeleteAnnotationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDependencyProxyManifestID extends GDependencyProxyManifestID {
  @override
  final String value;

  factory _$GDependencyProxyManifestID(
          [void Function(GDependencyProxyManifestIDBuilder)? updates]) =>
      (new GDependencyProxyManifestIDBuilder()..update(updates))._build();

  _$GDependencyProxyManifestID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GDependencyProxyManifestID', 'value');
  }

  @override
  GDependencyProxyManifestID rebuild(
          void Function(GDependencyProxyManifestIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDependencyProxyManifestIDBuilder toBuilder() =>
      new GDependencyProxyManifestIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDependencyProxyManifestID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDependencyProxyManifestID')
          ..add('value', value))
        .toString();
  }
}

class GDependencyProxyManifestIDBuilder
    implements
        Builder<GDependencyProxyManifestID, GDependencyProxyManifestIDBuilder> {
  _$GDependencyProxyManifestID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDependencyProxyManifestIDBuilder();

  GDependencyProxyManifestIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDependencyProxyManifestID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDependencyProxyManifestID;
  }

  @override
  void update(void Function(GDependencyProxyManifestIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDependencyProxyManifestID build() => _build();

  _$GDependencyProxyManifestID _build() {
    final _$result = _$v ??
        new _$GDependencyProxyManifestID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDependencyProxyManifestID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDeploymentsOrderByInput extends GDeploymentsOrderByInput {
  @override
  final GSortDirectionEnum? createdAt;
  @override
  final GSortDirectionEnum? finishedAt;

  factory _$GDeploymentsOrderByInput(
          [void Function(GDeploymentsOrderByInputBuilder)? updates]) =>
      (new GDeploymentsOrderByInputBuilder()..update(updates))._build();

  _$GDeploymentsOrderByInput._({this.createdAt, this.finishedAt}) : super._();

  @override
  GDeploymentsOrderByInput rebuild(
          void Function(GDeploymentsOrderByInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDeploymentsOrderByInputBuilder toBuilder() =>
      new GDeploymentsOrderByInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeploymentsOrderByInput &&
        createdAt == other.createdAt &&
        finishedAt == other.finishedAt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, createdAt.hashCode), finishedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDeploymentsOrderByInput')
          ..add('createdAt', createdAt)
          ..add('finishedAt', finishedAt))
        .toString();
  }
}

class GDeploymentsOrderByInputBuilder
    implements
        Builder<GDeploymentsOrderByInput, GDeploymentsOrderByInputBuilder> {
  _$GDeploymentsOrderByInput? _$v;

  GSortDirectionEnum? _createdAt;
  GSortDirectionEnum? get createdAt => _$this._createdAt;
  set createdAt(GSortDirectionEnum? createdAt) => _$this._createdAt = createdAt;

  GSortDirectionEnum? _finishedAt;
  GSortDirectionEnum? get finishedAt => _$this._finishedAt;
  set finishedAt(GSortDirectionEnum? finishedAt) =>
      _$this._finishedAt = finishedAt;

  GDeploymentsOrderByInputBuilder();

  GDeploymentsOrderByInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt;
      _finishedAt = $v.finishedAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeploymentsOrderByInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDeploymentsOrderByInput;
  }

  @override
  void update(void Function(GDeploymentsOrderByInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDeploymentsOrderByInput build() => _build();

  _$GDeploymentsOrderByInput _build() {
    final _$result = _$v ??
        new _$GDeploymentsOrderByInput._(
            createdAt: createdAt, finishedAt: finishedAt);
    replace(_$result);
    return _$result;
  }
}

class _$GDesignManagementDeleteInput extends GDesignManagementDeleteInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final BuiltList<String> filenames;

  factory _$GDesignManagementDeleteInput(
          [void Function(GDesignManagementDeleteInputBuilder)? updates]) =>
      (new GDesignManagementDeleteInputBuilder()..update(updates))._build();

  _$GDesignManagementDeleteInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.filenames})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GDesignManagementDeleteInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GDesignManagementDeleteInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        filenames, r'GDesignManagementDeleteInput', 'filenames');
  }

  @override
  GDesignManagementDeleteInput rebuild(
          void Function(GDesignManagementDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDesignManagementDeleteInputBuilder toBuilder() =>
      new GDesignManagementDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDesignManagementDeleteInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        filenames == other.filenames;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        filenames.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDesignManagementDeleteInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('filenames', filenames))
        .toString();
  }
}

class GDesignManagementDeleteInputBuilder
    implements
        Builder<GDesignManagementDeleteInput,
            GDesignManagementDeleteInputBuilder> {
  _$GDesignManagementDeleteInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<String>? _filenames;
  ListBuilder<String> get filenames =>
      _$this._filenames ??= new ListBuilder<String>();
  set filenames(ListBuilder<String>? filenames) =>
      _$this._filenames = filenames;

  GDesignManagementDeleteInputBuilder();

  GDesignManagementDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _filenames = $v.filenames.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDesignManagementDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDesignManagementDeleteInput;
  }

  @override
  void update(void Function(GDesignManagementDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDesignManagementDeleteInput build() => _build();

  _$GDesignManagementDeleteInput _build() {
    _$GDesignManagementDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GDesignManagementDeleteInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GDesignManagementDeleteInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GDesignManagementDeleteInput', 'iid'),
              clientMutationId: clientMutationId,
              filenames: filenames.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'filenames';
        filenames.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDesignManagementDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDesignManagementDesignAtVersionID
    extends GDesignManagementDesignAtVersionID {
  @override
  final String value;

  factory _$GDesignManagementDesignAtVersionID(
          [void Function(GDesignManagementDesignAtVersionIDBuilder)?
              updates]) =>
      (new GDesignManagementDesignAtVersionIDBuilder()..update(updates))
          ._build();

  _$GDesignManagementDesignAtVersionID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GDesignManagementDesignAtVersionID', 'value');
  }

  @override
  GDesignManagementDesignAtVersionID rebuild(
          void Function(GDesignManagementDesignAtVersionIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDesignManagementDesignAtVersionIDBuilder toBuilder() =>
      new GDesignManagementDesignAtVersionIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDesignManagementDesignAtVersionID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDesignManagementDesignAtVersionID')
          ..add('value', value))
        .toString();
  }
}

class GDesignManagementDesignAtVersionIDBuilder
    implements
        Builder<GDesignManagementDesignAtVersionID,
            GDesignManagementDesignAtVersionIDBuilder> {
  _$GDesignManagementDesignAtVersionID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDesignManagementDesignAtVersionIDBuilder();

  GDesignManagementDesignAtVersionIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDesignManagementDesignAtVersionID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDesignManagementDesignAtVersionID;
  }

  @override
  void update(
      void Function(GDesignManagementDesignAtVersionIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDesignManagementDesignAtVersionID build() => _build();

  _$GDesignManagementDesignAtVersionID _build() {
    final _$result = _$v ??
        new _$GDesignManagementDesignAtVersionID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDesignManagementDesignAtVersionID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDesignManagementDesignID extends GDesignManagementDesignID {
  @override
  final String value;

  factory _$GDesignManagementDesignID(
          [void Function(GDesignManagementDesignIDBuilder)? updates]) =>
      (new GDesignManagementDesignIDBuilder()..update(updates))._build();

  _$GDesignManagementDesignID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GDesignManagementDesignID', 'value');
  }

  @override
  GDesignManagementDesignID rebuild(
          void Function(GDesignManagementDesignIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDesignManagementDesignIDBuilder toBuilder() =>
      new GDesignManagementDesignIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDesignManagementDesignID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDesignManagementDesignID')
          ..add('value', value))
        .toString();
  }
}

class GDesignManagementDesignIDBuilder
    implements
        Builder<GDesignManagementDesignID, GDesignManagementDesignIDBuilder> {
  _$GDesignManagementDesignID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDesignManagementDesignIDBuilder();

  GDesignManagementDesignIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDesignManagementDesignID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDesignManagementDesignID;
  }

  @override
  void update(void Function(GDesignManagementDesignIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDesignManagementDesignID build() => _build();

  _$GDesignManagementDesignID _build() {
    final _$result = _$v ??
        new _$GDesignManagementDesignID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDesignManagementDesignID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDesignManagementMoveInput extends GDesignManagementMoveInput {
  @override
  final String? clientMutationId;
  @override
  final GDesignManagementDesignID id;
  @override
  final GDesignManagementDesignID? previous;
  @override
  final GDesignManagementDesignID? next;

  factory _$GDesignManagementMoveInput(
          [void Function(GDesignManagementMoveInputBuilder)? updates]) =>
      (new GDesignManagementMoveInputBuilder()..update(updates))._build();

  _$GDesignManagementMoveInput._(
      {this.clientMutationId, required this.id, this.previous, this.next})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDesignManagementMoveInput', 'id');
  }

  @override
  GDesignManagementMoveInput rebuild(
          void Function(GDesignManagementMoveInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDesignManagementMoveInputBuilder toBuilder() =>
      new GDesignManagementMoveInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDesignManagementMoveInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        previous == other.previous &&
        next == other.next;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
            previous.hashCode),
        next.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDesignManagementMoveInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('previous', previous)
          ..add('next', next))
        .toString();
  }
}

class GDesignManagementMoveInputBuilder
    implements
        Builder<GDesignManagementMoveInput, GDesignManagementMoveInputBuilder> {
  _$GDesignManagementMoveInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDesignManagementDesignIDBuilder? _id;
  GDesignManagementDesignIDBuilder get id =>
      _$this._id ??= new GDesignManagementDesignIDBuilder();
  set id(GDesignManagementDesignIDBuilder? id) => _$this._id = id;

  GDesignManagementDesignIDBuilder? _previous;
  GDesignManagementDesignIDBuilder get previous =>
      _$this._previous ??= new GDesignManagementDesignIDBuilder();
  set previous(GDesignManagementDesignIDBuilder? previous) =>
      _$this._previous = previous;

  GDesignManagementDesignIDBuilder? _next;
  GDesignManagementDesignIDBuilder get next =>
      _$this._next ??= new GDesignManagementDesignIDBuilder();
  set next(GDesignManagementDesignIDBuilder? next) => _$this._next = next;

  GDesignManagementMoveInputBuilder();

  GDesignManagementMoveInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _previous = $v.previous?.toBuilder();
      _next = $v.next?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDesignManagementMoveInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDesignManagementMoveInput;
  }

  @override
  void update(void Function(GDesignManagementMoveInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDesignManagementMoveInput build() => _build();

  _$GDesignManagementMoveInput _build() {
    _$GDesignManagementMoveInput _$result;
    try {
      _$result = _$v ??
          new _$GDesignManagementMoveInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              previous: _previous?.build(),
              next: _next?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
        _$failedField = 'previous';
        _previous?.build();
        _$failedField = 'next';
        _next?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDesignManagementMoveInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDesignManagementUploadInput extends GDesignManagementUploadInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final BuiltList<GUpload> files;

  factory _$GDesignManagementUploadInput(
          [void Function(GDesignManagementUploadInputBuilder)? updates]) =>
      (new GDesignManagementUploadInputBuilder()..update(updates))._build();

  _$GDesignManagementUploadInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.files})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GDesignManagementUploadInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GDesignManagementUploadInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        files, r'GDesignManagementUploadInput', 'files');
  }

  @override
  GDesignManagementUploadInput rebuild(
          void Function(GDesignManagementUploadInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDesignManagementUploadInputBuilder toBuilder() =>
      new GDesignManagementUploadInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDesignManagementUploadInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        files == other.files;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        files.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDesignManagementUploadInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('files', files))
        .toString();
  }
}

class GDesignManagementUploadInputBuilder
    implements
        Builder<GDesignManagementUploadInput,
            GDesignManagementUploadInputBuilder> {
  _$GDesignManagementUploadInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<GUpload>? _files;
  ListBuilder<GUpload> get files =>
      _$this._files ??= new ListBuilder<GUpload>();
  set files(ListBuilder<GUpload>? files) => _$this._files = files;

  GDesignManagementUploadInputBuilder();

  GDesignManagementUploadInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _files = $v.files.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDesignManagementUploadInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDesignManagementUploadInput;
  }

  @override
  void update(void Function(GDesignManagementUploadInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDesignManagementUploadInput build() => _build();

  _$GDesignManagementUploadInput _build() {
    _$GDesignManagementUploadInput _$result;
    try {
      _$result = _$v ??
          new _$GDesignManagementUploadInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GDesignManagementUploadInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GDesignManagementUploadInput', 'iid'),
              clientMutationId: clientMutationId,
              files: files.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'files';
        files.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDesignManagementUploadInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDesignManagementVersionID extends GDesignManagementVersionID {
  @override
  final String value;

  factory _$GDesignManagementVersionID(
          [void Function(GDesignManagementVersionIDBuilder)? updates]) =>
      (new GDesignManagementVersionIDBuilder()..update(updates))._build();

  _$GDesignManagementVersionID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GDesignManagementVersionID', 'value');
  }

  @override
  GDesignManagementVersionID rebuild(
          void Function(GDesignManagementVersionIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDesignManagementVersionIDBuilder toBuilder() =>
      new GDesignManagementVersionIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDesignManagementVersionID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDesignManagementVersionID')
          ..add('value', value))
        .toString();
  }
}

class GDesignManagementVersionIDBuilder
    implements
        Builder<GDesignManagementVersionID, GDesignManagementVersionIDBuilder> {
  _$GDesignManagementVersionID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDesignManagementVersionIDBuilder();

  GDesignManagementVersionIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDesignManagementVersionID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDesignManagementVersionID;
  }

  @override
  void update(void Function(GDesignManagementVersionIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDesignManagementVersionID build() => _build();

  _$GDesignManagementVersionID _build() {
    final _$result = _$v ??
        new _$GDesignManagementVersionID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDesignManagementVersionID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyBoardInput extends GDestroyBoardInput {
  @override
  final String? clientMutationId;
  @override
  final GBoardID id;

  factory _$GDestroyBoardInput(
          [void Function(GDestroyBoardInputBuilder)? updates]) =>
      (new GDestroyBoardInputBuilder()..update(updates))._build();

  _$GDestroyBoardInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDestroyBoardInput', 'id');
  }

  @override
  GDestroyBoardInput rebuild(
          void Function(GDestroyBoardInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyBoardInputBuilder toBuilder() =>
      new GDestroyBoardInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyBoardInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyBoardInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDestroyBoardInputBuilder
    implements Builder<GDestroyBoardInput, GDestroyBoardInputBuilder> {
  _$GDestroyBoardInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GBoardIDBuilder? _id;
  GBoardIDBuilder get id => _$this._id ??= new GBoardIDBuilder();
  set id(GBoardIDBuilder? id) => _$this._id = id;

  GDestroyBoardInputBuilder();

  GDestroyBoardInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyBoardInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyBoardInput;
  }

  @override
  void update(void Function(GDestroyBoardInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyBoardInput build() => _build();

  _$GDestroyBoardInput _build() {
    _$GDestroyBoardInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyBoardInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyBoardInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyBoardListInput extends GDestroyBoardListInput {
  @override
  final String? clientMutationId;
  @override
  final GListID listId;

  factory _$GDestroyBoardListInput(
          [void Function(GDestroyBoardListInputBuilder)? updates]) =>
      (new GDestroyBoardListInputBuilder()..update(updates))._build();

  _$GDestroyBoardListInput._({this.clientMutationId, required this.listId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        listId, r'GDestroyBoardListInput', 'listId');
  }

  @override
  GDestroyBoardListInput rebuild(
          void Function(GDestroyBoardListInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyBoardListInputBuilder toBuilder() =>
      new GDestroyBoardListInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyBoardListInput &&
        clientMutationId == other.clientMutationId &&
        listId == other.listId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), listId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyBoardListInput')
          ..add('clientMutationId', clientMutationId)
          ..add('listId', listId))
        .toString();
  }
}

class GDestroyBoardListInputBuilder
    implements Builder<GDestroyBoardListInput, GDestroyBoardListInputBuilder> {
  _$GDestroyBoardListInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GListIDBuilder? _listId;
  GListIDBuilder get listId => _$this._listId ??= new GListIDBuilder();
  set listId(GListIDBuilder? listId) => _$this._listId = listId;

  GDestroyBoardListInputBuilder();

  GDestroyBoardListInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _listId = $v.listId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyBoardListInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyBoardListInput;
  }

  @override
  void update(void Function(GDestroyBoardListInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyBoardListInput build() => _build();

  _$GDestroyBoardListInput _build() {
    _$GDestroyBoardListInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyBoardListInput._(
              clientMutationId: clientMutationId, listId: listId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'listId';
        listId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyBoardListInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyComplianceFrameworkInput
    extends GDestroyComplianceFrameworkInput {
  @override
  final String? clientMutationId;
  @override
  final GComplianceManagementFrameworkID id;

  factory _$GDestroyComplianceFrameworkInput(
          [void Function(GDestroyComplianceFrameworkInputBuilder)? updates]) =>
      (new GDestroyComplianceFrameworkInputBuilder()..update(updates))._build();

  _$GDestroyComplianceFrameworkInput._(
      {this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDestroyComplianceFrameworkInput', 'id');
  }

  @override
  GDestroyComplianceFrameworkInput rebuild(
          void Function(GDestroyComplianceFrameworkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyComplianceFrameworkInputBuilder toBuilder() =>
      new GDestroyComplianceFrameworkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyComplianceFrameworkInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyComplianceFrameworkInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDestroyComplianceFrameworkInputBuilder
    implements
        Builder<GDestroyComplianceFrameworkInput,
            GDestroyComplianceFrameworkInputBuilder> {
  _$GDestroyComplianceFrameworkInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GComplianceManagementFrameworkIDBuilder? _id;
  GComplianceManagementFrameworkIDBuilder get id =>
      _$this._id ??= new GComplianceManagementFrameworkIDBuilder();
  set id(GComplianceManagementFrameworkIDBuilder? id) => _$this._id = id;

  GDestroyComplianceFrameworkInputBuilder();

  GDestroyComplianceFrameworkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyComplianceFrameworkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyComplianceFrameworkInput;
  }

  @override
  void update(void Function(GDestroyComplianceFrameworkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyComplianceFrameworkInput build() => _build();

  _$GDestroyComplianceFrameworkInput _build() {
    _$GDestroyComplianceFrameworkInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyComplianceFrameworkInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyComplianceFrameworkInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyContainerRepositoryInput
    extends GDestroyContainerRepositoryInput {
  @override
  final String? clientMutationId;
  @override
  final GContainerRepositoryID id;

  factory _$GDestroyContainerRepositoryInput(
          [void Function(GDestroyContainerRepositoryInputBuilder)? updates]) =>
      (new GDestroyContainerRepositoryInputBuilder()..update(updates))._build();

  _$GDestroyContainerRepositoryInput._(
      {this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDestroyContainerRepositoryInput', 'id');
  }

  @override
  GDestroyContainerRepositoryInput rebuild(
          void Function(GDestroyContainerRepositoryInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyContainerRepositoryInputBuilder toBuilder() =>
      new GDestroyContainerRepositoryInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyContainerRepositoryInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyContainerRepositoryInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDestroyContainerRepositoryInputBuilder
    implements
        Builder<GDestroyContainerRepositoryInput,
            GDestroyContainerRepositoryInputBuilder> {
  _$GDestroyContainerRepositoryInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GContainerRepositoryIDBuilder? _id;
  GContainerRepositoryIDBuilder get id =>
      _$this._id ??= new GContainerRepositoryIDBuilder();
  set id(GContainerRepositoryIDBuilder? id) => _$this._id = id;

  GDestroyContainerRepositoryInputBuilder();

  GDestroyContainerRepositoryInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyContainerRepositoryInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyContainerRepositoryInput;
  }

  @override
  void update(void Function(GDestroyContainerRepositoryInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyContainerRepositoryInput build() => _build();

  _$GDestroyContainerRepositoryInput _build() {
    _$GDestroyContainerRepositoryInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyContainerRepositoryInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyContainerRepositoryInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyContainerRepositoryTagsInput
    extends GDestroyContainerRepositoryTagsInput {
  @override
  final String? clientMutationId;
  @override
  final GContainerRepositoryID id;
  @override
  final BuiltList<String> tagNames;

  factory _$GDestroyContainerRepositoryTagsInput(
          [void Function(GDestroyContainerRepositoryTagsInputBuilder)?
              updates]) =>
      (new GDestroyContainerRepositoryTagsInputBuilder()..update(updates))
          ._build();

  _$GDestroyContainerRepositoryTagsInput._(
      {this.clientMutationId, required this.id, required this.tagNames})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDestroyContainerRepositoryTagsInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        tagNames, r'GDestroyContainerRepositoryTagsInput', 'tagNames');
  }

  @override
  GDestroyContainerRepositoryTagsInput rebuild(
          void Function(GDestroyContainerRepositoryTagsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyContainerRepositoryTagsInputBuilder toBuilder() =>
      new GDestroyContainerRepositoryTagsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyContainerRepositoryTagsInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        tagNames == other.tagNames;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
        tagNames.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyContainerRepositoryTagsInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('tagNames', tagNames))
        .toString();
  }
}

class GDestroyContainerRepositoryTagsInputBuilder
    implements
        Builder<GDestroyContainerRepositoryTagsInput,
            GDestroyContainerRepositoryTagsInputBuilder> {
  _$GDestroyContainerRepositoryTagsInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GContainerRepositoryIDBuilder? _id;
  GContainerRepositoryIDBuilder get id =>
      _$this._id ??= new GContainerRepositoryIDBuilder();
  set id(GContainerRepositoryIDBuilder? id) => _$this._id = id;

  ListBuilder<String>? _tagNames;
  ListBuilder<String> get tagNames =>
      _$this._tagNames ??= new ListBuilder<String>();
  set tagNames(ListBuilder<String>? tagNames) => _$this._tagNames = tagNames;

  GDestroyContainerRepositoryTagsInputBuilder();

  GDestroyContainerRepositoryTagsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _tagNames = $v.tagNames.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyContainerRepositoryTagsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyContainerRepositoryTagsInput;
  }

  @override
  void update(
      void Function(GDestroyContainerRepositoryTagsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyContainerRepositoryTagsInput build() => _build();

  _$GDestroyContainerRepositoryTagsInput _build() {
    _$GDestroyContainerRepositoryTagsInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyContainerRepositoryTagsInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              tagNames: tagNames.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
        _$failedField = 'tagNames';
        tagNames.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyContainerRepositoryTagsInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyCustomEmojiInput extends GDestroyCustomEmojiInput {
  @override
  final String? clientMutationId;
  @override
  final GCustomEmojiID id;

  factory _$GDestroyCustomEmojiInput(
          [void Function(GDestroyCustomEmojiInputBuilder)? updates]) =>
      (new GDestroyCustomEmojiInputBuilder()..update(updates))._build();

  _$GDestroyCustomEmojiInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDestroyCustomEmojiInput', 'id');
  }

  @override
  GDestroyCustomEmojiInput rebuild(
          void Function(GDestroyCustomEmojiInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyCustomEmojiInputBuilder toBuilder() =>
      new GDestroyCustomEmojiInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyCustomEmojiInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyCustomEmojiInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDestroyCustomEmojiInputBuilder
    implements
        Builder<GDestroyCustomEmojiInput, GDestroyCustomEmojiInputBuilder> {
  _$GDestroyCustomEmojiInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCustomEmojiIDBuilder? _id;
  GCustomEmojiIDBuilder get id => _$this._id ??= new GCustomEmojiIDBuilder();
  set id(GCustomEmojiIDBuilder? id) => _$this._id = id;

  GDestroyCustomEmojiInputBuilder();

  GDestroyCustomEmojiInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyCustomEmojiInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyCustomEmojiInput;
  }

  @override
  void update(void Function(GDestroyCustomEmojiInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyCustomEmojiInput build() => _build();

  _$GDestroyCustomEmojiInput _build() {
    _$GDestroyCustomEmojiInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyCustomEmojiInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyCustomEmojiInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyEpicBoardInput extends GDestroyEpicBoardInput {
  @override
  final String? clientMutationId;
  @override
  final GBoardsEpicBoardID id;

  factory _$GDestroyEpicBoardInput(
          [void Function(GDestroyEpicBoardInputBuilder)? updates]) =>
      (new GDestroyEpicBoardInputBuilder()..update(updates))._build();

  _$GDestroyEpicBoardInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDestroyEpicBoardInput', 'id');
  }

  @override
  GDestroyEpicBoardInput rebuild(
          void Function(GDestroyEpicBoardInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyEpicBoardInputBuilder toBuilder() =>
      new GDestroyEpicBoardInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyEpicBoardInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyEpicBoardInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDestroyEpicBoardInputBuilder
    implements Builder<GDestroyEpicBoardInput, GDestroyEpicBoardInputBuilder> {
  _$GDestroyEpicBoardInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GBoardsEpicBoardIDBuilder? _id;
  GBoardsEpicBoardIDBuilder get id =>
      _$this._id ??= new GBoardsEpicBoardIDBuilder();
  set id(GBoardsEpicBoardIDBuilder? id) => _$this._id = id;

  GDestroyEpicBoardInputBuilder();

  GDestroyEpicBoardInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyEpicBoardInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyEpicBoardInput;
  }

  @override
  void update(void Function(GDestroyEpicBoardInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyEpicBoardInput build() => _build();

  _$GDestroyEpicBoardInput _build() {
    _$GDestroyEpicBoardInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyEpicBoardInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyEpicBoardInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyNoteInput extends GDestroyNoteInput {
  @override
  final String? clientMutationId;
  @override
  final GNoteID id;

  factory _$GDestroyNoteInput(
          [void Function(GDestroyNoteInputBuilder)? updates]) =>
      (new GDestroyNoteInputBuilder()..update(updates))._build();

  _$GDestroyNoteInput._({this.clientMutationId, required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDestroyNoteInput', 'id');
  }

  @override
  GDestroyNoteInput rebuild(void Function(GDestroyNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyNoteInputBuilder toBuilder() =>
      new GDestroyNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyNoteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyNoteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDestroyNoteInputBuilder
    implements Builder<GDestroyNoteInput, GDestroyNoteInputBuilder> {
  _$GDestroyNoteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GNoteIDBuilder? _id;
  GNoteIDBuilder get id => _$this._id ??= new GNoteIDBuilder();
  set id(GNoteIDBuilder? id) => _$this._id = id;

  GDestroyNoteInputBuilder();

  GDestroyNoteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyNoteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyNoteInput;
  }

  @override
  void update(void Function(GDestroyNoteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyNoteInput build() => _build();

  _$GDestroyNoteInput _build() {
    _$GDestroyNoteInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyNoteInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyNoteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyPackageFileInput extends GDestroyPackageFileInput {
  @override
  final String? clientMutationId;
  @override
  final GPackagesPackageFileID id;

  factory _$GDestroyPackageFileInput(
          [void Function(GDestroyPackageFileInputBuilder)? updates]) =>
      (new GDestroyPackageFileInputBuilder()..update(updates))._build();

  _$GDestroyPackageFileInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDestroyPackageFileInput', 'id');
  }

  @override
  GDestroyPackageFileInput rebuild(
          void Function(GDestroyPackageFileInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyPackageFileInputBuilder toBuilder() =>
      new GDestroyPackageFileInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyPackageFileInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyPackageFileInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDestroyPackageFileInputBuilder
    implements
        Builder<GDestroyPackageFileInput, GDestroyPackageFileInputBuilder> {
  _$GDestroyPackageFileInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GPackagesPackageFileIDBuilder? _id;
  GPackagesPackageFileIDBuilder get id =>
      _$this._id ??= new GPackagesPackageFileIDBuilder();
  set id(GPackagesPackageFileIDBuilder? id) => _$this._id = id;

  GDestroyPackageFileInputBuilder();

  GDestroyPackageFileInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyPackageFileInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyPackageFileInput;
  }

  @override
  void update(void Function(GDestroyPackageFileInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyPackageFileInput build() => _build();

  _$GDestroyPackageFileInput _build() {
    _$GDestroyPackageFileInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyPackageFileInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyPackageFileInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyPackageFilesInput extends GDestroyPackageFilesInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final BuiltList<GPackagesPackageFileID> ids;

  factory _$GDestroyPackageFilesInput(
          [void Function(GDestroyPackageFilesInputBuilder)? updates]) =>
      (new GDestroyPackageFilesInputBuilder()..update(updates))._build();

  _$GDestroyPackageFilesInput._(
      {this.clientMutationId, required this.projectPath, required this.ids})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GDestroyPackageFilesInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        ids, r'GDestroyPackageFilesInput', 'ids');
  }

  @override
  GDestroyPackageFilesInput rebuild(
          void Function(GDestroyPackageFilesInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyPackageFilesInputBuilder toBuilder() =>
      new GDestroyPackageFilesInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyPackageFilesInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
        ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyPackageFilesInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('ids', ids))
        .toString();
  }
}

class GDestroyPackageFilesInputBuilder
    implements
        Builder<GDestroyPackageFilesInput, GDestroyPackageFilesInputBuilder> {
  _$GDestroyPackageFilesInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  ListBuilder<GPackagesPackageFileID>? _ids;
  ListBuilder<GPackagesPackageFileID> get ids =>
      _$this._ids ??= new ListBuilder<GPackagesPackageFileID>();
  set ids(ListBuilder<GPackagesPackageFileID>? ids) => _$this._ids = ids;

  GDestroyPackageFilesInputBuilder();

  GDestroyPackageFilesInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _ids = $v.ids.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyPackageFilesInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyPackageFilesInput;
  }

  @override
  void update(void Function(GDestroyPackageFilesInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyPackageFilesInput build() => _build();

  _$GDestroyPackageFilesInput _build() {
    _$GDestroyPackageFilesInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyPackageFilesInput._(
              clientMutationId: clientMutationId,
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GDestroyPackageFilesInput', 'projectPath'),
              ids: ids.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'ids';
        ids.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyPackageFilesInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroyPackageInput extends GDestroyPackageInput {
  @override
  final String? clientMutationId;
  @override
  final GPackagesPackageID id;

  factory _$GDestroyPackageInput(
          [void Function(GDestroyPackageInputBuilder)? updates]) =>
      (new GDestroyPackageInputBuilder()..update(updates))._build();

  _$GDestroyPackageInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDestroyPackageInput', 'id');
  }

  @override
  GDestroyPackageInput rebuild(
          void Function(GDestroyPackageInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroyPackageInputBuilder toBuilder() =>
      new GDestroyPackageInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroyPackageInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroyPackageInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDestroyPackageInputBuilder
    implements Builder<GDestroyPackageInput, GDestroyPackageInputBuilder> {
  _$GDestroyPackageInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GPackagesPackageIDBuilder? _id;
  GPackagesPackageIDBuilder get id =>
      _$this._id ??= new GPackagesPackageIDBuilder();
  set id(GPackagesPackageIDBuilder? id) => _$this._id = id;

  GDestroyPackageInputBuilder();

  GDestroyPackageInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroyPackageInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroyPackageInput;
  }

  @override
  void update(void Function(GDestroyPackageInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroyPackageInput build() => _build();

  _$GDestroyPackageInput _build() {
    _$GDestroyPackageInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroyPackageInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroyPackageInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDestroySnippetInput extends GDestroySnippetInput {
  @override
  final String? clientMutationId;
  @override
  final GSnippetID id;

  factory _$GDestroySnippetInput(
          [void Function(GDestroySnippetInputBuilder)? updates]) =>
      (new GDestroySnippetInputBuilder()..update(updates))._build();

  _$GDestroySnippetInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDestroySnippetInput', 'id');
  }

  @override
  GDestroySnippetInput rebuild(
          void Function(GDestroySnippetInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDestroySnippetInputBuilder toBuilder() =>
      new GDestroySnippetInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDestroySnippetInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDestroySnippetInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDestroySnippetInputBuilder
    implements Builder<GDestroySnippetInput, GDestroySnippetInputBuilder> {
  _$GDestroySnippetInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GSnippetIDBuilder? _id;
  GSnippetIDBuilder get id => _$this._id ??= new GSnippetIDBuilder();
  set id(GSnippetIDBuilder? id) => _$this._id = id;

  GDestroySnippetInputBuilder();

  GDestroySnippetInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDestroySnippetInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDestroySnippetInput;
  }

  @override
  void update(void Function(GDestroySnippetInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDestroySnippetInput build() => _build();

  _$GDestroySnippetInput _build() {
    _$GDestroySnippetInput _$result;
    try {
      _$result = _$v ??
          new _$GDestroySnippetInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDestroySnippetInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDiffImagePositionInput extends GDiffImagePositionInput {
  @override
  final String? baseSha;
  @override
  final String headSha;
  @override
  final String startSha;
  @override
  final GDiffPathsInput paths;
  @override
  final int height;
  @override
  final int width;
  @override
  final int x;
  @override
  final int y;

  factory _$GDiffImagePositionInput(
          [void Function(GDiffImagePositionInputBuilder)? updates]) =>
      (new GDiffImagePositionInputBuilder()..update(updates))._build();

  _$GDiffImagePositionInput._(
      {this.baseSha,
      required this.headSha,
      required this.startSha,
      required this.paths,
      required this.height,
      required this.width,
      required this.x,
      required this.y})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        headSha, r'GDiffImagePositionInput', 'headSha');
    BuiltValueNullFieldError.checkNotNull(
        startSha, r'GDiffImagePositionInput', 'startSha');
    BuiltValueNullFieldError.checkNotNull(
        paths, r'GDiffImagePositionInput', 'paths');
    BuiltValueNullFieldError.checkNotNull(
        height, r'GDiffImagePositionInput', 'height');
    BuiltValueNullFieldError.checkNotNull(
        width, r'GDiffImagePositionInput', 'width');
    BuiltValueNullFieldError.checkNotNull(x, r'GDiffImagePositionInput', 'x');
    BuiltValueNullFieldError.checkNotNull(y, r'GDiffImagePositionInput', 'y');
  }

  @override
  GDiffImagePositionInput rebuild(
          void Function(GDiffImagePositionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDiffImagePositionInputBuilder toBuilder() =>
      new GDiffImagePositionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDiffImagePositionInput &&
        baseSha == other.baseSha &&
        headSha == other.headSha &&
        startSha == other.startSha &&
        paths == other.paths &&
        height == other.height &&
        width == other.width &&
        x == other.x &&
        y == other.y;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, baseSha.hashCode), headSha.hashCode),
                            startSha.hashCode),
                        paths.hashCode),
                    height.hashCode),
                width.hashCode),
            x.hashCode),
        y.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDiffImagePositionInput')
          ..add('baseSha', baseSha)
          ..add('headSha', headSha)
          ..add('startSha', startSha)
          ..add('paths', paths)
          ..add('height', height)
          ..add('width', width)
          ..add('x', x)
          ..add('y', y))
        .toString();
  }
}

class GDiffImagePositionInputBuilder
    implements
        Builder<GDiffImagePositionInput, GDiffImagePositionInputBuilder> {
  _$GDiffImagePositionInput? _$v;

  String? _baseSha;
  String? get baseSha => _$this._baseSha;
  set baseSha(String? baseSha) => _$this._baseSha = baseSha;

  String? _headSha;
  String? get headSha => _$this._headSha;
  set headSha(String? headSha) => _$this._headSha = headSha;

  String? _startSha;
  String? get startSha => _$this._startSha;
  set startSha(String? startSha) => _$this._startSha = startSha;

  GDiffPathsInputBuilder? _paths;
  GDiffPathsInputBuilder get paths =>
      _$this._paths ??= new GDiffPathsInputBuilder();
  set paths(GDiffPathsInputBuilder? paths) => _$this._paths = paths;

  int? _height;
  int? get height => _$this._height;
  set height(int? height) => _$this._height = height;

  int? _width;
  int? get width => _$this._width;
  set width(int? width) => _$this._width = width;

  int? _x;
  int? get x => _$this._x;
  set x(int? x) => _$this._x = x;

  int? _y;
  int? get y => _$this._y;
  set y(int? y) => _$this._y = y;

  GDiffImagePositionInputBuilder();

  GDiffImagePositionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _baseSha = $v.baseSha;
      _headSha = $v.headSha;
      _startSha = $v.startSha;
      _paths = $v.paths.toBuilder();
      _height = $v.height;
      _width = $v.width;
      _x = $v.x;
      _y = $v.y;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDiffImagePositionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDiffImagePositionInput;
  }

  @override
  void update(void Function(GDiffImagePositionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDiffImagePositionInput build() => _build();

  _$GDiffImagePositionInput _build() {
    _$GDiffImagePositionInput _$result;
    try {
      _$result = _$v ??
          new _$GDiffImagePositionInput._(
              baseSha: baseSha,
              headSha: BuiltValueNullFieldError.checkNotNull(
                  headSha, r'GDiffImagePositionInput', 'headSha'),
              startSha: BuiltValueNullFieldError.checkNotNull(
                  startSha, r'GDiffImagePositionInput', 'startSha'),
              paths: paths.build(),
              height: BuiltValueNullFieldError.checkNotNull(
                  height, r'GDiffImagePositionInput', 'height'),
              width: BuiltValueNullFieldError.checkNotNull(
                  width, r'GDiffImagePositionInput', 'width'),
              x: BuiltValueNullFieldError.checkNotNull(
                  x, r'GDiffImagePositionInput', 'x'),
              y: BuiltValueNullFieldError.checkNotNull(
                  y, r'GDiffImagePositionInput', 'y'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'paths';
        paths.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDiffImagePositionInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDiffNoteID extends GDiffNoteID {
  @override
  final String value;

  factory _$GDiffNoteID([void Function(GDiffNoteIDBuilder)? updates]) =>
      (new GDiffNoteIDBuilder()..update(updates))._build();

  _$GDiffNoteID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDiffNoteID', 'value');
  }

  @override
  GDiffNoteID rebuild(void Function(GDiffNoteIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDiffNoteIDBuilder toBuilder() => new GDiffNoteIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDiffNoteID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDiffNoteID')..add('value', value))
        .toString();
  }
}

class GDiffNoteIDBuilder implements Builder<GDiffNoteID, GDiffNoteIDBuilder> {
  _$GDiffNoteID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDiffNoteIDBuilder();

  GDiffNoteIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDiffNoteID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDiffNoteID;
  }

  @override
  void update(void Function(GDiffNoteIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDiffNoteID build() => _build();

  _$GDiffNoteID _build() {
    final _$result = _$v ??
        new _$GDiffNoteID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDiffNoteID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDiffPathsInput extends GDiffPathsInput {
  @override
  final String? newPath;
  @override
  final String? oldPath;

  factory _$GDiffPathsInput([void Function(GDiffPathsInputBuilder)? updates]) =>
      (new GDiffPathsInputBuilder()..update(updates))._build();

  _$GDiffPathsInput._({this.newPath, this.oldPath}) : super._();

  @override
  GDiffPathsInput rebuild(void Function(GDiffPathsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDiffPathsInputBuilder toBuilder() =>
      new GDiffPathsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDiffPathsInput &&
        newPath == other.newPath &&
        oldPath == other.oldPath;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, newPath.hashCode), oldPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDiffPathsInput')
          ..add('newPath', newPath)
          ..add('oldPath', oldPath))
        .toString();
  }
}

class GDiffPathsInputBuilder
    implements Builder<GDiffPathsInput, GDiffPathsInputBuilder> {
  _$GDiffPathsInput? _$v;

  String? _newPath;
  String? get newPath => _$this._newPath;
  set newPath(String? newPath) => _$this._newPath = newPath;

  String? _oldPath;
  String? get oldPath => _$this._oldPath;
  set oldPath(String? oldPath) => _$this._oldPath = oldPath;

  GDiffPathsInputBuilder();

  GDiffPathsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _newPath = $v.newPath;
      _oldPath = $v.oldPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDiffPathsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDiffPathsInput;
  }

  @override
  void update(void Function(GDiffPathsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDiffPathsInput build() => _build();

  _$GDiffPathsInput _build() {
    final _$result =
        _$v ?? new _$GDiffPathsInput._(newPath: newPath, oldPath: oldPath);
    replace(_$result);
    return _$result;
  }
}

class _$GDiffPositionInput extends GDiffPositionInput {
  @override
  final String? baseSha;
  @override
  final String headSha;
  @override
  final String startSha;
  @override
  final GDiffPathsInput paths;
  @override
  final int? newLine;
  @override
  final int? oldLine;

  factory _$GDiffPositionInput(
          [void Function(GDiffPositionInputBuilder)? updates]) =>
      (new GDiffPositionInputBuilder()..update(updates))._build();

  _$GDiffPositionInput._(
      {this.baseSha,
      required this.headSha,
      required this.startSha,
      required this.paths,
      this.newLine,
      this.oldLine})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        headSha, r'GDiffPositionInput', 'headSha');
    BuiltValueNullFieldError.checkNotNull(
        startSha, r'GDiffPositionInput', 'startSha');
    BuiltValueNullFieldError.checkNotNull(
        paths, r'GDiffPositionInput', 'paths');
  }

  @override
  GDiffPositionInput rebuild(
          void Function(GDiffPositionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDiffPositionInputBuilder toBuilder() =>
      new GDiffPositionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDiffPositionInput &&
        baseSha == other.baseSha &&
        headSha == other.headSha &&
        startSha == other.startSha &&
        paths == other.paths &&
        newLine == other.newLine &&
        oldLine == other.oldLine;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, baseSha.hashCode), headSha.hashCode),
                    startSha.hashCode),
                paths.hashCode),
            newLine.hashCode),
        oldLine.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDiffPositionInput')
          ..add('baseSha', baseSha)
          ..add('headSha', headSha)
          ..add('startSha', startSha)
          ..add('paths', paths)
          ..add('newLine', newLine)
          ..add('oldLine', oldLine))
        .toString();
  }
}

class GDiffPositionInputBuilder
    implements Builder<GDiffPositionInput, GDiffPositionInputBuilder> {
  _$GDiffPositionInput? _$v;

  String? _baseSha;
  String? get baseSha => _$this._baseSha;
  set baseSha(String? baseSha) => _$this._baseSha = baseSha;

  String? _headSha;
  String? get headSha => _$this._headSha;
  set headSha(String? headSha) => _$this._headSha = headSha;

  String? _startSha;
  String? get startSha => _$this._startSha;
  set startSha(String? startSha) => _$this._startSha = startSha;

  GDiffPathsInputBuilder? _paths;
  GDiffPathsInputBuilder get paths =>
      _$this._paths ??= new GDiffPathsInputBuilder();
  set paths(GDiffPathsInputBuilder? paths) => _$this._paths = paths;

  int? _newLine;
  int? get newLine => _$this._newLine;
  set newLine(int? newLine) => _$this._newLine = newLine;

  int? _oldLine;
  int? get oldLine => _$this._oldLine;
  set oldLine(int? oldLine) => _$this._oldLine = oldLine;

  GDiffPositionInputBuilder();

  GDiffPositionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _baseSha = $v.baseSha;
      _headSha = $v.headSha;
      _startSha = $v.startSha;
      _paths = $v.paths.toBuilder();
      _newLine = $v.newLine;
      _oldLine = $v.oldLine;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDiffPositionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDiffPositionInput;
  }

  @override
  void update(void Function(GDiffPositionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDiffPositionInput build() => _build();

  _$GDiffPositionInput _build() {
    _$GDiffPositionInput _$result;
    try {
      _$result = _$v ??
          new _$GDiffPositionInput._(
              baseSha: baseSha,
              headSha: BuiltValueNullFieldError.checkNotNull(
                  headSha, r'GDiffPositionInput', 'headSha'),
              startSha: BuiltValueNullFieldError.checkNotNull(
                  startSha, r'GDiffPositionInput', 'startSha'),
              paths: paths.build(),
              newLine: newLine,
              oldLine: oldLine);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'paths';
        paths.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDiffPositionInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDisableDevopsAdoptionNamespaceInput
    extends GDisableDevopsAdoptionNamespaceInput {
  @override
  final String? clientMutationId;
  @override
  final BuiltList<GAnalyticsDevopsAdoptionEnabledNamespaceID> id;

  factory _$GDisableDevopsAdoptionNamespaceInput(
          [void Function(GDisableDevopsAdoptionNamespaceInputBuilder)?
              updates]) =>
      (new GDisableDevopsAdoptionNamespaceInputBuilder()..update(updates))
          ._build();

  _$GDisableDevopsAdoptionNamespaceInput._(
      {this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDisableDevopsAdoptionNamespaceInput', 'id');
  }

  @override
  GDisableDevopsAdoptionNamespaceInput rebuild(
          void Function(GDisableDevopsAdoptionNamespaceInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDisableDevopsAdoptionNamespaceInputBuilder toBuilder() =>
      new GDisableDevopsAdoptionNamespaceInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDisableDevopsAdoptionNamespaceInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDisableDevopsAdoptionNamespaceInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GDisableDevopsAdoptionNamespaceInputBuilder
    implements
        Builder<GDisableDevopsAdoptionNamespaceInput,
            GDisableDevopsAdoptionNamespaceInputBuilder> {
  _$GDisableDevopsAdoptionNamespaceInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<GAnalyticsDevopsAdoptionEnabledNamespaceID>? _id;
  ListBuilder<GAnalyticsDevopsAdoptionEnabledNamespaceID> get id =>
      _$this._id ??=
          new ListBuilder<GAnalyticsDevopsAdoptionEnabledNamespaceID>();
  set id(ListBuilder<GAnalyticsDevopsAdoptionEnabledNamespaceID>? id) =>
      _$this._id = id;

  GDisableDevopsAdoptionNamespaceInputBuilder();

  GDisableDevopsAdoptionNamespaceInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDisableDevopsAdoptionNamespaceInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDisableDevopsAdoptionNamespaceInput;
  }

  @override
  void update(
      void Function(GDisableDevopsAdoptionNamespaceInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDisableDevopsAdoptionNamespaceInput build() => _build();

  _$GDisableDevopsAdoptionNamespaceInput _build() {
    _$GDisableDevopsAdoptionNamespaceInput _$result;
    try {
      _$result = _$v ??
          new _$GDisableDevopsAdoptionNamespaceInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDisableDevopsAdoptionNamespaceInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDiscussionID extends GDiscussionID {
  @override
  final String value;

  factory _$GDiscussionID([void Function(GDiscussionIDBuilder)? updates]) =>
      (new GDiscussionIDBuilder()..update(updates))._build();

  _$GDiscussionID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDiscussionID', 'value');
  }

  @override
  GDiscussionID rebuild(void Function(GDiscussionIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDiscussionIDBuilder toBuilder() => new GDiscussionIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDiscussionID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDiscussionID')..add('value', value))
        .toString();
  }
}

class GDiscussionIDBuilder
    implements Builder<GDiscussionID, GDiscussionIDBuilder> {
  _$GDiscussionID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDiscussionIDBuilder();

  GDiscussionIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDiscussionID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDiscussionID;
  }

  @override
  void update(void Function(GDiscussionIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDiscussionID build() => _build();

  _$GDiscussionID _build() {
    final _$result = _$v ??
        new _$GDiscussionID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDiscussionID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDiscussionToggleResolveInput extends GDiscussionToggleResolveInput {
  @override
  final String? clientMutationId;
  @override
  final GDiscussionID id;
  @override
  final bool resolve;

  factory _$GDiscussionToggleResolveInput(
          [void Function(GDiscussionToggleResolveInputBuilder)? updates]) =>
      (new GDiscussionToggleResolveInputBuilder()..update(updates))._build();

  _$GDiscussionToggleResolveInput._(
      {this.clientMutationId, required this.id, required this.resolve})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDiscussionToggleResolveInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        resolve, r'GDiscussionToggleResolveInput', 'resolve');
  }

  @override
  GDiscussionToggleResolveInput rebuild(
          void Function(GDiscussionToggleResolveInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDiscussionToggleResolveInputBuilder toBuilder() =>
      new GDiscussionToggleResolveInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDiscussionToggleResolveInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        resolve == other.resolve;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, clientMutationId.hashCode), id.hashCode), resolve.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDiscussionToggleResolveInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('resolve', resolve))
        .toString();
  }
}

class GDiscussionToggleResolveInputBuilder
    implements
        Builder<GDiscussionToggleResolveInput,
            GDiscussionToggleResolveInputBuilder> {
  _$GDiscussionToggleResolveInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDiscussionIDBuilder? _id;
  GDiscussionIDBuilder get id => _$this._id ??= new GDiscussionIDBuilder();
  set id(GDiscussionIDBuilder? id) => _$this._id = id;

  bool? _resolve;
  bool? get resolve => _$this._resolve;
  set resolve(bool? resolve) => _$this._resolve = resolve;

  GDiscussionToggleResolveInputBuilder();

  GDiscussionToggleResolveInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _resolve = $v.resolve;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDiscussionToggleResolveInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDiscussionToggleResolveInput;
  }

  @override
  void update(void Function(GDiscussionToggleResolveInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDiscussionToggleResolveInput build() => _build();

  _$GDiscussionToggleResolveInput _build() {
    _$GDiscussionToggleResolveInput _$result;
    try {
      _$result = _$v ??
          new _$GDiscussionToggleResolveInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              resolve: BuiltValueNullFieldError.checkNotNull(
                  resolve, r'GDiscussionToggleResolveInput', 'resolve'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDiscussionToggleResolveInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDuration extends GDuration {
  @override
  final String value;

  factory _$GDuration([void Function(GDurationBuilder)? updates]) =>
      (new GDurationBuilder()..update(updates))._build();

  _$GDuration._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDuration', 'value');
  }

  @override
  GDuration rebuild(void Function(GDurationBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDurationBuilder toBuilder() => new GDurationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDuration && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDuration')..add('value', value))
        .toString();
  }
}

class GDurationBuilder implements Builder<GDuration, GDurationBuilder> {
  _$GDuration? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDurationBuilder();

  GDurationBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDuration other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDuration;
  }

  @override
  void update(void Function(GDurationBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDuration build() => _build();

  _$GDuration _build() {
    final _$result = _$v ??
        new _$GDuration._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDuration', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GEchoCreateInput extends GEchoCreateInput {
  @override
  final String? clientMutationId;
  @override
  final BuiltList<String>? errors;
  @override
  final BuiltList<String>? messages;

  factory _$GEchoCreateInput(
          [void Function(GEchoCreateInputBuilder)? updates]) =>
      (new GEchoCreateInputBuilder()..update(updates))._build();

  _$GEchoCreateInput._({this.clientMutationId, this.errors, this.messages})
      : super._();

  @override
  GEchoCreateInput rebuild(void Function(GEchoCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEchoCreateInputBuilder toBuilder() =>
      new GEchoCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEchoCreateInput &&
        clientMutationId == other.clientMutationId &&
        errors == other.errors &&
        messages == other.messages;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), errors.hashCode),
        messages.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEchoCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('errors', errors)
          ..add('messages', messages))
        .toString();
  }
}

class GEchoCreateInputBuilder
    implements Builder<GEchoCreateInput, GEchoCreateInputBuilder> {
  _$GEchoCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<String>? _errors;
  ListBuilder<String> get errors =>
      _$this._errors ??= new ListBuilder<String>();
  set errors(ListBuilder<String>? errors) => _$this._errors = errors;

  ListBuilder<String>? _messages;
  ListBuilder<String> get messages =>
      _$this._messages ??= new ListBuilder<String>();
  set messages(ListBuilder<String>? messages) => _$this._messages = messages;

  GEchoCreateInputBuilder();

  GEchoCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _errors = $v.errors?.toBuilder();
      _messages = $v.messages?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEchoCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEchoCreateInput;
  }

  @override
  void update(void Function(GEchoCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEchoCreateInput build() => _build();

  _$GEchoCreateInput _build() {
    _$GEchoCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GEchoCreateInput._(
              clientMutationId: clientMutationId,
              errors: _errors?.build(),
              messages: _messages?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'errors';
        _errors?.build();
        _$failedField = 'messages';
        _messages?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEchoCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEnableDevopsAdoptionNamespaceInput
    extends GEnableDevopsAdoptionNamespaceInput {
  @override
  final String? clientMutationId;
  @override
  final GNamespaceID namespaceId;
  @override
  final GNamespaceID? displayNamespaceId;

  factory _$GEnableDevopsAdoptionNamespaceInput(
          [void Function(GEnableDevopsAdoptionNamespaceInputBuilder)?
              updates]) =>
      (new GEnableDevopsAdoptionNamespaceInputBuilder()..update(updates))
          ._build();

  _$GEnableDevopsAdoptionNamespaceInput._(
      {this.clientMutationId,
      required this.namespaceId,
      this.displayNamespaceId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        namespaceId, r'GEnableDevopsAdoptionNamespaceInput', 'namespaceId');
  }

  @override
  GEnableDevopsAdoptionNamespaceInput rebuild(
          void Function(GEnableDevopsAdoptionNamespaceInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEnableDevopsAdoptionNamespaceInputBuilder toBuilder() =>
      new GEnableDevopsAdoptionNamespaceInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEnableDevopsAdoptionNamespaceInput &&
        clientMutationId == other.clientMutationId &&
        namespaceId == other.namespaceId &&
        displayNamespaceId == other.displayNamespaceId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), namespaceId.hashCode),
        displayNamespaceId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEnableDevopsAdoptionNamespaceInput')
          ..add('clientMutationId', clientMutationId)
          ..add('namespaceId', namespaceId)
          ..add('displayNamespaceId', displayNamespaceId))
        .toString();
  }
}

class GEnableDevopsAdoptionNamespaceInputBuilder
    implements
        Builder<GEnableDevopsAdoptionNamespaceInput,
            GEnableDevopsAdoptionNamespaceInputBuilder> {
  _$GEnableDevopsAdoptionNamespaceInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GNamespaceIDBuilder? _namespaceId;
  GNamespaceIDBuilder get namespaceId =>
      _$this._namespaceId ??= new GNamespaceIDBuilder();
  set namespaceId(GNamespaceIDBuilder? namespaceId) =>
      _$this._namespaceId = namespaceId;

  GNamespaceIDBuilder? _displayNamespaceId;
  GNamespaceIDBuilder get displayNamespaceId =>
      _$this._displayNamespaceId ??= new GNamespaceIDBuilder();
  set displayNamespaceId(GNamespaceIDBuilder? displayNamespaceId) =>
      _$this._displayNamespaceId = displayNamespaceId;

  GEnableDevopsAdoptionNamespaceInputBuilder();

  GEnableDevopsAdoptionNamespaceInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _namespaceId = $v.namespaceId.toBuilder();
      _displayNamespaceId = $v.displayNamespaceId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEnableDevopsAdoptionNamespaceInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEnableDevopsAdoptionNamespaceInput;
  }

  @override
  void update(
      void Function(GEnableDevopsAdoptionNamespaceInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEnableDevopsAdoptionNamespaceInput build() => _build();

  _$GEnableDevopsAdoptionNamespaceInput _build() {
    _$GEnableDevopsAdoptionNamespaceInput _$result;
    try {
      _$result = _$v ??
          new _$GEnableDevopsAdoptionNamespaceInput._(
              clientMutationId: clientMutationId,
              namespaceId: namespaceId.build(),
              displayNamespaceId: _displayNamespaceId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'namespaceId';
        namespaceId.build();
        _$failedField = 'displayNamespaceId';
        _displayNamespaceId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEnableDevopsAdoptionNamespaceInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEnvironmentID extends GEnvironmentID {
  @override
  final String value;

  factory _$GEnvironmentID([void Function(GEnvironmentIDBuilder)? updates]) =>
      (new GEnvironmentIDBuilder()..update(updates))._build();

  _$GEnvironmentID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GEnvironmentID', 'value');
  }

  @override
  GEnvironmentID rebuild(void Function(GEnvironmentIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEnvironmentIDBuilder toBuilder() =>
      new GEnvironmentIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEnvironmentID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEnvironmentID')..add('value', value))
        .toString();
  }
}

class GEnvironmentIDBuilder
    implements Builder<GEnvironmentID, GEnvironmentIDBuilder> {
  _$GEnvironmentID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GEnvironmentIDBuilder();

  GEnvironmentIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEnvironmentID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEnvironmentID;
  }

  @override
  void update(void Function(GEnvironmentIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEnvironmentID build() => _build();

  _$GEnvironmentID _build() {
    final _$result = _$v ??
        new _$GEnvironmentID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GEnvironmentID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GEnvironmentsCanaryIngressUpdateInput
    extends GEnvironmentsCanaryIngressUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GEnvironmentID id;
  @override
  final int weight;

  factory _$GEnvironmentsCanaryIngressUpdateInput(
          [void Function(GEnvironmentsCanaryIngressUpdateInputBuilder)?
              updates]) =>
      (new GEnvironmentsCanaryIngressUpdateInputBuilder()..update(updates))
          ._build();

  _$GEnvironmentsCanaryIngressUpdateInput._(
      {this.clientMutationId, required this.id, required this.weight})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GEnvironmentsCanaryIngressUpdateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        weight, r'GEnvironmentsCanaryIngressUpdateInput', 'weight');
  }

  @override
  GEnvironmentsCanaryIngressUpdateInput rebuild(
          void Function(GEnvironmentsCanaryIngressUpdateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEnvironmentsCanaryIngressUpdateInputBuilder toBuilder() =>
      new GEnvironmentsCanaryIngressUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEnvironmentsCanaryIngressUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        weight == other.weight;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, clientMutationId.hashCode), id.hashCode), weight.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GEnvironmentsCanaryIngressUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('weight', weight))
        .toString();
  }
}

class GEnvironmentsCanaryIngressUpdateInputBuilder
    implements
        Builder<GEnvironmentsCanaryIngressUpdateInput,
            GEnvironmentsCanaryIngressUpdateInputBuilder> {
  _$GEnvironmentsCanaryIngressUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GEnvironmentIDBuilder? _id;
  GEnvironmentIDBuilder get id => _$this._id ??= new GEnvironmentIDBuilder();
  set id(GEnvironmentIDBuilder? id) => _$this._id = id;

  int? _weight;
  int? get weight => _$this._weight;
  set weight(int? weight) => _$this._weight = weight;

  GEnvironmentsCanaryIngressUpdateInputBuilder();

  GEnvironmentsCanaryIngressUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _weight = $v.weight;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEnvironmentsCanaryIngressUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEnvironmentsCanaryIngressUpdateInput;
  }

  @override
  void update(
      void Function(GEnvironmentsCanaryIngressUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEnvironmentsCanaryIngressUpdateInput build() => _build();

  _$GEnvironmentsCanaryIngressUpdateInput _build() {
    _$GEnvironmentsCanaryIngressUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GEnvironmentsCanaryIngressUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              weight: BuiltValueNullFieldError.checkNotNull(
                  weight, r'GEnvironmentsCanaryIngressUpdateInput', 'weight'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEnvironmentsCanaryIngressUpdateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEpicAddIssueInput extends GEpicAddIssueInput {
  @override
  final String iid;
  @override
  final String groupPath;
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String issueIid;

  factory _$GEpicAddIssueInput(
          [void Function(GEpicAddIssueInputBuilder)? updates]) =>
      (new GEpicAddIssueInputBuilder()..update(updates))._build();

  _$GEpicAddIssueInput._(
      {required this.iid,
      required this.groupPath,
      this.clientMutationId,
      required this.projectPath,
      required this.issueIid})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(iid, r'GEpicAddIssueInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        groupPath, r'GEpicAddIssueInput', 'groupPath');
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GEpicAddIssueInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        issueIid, r'GEpicAddIssueInput', 'issueIid');
  }

  @override
  GEpicAddIssueInput rebuild(
          void Function(GEpicAddIssueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicAddIssueInputBuilder toBuilder() =>
      new GEpicAddIssueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicAddIssueInput &&
        iid == other.iid &&
        groupPath == other.groupPath &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        issueIid == other.issueIid;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, iid.hashCode), groupPath.hashCode),
                clientMutationId.hashCode),
            projectPath.hashCode),
        issueIid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicAddIssueInput')
          ..add('iid', iid)
          ..add('groupPath', groupPath)
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('issueIid', issueIid))
        .toString();
  }
}

class GEpicAddIssueInputBuilder
    implements Builder<GEpicAddIssueInput, GEpicAddIssueInputBuilder> {
  _$GEpicAddIssueInput? _$v;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _issueIid;
  String? get issueIid => _$this._issueIid;
  set issueIid(String? issueIid) => _$this._issueIid = issueIid;

  GEpicAddIssueInputBuilder();

  GEpicAddIssueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _iid = $v.iid;
      _groupPath = $v.groupPath;
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _issueIid = $v.issueIid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicAddIssueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicAddIssueInput;
  }

  @override
  void update(void Function(GEpicAddIssueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicAddIssueInput build() => _build();

  _$GEpicAddIssueInput _build() {
    final _$result = _$v ??
        new _$GEpicAddIssueInput._(
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GEpicAddIssueInput', 'iid'),
            groupPath: BuiltValueNullFieldError.checkNotNull(
                groupPath, r'GEpicAddIssueInput', 'groupPath'),
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GEpicAddIssueInput', 'projectPath'),
            issueIid: BuiltValueNullFieldError.checkNotNull(
                issueIid, r'GEpicAddIssueInput', 'issueIid'));
    replace(_$result);
    return _$result;
  }
}

class _$GEpicBoardCreateInput extends GEpicBoardCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String? name;
  @override
  final bool? hideBacklogList;
  @override
  final bool? hideClosedList;
  @override
  final BuiltList<String>? labels;
  @override
  final BuiltList<GLabelID>? labelIds;
  @override
  final String? groupPath;

  factory _$GEpicBoardCreateInput(
          [void Function(GEpicBoardCreateInputBuilder)? updates]) =>
      (new GEpicBoardCreateInputBuilder()..update(updates))._build();

  _$GEpicBoardCreateInput._(
      {this.clientMutationId,
      this.name,
      this.hideBacklogList,
      this.hideClosedList,
      this.labels,
      this.labelIds,
      this.groupPath})
      : super._();

  @override
  GEpicBoardCreateInput rebuild(
          void Function(GEpicBoardCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicBoardCreateInputBuilder toBuilder() =>
      new GEpicBoardCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicBoardCreateInput &&
        clientMutationId == other.clientMutationId &&
        name == other.name &&
        hideBacklogList == other.hideBacklogList &&
        hideClosedList == other.hideClosedList &&
        labels == other.labels &&
        labelIds == other.labelIds &&
        groupPath == other.groupPath;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, clientMutationId.hashCode), name.hashCode),
                        hideBacklogList.hashCode),
                    hideClosedList.hashCode),
                labels.hashCode),
            labelIds.hashCode),
        groupPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicBoardCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('name', name)
          ..add('hideBacklogList', hideBacklogList)
          ..add('hideClosedList', hideClosedList)
          ..add('labels', labels)
          ..add('labelIds', labelIds)
          ..add('groupPath', groupPath))
        .toString();
  }
}

class GEpicBoardCreateInputBuilder
    implements Builder<GEpicBoardCreateInput, GEpicBoardCreateInputBuilder> {
  _$GEpicBoardCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  bool? _hideBacklogList;
  bool? get hideBacklogList => _$this._hideBacklogList;
  set hideBacklogList(bool? hideBacklogList) =>
      _$this._hideBacklogList = hideBacklogList;

  bool? _hideClosedList;
  bool? get hideClosedList => _$this._hideClosedList;
  set hideClosedList(bool? hideClosedList) =>
      _$this._hideClosedList = hideClosedList;

  ListBuilder<String>? _labels;
  ListBuilder<String> get labels =>
      _$this._labels ??= new ListBuilder<String>();
  set labels(ListBuilder<String>? labels) => _$this._labels = labels;

  ListBuilder<GLabelID>? _labelIds;
  ListBuilder<GLabelID> get labelIds =>
      _$this._labelIds ??= new ListBuilder<GLabelID>();
  set labelIds(ListBuilder<GLabelID>? labelIds) => _$this._labelIds = labelIds;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  GEpicBoardCreateInputBuilder();

  GEpicBoardCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _name = $v.name;
      _hideBacklogList = $v.hideBacklogList;
      _hideClosedList = $v.hideClosedList;
      _labels = $v.labels?.toBuilder();
      _labelIds = $v.labelIds?.toBuilder();
      _groupPath = $v.groupPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicBoardCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicBoardCreateInput;
  }

  @override
  void update(void Function(GEpicBoardCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicBoardCreateInput build() => _build();

  _$GEpicBoardCreateInput _build() {
    _$GEpicBoardCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GEpicBoardCreateInput._(
              clientMutationId: clientMutationId,
              name: name,
              hideBacklogList: hideBacklogList,
              hideClosedList: hideClosedList,
              labels: _labels?.build(),
              labelIds: _labelIds?.build(),
              groupPath: groupPath);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labels';
        _labels?.build();
        _$failedField = 'labelIds';
        _labelIds?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEpicBoardCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEpicBoardListCreateInput extends GEpicBoardListCreateInput {
  @override
  final bool? backlog;
  @override
  final GLabelID? labelId;
  @override
  final String? clientMutationId;
  @override
  final GBoardsEpicBoardID boardId;

  factory _$GEpicBoardListCreateInput(
          [void Function(GEpicBoardListCreateInputBuilder)? updates]) =>
      (new GEpicBoardListCreateInputBuilder()..update(updates))._build();

  _$GEpicBoardListCreateInput._(
      {this.backlog,
      this.labelId,
      this.clientMutationId,
      required this.boardId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        boardId, r'GEpicBoardListCreateInput', 'boardId');
  }

  @override
  GEpicBoardListCreateInput rebuild(
          void Function(GEpicBoardListCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicBoardListCreateInputBuilder toBuilder() =>
      new GEpicBoardListCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicBoardListCreateInput &&
        backlog == other.backlog &&
        labelId == other.labelId &&
        clientMutationId == other.clientMutationId &&
        boardId == other.boardId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, backlog.hashCode), labelId.hashCode),
            clientMutationId.hashCode),
        boardId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicBoardListCreateInput')
          ..add('backlog', backlog)
          ..add('labelId', labelId)
          ..add('clientMutationId', clientMutationId)
          ..add('boardId', boardId))
        .toString();
  }
}

class GEpicBoardListCreateInputBuilder
    implements
        Builder<GEpicBoardListCreateInput, GEpicBoardListCreateInputBuilder> {
  _$GEpicBoardListCreateInput? _$v;

  bool? _backlog;
  bool? get backlog => _$this._backlog;
  set backlog(bool? backlog) => _$this._backlog = backlog;

  GLabelIDBuilder? _labelId;
  GLabelIDBuilder get labelId => _$this._labelId ??= new GLabelIDBuilder();
  set labelId(GLabelIDBuilder? labelId) => _$this._labelId = labelId;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GBoardsEpicBoardIDBuilder? _boardId;
  GBoardsEpicBoardIDBuilder get boardId =>
      _$this._boardId ??= new GBoardsEpicBoardIDBuilder();
  set boardId(GBoardsEpicBoardIDBuilder? boardId) => _$this._boardId = boardId;

  GEpicBoardListCreateInputBuilder();

  GEpicBoardListCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _backlog = $v.backlog;
      _labelId = $v.labelId?.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _boardId = $v.boardId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicBoardListCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicBoardListCreateInput;
  }

  @override
  void update(void Function(GEpicBoardListCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicBoardListCreateInput build() => _build();

  _$GEpicBoardListCreateInput _build() {
    _$GEpicBoardListCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GEpicBoardListCreateInput._(
              backlog: backlog,
              labelId: _labelId?.build(),
              clientMutationId: clientMutationId,
              boardId: boardId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labelId';
        _labelId?.build();

        _$failedField = 'boardId';
        boardId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEpicBoardListCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEpicBoardListDestroyInput extends GEpicBoardListDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GBoardsEpicListID listId;

  factory _$GEpicBoardListDestroyInput(
          [void Function(GEpicBoardListDestroyInputBuilder)? updates]) =>
      (new GEpicBoardListDestroyInputBuilder()..update(updates))._build();

  _$GEpicBoardListDestroyInput._({this.clientMutationId, required this.listId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        listId, r'GEpicBoardListDestroyInput', 'listId');
  }

  @override
  GEpicBoardListDestroyInput rebuild(
          void Function(GEpicBoardListDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicBoardListDestroyInputBuilder toBuilder() =>
      new GEpicBoardListDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicBoardListDestroyInput &&
        clientMutationId == other.clientMutationId &&
        listId == other.listId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), listId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicBoardListDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('listId', listId))
        .toString();
  }
}

class GEpicBoardListDestroyInputBuilder
    implements
        Builder<GEpicBoardListDestroyInput, GEpicBoardListDestroyInputBuilder> {
  _$GEpicBoardListDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GBoardsEpicListIDBuilder? _listId;
  GBoardsEpicListIDBuilder get listId =>
      _$this._listId ??= new GBoardsEpicListIDBuilder();
  set listId(GBoardsEpicListIDBuilder? listId) => _$this._listId = listId;

  GEpicBoardListDestroyInputBuilder();

  GEpicBoardListDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _listId = $v.listId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicBoardListDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicBoardListDestroyInput;
  }

  @override
  void update(void Function(GEpicBoardListDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicBoardListDestroyInput build() => _build();

  _$GEpicBoardListDestroyInput _build() {
    _$GEpicBoardListDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GEpicBoardListDestroyInput._(
              clientMutationId: clientMutationId, listId: listId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'listId';
        listId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEpicBoardListDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEpicBoardUpdateInput extends GEpicBoardUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final String? name;
  @override
  final bool? hideBacklogList;
  @override
  final bool? hideClosedList;
  @override
  final BuiltList<String>? labels;
  @override
  final BuiltList<GLabelID>? labelIds;
  @override
  final GBoardsEpicBoardID id;

  factory _$GEpicBoardUpdateInput(
          [void Function(GEpicBoardUpdateInputBuilder)? updates]) =>
      (new GEpicBoardUpdateInputBuilder()..update(updates))._build();

  _$GEpicBoardUpdateInput._(
      {this.clientMutationId,
      this.name,
      this.hideBacklogList,
      this.hideClosedList,
      this.labels,
      this.labelIds,
      required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GEpicBoardUpdateInput', 'id');
  }

  @override
  GEpicBoardUpdateInput rebuild(
          void Function(GEpicBoardUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicBoardUpdateInputBuilder toBuilder() =>
      new GEpicBoardUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicBoardUpdateInput &&
        clientMutationId == other.clientMutationId &&
        name == other.name &&
        hideBacklogList == other.hideBacklogList &&
        hideClosedList == other.hideClosedList &&
        labels == other.labels &&
        labelIds == other.labelIds &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, clientMutationId.hashCode), name.hashCode),
                        hideBacklogList.hashCode),
                    hideClosedList.hashCode),
                labels.hashCode),
            labelIds.hashCode),
        id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicBoardUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('name', name)
          ..add('hideBacklogList', hideBacklogList)
          ..add('hideClosedList', hideClosedList)
          ..add('labels', labels)
          ..add('labelIds', labelIds)
          ..add('id', id))
        .toString();
  }
}

class GEpicBoardUpdateInputBuilder
    implements Builder<GEpicBoardUpdateInput, GEpicBoardUpdateInputBuilder> {
  _$GEpicBoardUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  bool? _hideBacklogList;
  bool? get hideBacklogList => _$this._hideBacklogList;
  set hideBacklogList(bool? hideBacklogList) =>
      _$this._hideBacklogList = hideBacklogList;

  bool? _hideClosedList;
  bool? get hideClosedList => _$this._hideClosedList;
  set hideClosedList(bool? hideClosedList) =>
      _$this._hideClosedList = hideClosedList;

  ListBuilder<String>? _labels;
  ListBuilder<String> get labels =>
      _$this._labels ??= new ListBuilder<String>();
  set labels(ListBuilder<String>? labels) => _$this._labels = labels;

  ListBuilder<GLabelID>? _labelIds;
  ListBuilder<GLabelID> get labelIds =>
      _$this._labelIds ??= new ListBuilder<GLabelID>();
  set labelIds(ListBuilder<GLabelID>? labelIds) => _$this._labelIds = labelIds;

  GBoardsEpicBoardIDBuilder? _id;
  GBoardsEpicBoardIDBuilder get id =>
      _$this._id ??= new GBoardsEpicBoardIDBuilder();
  set id(GBoardsEpicBoardIDBuilder? id) => _$this._id = id;

  GEpicBoardUpdateInputBuilder();

  GEpicBoardUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _name = $v.name;
      _hideBacklogList = $v.hideBacklogList;
      _hideClosedList = $v.hideClosedList;
      _labels = $v.labels?.toBuilder();
      _labelIds = $v.labelIds?.toBuilder();
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicBoardUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicBoardUpdateInput;
  }

  @override
  void update(void Function(GEpicBoardUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicBoardUpdateInput build() => _build();

  _$GEpicBoardUpdateInput _build() {
    _$GEpicBoardUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GEpicBoardUpdateInput._(
              clientMutationId: clientMutationId,
              name: name,
              hideBacklogList: hideBacklogList,
              hideClosedList: hideClosedList,
              labels: _labels?.build(),
              labelIds: _labelIds?.build(),
              id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labels';
        _labels?.build();
        _$failedField = 'labelIds';
        _labelIds?.build();
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEpicBoardUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEpicFilters extends GEpicFilters {
  @override
  final BuiltList<String>? labelName;
  @override
  final String? authorUsername;
  @override
  final String? myReactionEmoji;
  @override
  final GNegatedEpicBoardIssueInput? not;
  @override
  final String? search;
  @override
  final bool? confidential;

  factory _$GEpicFilters([void Function(GEpicFiltersBuilder)? updates]) =>
      (new GEpicFiltersBuilder()..update(updates))._build();

  _$GEpicFilters._(
      {this.labelName,
      this.authorUsername,
      this.myReactionEmoji,
      this.not,
      this.search,
      this.confidential})
      : super._();

  @override
  GEpicFilters rebuild(void Function(GEpicFiltersBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicFiltersBuilder toBuilder() => new GEpicFiltersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicFilters &&
        labelName == other.labelName &&
        authorUsername == other.authorUsername &&
        myReactionEmoji == other.myReactionEmoji &&
        not == other.not &&
        search == other.search &&
        confidential == other.confidential;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, labelName.hashCode), authorUsername.hashCode),
                    myReactionEmoji.hashCode),
                not.hashCode),
            search.hashCode),
        confidential.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicFilters')
          ..add('labelName', labelName)
          ..add('authorUsername', authorUsername)
          ..add('myReactionEmoji', myReactionEmoji)
          ..add('not', not)
          ..add('search', search)
          ..add('confidential', confidential))
        .toString();
  }
}

class GEpicFiltersBuilder
    implements Builder<GEpicFilters, GEpicFiltersBuilder> {
  _$GEpicFilters? _$v;

  ListBuilder<String>? _labelName;
  ListBuilder<String> get labelName =>
      _$this._labelName ??= new ListBuilder<String>();
  set labelName(ListBuilder<String>? labelName) =>
      _$this._labelName = labelName;

  String? _authorUsername;
  String? get authorUsername => _$this._authorUsername;
  set authorUsername(String? authorUsername) =>
      _$this._authorUsername = authorUsername;

  String? _myReactionEmoji;
  String? get myReactionEmoji => _$this._myReactionEmoji;
  set myReactionEmoji(String? myReactionEmoji) =>
      _$this._myReactionEmoji = myReactionEmoji;

  GNegatedEpicBoardIssueInputBuilder? _not;
  GNegatedEpicBoardIssueInputBuilder get not =>
      _$this._not ??= new GNegatedEpicBoardIssueInputBuilder();
  set not(GNegatedEpicBoardIssueInputBuilder? not) => _$this._not = not;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  bool? _confidential;
  bool? get confidential => _$this._confidential;
  set confidential(bool? confidential) => _$this._confidential = confidential;

  GEpicFiltersBuilder();

  GEpicFiltersBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _labelName = $v.labelName?.toBuilder();
      _authorUsername = $v.authorUsername;
      _myReactionEmoji = $v.myReactionEmoji;
      _not = $v.not?.toBuilder();
      _search = $v.search;
      _confidential = $v.confidential;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicFilters other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicFilters;
  }

  @override
  void update(void Function(GEpicFiltersBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicFilters build() => _build();

  _$GEpicFilters _build() {
    _$GEpicFilters _$result;
    try {
      _$result = _$v ??
          new _$GEpicFilters._(
              labelName: _labelName?.build(),
              authorUsername: authorUsername,
              myReactionEmoji: myReactionEmoji,
              not: _not?.build(),
              search: search,
              confidential: confidential);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labelName';
        _labelName?.build();

        _$failedField = 'not';
        _not?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEpicFilters', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEpicID extends GEpicID {
  @override
  final String value;

  factory _$GEpicID([void Function(GEpicIDBuilder)? updates]) =>
      (new GEpicIDBuilder()..update(updates))._build();

  _$GEpicID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GEpicID', 'value');
  }

  @override
  GEpicID rebuild(void Function(GEpicIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicIDBuilder toBuilder() => new GEpicIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicID')..add('value', value))
        .toString();
  }
}

class GEpicIDBuilder implements Builder<GEpicID, GEpicIDBuilder> {
  _$GEpicID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GEpicIDBuilder();

  GEpicIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicID;
  }

  @override
  void update(void Function(GEpicIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicID build() => _build();

  _$GEpicID _build() {
    final _$result = _$v ??
        new _$GEpicID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GEpicID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GEpicMoveListInput extends GEpicMoveListInput {
  @override
  final String? clientMutationId;
  @override
  final GBoardsEpicBoardID boardId;
  @override
  final GEpicID epicId;
  @override
  final GBoardsEpicListID? fromListId;
  @override
  final GBoardsEpicListID toListId;
  @override
  final GEpicID? moveBeforeId;
  @override
  final GEpicID? moveAfterId;

  factory _$GEpicMoveListInput(
          [void Function(GEpicMoveListInputBuilder)? updates]) =>
      (new GEpicMoveListInputBuilder()..update(updates))._build();

  _$GEpicMoveListInput._(
      {this.clientMutationId,
      required this.boardId,
      required this.epicId,
      this.fromListId,
      required this.toListId,
      this.moveBeforeId,
      this.moveAfterId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        boardId, r'GEpicMoveListInput', 'boardId');
    BuiltValueNullFieldError.checkNotNull(
        epicId, r'GEpicMoveListInput', 'epicId');
    BuiltValueNullFieldError.checkNotNull(
        toListId, r'GEpicMoveListInput', 'toListId');
  }

  @override
  GEpicMoveListInput rebuild(
          void Function(GEpicMoveListInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicMoveListInputBuilder toBuilder() =>
      new GEpicMoveListInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicMoveListInput &&
        clientMutationId == other.clientMutationId &&
        boardId == other.boardId &&
        epicId == other.epicId &&
        fromListId == other.fromListId &&
        toListId == other.toListId &&
        moveBeforeId == other.moveBeforeId &&
        moveAfterId == other.moveAfterId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, clientMutationId.hashCode),
                            boardId.hashCode),
                        epicId.hashCode),
                    fromListId.hashCode),
                toListId.hashCode),
            moveBeforeId.hashCode),
        moveAfterId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicMoveListInput')
          ..add('clientMutationId', clientMutationId)
          ..add('boardId', boardId)
          ..add('epicId', epicId)
          ..add('fromListId', fromListId)
          ..add('toListId', toListId)
          ..add('moveBeforeId', moveBeforeId)
          ..add('moveAfterId', moveAfterId))
        .toString();
  }
}

class GEpicMoveListInputBuilder
    implements Builder<GEpicMoveListInput, GEpicMoveListInputBuilder> {
  _$GEpicMoveListInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GBoardsEpicBoardIDBuilder? _boardId;
  GBoardsEpicBoardIDBuilder get boardId =>
      _$this._boardId ??= new GBoardsEpicBoardIDBuilder();
  set boardId(GBoardsEpicBoardIDBuilder? boardId) => _$this._boardId = boardId;

  GEpicIDBuilder? _epicId;
  GEpicIDBuilder get epicId => _$this._epicId ??= new GEpicIDBuilder();
  set epicId(GEpicIDBuilder? epicId) => _$this._epicId = epicId;

  GBoardsEpicListIDBuilder? _fromListId;
  GBoardsEpicListIDBuilder get fromListId =>
      _$this._fromListId ??= new GBoardsEpicListIDBuilder();
  set fromListId(GBoardsEpicListIDBuilder? fromListId) =>
      _$this._fromListId = fromListId;

  GBoardsEpicListIDBuilder? _toListId;
  GBoardsEpicListIDBuilder get toListId =>
      _$this._toListId ??= new GBoardsEpicListIDBuilder();
  set toListId(GBoardsEpicListIDBuilder? toListId) =>
      _$this._toListId = toListId;

  GEpicIDBuilder? _moveBeforeId;
  GEpicIDBuilder get moveBeforeId =>
      _$this._moveBeforeId ??= new GEpicIDBuilder();
  set moveBeforeId(GEpicIDBuilder? moveBeforeId) =>
      _$this._moveBeforeId = moveBeforeId;

  GEpicIDBuilder? _moveAfterId;
  GEpicIDBuilder get moveAfterId =>
      _$this._moveAfterId ??= new GEpicIDBuilder();
  set moveAfterId(GEpicIDBuilder? moveAfterId) =>
      _$this._moveAfterId = moveAfterId;

  GEpicMoveListInputBuilder();

  GEpicMoveListInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _boardId = $v.boardId.toBuilder();
      _epicId = $v.epicId.toBuilder();
      _fromListId = $v.fromListId?.toBuilder();
      _toListId = $v.toListId.toBuilder();
      _moveBeforeId = $v.moveBeforeId?.toBuilder();
      _moveAfterId = $v.moveAfterId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicMoveListInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicMoveListInput;
  }

  @override
  void update(void Function(GEpicMoveListInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicMoveListInput build() => _build();

  _$GEpicMoveListInput _build() {
    _$GEpicMoveListInput _$result;
    try {
      _$result = _$v ??
          new _$GEpicMoveListInput._(
              clientMutationId: clientMutationId,
              boardId: boardId.build(),
              epicId: epicId.build(),
              fromListId: _fromListId?.build(),
              toListId: toListId.build(),
              moveBeforeId: _moveBeforeId?.build(),
              moveAfterId: _moveAfterId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'boardId';
        boardId.build();
        _$failedField = 'epicId';
        epicId.build();
        _$failedField = 'fromListId';
        _fromListId?.build();
        _$failedField = 'toListId';
        toListId.build();
        _$failedField = 'moveBeforeId';
        _moveBeforeId?.build();
        _$failedField = 'moveAfterId';
        _moveAfterId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEpicMoveListInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEpicSetSubscriptionInput extends GEpicSetSubscriptionInput {
  @override
  final String iid;
  @override
  final String groupPath;
  @override
  final String? clientMutationId;
  @override
  final bool subscribedState;

  factory _$GEpicSetSubscriptionInput(
          [void Function(GEpicSetSubscriptionInputBuilder)? updates]) =>
      (new GEpicSetSubscriptionInputBuilder()..update(updates))._build();

  _$GEpicSetSubscriptionInput._(
      {required this.iid,
      required this.groupPath,
      this.clientMutationId,
      required this.subscribedState})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GEpicSetSubscriptionInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        groupPath, r'GEpicSetSubscriptionInput', 'groupPath');
    BuiltValueNullFieldError.checkNotNull(
        subscribedState, r'GEpicSetSubscriptionInput', 'subscribedState');
  }

  @override
  GEpicSetSubscriptionInput rebuild(
          void Function(GEpicSetSubscriptionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicSetSubscriptionInputBuilder toBuilder() =>
      new GEpicSetSubscriptionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicSetSubscriptionInput &&
        iid == other.iid &&
        groupPath == other.groupPath &&
        clientMutationId == other.clientMutationId &&
        subscribedState == other.subscribedState;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, iid.hashCode), groupPath.hashCode),
            clientMutationId.hashCode),
        subscribedState.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicSetSubscriptionInput')
          ..add('iid', iid)
          ..add('groupPath', groupPath)
          ..add('clientMutationId', clientMutationId)
          ..add('subscribedState', subscribedState))
        .toString();
  }
}

class GEpicSetSubscriptionInputBuilder
    implements
        Builder<GEpicSetSubscriptionInput, GEpicSetSubscriptionInputBuilder> {
  _$GEpicSetSubscriptionInput? _$v;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  bool? _subscribedState;
  bool? get subscribedState => _$this._subscribedState;
  set subscribedState(bool? subscribedState) =>
      _$this._subscribedState = subscribedState;

  GEpicSetSubscriptionInputBuilder();

  GEpicSetSubscriptionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _iid = $v.iid;
      _groupPath = $v.groupPath;
      _clientMutationId = $v.clientMutationId;
      _subscribedState = $v.subscribedState;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicSetSubscriptionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicSetSubscriptionInput;
  }

  @override
  void update(void Function(GEpicSetSubscriptionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicSetSubscriptionInput build() => _build();

  _$GEpicSetSubscriptionInput _build() {
    final _$result = _$v ??
        new _$GEpicSetSubscriptionInput._(
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GEpicSetSubscriptionInput', 'iid'),
            groupPath: BuiltValueNullFieldError.checkNotNull(
                groupPath, r'GEpicSetSubscriptionInput', 'groupPath'),
            clientMutationId: clientMutationId,
            subscribedState: BuiltValueNullFieldError.checkNotNull(
                subscribedState,
                r'GEpicSetSubscriptionInput',
                'subscribedState'));
    replace(_$result);
    return _$result;
  }
}

class _$GEpicTreeNodeFieldsInputType extends GEpicTreeNodeFieldsInputType {
  @override
  final GEpicTreeSortingID id;
  @override
  final GEpicTreeSortingID? adjacentReferenceId;
  @override
  final GMoveType? relativePosition;
  @override
  final GEpicID? newParentId;

  factory _$GEpicTreeNodeFieldsInputType(
          [void Function(GEpicTreeNodeFieldsInputTypeBuilder)? updates]) =>
      (new GEpicTreeNodeFieldsInputTypeBuilder()..update(updates))._build();

  _$GEpicTreeNodeFieldsInputType._(
      {required this.id,
      this.adjacentReferenceId,
      this.relativePosition,
      this.newParentId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GEpicTreeNodeFieldsInputType', 'id');
  }

  @override
  GEpicTreeNodeFieldsInputType rebuild(
          void Function(GEpicTreeNodeFieldsInputTypeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicTreeNodeFieldsInputTypeBuilder toBuilder() =>
      new GEpicTreeNodeFieldsInputTypeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicTreeNodeFieldsInputType &&
        id == other.id &&
        adjacentReferenceId == other.adjacentReferenceId &&
        relativePosition == other.relativePosition &&
        newParentId == other.newParentId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, id.hashCode), adjacentReferenceId.hashCode),
            relativePosition.hashCode),
        newParentId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicTreeNodeFieldsInputType')
          ..add('id', id)
          ..add('adjacentReferenceId', adjacentReferenceId)
          ..add('relativePosition', relativePosition)
          ..add('newParentId', newParentId))
        .toString();
  }
}

class GEpicTreeNodeFieldsInputTypeBuilder
    implements
        Builder<GEpicTreeNodeFieldsInputType,
            GEpicTreeNodeFieldsInputTypeBuilder> {
  _$GEpicTreeNodeFieldsInputType? _$v;

  GEpicTreeSortingIDBuilder? _id;
  GEpicTreeSortingIDBuilder get id =>
      _$this._id ??= new GEpicTreeSortingIDBuilder();
  set id(GEpicTreeSortingIDBuilder? id) => _$this._id = id;

  GEpicTreeSortingIDBuilder? _adjacentReferenceId;
  GEpicTreeSortingIDBuilder get adjacentReferenceId =>
      _$this._adjacentReferenceId ??= new GEpicTreeSortingIDBuilder();
  set adjacentReferenceId(GEpicTreeSortingIDBuilder? adjacentReferenceId) =>
      _$this._adjacentReferenceId = adjacentReferenceId;

  GMoveType? _relativePosition;
  GMoveType? get relativePosition => _$this._relativePosition;
  set relativePosition(GMoveType? relativePosition) =>
      _$this._relativePosition = relativePosition;

  GEpicIDBuilder? _newParentId;
  GEpicIDBuilder get newParentId =>
      _$this._newParentId ??= new GEpicIDBuilder();
  set newParentId(GEpicIDBuilder? newParentId) =>
      _$this._newParentId = newParentId;

  GEpicTreeNodeFieldsInputTypeBuilder();

  GEpicTreeNodeFieldsInputTypeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _adjacentReferenceId = $v.adjacentReferenceId?.toBuilder();
      _relativePosition = $v.relativePosition;
      _newParentId = $v.newParentId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicTreeNodeFieldsInputType other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicTreeNodeFieldsInputType;
  }

  @override
  void update(void Function(GEpicTreeNodeFieldsInputTypeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicTreeNodeFieldsInputType build() => _build();

  _$GEpicTreeNodeFieldsInputType _build() {
    _$GEpicTreeNodeFieldsInputType _$result;
    try {
      _$result = _$v ??
          new _$GEpicTreeNodeFieldsInputType._(
              id: id.build(),
              adjacentReferenceId: _adjacentReferenceId?.build(),
              relativePosition: relativePosition,
              newParentId: _newParentId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
        _$failedField = 'adjacentReferenceId';
        _adjacentReferenceId?.build();

        _$failedField = 'newParentId';
        _newParentId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEpicTreeNodeFieldsInputType', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEpicTreeReorderInput extends GEpicTreeReorderInput {
  @override
  final String? clientMutationId;
  @override
  final GEpicID baseEpicId;
  @override
  final GEpicTreeNodeFieldsInputType moved;

  factory _$GEpicTreeReorderInput(
          [void Function(GEpicTreeReorderInputBuilder)? updates]) =>
      (new GEpicTreeReorderInputBuilder()..update(updates))._build();

  _$GEpicTreeReorderInput._(
      {this.clientMutationId, required this.baseEpicId, required this.moved})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        baseEpicId, r'GEpicTreeReorderInput', 'baseEpicId');
    BuiltValueNullFieldError.checkNotNull(
        moved, r'GEpicTreeReorderInput', 'moved');
  }

  @override
  GEpicTreeReorderInput rebuild(
          void Function(GEpicTreeReorderInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicTreeReorderInputBuilder toBuilder() =>
      new GEpicTreeReorderInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicTreeReorderInput &&
        clientMutationId == other.clientMutationId &&
        baseEpicId == other.baseEpicId &&
        moved == other.moved;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), baseEpicId.hashCode),
        moved.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicTreeReorderInput')
          ..add('clientMutationId', clientMutationId)
          ..add('baseEpicId', baseEpicId)
          ..add('moved', moved))
        .toString();
  }
}

class GEpicTreeReorderInputBuilder
    implements Builder<GEpicTreeReorderInput, GEpicTreeReorderInputBuilder> {
  _$GEpicTreeReorderInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GEpicIDBuilder? _baseEpicId;
  GEpicIDBuilder get baseEpicId => _$this._baseEpicId ??= new GEpicIDBuilder();
  set baseEpicId(GEpicIDBuilder? baseEpicId) => _$this._baseEpicId = baseEpicId;

  GEpicTreeNodeFieldsInputTypeBuilder? _moved;
  GEpicTreeNodeFieldsInputTypeBuilder get moved =>
      _$this._moved ??= new GEpicTreeNodeFieldsInputTypeBuilder();
  set moved(GEpicTreeNodeFieldsInputTypeBuilder? moved) =>
      _$this._moved = moved;

  GEpicTreeReorderInputBuilder();

  GEpicTreeReorderInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _baseEpicId = $v.baseEpicId.toBuilder();
      _moved = $v.moved.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicTreeReorderInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicTreeReorderInput;
  }

  @override
  void update(void Function(GEpicTreeReorderInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicTreeReorderInput build() => _build();

  _$GEpicTreeReorderInput _build() {
    _$GEpicTreeReorderInput _$result;
    try {
      _$result = _$v ??
          new _$GEpicTreeReorderInput._(
              clientMutationId: clientMutationId,
              baseEpicId: baseEpicId.build(),
              moved: moved.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'baseEpicId';
        baseEpicId.build();
        _$failedField = 'moved';
        moved.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEpicTreeReorderInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEpicTreeSortingID extends GEpicTreeSortingID {
  @override
  final String value;

  factory _$GEpicTreeSortingID(
          [void Function(GEpicTreeSortingIDBuilder)? updates]) =>
      (new GEpicTreeSortingIDBuilder()..update(updates))._build();

  _$GEpicTreeSortingID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GEpicTreeSortingID', 'value');
  }

  @override
  GEpicTreeSortingID rebuild(
          void Function(GEpicTreeSortingIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpicTreeSortingIDBuilder toBuilder() =>
      new GEpicTreeSortingIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpicTreeSortingID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpicTreeSortingID')
          ..add('value', value))
        .toString();
  }
}

class GEpicTreeSortingIDBuilder
    implements Builder<GEpicTreeSortingID, GEpicTreeSortingIDBuilder> {
  _$GEpicTreeSortingID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GEpicTreeSortingIDBuilder();

  GEpicTreeSortingIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpicTreeSortingID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpicTreeSortingID;
  }

  @override
  void update(void Function(GEpicTreeSortingIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpicTreeSortingID build() => _build();

  _$GEpicTreeSortingID _build() {
    final _$result = _$v ??
        new _$GEpicTreeSortingID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GEpicTreeSortingID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GEscalationPolicyCreateInput extends GEscalationPolicyCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String name;
  @override
  final String? description;
  @override
  final BuiltList<GEscalationRuleInput> rules;

  factory _$GEscalationPolicyCreateInput(
          [void Function(GEscalationPolicyCreateInputBuilder)? updates]) =>
      (new GEscalationPolicyCreateInputBuilder()..update(updates))._build();

  _$GEscalationPolicyCreateInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.name,
      this.description,
      required this.rules})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GEscalationPolicyCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GEscalationPolicyCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        rules, r'GEscalationPolicyCreateInput', 'rules');
  }

  @override
  GEscalationPolicyCreateInput rebuild(
          void Function(GEscalationPolicyCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEscalationPolicyCreateInputBuilder toBuilder() =>
      new GEscalationPolicyCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEscalationPolicyCreateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        name == other.name &&
        description == other.description &&
        rules == other.rules;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
                name.hashCode),
            description.hashCode),
        rules.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEscalationPolicyCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('name', name)
          ..add('description', description)
          ..add('rules', rules))
        .toString();
  }
}

class GEscalationPolicyCreateInputBuilder
    implements
        Builder<GEscalationPolicyCreateInput,
            GEscalationPolicyCreateInputBuilder> {
  _$GEscalationPolicyCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  ListBuilder<GEscalationRuleInput>? _rules;
  ListBuilder<GEscalationRuleInput> get rules =>
      _$this._rules ??= new ListBuilder<GEscalationRuleInput>();
  set rules(ListBuilder<GEscalationRuleInput>? rules) => _$this._rules = rules;

  GEscalationPolicyCreateInputBuilder();

  GEscalationPolicyCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _name = $v.name;
      _description = $v.description;
      _rules = $v.rules.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEscalationPolicyCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEscalationPolicyCreateInput;
  }

  @override
  void update(void Function(GEscalationPolicyCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEscalationPolicyCreateInput build() => _build();

  _$GEscalationPolicyCreateInput _build() {
    _$GEscalationPolicyCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GEscalationPolicyCreateInput._(
              clientMutationId: clientMutationId,
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GEscalationPolicyCreateInput', 'projectPath'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GEscalationPolicyCreateInput', 'name'),
              description: description,
              rules: rules.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'rules';
        rules.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEscalationPolicyCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEscalationPolicyDestroyInput extends GEscalationPolicyDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GIncidentManagementEscalationPolicyID id;

  factory _$GEscalationPolicyDestroyInput(
          [void Function(GEscalationPolicyDestroyInputBuilder)? updates]) =>
      (new GEscalationPolicyDestroyInputBuilder()..update(updates))._build();

  _$GEscalationPolicyDestroyInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GEscalationPolicyDestroyInput', 'id');
  }

  @override
  GEscalationPolicyDestroyInput rebuild(
          void Function(GEscalationPolicyDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEscalationPolicyDestroyInputBuilder toBuilder() =>
      new GEscalationPolicyDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEscalationPolicyDestroyInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEscalationPolicyDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GEscalationPolicyDestroyInputBuilder
    implements
        Builder<GEscalationPolicyDestroyInput,
            GEscalationPolicyDestroyInputBuilder> {
  _$GEscalationPolicyDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIncidentManagementEscalationPolicyIDBuilder? _id;
  GIncidentManagementEscalationPolicyIDBuilder get id =>
      _$this._id ??= new GIncidentManagementEscalationPolicyIDBuilder();
  set id(GIncidentManagementEscalationPolicyIDBuilder? id) => _$this._id = id;

  GEscalationPolicyDestroyInputBuilder();

  GEscalationPolicyDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEscalationPolicyDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEscalationPolicyDestroyInput;
  }

  @override
  void update(void Function(GEscalationPolicyDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEscalationPolicyDestroyInput build() => _build();

  _$GEscalationPolicyDestroyInput _build() {
    _$GEscalationPolicyDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GEscalationPolicyDestroyInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEscalationPolicyDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEscalationPolicyUpdateInput extends GEscalationPolicyUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GIncidentManagementEscalationPolicyID id;
  @override
  final String? name;
  @override
  final String? description;
  @override
  final BuiltList<GEscalationRuleInput>? rules;

  factory _$GEscalationPolicyUpdateInput(
          [void Function(GEscalationPolicyUpdateInputBuilder)? updates]) =>
      (new GEscalationPolicyUpdateInputBuilder()..update(updates))._build();

  _$GEscalationPolicyUpdateInput._(
      {this.clientMutationId,
      required this.id,
      this.name,
      this.description,
      this.rules})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GEscalationPolicyUpdateInput', 'id');
  }

  @override
  GEscalationPolicyUpdateInput rebuild(
          void Function(GEscalationPolicyUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEscalationPolicyUpdateInputBuilder toBuilder() =>
      new GEscalationPolicyUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEscalationPolicyUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        name == other.name &&
        description == other.description &&
        rules == other.rules;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
                name.hashCode),
            description.hashCode),
        rules.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEscalationPolicyUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('name', name)
          ..add('description', description)
          ..add('rules', rules))
        .toString();
  }
}

class GEscalationPolicyUpdateInputBuilder
    implements
        Builder<GEscalationPolicyUpdateInput,
            GEscalationPolicyUpdateInputBuilder> {
  _$GEscalationPolicyUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIncidentManagementEscalationPolicyIDBuilder? _id;
  GIncidentManagementEscalationPolicyIDBuilder get id =>
      _$this._id ??= new GIncidentManagementEscalationPolicyIDBuilder();
  set id(GIncidentManagementEscalationPolicyIDBuilder? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  ListBuilder<GEscalationRuleInput>? _rules;
  ListBuilder<GEscalationRuleInput> get rules =>
      _$this._rules ??= new ListBuilder<GEscalationRuleInput>();
  set rules(ListBuilder<GEscalationRuleInput>? rules) => _$this._rules = rules;

  GEscalationPolicyUpdateInputBuilder();

  GEscalationPolicyUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _name = $v.name;
      _description = $v.description;
      _rules = $v.rules?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEscalationPolicyUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEscalationPolicyUpdateInput;
  }

  @override
  void update(void Function(GEscalationPolicyUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEscalationPolicyUpdateInput build() => _build();

  _$GEscalationPolicyUpdateInput _build() {
    _$GEscalationPolicyUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GEscalationPolicyUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              name: name,
              description: description,
              rules: _rules?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'rules';
        _rules?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GEscalationPolicyUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEscalationRuleInput extends GEscalationRuleInput {
  @override
  final String? oncallScheduleIid;
  @override
  final String? username;
  @override
  final int elapsedTimeSeconds;
  @override
  final GEscalationRuleStatus status;

  factory _$GEscalationRuleInput(
          [void Function(GEscalationRuleInputBuilder)? updates]) =>
      (new GEscalationRuleInputBuilder()..update(updates))._build();

  _$GEscalationRuleInput._(
      {this.oncallScheduleIid,
      this.username,
      required this.elapsedTimeSeconds,
      required this.status})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        elapsedTimeSeconds, r'GEscalationRuleInput', 'elapsedTimeSeconds');
    BuiltValueNullFieldError.checkNotNull(
        status, r'GEscalationRuleInput', 'status');
  }

  @override
  GEscalationRuleInput rebuild(
          void Function(GEscalationRuleInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEscalationRuleInputBuilder toBuilder() =>
      new GEscalationRuleInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEscalationRuleInput &&
        oncallScheduleIid == other.oncallScheduleIid &&
        username == other.username &&
        elapsedTimeSeconds == other.elapsedTimeSeconds &&
        status == other.status;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, oncallScheduleIid.hashCode), username.hashCode),
            elapsedTimeSeconds.hashCode),
        status.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEscalationRuleInput')
          ..add('oncallScheduleIid', oncallScheduleIid)
          ..add('username', username)
          ..add('elapsedTimeSeconds', elapsedTimeSeconds)
          ..add('status', status))
        .toString();
  }
}

class GEscalationRuleInputBuilder
    implements Builder<GEscalationRuleInput, GEscalationRuleInputBuilder> {
  _$GEscalationRuleInput? _$v;

  String? _oncallScheduleIid;
  String? get oncallScheduleIid => _$this._oncallScheduleIid;
  set oncallScheduleIid(String? oncallScheduleIid) =>
      _$this._oncallScheduleIid = oncallScheduleIid;

  String? _username;
  String? get username => _$this._username;
  set username(String? username) => _$this._username = username;

  int? _elapsedTimeSeconds;
  int? get elapsedTimeSeconds => _$this._elapsedTimeSeconds;
  set elapsedTimeSeconds(int? elapsedTimeSeconds) =>
      _$this._elapsedTimeSeconds = elapsedTimeSeconds;

  GEscalationRuleStatus? _status;
  GEscalationRuleStatus? get status => _$this._status;
  set status(GEscalationRuleStatus? status) => _$this._status = status;

  GEscalationRuleInputBuilder();

  GEscalationRuleInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _oncallScheduleIid = $v.oncallScheduleIid;
      _username = $v.username;
      _elapsedTimeSeconds = $v.elapsedTimeSeconds;
      _status = $v.status;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEscalationRuleInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEscalationRuleInput;
  }

  @override
  void update(void Function(GEscalationRuleInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEscalationRuleInput build() => _build();

  _$GEscalationRuleInput _build() {
    final _$result = _$v ??
        new _$GEscalationRuleInput._(
            oncallScheduleIid: oncallScheduleIid,
            username: username,
            elapsedTimeSeconds: BuiltValueNullFieldError.checkNotNull(
                elapsedTimeSeconds,
                r'GEscalationRuleInput',
                'elapsedTimeSeconds'),
            status: BuiltValueNullFieldError.checkNotNull(
                status, r'GEscalationRuleInput', 'status'));
    replace(_$result);
    return _$result;
  }
}

class _$GExportRequirementsInput extends GExportRequirementsInput {
  @override
  final String? clientMutationId;
  @override
  final GSort? sort;
  @override
  final GRequirementState? state;
  @override
  final String? search;
  @override
  final BuiltList<String>? authorUsername;
  @override
  final String projectPath;
  @override
  final BuiltList<String>? selectedFields;

  factory _$GExportRequirementsInput(
          [void Function(GExportRequirementsInputBuilder)? updates]) =>
      (new GExportRequirementsInputBuilder()..update(updates))._build();

  _$GExportRequirementsInput._(
      {this.clientMutationId,
      this.sort,
      this.state,
      this.search,
      this.authorUsername,
      required this.projectPath,
      this.selectedFields})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GExportRequirementsInput', 'projectPath');
  }

  @override
  GExportRequirementsInput rebuild(
          void Function(GExportRequirementsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExportRequirementsInputBuilder toBuilder() =>
      new GExportRequirementsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExportRequirementsInput &&
        clientMutationId == other.clientMutationId &&
        sort == other.sort &&
        state == other.state &&
        search == other.search &&
        authorUsername == other.authorUsername &&
        projectPath == other.projectPath &&
        selectedFields == other.selectedFields;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, clientMutationId.hashCode), sort.hashCode),
                        state.hashCode),
                    search.hashCode),
                authorUsername.hashCode),
            projectPath.hashCode),
        selectedFields.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExportRequirementsInput')
          ..add('clientMutationId', clientMutationId)
          ..add('sort', sort)
          ..add('state', state)
          ..add('search', search)
          ..add('authorUsername', authorUsername)
          ..add('projectPath', projectPath)
          ..add('selectedFields', selectedFields))
        .toString();
  }
}

class GExportRequirementsInputBuilder
    implements
        Builder<GExportRequirementsInput, GExportRequirementsInputBuilder> {
  _$GExportRequirementsInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GSort? _sort;
  GSort? get sort => _$this._sort;
  set sort(GSort? sort) => _$this._sort = sort;

  GRequirementState? _state;
  GRequirementState? get state => _$this._state;
  set state(GRequirementState? state) => _$this._state = state;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<String>? _authorUsername;
  ListBuilder<String> get authorUsername =>
      _$this._authorUsername ??= new ListBuilder<String>();
  set authorUsername(ListBuilder<String>? authorUsername) =>
      _$this._authorUsername = authorUsername;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  ListBuilder<String>? _selectedFields;
  ListBuilder<String> get selectedFields =>
      _$this._selectedFields ??= new ListBuilder<String>();
  set selectedFields(ListBuilder<String>? selectedFields) =>
      _$this._selectedFields = selectedFields;

  GExportRequirementsInputBuilder();

  GExportRequirementsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _sort = $v.sort;
      _state = $v.state;
      _search = $v.search;
      _authorUsername = $v.authorUsername?.toBuilder();
      _projectPath = $v.projectPath;
      _selectedFields = $v.selectedFields?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExportRequirementsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExportRequirementsInput;
  }

  @override
  void update(void Function(GExportRequirementsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExportRequirementsInput build() => _build();

  _$GExportRequirementsInput _build() {
    _$GExportRequirementsInput _$result;
    try {
      _$result = _$v ??
          new _$GExportRequirementsInput._(
              clientMutationId: clientMutationId,
              sort: sort,
              state: state,
              search: search,
              authorUsername: _authorUsername?.build(),
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GExportRequirementsInput', 'projectPath'),
              selectedFields: _selectedFields?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'authorUsername';
        _authorUsername?.build();

        _$failedField = 'selectedFields';
        _selectedFields?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExportRequirementsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExternalAuditEventDestinationCreateInput
    extends GExternalAuditEventDestinationCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String destinationUrl;
  @override
  final String groupPath;
  @override
  final String? verificationToken;

  factory _$GExternalAuditEventDestinationCreateInput(
          [void Function(GExternalAuditEventDestinationCreateInputBuilder)?
              updates]) =>
      (new GExternalAuditEventDestinationCreateInputBuilder()..update(updates))
          ._build();

  _$GExternalAuditEventDestinationCreateInput._(
      {this.clientMutationId,
      required this.destinationUrl,
      required this.groupPath,
      this.verificationToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(destinationUrl,
        r'GExternalAuditEventDestinationCreateInput', 'destinationUrl');
    BuiltValueNullFieldError.checkNotNull(
        groupPath, r'GExternalAuditEventDestinationCreateInput', 'groupPath');
  }

  @override
  GExternalAuditEventDestinationCreateInput rebuild(
          void Function(GExternalAuditEventDestinationCreateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExternalAuditEventDestinationCreateInputBuilder toBuilder() =>
      new GExternalAuditEventDestinationCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExternalAuditEventDestinationCreateInput &&
        clientMutationId == other.clientMutationId &&
        destinationUrl == other.destinationUrl &&
        groupPath == other.groupPath &&
        verificationToken == other.verificationToken;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), destinationUrl.hashCode),
            groupPath.hashCode),
        verificationToken.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GExternalAuditEventDestinationCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('destinationUrl', destinationUrl)
          ..add('groupPath', groupPath)
          ..add('verificationToken', verificationToken))
        .toString();
  }
}

class GExternalAuditEventDestinationCreateInputBuilder
    implements
        Builder<GExternalAuditEventDestinationCreateInput,
            GExternalAuditEventDestinationCreateInputBuilder> {
  _$GExternalAuditEventDestinationCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _destinationUrl;
  String? get destinationUrl => _$this._destinationUrl;
  set destinationUrl(String? destinationUrl) =>
      _$this._destinationUrl = destinationUrl;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _verificationToken;
  String? get verificationToken => _$this._verificationToken;
  set verificationToken(String? verificationToken) =>
      _$this._verificationToken = verificationToken;

  GExternalAuditEventDestinationCreateInputBuilder();

  GExternalAuditEventDestinationCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _destinationUrl = $v.destinationUrl;
      _groupPath = $v.groupPath;
      _verificationToken = $v.verificationToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExternalAuditEventDestinationCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExternalAuditEventDestinationCreateInput;
  }

  @override
  void update(
      void Function(GExternalAuditEventDestinationCreateInputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GExternalAuditEventDestinationCreateInput build() => _build();

  _$GExternalAuditEventDestinationCreateInput _build() {
    final _$result = _$v ??
        new _$GExternalAuditEventDestinationCreateInput._(
            clientMutationId: clientMutationId,
            destinationUrl: BuiltValueNullFieldError.checkNotNull(
                destinationUrl,
                r'GExternalAuditEventDestinationCreateInput',
                'destinationUrl'),
            groupPath: BuiltValueNullFieldError.checkNotNull(groupPath,
                r'GExternalAuditEventDestinationCreateInput', 'groupPath'),
            verificationToken: verificationToken);
    replace(_$result);
    return _$result;
  }
}

class _$GExternalAuditEventDestinationDestroyInput
    extends GExternalAuditEventDestinationDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GAuditEventsExternalAuditEventDestinationID id;

  factory _$GExternalAuditEventDestinationDestroyInput(
          [void Function(GExternalAuditEventDestinationDestroyInputBuilder)?
              updates]) =>
      (new GExternalAuditEventDestinationDestroyInputBuilder()..update(updates))
          ._build();

  _$GExternalAuditEventDestinationDestroyInput._(
      {this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExternalAuditEventDestinationDestroyInput', 'id');
  }

  @override
  GExternalAuditEventDestinationDestroyInput rebuild(
          void Function(GExternalAuditEventDestinationDestroyInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExternalAuditEventDestinationDestroyInputBuilder toBuilder() =>
      new GExternalAuditEventDestinationDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExternalAuditEventDestinationDestroyInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GExternalAuditEventDestinationDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GExternalAuditEventDestinationDestroyInputBuilder
    implements
        Builder<GExternalAuditEventDestinationDestroyInput,
            GExternalAuditEventDestinationDestroyInputBuilder> {
  _$GExternalAuditEventDestinationDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAuditEventsExternalAuditEventDestinationIDBuilder? _id;
  GAuditEventsExternalAuditEventDestinationIDBuilder get id =>
      _$this._id ??= new GAuditEventsExternalAuditEventDestinationIDBuilder();
  set id(GAuditEventsExternalAuditEventDestinationIDBuilder? id) =>
      _$this._id = id;

  GExternalAuditEventDestinationDestroyInputBuilder();

  GExternalAuditEventDestinationDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExternalAuditEventDestinationDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExternalAuditEventDestinationDestroyInput;
  }

  @override
  void update(
      void Function(GExternalAuditEventDestinationDestroyInputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GExternalAuditEventDestinationDestroyInput build() => _build();

  _$GExternalAuditEventDestinationDestroyInput _build() {
    _$GExternalAuditEventDestinationDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GExternalAuditEventDestinationDestroyInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExternalAuditEventDestinationDestroyInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExternalAuditEventDestinationUpdateInput
    extends GExternalAuditEventDestinationUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GAuditEventsExternalAuditEventDestinationID id;
  @override
  final String? destinationUrl;

  factory _$GExternalAuditEventDestinationUpdateInput(
          [void Function(GExternalAuditEventDestinationUpdateInputBuilder)?
              updates]) =>
      (new GExternalAuditEventDestinationUpdateInputBuilder()..update(updates))
          ._build();

  _$GExternalAuditEventDestinationUpdateInput._(
      {this.clientMutationId, required this.id, this.destinationUrl})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GExternalAuditEventDestinationUpdateInput', 'id');
  }

  @override
  GExternalAuditEventDestinationUpdateInput rebuild(
          void Function(GExternalAuditEventDestinationUpdateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExternalAuditEventDestinationUpdateInputBuilder toBuilder() =>
      new GExternalAuditEventDestinationUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExternalAuditEventDestinationUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        destinationUrl == other.destinationUrl;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
        destinationUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GExternalAuditEventDestinationUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('destinationUrl', destinationUrl))
        .toString();
  }
}

class GExternalAuditEventDestinationUpdateInputBuilder
    implements
        Builder<GExternalAuditEventDestinationUpdateInput,
            GExternalAuditEventDestinationUpdateInputBuilder> {
  _$GExternalAuditEventDestinationUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAuditEventsExternalAuditEventDestinationIDBuilder? _id;
  GAuditEventsExternalAuditEventDestinationIDBuilder get id =>
      _$this._id ??= new GAuditEventsExternalAuditEventDestinationIDBuilder();
  set id(GAuditEventsExternalAuditEventDestinationIDBuilder? id) =>
      _$this._id = id;

  String? _destinationUrl;
  String? get destinationUrl => _$this._destinationUrl;
  set destinationUrl(String? destinationUrl) =>
      _$this._destinationUrl = destinationUrl;

  GExternalAuditEventDestinationUpdateInputBuilder();

  GExternalAuditEventDestinationUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _destinationUrl = $v.destinationUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExternalAuditEventDestinationUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExternalAuditEventDestinationUpdateInput;
  }

  @override
  void update(
      void Function(GExternalAuditEventDestinationUpdateInputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GExternalAuditEventDestinationUpdateInput build() => _build();

  _$GExternalAuditEventDestinationUpdateInput _build() {
    _$GExternalAuditEventDestinationUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GExternalAuditEventDestinationUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              destinationUrl: destinationUrl);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExternalAuditEventDestinationUpdateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGitlabErrorTrackingDetailedErrorID
    extends GGitlabErrorTrackingDetailedErrorID {
  @override
  final String value;

  factory _$GGitlabErrorTrackingDetailedErrorID(
          [void Function(GGitlabErrorTrackingDetailedErrorIDBuilder)?
              updates]) =>
      (new GGitlabErrorTrackingDetailedErrorIDBuilder()..update(updates))
          ._build();

  _$GGitlabErrorTrackingDetailedErrorID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GGitlabErrorTrackingDetailedErrorID', 'value');
  }

  @override
  GGitlabErrorTrackingDetailedErrorID rebuild(
          void Function(GGitlabErrorTrackingDetailedErrorIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGitlabErrorTrackingDetailedErrorIDBuilder toBuilder() =>
      new GGitlabErrorTrackingDetailedErrorIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGitlabErrorTrackingDetailedErrorID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGitlabErrorTrackingDetailedErrorID')
          ..add('value', value))
        .toString();
  }
}

class GGitlabErrorTrackingDetailedErrorIDBuilder
    implements
        Builder<GGitlabErrorTrackingDetailedErrorID,
            GGitlabErrorTrackingDetailedErrorIDBuilder> {
  _$GGitlabErrorTrackingDetailedErrorID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GGitlabErrorTrackingDetailedErrorIDBuilder();

  GGitlabErrorTrackingDetailedErrorIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGitlabErrorTrackingDetailedErrorID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGitlabErrorTrackingDetailedErrorID;
  }

  @override
  void update(
      void Function(GGitlabErrorTrackingDetailedErrorIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGitlabErrorTrackingDetailedErrorID build() => _build();

  _$GGitlabErrorTrackingDetailedErrorID _build() {
    final _$result = _$v ??
        new _$GGitlabErrorTrackingDetailedErrorID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GGitlabErrorTrackingDetailedErrorID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GGitlabSubscriptionActivateInput
    extends GGitlabSubscriptionActivateInput {
  @override
  final String? clientMutationId;
  @override
  final String activationCode;

  factory _$GGitlabSubscriptionActivateInput(
          [void Function(GGitlabSubscriptionActivateInputBuilder)? updates]) =>
      (new GGitlabSubscriptionActivateInputBuilder()..update(updates))._build();

  _$GGitlabSubscriptionActivateInput._(
      {this.clientMutationId, required this.activationCode})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        activationCode, r'GGitlabSubscriptionActivateInput', 'activationCode');
  }

  @override
  GGitlabSubscriptionActivateInput rebuild(
          void Function(GGitlabSubscriptionActivateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGitlabSubscriptionActivateInputBuilder toBuilder() =>
      new GGitlabSubscriptionActivateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGitlabSubscriptionActivateInput &&
        clientMutationId == other.clientMutationId &&
        activationCode == other.activationCode;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), activationCode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGitlabSubscriptionActivateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('activationCode', activationCode))
        .toString();
  }
}

class GGitlabSubscriptionActivateInputBuilder
    implements
        Builder<GGitlabSubscriptionActivateInput,
            GGitlabSubscriptionActivateInputBuilder> {
  _$GGitlabSubscriptionActivateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _activationCode;
  String? get activationCode => _$this._activationCode;
  set activationCode(String? activationCode) =>
      _$this._activationCode = activationCode;

  GGitlabSubscriptionActivateInputBuilder();

  GGitlabSubscriptionActivateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _activationCode = $v.activationCode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGitlabSubscriptionActivateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGitlabSubscriptionActivateInput;
  }

  @override
  void update(void Function(GGitlabSubscriptionActivateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGitlabSubscriptionActivateInput build() => _build();

  _$GGitlabSubscriptionActivateInput _build() {
    final _$result = _$v ??
        new _$GGitlabSubscriptionActivateInput._(
            clientMutationId: clientMutationId,
            activationCode: BuiltValueNullFieldError.checkNotNull(
                activationCode,
                r'GGitlabSubscriptionActivateInput',
                'activationCode'));
    replace(_$result);
    return _$result;
  }
}

class _$GGlobalID extends GGlobalID {
  @override
  final String value;

  factory _$GGlobalID([void Function(GGlobalIDBuilder)? updates]) =>
      (new GGlobalIDBuilder()..update(updates))._build();

  _$GGlobalID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GGlobalID', 'value');
  }

  @override
  GGlobalID rebuild(void Function(GGlobalIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGlobalIDBuilder toBuilder() => new GGlobalIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGlobalID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGlobalID')..add('value', value))
        .toString();
  }
}

class GGlobalIDBuilder implements Builder<GGlobalID, GGlobalIDBuilder> {
  _$GGlobalID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GGlobalIDBuilder();

  GGlobalIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGlobalID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGlobalID;
  }

  @override
  void update(void Function(GGlobalIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGlobalID build() => _build();

  _$GGlobalID _build() {
    final _$result = _$v ??
        new _$GGlobalID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GGlobalID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupID extends GGroupID {
  @override
  final String value;

  factory _$GGroupID([void Function(GGroupIDBuilder)? updates]) =>
      (new GGroupIDBuilder()..update(updates))._build();

  _$GGroupID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GGroupID', 'value');
  }

  @override
  GGroupID rebuild(void Function(GGroupIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupIDBuilder toBuilder() => new GGroupIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupID')..add('value', value))
        .toString();
  }
}

class GGroupIDBuilder implements Builder<GGroupID, GGroupIDBuilder> {
  _$GGroupID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GGroupIDBuilder();

  GGroupIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupID;
  }

  @override
  void update(void Function(GGroupIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupID build() => _build();

  _$GGroupID _build() {
    final _$result = _$v ??
        new _$GGroupID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GGroupID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GGroupUpdateInput extends GGroupUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final String fullPath;
  @override
  final GSharedRunnersSetting sharedRunnersSetting;

  factory _$GGroupUpdateInput(
          [void Function(GGroupUpdateInputBuilder)? updates]) =>
      (new GGroupUpdateInputBuilder()..update(updates))._build();

  _$GGroupUpdateInput._(
      {this.clientMutationId,
      required this.fullPath,
      required this.sharedRunnersSetting})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GGroupUpdateInput', 'fullPath');
    BuiltValueNullFieldError.checkNotNull(
        sharedRunnersSetting, r'GGroupUpdateInput', 'sharedRunnersSetting');
  }

  @override
  GGroupUpdateInput rebuild(void Function(GGroupUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGroupUpdateInputBuilder toBuilder() =>
      new GGroupUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGroupUpdateInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath &&
        sharedRunnersSetting == other.sharedRunnersSetting;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), fullPath.hashCode),
        sharedRunnersSetting.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGroupUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath)
          ..add('sharedRunnersSetting', sharedRunnersSetting))
        .toString();
  }
}

class GGroupUpdateInputBuilder
    implements Builder<GGroupUpdateInput, GGroupUpdateInputBuilder> {
  _$GGroupUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  GSharedRunnersSetting? _sharedRunnersSetting;
  GSharedRunnersSetting? get sharedRunnersSetting =>
      _$this._sharedRunnersSetting;
  set sharedRunnersSetting(GSharedRunnersSetting? sharedRunnersSetting) =>
      _$this._sharedRunnersSetting = sharedRunnersSetting;

  GGroupUpdateInputBuilder();

  GGroupUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _sharedRunnersSetting = $v.sharedRunnersSetting;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGroupUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGroupUpdateInput;
  }

  @override
  void update(void Function(GGroupUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGroupUpdateInput build() => _build();

  _$GGroupUpdateInput _build() {
    final _$result = _$v ??
        new _$GGroupUpdateInput._(
            clientMutationId: clientMutationId,
            fullPath: BuiltValueNullFieldError.checkNotNull(
                fullPath, r'GGroupUpdateInput', 'fullPath'),
            sharedRunnersSetting: BuiltValueNullFieldError.checkNotNull(
                sharedRunnersSetting,
                r'GGroupUpdateInput',
                'sharedRunnersSetting'));
    replace(_$result);
    return _$result;
  }
}

class _$GHttpIntegrationCreateInput extends GHttpIntegrationCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String name;
  @override
  final bool active;
  @override
  final GJsonString? payloadExample;
  @override
  final BuiltList<GAlertManagementPayloadAlertFieldInput>?
      payloadAttributeMappings;

  factory _$GHttpIntegrationCreateInput(
          [void Function(GHttpIntegrationCreateInputBuilder)? updates]) =>
      (new GHttpIntegrationCreateInputBuilder()..update(updates))._build();

  _$GHttpIntegrationCreateInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.name,
      required this.active,
      this.payloadExample,
      this.payloadAttributeMappings})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GHttpIntegrationCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GHttpIntegrationCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        active, r'GHttpIntegrationCreateInput', 'active');
  }

  @override
  GHttpIntegrationCreateInput rebuild(
          void Function(GHttpIntegrationCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHttpIntegrationCreateInputBuilder toBuilder() =>
      new GHttpIntegrationCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHttpIntegrationCreateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        name == other.name &&
        active == other.active &&
        payloadExample == other.payloadExample &&
        payloadAttributeMappings == other.payloadAttributeMappings;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc(0, clientMutationId.hashCode),
                        projectPath.hashCode),
                    name.hashCode),
                active.hashCode),
            payloadExample.hashCode),
        payloadAttributeMappings.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHttpIntegrationCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('name', name)
          ..add('active', active)
          ..add('payloadExample', payloadExample)
          ..add('payloadAttributeMappings', payloadAttributeMappings))
        .toString();
  }
}

class GHttpIntegrationCreateInputBuilder
    implements
        Builder<GHttpIntegrationCreateInput,
            GHttpIntegrationCreateInputBuilder> {
  _$GHttpIntegrationCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  GJsonStringBuilder? _payloadExample;
  GJsonStringBuilder get payloadExample =>
      _$this._payloadExample ??= new GJsonStringBuilder();
  set payloadExample(GJsonStringBuilder? payloadExample) =>
      _$this._payloadExample = payloadExample;

  ListBuilder<GAlertManagementPayloadAlertFieldInput>?
      _payloadAttributeMappings;
  ListBuilder<GAlertManagementPayloadAlertFieldInput>
      get payloadAttributeMappings => _$this._payloadAttributeMappings ??=
          new ListBuilder<GAlertManagementPayloadAlertFieldInput>();
  set payloadAttributeMappings(
          ListBuilder<GAlertManagementPayloadAlertFieldInput>?
              payloadAttributeMappings) =>
      _$this._payloadAttributeMappings = payloadAttributeMappings;

  GHttpIntegrationCreateInputBuilder();

  GHttpIntegrationCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _name = $v.name;
      _active = $v.active;
      _payloadExample = $v.payloadExample?.toBuilder();
      _payloadAttributeMappings = $v.payloadAttributeMappings?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHttpIntegrationCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHttpIntegrationCreateInput;
  }

  @override
  void update(void Function(GHttpIntegrationCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHttpIntegrationCreateInput build() => _build();

  _$GHttpIntegrationCreateInput _build() {
    _$GHttpIntegrationCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GHttpIntegrationCreateInput._(
              clientMutationId: clientMutationId,
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GHttpIntegrationCreateInput', 'projectPath'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GHttpIntegrationCreateInput', 'name'),
              active: BuiltValueNullFieldError.checkNotNull(
                  active, r'GHttpIntegrationCreateInput', 'active'),
              payloadExample: _payloadExample?.build(),
              payloadAttributeMappings: _payloadAttributeMappings?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'payloadExample';
        _payloadExample?.build();
        _$failedField = 'payloadAttributeMappings';
        _payloadAttributeMappings?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GHttpIntegrationCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GHttpIntegrationDestroyInput extends GHttpIntegrationDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GAlertManagementHttpIntegrationID id;

  factory _$GHttpIntegrationDestroyInput(
          [void Function(GHttpIntegrationDestroyInputBuilder)? updates]) =>
      (new GHttpIntegrationDestroyInputBuilder()..update(updates))._build();

  _$GHttpIntegrationDestroyInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GHttpIntegrationDestroyInput', 'id');
  }

  @override
  GHttpIntegrationDestroyInput rebuild(
          void Function(GHttpIntegrationDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHttpIntegrationDestroyInputBuilder toBuilder() =>
      new GHttpIntegrationDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHttpIntegrationDestroyInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHttpIntegrationDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GHttpIntegrationDestroyInputBuilder
    implements
        Builder<GHttpIntegrationDestroyInput,
            GHttpIntegrationDestroyInputBuilder> {
  _$GHttpIntegrationDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAlertManagementHttpIntegrationIDBuilder? _id;
  GAlertManagementHttpIntegrationIDBuilder get id =>
      _$this._id ??= new GAlertManagementHttpIntegrationIDBuilder();
  set id(GAlertManagementHttpIntegrationIDBuilder? id) => _$this._id = id;

  GHttpIntegrationDestroyInputBuilder();

  GHttpIntegrationDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHttpIntegrationDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHttpIntegrationDestroyInput;
  }

  @override
  void update(void Function(GHttpIntegrationDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHttpIntegrationDestroyInput build() => _build();

  _$GHttpIntegrationDestroyInput _build() {
    _$GHttpIntegrationDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GHttpIntegrationDestroyInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GHttpIntegrationDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GHttpIntegrationResetTokenInput
    extends GHttpIntegrationResetTokenInput {
  @override
  final String? clientMutationId;
  @override
  final GAlertManagementHttpIntegrationID id;

  factory _$GHttpIntegrationResetTokenInput(
          [void Function(GHttpIntegrationResetTokenInputBuilder)? updates]) =>
      (new GHttpIntegrationResetTokenInputBuilder()..update(updates))._build();

  _$GHttpIntegrationResetTokenInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GHttpIntegrationResetTokenInput', 'id');
  }

  @override
  GHttpIntegrationResetTokenInput rebuild(
          void Function(GHttpIntegrationResetTokenInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHttpIntegrationResetTokenInputBuilder toBuilder() =>
      new GHttpIntegrationResetTokenInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHttpIntegrationResetTokenInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHttpIntegrationResetTokenInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GHttpIntegrationResetTokenInputBuilder
    implements
        Builder<GHttpIntegrationResetTokenInput,
            GHttpIntegrationResetTokenInputBuilder> {
  _$GHttpIntegrationResetTokenInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAlertManagementHttpIntegrationIDBuilder? _id;
  GAlertManagementHttpIntegrationIDBuilder get id =>
      _$this._id ??= new GAlertManagementHttpIntegrationIDBuilder();
  set id(GAlertManagementHttpIntegrationIDBuilder? id) => _$this._id = id;

  GHttpIntegrationResetTokenInputBuilder();

  GHttpIntegrationResetTokenInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHttpIntegrationResetTokenInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHttpIntegrationResetTokenInput;
  }

  @override
  void update(void Function(GHttpIntegrationResetTokenInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHttpIntegrationResetTokenInput build() => _build();

  _$GHttpIntegrationResetTokenInput _build() {
    _$GHttpIntegrationResetTokenInput _$result;
    try {
      _$result = _$v ??
          new _$GHttpIntegrationResetTokenInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GHttpIntegrationResetTokenInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GHttpIntegrationUpdateInput extends GHttpIntegrationUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GAlertManagementHttpIntegrationID id;
  @override
  final String? name;
  @override
  final bool? active;
  @override
  final GJsonString? payloadExample;
  @override
  final BuiltList<GAlertManagementPayloadAlertFieldInput>?
      payloadAttributeMappings;

  factory _$GHttpIntegrationUpdateInput(
          [void Function(GHttpIntegrationUpdateInputBuilder)? updates]) =>
      (new GHttpIntegrationUpdateInputBuilder()..update(updates))._build();

  _$GHttpIntegrationUpdateInput._(
      {this.clientMutationId,
      required this.id,
      this.name,
      this.active,
      this.payloadExample,
      this.payloadAttributeMappings})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GHttpIntegrationUpdateInput', 'id');
  }

  @override
  GHttpIntegrationUpdateInput rebuild(
          void Function(GHttpIntegrationUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHttpIntegrationUpdateInputBuilder toBuilder() =>
      new GHttpIntegrationUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHttpIntegrationUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        name == other.name &&
        active == other.active &&
        payloadExample == other.payloadExample &&
        payloadAttributeMappings == other.payloadAttributeMappings;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
                    name.hashCode),
                active.hashCode),
            payloadExample.hashCode),
        payloadAttributeMappings.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHttpIntegrationUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('name', name)
          ..add('active', active)
          ..add('payloadExample', payloadExample)
          ..add('payloadAttributeMappings', payloadAttributeMappings))
        .toString();
  }
}

class GHttpIntegrationUpdateInputBuilder
    implements
        Builder<GHttpIntegrationUpdateInput,
            GHttpIntegrationUpdateInputBuilder> {
  _$GHttpIntegrationUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAlertManagementHttpIntegrationIDBuilder? _id;
  GAlertManagementHttpIntegrationIDBuilder get id =>
      _$this._id ??= new GAlertManagementHttpIntegrationIDBuilder();
  set id(GAlertManagementHttpIntegrationIDBuilder? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  GJsonStringBuilder? _payloadExample;
  GJsonStringBuilder get payloadExample =>
      _$this._payloadExample ??= new GJsonStringBuilder();
  set payloadExample(GJsonStringBuilder? payloadExample) =>
      _$this._payloadExample = payloadExample;

  ListBuilder<GAlertManagementPayloadAlertFieldInput>?
      _payloadAttributeMappings;
  ListBuilder<GAlertManagementPayloadAlertFieldInput>
      get payloadAttributeMappings => _$this._payloadAttributeMappings ??=
          new ListBuilder<GAlertManagementPayloadAlertFieldInput>();
  set payloadAttributeMappings(
          ListBuilder<GAlertManagementPayloadAlertFieldInput>?
              payloadAttributeMappings) =>
      _$this._payloadAttributeMappings = payloadAttributeMappings;

  GHttpIntegrationUpdateInputBuilder();

  GHttpIntegrationUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _name = $v.name;
      _active = $v.active;
      _payloadExample = $v.payloadExample?.toBuilder();
      _payloadAttributeMappings = $v.payloadAttributeMappings?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHttpIntegrationUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHttpIntegrationUpdateInput;
  }

  @override
  void update(void Function(GHttpIntegrationUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHttpIntegrationUpdateInput build() => _build();

  _$GHttpIntegrationUpdateInput _build() {
    _$GHttpIntegrationUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GHttpIntegrationUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              name: name,
              active: active,
              payloadExample: _payloadExample?.build(),
              payloadAttributeMappings: _payloadAttributeMappings?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'payloadExample';
        _payloadExample?.build();
        _$failedField = 'payloadAttributeMappings';
        _payloadAttributeMappings?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GHttpIntegrationUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIncidentManagementEscalationPolicyID
    extends GIncidentManagementEscalationPolicyID {
  @override
  final String value;

  factory _$GIncidentManagementEscalationPolicyID(
          [void Function(GIncidentManagementEscalationPolicyIDBuilder)?
              updates]) =>
      (new GIncidentManagementEscalationPolicyIDBuilder()..update(updates))
          ._build();

  _$GIncidentManagementEscalationPolicyID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GIncidentManagementEscalationPolicyID', 'value');
  }

  @override
  GIncidentManagementEscalationPolicyID rebuild(
          void Function(GIncidentManagementEscalationPolicyIDBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIncidentManagementEscalationPolicyIDBuilder toBuilder() =>
      new GIncidentManagementEscalationPolicyIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIncidentManagementEscalationPolicyID &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GIncidentManagementEscalationPolicyID')
          ..add('value', value))
        .toString();
  }
}

class GIncidentManagementEscalationPolicyIDBuilder
    implements
        Builder<GIncidentManagementEscalationPolicyID,
            GIncidentManagementEscalationPolicyIDBuilder> {
  _$GIncidentManagementEscalationPolicyID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIncidentManagementEscalationPolicyIDBuilder();

  GIncidentManagementEscalationPolicyIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIncidentManagementEscalationPolicyID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIncidentManagementEscalationPolicyID;
  }

  @override
  void update(
      void Function(GIncidentManagementEscalationPolicyIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIncidentManagementEscalationPolicyID build() => _build();

  _$GIncidentManagementEscalationPolicyID _build() {
    final _$result = _$v ??
        new _$GIncidentManagementEscalationPolicyID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIncidentManagementEscalationPolicyID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GIncidentManagementEscalationRuleID
    extends GIncidentManagementEscalationRuleID {
  @override
  final String value;

  factory _$GIncidentManagementEscalationRuleID(
          [void Function(GIncidentManagementEscalationRuleIDBuilder)?
              updates]) =>
      (new GIncidentManagementEscalationRuleIDBuilder()..update(updates))
          ._build();

  _$GIncidentManagementEscalationRuleID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GIncidentManagementEscalationRuleID', 'value');
  }

  @override
  GIncidentManagementEscalationRuleID rebuild(
          void Function(GIncidentManagementEscalationRuleIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIncidentManagementEscalationRuleIDBuilder toBuilder() =>
      new GIncidentManagementEscalationRuleIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIncidentManagementEscalationRuleID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIncidentManagementEscalationRuleID')
          ..add('value', value))
        .toString();
  }
}

class GIncidentManagementEscalationRuleIDBuilder
    implements
        Builder<GIncidentManagementEscalationRuleID,
            GIncidentManagementEscalationRuleIDBuilder> {
  _$GIncidentManagementEscalationRuleID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIncidentManagementEscalationRuleIDBuilder();

  GIncidentManagementEscalationRuleIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIncidentManagementEscalationRuleID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIncidentManagementEscalationRuleID;
  }

  @override
  void update(
      void Function(GIncidentManagementEscalationRuleIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIncidentManagementEscalationRuleID build() => _build();

  _$GIncidentManagementEscalationRuleID _build() {
    final _$result = _$v ??
        new _$GIncidentManagementEscalationRuleID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIncidentManagementEscalationRuleID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GIncidentManagementIssuableResourceLinkID
    extends GIncidentManagementIssuableResourceLinkID {
  @override
  final String value;

  factory _$GIncidentManagementIssuableResourceLinkID(
          [void Function(GIncidentManagementIssuableResourceLinkIDBuilder)?
              updates]) =>
      (new GIncidentManagementIssuableResourceLinkIDBuilder()..update(updates))
          ._build();

  _$GIncidentManagementIssuableResourceLinkID._({required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GIncidentManagementIssuableResourceLinkID', 'value');
  }

  @override
  GIncidentManagementIssuableResourceLinkID rebuild(
          void Function(GIncidentManagementIssuableResourceLinkIDBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIncidentManagementIssuableResourceLinkIDBuilder toBuilder() =>
      new GIncidentManagementIssuableResourceLinkIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIncidentManagementIssuableResourceLinkID &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GIncidentManagementIssuableResourceLinkID')
          ..add('value', value))
        .toString();
  }
}

class GIncidentManagementIssuableResourceLinkIDBuilder
    implements
        Builder<GIncidentManagementIssuableResourceLinkID,
            GIncidentManagementIssuableResourceLinkIDBuilder> {
  _$GIncidentManagementIssuableResourceLinkID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIncidentManagementIssuableResourceLinkIDBuilder();

  GIncidentManagementIssuableResourceLinkIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIncidentManagementIssuableResourceLinkID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIncidentManagementIssuableResourceLinkID;
  }

  @override
  void update(
      void Function(GIncidentManagementIssuableResourceLinkIDBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GIncidentManagementIssuableResourceLinkID build() => _build();

  _$GIncidentManagementIssuableResourceLinkID _build() {
    final _$result = _$v ??
        new _$GIncidentManagementIssuableResourceLinkID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIncidentManagementIssuableResourceLinkID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GIncidentManagementOncallParticipantID
    extends GIncidentManagementOncallParticipantID {
  @override
  final String value;

  factory _$GIncidentManagementOncallParticipantID(
          [void Function(GIncidentManagementOncallParticipantIDBuilder)?
              updates]) =>
      (new GIncidentManagementOncallParticipantIDBuilder()..update(updates))
          ._build();

  _$GIncidentManagementOncallParticipantID._({required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GIncidentManagementOncallParticipantID', 'value');
  }

  @override
  GIncidentManagementOncallParticipantID rebuild(
          void Function(GIncidentManagementOncallParticipantIDBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIncidentManagementOncallParticipantIDBuilder toBuilder() =>
      new GIncidentManagementOncallParticipantIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIncidentManagementOncallParticipantID &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GIncidentManagementOncallParticipantID')
          ..add('value', value))
        .toString();
  }
}

class GIncidentManagementOncallParticipantIDBuilder
    implements
        Builder<GIncidentManagementOncallParticipantID,
            GIncidentManagementOncallParticipantIDBuilder> {
  _$GIncidentManagementOncallParticipantID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIncidentManagementOncallParticipantIDBuilder();

  GIncidentManagementOncallParticipantIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIncidentManagementOncallParticipantID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIncidentManagementOncallParticipantID;
  }

  @override
  void update(
      void Function(GIncidentManagementOncallParticipantIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIncidentManagementOncallParticipantID build() => _build();

  _$GIncidentManagementOncallParticipantID _build() {
    final _$result = _$v ??
        new _$GIncidentManagementOncallParticipantID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIncidentManagementOncallParticipantID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GIncidentManagementOncallRotationID
    extends GIncidentManagementOncallRotationID {
  @override
  final String value;

  factory _$GIncidentManagementOncallRotationID(
          [void Function(GIncidentManagementOncallRotationIDBuilder)?
              updates]) =>
      (new GIncidentManagementOncallRotationIDBuilder()..update(updates))
          ._build();

  _$GIncidentManagementOncallRotationID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GIncidentManagementOncallRotationID', 'value');
  }

  @override
  GIncidentManagementOncallRotationID rebuild(
          void Function(GIncidentManagementOncallRotationIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIncidentManagementOncallRotationIDBuilder toBuilder() =>
      new GIncidentManagementOncallRotationIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIncidentManagementOncallRotationID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIncidentManagementOncallRotationID')
          ..add('value', value))
        .toString();
  }
}

class GIncidentManagementOncallRotationIDBuilder
    implements
        Builder<GIncidentManagementOncallRotationID,
            GIncidentManagementOncallRotationIDBuilder> {
  _$GIncidentManagementOncallRotationID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIncidentManagementOncallRotationIDBuilder();

  GIncidentManagementOncallRotationIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIncidentManagementOncallRotationID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIncidentManagementOncallRotationID;
  }

  @override
  void update(
      void Function(GIncidentManagementOncallRotationIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIncidentManagementOncallRotationID build() => _build();

  _$GIncidentManagementOncallRotationID _build() {
    final _$result = _$v ??
        new _$GIncidentManagementOncallRotationID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIncidentManagementOncallRotationID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GIncidentManagementTimelineEventID
    extends GIncidentManagementTimelineEventID {
  @override
  final String value;

  factory _$GIncidentManagementTimelineEventID(
          [void Function(GIncidentManagementTimelineEventIDBuilder)?
              updates]) =>
      (new GIncidentManagementTimelineEventIDBuilder()..update(updates))
          ._build();

  _$GIncidentManagementTimelineEventID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GIncidentManagementTimelineEventID', 'value');
  }

  @override
  GIncidentManagementTimelineEventID rebuild(
          void Function(GIncidentManagementTimelineEventIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIncidentManagementTimelineEventIDBuilder toBuilder() =>
      new GIncidentManagementTimelineEventIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIncidentManagementTimelineEventID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIncidentManagementTimelineEventID')
          ..add('value', value))
        .toString();
  }
}

class GIncidentManagementTimelineEventIDBuilder
    implements
        Builder<GIncidentManagementTimelineEventID,
            GIncidentManagementTimelineEventIDBuilder> {
  _$GIncidentManagementTimelineEventID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIncidentManagementTimelineEventIDBuilder();

  GIncidentManagementTimelineEventIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIncidentManagementTimelineEventID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIncidentManagementTimelineEventID;
  }

  @override
  void update(
      void Function(GIncidentManagementTimelineEventIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIncidentManagementTimelineEventID build() => _build();

  _$GIncidentManagementTimelineEventID _build() {
    final _$result = _$v ??
        new _$GIncidentManagementTimelineEventID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIncidentManagementTimelineEventID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GIntegrationsPrometheusID extends GIntegrationsPrometheusID {
  @override
  final String value;

  factory _$GIntegrationsPrometheusID(
          [void Function(GIntegrationsPrometheusIDBuilder)? updates]) =>
      (new GIntegrationsPrometheusIDBuilder()..update(updates))._build();

  _$GIntegrationsPrometheusID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GIntegrationsPrometheusID', 'value');
  }

  @override
  GIntegrationsPrometheusID rebuild(
          void Function(GIntegrationsPrometheusIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIntegrationsPrometheusIDBuilder toBuilder() =>
      new GIntegrationsPrometheusIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIntegrationsPrometheusID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIntegrationsPrometheusID')
          ..add('value', value))
        .toString();
  }
}

class GIntegrationsPrometheusIDBuilder
    implements
        Builder<GIntegrationsPrometheusID, GIntegrationsPrometheusIDBuilder> {
  _$GIntegrationsPrometheusID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIntegrationsPrometheusIDBuilder();

  GIntegrationsPrometheusIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIntegrationsPrometheusID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIntegrationsPrometheusID;
  }

  @override
  void update(void Function(GIntegrationsPrometheusIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIntegrationsPrometheusID build() => _build();

  _$GIntegrationsPrometheusID _build() {
    final _$result = _$v ??
        new _$GIntegrationsPrometheusID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIntegrationsPrometheusID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GISO8601Date extends GISO8601Date {
  @override
  final String value;

  factory _$GISO8601Date([void Function(GISO8601DateBuilder)? updates]) =>
      (new GISO8601DateBuilder()..update(updates))._build();

  _$GISO8601Date._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GISO8601Date', 'value');
  }

  @override
  GISO8601Date rebuild(void Function(GISO8601DateBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GISO8601DateBuilder toBuilder() => new GISO8601DateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GISO8601Date && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GISO8601Date')..add('value', value))
        .toString();
  }
}

class GISO8601DateBuilder
    implements Builder<GISO8601Date, GISO8601DateBuilder> {
  _$GISO8601Date? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GISO8601DateBuilder();

  GISO8601DateBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GISO8601Date other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GISO8601Date;
  }

  @override
  void update(void Function(GISO8601DateBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GISO8601Date build() => _build();

  _$GISO8601Date _build() {
    final _$result = _$v ??
        new _$GISO8601Date._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GISO8601Date', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GIssuableID extends GIssuableID {
  @override
  final String value;

  factory _$GIssuableID([void Function(GIssuableIDBuilder)? updates]) =>
      (new GIssuableIDBuilder()..update(updates))._build();

  _$GIssuableID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GIssuableID', 'value');
  }

  @override
  GIssuableID rebuild(void Function(GIssuableIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssuableIDBuilder toBuilder() => new GIssuableIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssuableID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssuableID')..add('value', value))
        .toString();
  }
}

class GIssuableIDBuilder implements Builder<GIssuableID, GIssuableIDBuilder> {
  _$GIssuableID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIssuableIDBuilder();

  GIssuableIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssuableID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssuableID;
  }

  @override
  void update(void Function(GIssuableIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssuableID build() => _build();

  _$GIssuableID _build() {
    final _$result = _$v ??
        new _$GIssuableID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIssuableID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GIssuableResourceLinkCreateInput
    extends GIssuableResourceLinkCreateInput {
  @override
  final String? clientMutationId;
  @override
  final GIssueID id;
  @override
  final String link;
  @override
  final String? linkText;
  @override
  final GIssuableResourceLinkType? linkType;

  factory _$GIssuableResourceLinkCreateInput(
          [void Function(GIssuableResourceLinkCreateInputBuilder)? updates]) =>
      (new GIssuableResourceLinkCreateInputBuilder()..update(updates))._build();

  _$GIssuableResourceLinkCreateInput._(
      {this.clientMutationId,
      required this.id,
      required this.link,
      this.linkText,
      this.linkType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GIssuableResourceLinkCreateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        link, r'GIssuableResourceLinkCreateInput', 'link');
  }

  @override
  GIssuableResourceLinkCreateInput rebuild(
          void Function(GIssuableResourceLinkCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssuableResourceLinkCreateInputBuilder toBuilder() =>
      new GIssuableResourceLinkCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssuableResourceLinkCreateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        link == other.link &&
        linkText == other.linkText &&
        linkType == other.linkType;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
                link.hashCode),
            linkText.hashCode),
        linkType.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssuableResourceLinkCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('link', link)
          ..add('linkText', linkText)
          ..add('linkType', linkType))
        .toString();
  }
}

class GIssuableResourceLinkCreateInputBuilder
    implements
        Builder<GIssuableResourceLinkCreateInput,
            GIssuableResourceLinkCreateInputBuilder> {
  _$GIssuableResourceLinkCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIssueIDBuilder? _id;
  GIssueIDBuilder get id => _$this._id ??= new GIssueIDBuilder();
  set id(GIssueIDBuilder? id) => _$this._id = id;

  String? _link;
  String? get link => _$this._link;
  set link(String? link) => _$this._link = link;

  String? _linkText;
  String? get linkText => _$this._linkText;
  set linkText(String? linkText) => _$this._linkText = linkText;

  GIssuableResourceLinkType? _linkType;
  GIssuableResourceLinkType? get linkType => _$this._linkType;
  set linkType(GIssuableResourceLinkType? linkType) =>
      _$this._linkType = linkType;

  GIssuableResourceLinkCreateInputBuilder();

  GIssuableResourceLinkCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _link = $v.link;
      _linkText = $v.linkText;
      _linkType = $v.linkType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssuableResourceLinkCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssuableResourceLinkCreateInput;
  }

  @override
  void update(void Function(GIssuableResourceLinkCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssuableResourceLinkCreateInput build() => _build();

  _$GIssuableResourceLinkCreateInput _build() {
    _$GIssuableResourceLinkCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GIssuableResourceLinkCreateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              link: BuiltValueNullFieldError.checkNotNull(
                  link, r'GIssuableResourceLinkCreateInput', 'link'),
              linkText: linkText,
              linkType: linkType);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIssuableResourceLinkCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIssuableResourceLinkDestroyInput
    extends GIssuableResourceLinkDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GIncidentManagementIssuableResourceLinkID id;

  factory _$GIssuableResourceLinkDestroyInput(
          [void Function(GIssuableResourceLinkDestroyInputBuilder)? updates]) =>
      (new GIssuableResourceLinkDestroyInputBuilder()..update(updates))
          ._build();

  _$GIssuableResourceLinkDestroyInput._(
      {this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GIssuableResourceLinkDestroyInput', 'id');
  }

  @override
  GIssuableResourceLinkDestroyInput rebuild(
          void Function(GIssuableResourceLinkDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssuableResourceLinkDestroyInputBuilder toBuilder() =>
      new GIssuableResourceLinkDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssuableResourceLinkDestroyInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssuableResourceLinkDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GIssuableResourceLinkDestroyInputBuilder
    implements
        Builder<GIssuableResourceLinkDestroyInput,
            GIssuableResourceLinkDestroyInputBuilder> {
  _$GIssuableResourceLinkDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIncidentManagementIssuableResourceLinkIDBuilder? _id;
  GIncidentManagementIssuableResourceLinkIDBuilder get id =>
      _$this._id ??= new GIncidentManagementIssuableResourceLinkIDBuilder();
  set id(GIncidentManagementIssuableResourceLinkIDBuilder? id) =>
      _$this._id = id;

  GIssuableResourceLinkDestroyInputBuilder();

  GIssuableResourceLinkDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssuableResourceLinkDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssuableResourceLinkDestroyInput;
  }

  @override
  void update(
      void Function(GIssuableResourceLinkDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssuableResourceLinkDestroyInput build() => _build();

  _$GIssuableResourceLinkDestroyInput _build() {
    _$GIssuableResourceLinkDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GIssuableResourceLinkDestroyInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIssuableResourceLinkDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIssueID extends GIssueID {
  @override
  final String value;

  factory _$GIssueID([void Function(GIssueIDBuilder)? updates]) =>
      (new GIssueIDBuilder()..update(updates))._build();

  _$GIssueID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GIssueID', 'value');
  }

  @override
  GIssueID rebuild(void Function(GIssueIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueIDBuilder toBuilder() => new GIssueIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueID')..add('value', value))
        .toString();
  }
}

class GIssueIDBuilder implements Builder<GIssueID, GIssueIDBuilder> {
  _$GIssueID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIssueIDBuilder();

  GIssueIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueID;
  }

  @override
  void update(void Function(GIssueIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueID build() => _build();

  _$GIssueID _build() {
    final _$result = _$v ??
        new _$GIssueID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIssueID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GIssueMoveInput extends GIssueMoveInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final String targetProjectPath;

  factory _$GIssueMoveInput([void Function(GIssueMoveInputBuilder)? updates]) =>
      (new GIssueMoveInputBuilder()..update(updates))._build();

  _$GIssueMoveInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.targetProjectPath})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueMoveInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(iid, r'GIssueMoveInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        targetProjectPath, r'GIssueMoveInput', 'targetProjectPath');
  }

  @override
  GIssueMoveInput rebuild(void Function(GIssueMoveInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueMoveInputBuilder toBuilder() =>
      new GIssueMoveInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueMoveInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        targetProjectPath == other.targetProjectPath;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        targetProjectPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueMoveInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('targetProjectPath', targetProjectPath))
        .toString();
  }
}

class GIssueMoveInputBuilder
    implements Builder<GIssueMoveInput, GIssueMoveInputBuilder> {
  _$GIssueMoveInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _targetProjectPath;
  String? get targetProjectPath => _$this._targetProjectPath;
  set targetProjectPath(String? targetProjectPath) =>
      _$this._targetProjectPath = targetProjectPath;

  GIssueMoveInputBuilder();

  GIssueMoveInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _targetProjectPath = $v.targetProjectPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueMoveInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueMoveInput;
  }

  @override
  void update(void Function(GIssueMoveInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueMoveInput build() => _build();

  _$GIssueMoveInput _build() {
    final _$result = _$v ??
        new _$GIssueMoveInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GIssueMoveInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GIssueMoveInput', 'iid'),
            clientMutationId: clientMutationId,
            targetProjectPath: BuiltValueNullFieldError.checkNotNull(
                targetProjectPath, r'GIssueMoveInput', 'targetProjectPath'));
    replace(_$result);
    return _$result;
  }
}

class _$GIssueMoveListInput extends GIssueMoveListInput {
  @override
  final String? clientMutationId;
  @override
  final GBoardID boardId;
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? fromListId;
  @override
  final String? toListId;
  @override
  final String? moveBeforeId;
  @override
  final String? moveAfterId;
  @override
  final int? positionInList;
  @override
  final GEpicID? epicId;

  factory _$GIssueMoveListInput(
          [void Function(GIssueMoveListInputBuilder)? updates]) =>
      (new GIssueMoveListInputBuilder()..update(updates))._build();

  _$GIssueMoveListInput._(
      {this.clientMutationId,
      required this.boardId,
      required this.projectPath,
      required this.iid,
      this.fromListId,
      this.toListId,
      this.moveBeforeId,
      this.moveAfterId,
      this.positionInList,
      this.epicId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        boardId, r'GIssueMoveListInput', 'boardId');
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueMoveListInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(iid, r'GIssueMoveListInput', 'iid');
  }

  @override
  GIssueMoveListInput rebuild(
          void Function(GIssueMoveListInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueMoveListInputBuilder toBuilder() =>
      new GIssueMoveListInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueMoveListInput &&
        clientMutationId == other.clientMutationId &&
        boardId == other.boardId &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        fromListId == other.fromListId &&
        toListId == other.toListId &&
        moveBeforeId == other.moveBeforeId &&
        moveAfterId == other.moveAfterId &&
        positionInList == other.positionInList &&
        epicId == other.epicId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, clientMutationId.hashCode),
                                        boardId.hashCode),
                                    projectPath.hashCode),
                                iid.hashCode),
                            fromListId.hashCode),
                        toListId.hashCode),
                    moveBeforeId.hashCode),
                moveAfterId.hashCode),
            positionInList.hashCode),
        epicId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueMoveListInput')
          ..add('clientMutationId', clientMutationId)
          ..add('boardId', boardId)
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('fromListId', fromListId)
          ..add('toListId', toListId)
          ..add('moveBeforeId', moveBeforeId)
          ..add('moveAfterId', moveAfterId)
          ..add('positionInList', positionInList)
          ..add('epicId', epicId))
        .toString();
  }
}

class GIssueMoveListInputBuilder
    implements Builder<GIssueMoveListInput, GIssueMoveListInputBuilder> {
  _$GIssueMoveListInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GBoardIDBuilder? _boardId;
  GBoardIDBuilder get boardId => _$this._boardId ??= new GBoardIDBuilder();
  set boardId(GBoardIDBuilder? boardId) => _$this._boardId = boardId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _fromListId;
  String? get fromListId => _$this._fromListId;
  set fromListId(String? fromListId) => _$this._fromListId = fromListId;

  String? _toListId;
  String? get toListId => _$this._toListId;
  set toListId(String? toListId) => _$this._toListId = toListId;

  String? _moveBeforeId;
  String? get moveBeforeId => _$this._moveBeforeId;
  set moveBeforeId(String? moveBeforeId) => _$this._moveBeforeId = moveBeforeId;

  String? _moveAfterId;
  String? get moveAfterId => _$this._moveAfterId;
  set moveAfterId(String? moveAfterId) => _$this._moveAfterId = moveAfterId;

  int? _positionInList;
  int? get positionInList => _$this._positionInList;
  set positionInList(int? positionInList) =>
      _$this._positionInList = positionInList;

  GEpicIDBuilder? _epicId;
  GEpicIDBuilder get epicId => _$this._epicId ??= new GEpicIDBuilder();
  set epicId(GEpicIDBuilder? epicId) => _$this._epicId = epicId;

  GIssueMoveListInputBuilder();

  GIssueMoveListInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _boardId = $v.boardId.toBuilder();
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _fromListId = $v.fromListId;
      _toListId = $v.toListId;
      _moveBeforeId = $v.moveBeforeId;
      _moveAfterId = $v.moveAfterId;
      _positionInList = $v.positionInList;
      _epicId = $v.epicId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueMoveListInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueMoveListInput;
  }

  @override
  void update(void Function(GIssueMoveListInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueMoveListInput build() => _build();

  _$GIssueMoveListInput _build() {
    _$GIssueMoveListInput _$result;
    try {
      _$result = _$v ??
          new _$GIssueMoveListInput._(
              clientMutationId: clientMutationId,
              boardId: boardId.build(),
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GIssueMoveListInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GIssueMoveListInput', 'iid'),
              fromListId: fromListId,
              toListId: toListId,
              moveBeforeId: moveBeforeId,
              moveAfterId: moveAfterId,
              positionInList: positionInList,
              epicId: _epicId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'boardId';
        boardId.build();

        _$failedField = 'epicId';
        _epicId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIssueMoveListInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetAssigneesInput extends GIssueSetAssigneesInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final BuiltList<String> assigneeUsernames;
  @override
  final GMutationOperationMode? operationMode;

  factory _$GIssueSetAssigneesInput(
          [void Function(GIssueSetAssigneesInputBuilder)? updates]) =>
      (new GIssueSetAssigneesInputBuilder()..update(updates))._build();

  _$GIssueSetAssigneesInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.assigneeUsernames,
      this.operationMode})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetAssigneesInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GIssueSetAssigneesInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        assigneeUsernames, r'GIssueSetAssigneesInput', 'assigneeUsernames');
  }

  @override
  GIssueSetAssigneesInput rebuild(
          void Function(GIssueSetAssigneesInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetAssigneesInputBuilder toBuilder() =>
      new GIssueSetAssigneesInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetAssigneesInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        assigneeUsernames == other.assigneeUsernames &&
        operationMode == other.operationMode;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
                clientMutationId.hashCode),
            assigneeUsernames.hashCode),
        operationMode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetAssigneesInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('assigneeUsernames', assigneeUsernames)
          ..add('operationMode', operationMode))
        .toString();
  }
}

class GIssueSetAssigneesInputBuilder
    implements
        Builder<GIssueSetAssigneesInput, GIssueSetAssigneesInputBuilder> {
  _$GIssueSetAssigneesInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<String>? _assigneeUsernames;
  ListBuilder<String> get assigneeUsernames =>
      _$this._assigneeUsernames ??= new ListBuilder<String>();
  set assigneeUsernames(ListBuilder<String>? assigneeUsernames) =>
      _$this._assigneeUsernames = assigneeUsernames;

  GMutationOperationMode? _operationMode;
  GMutationOperationMode? get operationMode => _$this._operationMode;
  set operationMode(GMutationOperationMode? operationMode) =>
      _$this._operationMode = operationMode;

  GIssueSetAssigneesInputBuilder();

  GIssueSetAssigneesInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _assigneeUsernames = $v.assigneeUsernames.toBuilder();
      _operationMode = $v.operationMode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetAssigneesInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetAssigneesInput;
  }

  @override
  void update(void Function(GIssueSetAssigneesInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetAssigneesInput build() => _build();

  _$GIssueSetAssigneesInput _build() {
    _$GIssueSetAssigneesInput _$result;
    try {
      _$result = _$v ??
          new _$GIssueSetAssigneesInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GIssueSetAssigneesInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GIssueSetAssigneesInput', 'iid'),
              clientMutationId: clientMutationId,
              assigneeUsernames: assigneeUsernames.build(),
              operationMode: operationMode);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'assigneeUsernames';
        assigneeUsernames.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIssueSetAssigneesInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetConfidentialInput extends GIssueSetConfidentialInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final bool confidential;

  factory _$GIssueSetConfidentialInput(
          [void Function(GIssueSetConfidentialInputBuilder)? updates]) =>
      (new GIssueSetConfidentialInputBuilder()..update(updates))._build();

  _$GIssueSetConfidentialInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.confidential})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetConfidentialInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GIssueSetConfidentialInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        confidential, r'GIssueSetConfidentialInput', 'confidential');
  }

  @override
  GIssueSetConfidentialInput rebuild(
          void Function(GIssueSetConfidentialInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetConfidentialInputBuilder toBuilder() =>
      new GIssueSetConfidentialInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetConfidentialInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        confidential == other.confidential;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        confidential.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetConfidentialInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('confidential', confidential))
        .toString();
  }
}

class GIssueSetConfidentialInputBuilder
    implements
        Builder<GIssueSetConfidentialInput, GIssueSetConfidentialInputBuilder> {
  _$GIssueSetConfidentialInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  bool? _confidential;
  bool? get confidential => _$this._confidential;
  set confidential(bool? confidential) => _$this._confidential = confidential;

  GIssueSetConfidentialInputBuilder();

  GIssueSetConfidentialInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _confidential = $v.confidential;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetConfidentialInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetConfidentialInput;
  }

  @override
  void update(void Function(GIssueSetConfidentialInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetConfidentialInput build() => _build();

  _$GIssueSetConfidentialInput _build() {
    final _$result = _$v ??
        new _$GIssueSetConfidentialInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GIssueSetConfidentialInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GIssueSetConfidentialInput', 'iid'),
            clientMutationId: clientMutationId,
            confidential: BuiltValueNullFieldError.checkNotNull(
                confidential, r'GIssueSetConfidentialInput', 'confidential'));
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetCrmContactsInput extends GIssueSetCrmContactsInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final BuiltList<GCustomerRelationsContactID> contactIds;
  @override
  final GMutationOperationMode? operationMode;

  factory _$GIssueSetCrmContactsInput(
          [void Function(GIssueSetCrmContactsInputBuilder)? updates]) =>
      (new GIssueSetCrmContactsInputBuilder()..update(updates))._build();

  _$GIssueSetCrmContactsInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.contactIds,
      this.operationMode})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetCrmContactsInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GIssueSetCrmContactsInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        contactIds, r'GIssueSetCrmContactsInput', 'contactIds');
  }

  @override
  GIssueSetCrmContactsInput rebuild(
          void Function(GIssueSetCrmContactsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetCrmContactsInputBuilder toBuilder() =>
      new GIssueSetCrmContactsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetCrmContactsInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        contactIds == other.contactIds &&
        operationMode == other.operationMode;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
                clientMutationId.hashCode),
            contactIds.hashCode),
        operationMode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetCrmContactsInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('contactIds', contactIds)
          ..add('operationMode', operationMode))
        .toString();
  }
}

class GIssueSetCrmContactsInputBuilder
    implements
        Builder<GIssueSetCrmContactsInput, GIssueSetCrmContactsInputBuilder> {
  _$GIssueSetCrmContactsInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<GCustomerRelationsContactID>? _contactIds;
  ListBuilder<GCustomerRelationsContactID> get contactIds =>
      _$this._contactIds ??= new ListBuilder<GCustomerRelationsContactID>();
  set contactIds(ListBuilder<GCustomerRelationsContactID>? contactIds) =>
      _$this._contactIds = contactIds;

  GMutationOperationMode? _operationMode;
  GMutationOperationMode? get operationMode => _$this._operationMode;
  set operationMode(GMutationOperationMode? operationMode) =>
      _$this._operationMode = operationMode;

  GIssueSetCrmContactsInputBuilder();

  GIssueSetCrmContactsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _contactIds = $v.contactIds.toBuilder();
      _operationMode = $v.operationMode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetCrmContactsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetCrmContactsInput;
  }

  @override
  void update(void Function(GIssueSetCrmContactsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetCrmContactsInput build() => _build();

  _$GIssueSetCrmContactsInput _build() {
    _$GIssueSetCrmContactsInput _$result;
    try {
      _$result = _$v ??
          new _$GIssueSetCrmContactsInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GIssueSetCrmContactsInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GIssueSetCrmContactsInput', 'iid'),
              clientMutationId: clientMutationId,
              contactIds: contactIds.build(),
              operationMode: operationMode);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'contactIds';
        contactIds.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIssueSetCrmContactsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetDueDateInput extends GIssueSetDueDateInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final GTime? dueDate;

  factory _$GIssueSetDueDateInput(
          [void Function(GIssueSetDueDateInputBuilder)? updates]) =>
      (new GIssueSetDueDateInputBuilder()..update(updates))._build();

  _$GIssueSetDueDateInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      this.dueDate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetDueDateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(iid, r'GIssueSetDueDateInput', 'iid');
  }

  @override
  GIssueSetDueDateInput rebuild(
          void Function(GIssueSetDueDateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetDueDateInputBuilder toBuilder() =>
      new GIssueSetDueDateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetDueDateInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        dueDate == other.dueDate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        dueDate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetDueDateInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('dueDate', dueDate))
        .toString();
  }
}

class GIssueSetDueDateInputBuilder
    implements Builder<GIssueSetDueDateInput, GIssueSetDueDateInputBuilder> {
  _$GIssueSetDueDateInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GTimeBuilder? _dueDate;
  GTimeBuilder get dueDate => _$this._dueDate ??= new GTimeBuilder();
  set dueDate(GTimeBuilder? dueDate) => _$this._dueDate = dueDate;

  GIssueSetDueDateInputBuilder();

  GIssueSetDueDateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _dueDate = $v.dueDate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetDueDateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetDueDateInput;
  }

  @override
  void update(void Function(GIssueSetDueDateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetDueDateInput build() => _build();

  _$GIssueSetDueDateInput _build() {
    _$GIssueSetDueDateInput _$result;
    try {
      _$result = _$v ??
          new _$GIssueSetDueDateInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GIssueSetDueDateInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GIssueSetDueDateInput', 'iid'),
              clientMutationId: clientMutationId,
              dueDate: _dueDate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'dueDate';
        _dueDate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIssueSetDueDateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetEpicInput extends GIssueSetEpicInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final GEpicID? epicId;

  factory _$GIssueSetEpicInput(
          [void Function(GIssueSetEpicInputBuilder)? updates]) =>
      (new GIssueSetEpicInputBuilder()..update(updates))._build();

  _$GIssueSetEpicInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      this.epicId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetEpicInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(iid, r'GIssueSetEpicInput', 'iid');
  }

  @override
  GIssueSetEpicInput rebuild(
          void Function(GIssueSetEpicInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetEpicInputBuilder toBuilder() =>
      new GIssueSetEpicInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetEpicInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        epicId == other.epicId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        epicId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetEpicInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('epicId', epicId))
        .toString();
  }
}

class GIssueSetEpicInputBuilder
    implements Builder<GIssueSetEpicInput, GIssueSetEpicInputBuilder> {
  _$GIssueSetEpicInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GEpicIDBuilder? _epicId;
  GEpicIDBuilder get epicId => _$this._epicId ??= new GEpicIDBuilder();
  set epicId(GEpicIDBuilder? epicId) => _$this._epicId = epicId;

  GIssueSetEpicInputBuilder();

  GIssueSetEpicInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _epicId = $v.epicId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetEpicInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetEpicInput;
  }

  @override
  void update(void Function(GIssueSetEpicInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetEpicInput build() => _build();

  _$GIssueSetEpicInput _build() {
    _$GIssueSetEpicInput _$result;
    try {
      _$result = _$v ??
          new _$GIssueSetEpicInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GIssueSetEpicInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GIssueSetEpicInput', 'iid'),
              clientMutationId: clientMutationId,
              epicId: _epicId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'epicId';
        _epicId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIssueSetEpicInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetEscalationPolicyInput extends GIssueSetEscalationPolicyInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final GIncidentManagementEscalationPolicyID? escalationPolicyId;

  factory _$GIssueSetEscalationPolicyInput(
          [void Function(GIssueSetEscalationPolicyInputBuilder)? updates]) =>
      (new GIssueSetEscalationPolicyInputBuilder()..update(updates))._build();

  _$GIssueSetEscalationPolicyInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      this.escalationPolicyId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetEscalationPolicyInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GIssueSetEscalationPolicyInput', 'iid');
  }

  @override
  GIssueSetEscalationPolicyInput rebuild(
          void Function(GIssueSetEscalationPolicyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetEscalationPolicyInputBuilder toBuilder() =>
      new GIssueSetEscalationPolicyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetEscalationPolicyInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        escalationPolicyId == other.escalationPolicyId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        escalationPolicyId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetEscalationPolicyInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('escalationPolicyId', escalationPolicyId))
        .toString();
  }
}

class GIssueSetEscalationPolicyInputBuilder
    implements
        Builder<GIssueSetEscalationPolicyInput,
            GIssueSetEscalationPolicyInputBuilder> {
  _$GIssueSetEscalationPolicyInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIncidentManagementEscalationPolicyIDBuilder? _escalationPolicyId;
  GIncidentManagementEscalationPolicyIDBuilder get escalationPolicyId =>
      _$this._escalationPolicyId ??=
          new GIncidentManagementEscalationPolicyIDBuilder();
  set escalationPolicyId(
          GIncidentManagementEscalationPolicyIDBuilder? escalationPolicyId) =>
      _$this._escalationPolicyId = escalationPolicyId;

  GIssueSetEscalationPolicyInputBuilder();

  GIssueSetEscalationPolicyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _escalationPolicyId = $v.escalationPolicyId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetEscalationPolicyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetEscalationPolicyInput;
  }

  @override
  void update(void Function(GIssueSetEscalationPolicyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetEscalationPolicyInput build() => _build();

  _$GIssueSetEscalationPolicyInput _build() {
    _$GIssueSetEscalationPolicyInput _$result;
    try {
      _$result = _$v ??
          new _$GIssueSetEscalationPolicyInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                  r'GIssueSetEscalationPolicyInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GIssueSetEscalationPolicyInput', 'iid'),
              clientMutationId: clientMutationId,
              escalationPolicyId: _escalationPolicyId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'escalationPolicyId';
        _escalationPolicyId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIssueSetEscalationPolicyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetEscalationStatusInput extends GIssueSetEscalationStatusInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final GIssueEscalationStatus status;

  factory _$GIssueSetEscalationStatusInput(
          [void Function(GIssueSetEscalationStatusInputBuilder)? updates]) =>
      (new GIssueSetEscalationStatusInputBuilder()..update(updates))._build();

  _$GIssueSetEscalationStatusInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.status})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetEscalationStatusInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GIssueSetEscalationStatusInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        status, r'GIssueSetEscalationStatusInput', 'status');
  }

  @override
  GIssueSetEscalationStatusInput rebuild(
          void Function(GIssueSetEscalationStatusInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetEscalationStatusInputBuilder toBuilder() =>
      new GIssueSetEscalationStatusInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetEscalationStatusInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        status == other.status;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        status.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetEscalationStatusInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('status', status))
        .toString();
  }
}

class GIssueSetEscalationStatusInputBuilder
    implements
        Builder<GIssueSetEscalationStatusInput,
            GIssueSetEscalationStatusInputBuilder> {
  _$GIssueSetEscalationStatusInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIssueEscalationStatus? _status;
  GIssueEscalationStatus? get status => _$this._status;
  set status(GIssueEscalationStatus? status) => _$this._status = status;

  GIssueSetEscalationStatusInputBuilder();

  GIssueSetEscalationStatusInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _status = $v.status;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetEscalationStatusInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetEscalationStatusInput;
  }

  @override
  void update(void Function(GIssueSetEscalationStatusInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetEscalationStatusInput build() => _build();

  _$GIssueSetEscalationStatusInput _build() {
    final _$result = _$v ??
        new _$GIssueSetEscalationStatusInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GIssueSetEscalationStatusInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GIssueSetEscalationStatusInput', 'iid'),
            clientMutationId: clientMutationId,
            status: BuiltValueNullFieldError.checkNotNull(
                status, r'GIssueSetEscalationStatusInput', 'status'));
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetIterationInput extends GIssueSetIterationInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final GIterationID? iterationId;

  factory _$GIssueSetIterationInput(
          [void Function(GIssueSetIterationInputBuilder)? updates]) =>
      (new GIssueSetIterationInputBuilder()..update(updates))._build();

  _$GIssueSetIterationInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      this.iterationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetIterationInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GIssueSetIterationInput', 'iid');
  }

  @override
  GIssueSetIterationInput rebuild(
          void Function(GIssueSetIterationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetIterationInputBuilder toBuilder() =>
      new GIssueSetIterationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetIterationInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        iterationId == other.iterationId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        iterationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetIterationInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('iterationId', iterationId))
        .toString();
  }
}

class GIssueSetIterationInputBuilder
    implements
        Builder<GIssueSetIterationInput, GIssueSetIterationInputBuilder> {
  _$GIssueSetIterationInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIterationIDBuilder? _iterationId;
  GIterationIDBuilder get iterationId =>
      _$this._iterationId ??= new GIterationIDBuilder();
  set iterationId(GIterationIDBuilder? iterationId) =>
      _$this._iterationId = iterationId;

  GIssueSetIterationInputBuilder();

  GIssueSetIterationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _iterationId = $v.iterationId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetIterationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetIterationInput;
  }

  @override
  void update(void Function(GIssueSetIterationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetIterationInput build() => _build();

  _$GIssueSetIterationInput _build() {
    _$GIssueSetIterationInput _$result;
    try {
      _$result = _$v ??
          new _$GIssueSetIterationInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GIssueSetIterationInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GIssueSetIterationInput', 'iid'),
              clientMutationId: clientMutationId,
              iterationId: _iterationId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'iterationId';
        _iterationId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIssueSetIterationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetLockedInput extends GIssueSetLockedInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final bool locked;

  factory _$GIssueSetLockedInput(
          [void Function(GIssueSetLockedInputBuilder)? updates]) =>
      (new GIssueSetLockedInputBuilder()..update(updates))._build();

  _$GIssueSetLockedInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.locked})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetLockedInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(iid, r'GIssueSetLockedInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        locked, r'GIssueSetLockedInput', 'locked');
  }

  @override
  GIssueSetLockedInput rebuild(
          void Function(GIssueSetLockedInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetLockedInputBuilder toBuilder() =>
      new GIssueSetLockedInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetLockedInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        locked == other.locked;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        locked.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetLockedInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('locked', locked))
        .toString();
  }
}

class GIssueSetLockedInputBuilder
    implements Builder<GIssueSetLockedInput, GIssueSetLockedInputBuilder> {
  _$GIssueSetLockedInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  bool? _locked;
  bool? get locked => _$this._locked;
  set locked(bool? locked) => _$this._locked = locked;

  GIssueSetLockedInputBuilder();

  GIssueSetLockedInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _locked = $v.locked;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetLockedInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetLockedInput;
  }

  @override
  void update(void Function(GIssueSetLockedInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetLockedInput build() => _build();

  _$GIssueSetLockedInput _build() {
    final _$result = _$v ??
        new _$GIssueSetLockedInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GIssueSetLockedInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GIssueSetLockedInput', 'iid'),
            clientMutationId: clientMutationId,
            locked: BuiltValueNullFieldError.checkNotNull(
                locked, r'GIssueSetLockedInput', 'locked'));
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetSeverityInput extends GIssueSetSeverityInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final GIssuableSeverity severity;

  factory _$GIssueSetSeverityInput(
          [void Function(GIssueSetSeverityInputBuilder)? updates]) =>
      (new GIssueSetSeverityInputBuilder()..update(updates))._build();

  _$GIssueSetSeverityInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.severity})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetSeverityInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GIssueSetSeverityInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        severity, r'GIssueSetSeverityInput', 'severity');
  }

  @override
  GIssueSetSeverityInput rebuild(
          void Function(GIssueSetSeverityInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetSeverityInputBuilder toBuilder() =>
      new GIssueSetSeverityInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetSeverityInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        severity == other.severity;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        severity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetSeverityInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('severity', severity))
        .toString();
  }
}

class GIssueSetSeverityInputBuilder
    implements Builder<GIssueSetSeverityInput, GIssueSetSeverityInputBuilder> {
  _$GIssueSetSeverityInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIssuableSeverity? _severity;
  GIssuableSeverity? get severity => _$this._severity;
  set severity(GIssuableSeverity? severity) => _$this._severity = severity;

  GIssueSetSeverityInputBuilder();

  GIssueSetSeverityInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _severity = $v.severity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetSeverityInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetSeverityInput;
  }

  @override
  void update(void Function(GIssueSetSeverityInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetSeverityInput build() => _build();

  _$GIssueSetSeverityInput _build() {
    final _$result = _$v ??
        new _$GIssueSetSeverityInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GIssueSetSeverityInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GIssueSetSeverityInput', 'iid'),
            clientMutationId: clientMutationId,
            severity: BuiltValueNullFieldError.checkNotNull(
                severity, r'GIssueSetSeverityInput', 'severity'));
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetSubscriptionInput extends GIssueSetSubscriptionInput {
  @override
  final String? clientMutationId;
  @override
  final bool subscribedState;
  @override
  final String projectPath;
  @override
  final String iid;

  factory _$GIssueSetSubscriptionInput(
          [void Function(GIssueSetSubscriptionInputBuilder)? updates]) =>
      (new GIssueSetSubscriptionInputBuilder()..update(updates))._build();

  _$GIssueSetSubscriptionInput._(
      {this.clientMutationId,
      required this.subscribedState,
      required this.projectPath,
      required this.iid})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        subscribedState, r'GIssueSetSubscriptionInput', 'subscribedState');
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetSubscriptionInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GIssueSetSubscriptionInput', 'iid');
  }

  @override
  GIssueSetSubscriptionInput rebuild(
          void Function(GIssueSetSubscriptionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetSubscriptionInputBuilder toBuilder() =>
      new GIssueSetSubscriptionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetSubscriptionInput &&
        clientMutationId == other.clientMutationId &&
        subscribedState == other.subscribedState &&
        projectPath == other.projectPath &&
        iid == other.iid;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), subscribedState.hashCode),
            projectPath.hashCode),
        iid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetSubscriptionInput')
          ..add('clientMutationId', clientMutationId)
          ..add('subscribedState', subscribedState)
          ..add('projectPath', projectPath)
          ..add('iid', iid))
        .toString();
  }
}

class GIssueSetSubscriptionInputBuilder
    implements
        Builder<GIssueSetSubscriptionInput, GIssueSetSubscriptionInputBuilder> {
  _$GIssueSetSubscriptionInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  bool? _subscribedState;
  bool? get subscribedState => _$this._subscribedState;
  set subscribedState(bool? subscribedState) =>
      _$this._subscribedState = subscribedState;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  GIssueSetSubscriptionInputBuilder();

  GIssueSetSubscriptionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _subscribedState = $v.subscribedState;
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetSubscriptionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetSubscriptionInput;
  }

  @override
  void update(void Function(GIssueSetSubscriptionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetSubscriptionInput build() => _build();

  _$GIssueSetSubscriptionInput _build() {
    final _$result = _$v ??
        new _$GIssueSetSubscriptionInput._(
            clientMutationId: clientMutationId,
            subscribedState: BuiltValueNullFieldError.checkNotNull(
                subscribedState,
                r'GIssueSetSubscriptionInput',
                'subscribedState'),
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GIssueSetSubscriptionInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GIssueSetSubscriptionInput', 'iid'));
    replace(_$result);
    return _$result;
  }
}

class _$GIssueSetWeightInput extends GIssueSetWeightInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final int? weight;

  factory _$GIssueSetWeightInput(
          [void Function(GIssueSetWeightInputBuilder)? updates]) =>
      (new GIssueSetWeightInputBuilder()..update(updates))._build();

  _$GIssueSetWeightInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      this.weight})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GIssueSetWeightInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(iid, r'GIssueSetWeightInput', 'iid');
  }

  @override
  GIssueSetWeightInput rebuild(
          void Function(GIssueSetWeightInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIssueSetWeightInputBuilder toBuilder() =>
      new GIssueSetWeightInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIssueSetWeightInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        weight == other.weight;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        weight.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIssueSetWeightInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('weight', weight))
        .toString();
  }
}

class GIssueSetWeightInputBuilder
    implements Builder<GIssueSetWeightInput, GIssueSetWeightInputBuilder> {
  _$GIssueSetWeightInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  int? _weight;
  int? get weight => _$this._weight;
  set weight(int? weight) => _$this._weight = weight;

  GIssueSetWeightInputBuilder();

  GIssueSetWeightInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _weight = $v.weight;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIssueSetWeightInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIssueSetWeightInput;
  }

  @override
  void update(void Function(GIssueSetWeightInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIssueSetWeightInput build() => _build();

  _$GIssueSetWeightInput _build() {
    final _$result = _$v ??
        new _$GIssueSetWeightInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GIssueSetWeightInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GIssueSetWeightInput', 'iid'),
            clientMutationId: clientMutationId,
            weight: weight);
    replace(_$result);
    return _$result;
  }
}

class _$GIterationCadenceCreateInput extends GIterationCadenceCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String groupPath;
  @override
  final String? title;
  @override
  final int? durationInWeeks;
  @override
  final int? iterationsInAdvance;
  @override
  final GTime? startDate;
  @override
  final bool automatic;
  @override
  final bool active;
  @override
  final bool? rollOver;
  @override
  final String? description;

  factory _$GIterationCadenceCreateInput(
          [void Function(GIterationCadenceCreateInputBuilder)? updates]) =>
      (new GIterationCadenceCreateInputBuilder()..update(updates))._build();

  _$GIterationCadenceCreateInput._(
      {this.clientMutationId,
      required this.groupPath,
      this.title,
      this.durationInWeeks,
      this.iterationsInAdvance,
      this.startDate,
      required this.automatic,
      required this.active,
      this.rollOver,
      this.description})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        groupPath, r'GIterationCadenceCreateInput', 'groupPath');
    BuiltValueNullFieldError.checkNotNull(
        automatic, r'GIterationCadenceCreateInput', 'automatic');
    BuiltValueNullFieldError.checkNotNull(
        active, r'GIterationCadenceCreateInput', 'active');
  }

  @override
  GIterationCadenceCreateInput rebuild(
          void Function(GIterationCadenceCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIterationCadenceCreateInputBuilder toBuilder() =>
      new GIterationCadenceCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIterationCadenceCreateInput &&
        clientMutationId == other.clientMutationId &&
        groupPath == other.groupPath &&
        title == other.title &&
        durationInWeeks == other.durationInWeeks &&
        iterationsInAdvance == other.iterationsInAdvance &&
        startDate == other.startDate &&
        automatic == other.automatic &&
        active == other.active &&
        rollOver == other.rollOver &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, clientMutationId.hashCode),
                                        groupPath.hashCode),
                                    title.hashCode),
                                durationInWeeks.hashCode),
                            iterationsInAdvance.hashCode),
                        startDate.hashCode),
                    automatic.hashCode),
                active.hashCode),
            rollOver.hashCode),
        description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIterationCadenceCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('groupPath', groupPath)
          ..add('title', title)
          ..add('durationInWeeks', durationInWeeks)
          ..add('iterationsInAdvance', iterationsInAdvance)
          ..add('startDate', startDate)
          ..add('automatic', automatic)
          ..add('active', active)
          ..add('rollOver', rollOver)
          ..add('description', description))
        .toString();
  }
}

class GIterationCadenceCreateInputBuilder
    implements
        Builder<GIterationCadenceCreateInput,
            GIterationCadenceCreateInputBuilder> {
  _$GIterationCadenceCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  int? _durationInWeeks;
  int? get durationInWeeks => _$this._durationInWeeks;
  set durationInWeeks(int? durationInWeeks) =>
      _$this._durationInWeeks = durationInWeeks;

  int? _iterationsInAdvance;
  int? get iterationsInAdvance => _$this._iterationsInAdvance;
  set iterationsInAdvance(int? iterationsInAdvance) =>
      _$this._iterationsInAdvance = iterationsInAdvance;

  GTimeBuilder? _startDate;
  GTimeBuilder get startDate => _$this._startDate ??= new GTimeBuilder();
  set startDate(GTimeBuilder? startDate) => _$this._startDate = startDate;

  bool? _automatic;
  bool? get automatic => _$this._automatic;
  set automatic(bool? automatic) => _$this._automatic = automatic;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  bool? _rollOver;
  bool? get rollOver => _$this._rollOver;
  set rollOver(bool? rollOver) => _$this._rollOver = rollOver;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GIterationCadenceCreateInputBuilder();

  GIterationCadenceCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _groupPath = $v.groupPath;
      _title = $v.title;
      _durationInWeeks = $v.durationInWeeks;
      _iterationsInAdvance = $v.iterationsInAdvance;
      _startDate = $v.startDate?.toBuilder();
      _automatic = $v.automatic;
      _active = $v.active;
      _rollOver = $v.rollOver;
      _description = $v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIterationCadenceCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIterationCadenceCreateInput;
  }

  @override
  void update(void Function(GIterationCadenceCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIterationCadenceCreateInput build() => _build();

  _$GIterationCadenceCreateInput _build() {
    _$GIterationCadenceCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GIterationCadenceCreateInput._(
              clientMutationId: clientMutationId,
              groupPath: BuiltValueNullFieldError.checkNotNull(
                  groupPath, r'GIterationCadenceCreateInput', 'groupPath'),
              title: title,
              durationInWeeks: durationInWeeks,
              iterationsInAdvance: iterationsInAdvance,
              startDate: _startDate?.build(),
              automatic: BuiltValueNullFieldError.checkNotNull(
                  automatic, r'GIterationCadenceCreateInput', 'automatic'),
              active: BuiltValueNullFieldError.checkNotNull(
                  active, r'GIterationCadenceCreateInput', 'active'),
              rollOver: rollOver,
              description: description);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'startDate';
        _startDate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIterationCadenceCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIterationCadenceDestroyInput extends GIterationCadenceDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GIterationsCadenceID id;

  factory _$GIterationCadenceDestroyInput(
          [void Function(GIterationCadenceDestroyInputBuilder)? updates]) =>
      (new GIterationCadenceDestroyInputBuilder()..update(updates))._build();

  _$GIterationCadenceDestroyInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GIterationCadenceDestroyInput', 'id');
  }

  @override
  GIterationCadenceDestroyInput rebuild(
          void Function(GIterationCadenceDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIterationCadenceDestroyInputBuilder toBuilder() =>
      new GIterationCadenceDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIterationCadenceDestroyInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIterationCadenceDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GIterationCadenceDestroyInputBuilder
    implements
        Builder<GIterationCadenceDestroyInput,
            GIterationCadenceDestroyInputBuilder> {
  _$GIterationCadenceDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIterationsCadenceIDBuilder? _id;
  GIterationsCadenceIDBuilder get id =>
      _$this._id ??= new GIterationsCadenceIDBuilder();
  set id(GIterationsCadenceIDBuilder? id) => _$this._id = id;

  GIterationCadenceDestroyInputBuilder();

  GIterationCadenceDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIterationCadenceDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIterationCadenceDestroyInput;
  }

  @override
  void update(void Function(GIterationCadenceDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIterationCadenceDestroyInput build() => _build();

  _$GIterationCadenceDestroyInput _build() {
    _$GIterationCadenceDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GIterationCadenceDestroyInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIterationCadenceDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIterationCadenceUpdateInput extends GIterationCadenceUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GIterationsCadenceID id;
  @override
  final String? title;
  @override
  final int? durationInWeeks;
  @override
  final int? iterationsInAdvance;
  @override
  final GTime? startDate;
  @override
  final bool? automatic;
  @override
  final bool? active;
  @override
  final bool? rollOver;
  @override
  final String? description;

  factory _$GIterationCadenceUpdateInput(
          [void Function(GIterationCadenceUpdateInputBuilder)? updates]) =>
      (new GIterationCadenceUpdateInputBuilder()..update(updates))._build();

  _$GIterationCadenceUpdateInput._(
      {this.clientMutationId,
      required this.id,
      this.title,
      this.durationInWeeks,
      this.iterationsInAdvance,
      this.startDate,
      this.automatic,
      this.active,
      this.rollOver,
      this.description})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GIterationCadenceUpdateInput', 'id');
  }

  @override
  GIterationCadenceUpdateInput rebuild(
          void Function(GIterationCadenceUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIterationCadenceUpdateInputBuilder toBuilder() =>
      new GIterationCadenceUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIterationCadenceUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        title == other.title &&
        durationInWeeks == other.durationInWeeks &&
        iterationsInAdvance == other.iterationsInAdvance &&
        startDate == other.startDate &&
        automatic == other.automatic &&
        active == other.active &&
        rollOver == other.rollOver &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, clientMutationId.hashCode),
                                        id.hashCode),
                                    title.hashCode),
                                durationInWeeks.hashCode),
                            iterationsInAdvance.hashCode),
                        startDate.hashCode),
                    automatic.hashCode),
                active.hashCode),
            rollOver.hashCode),
        description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIterationCadenceUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('title', title)
          ..add('durationInWeeks', durationInWeeks)
          ..add('iterationsInAdvance', iterationsInAdvance)
          ..add('startDate', startDate)
          ..add('automatic', automatic)
          ..add('active', active)
          ..add('rollOver', rollOver)
          ..add('description', description))
        .toString();
  }
}

class GIterationCadenceUpdateInputBuilder
    implements
        Builder<GIterationCadenceUpdateInput,
            GIterationCadenceUpdateInputBuilder> {
  _$GIterationCadenceUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIterationsCadenceIDBuilder? _id;
  GIterationsCadenceIDBuilder get id =>
      _$this._id ??= new GIterationsCadenceIDBuilder();
  set id(GIterationsCadenceIDBuilder? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  int? _durationInWeeks;
  int? get durationInWeeks => _$this._durationInWeeks;
  set durationInWeeks(int? durationInWeeks) =>
      _$this._durationInWeeks = durationInWeeks;

  int? _iterationsInAdvance;
  int? get iterationsInAdvance => _$this._iterationsInAdvance;
  set iterationsInAdvance(int? iterationsInAdvance) =>
      _$this._iterationsInAdvance = iterationsInAdvance;

  GTimeBuilder? _startDate;
  GTimeBuilder get startDate => _$this._startDate ??= new GTimeBuilder();
  set startDate(GTimeBuilder? startDate) => _$this._startDate = startDate;

  bool? _automatic;
  bool? get automatic => _$this._automatic;
  set automatic(bool? automatic) => _$this._automatic = automatic;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  bool? _rollOver;
  bool? get rollOver => _$this._rollOver;
  set rollOver(bool? rollOver) => _$this._rollOver = rollOver;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GIterationCadenceUpdateInputBuilder();

  GIterationCadenceUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _title = $v.title;
      _durationInWeeks = $v.durationInWeeks;
      _iterationsInAdvance = $v.iterationsInAdvance;
      _startDate = $v.startDate?.toBuilder();
      _automatic = $v.automatic;
      _active = $v.active;
      _rollOver = $v.rollOver;
      _description = $v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIterationCadenceUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIterationCadenceUpdateInput;
  }

  @override
  void update(void Function(GIterationCadenceUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIterationCadenceUpdateInput build() => _build();

  _$GIterationCadenceUpdateInput _build() {
    _$GIterationCadenceUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GIterationCadenceUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              title: title,
              durationInWeeks: durationInWeeks,
              iterationsInAdvance: iterationsInAdvance,
              startDate: _startDate?.build(),
              automatic: automatic,
              active: active,
              rollOver: rollOver,
              description: description);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'startDate';
        _startDate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIterationCadenceUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GiterationCreateInput extends GiterationCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String? projectPath;
  @override
  final String? groupPath;
  @override
  final GIterationsCadenceID? iterationsCadenceId;
  @override
  final String? title;
  @override
  final String? description;
  @override
  final String? startDate;
  @override
  final String? dueDate;

  factory _$GiterationCreateInput(
          [void Function(GiterationCreateInputBuilder)? updates]) =>
      (new GiterationCreateInputBuilder()..update(updates))._build();

  _$GiterationCreateInput._(
      {this.clientMutationId,
      this.projectPath,
      this.groupPath,
      this.iterationsCadenceId,
      this.title,
      this.description,
      this.startDate,
      this.dueDate})
      : super._();

  @override
  GiterationCreateInput rebuild(
          void Function(GiterationCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GiterationCreateInputBuilder toBuilder() =>
      new GiterationCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GiterationCreateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        groupPath == other.groupPath &&
        iterationsCadenceId == other.iterationsCadenceId &&
        title == other.title &&
        description == other.description &&
        startDate == other.startDate &&
        dueDate == other.dueDate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, clientMutationId.hashCode),
                                projectPath.hashCode),
                            groupPath.hashCode),
                        iterationsCadenceId.hashCode),
                    title.hashCode),
                description.hashCode),
            startDate.hashCode),
        dueDate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GiterationCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('groupPath', groupPath)
          ..add('iterationsCadenceId', iterationsCadenceId)
          ..add('title', title)
          ..add('description', description)
          ..add('startDate', startDate)
          ..add('dueDate', dueDate))
        .toString();
  }
}

class GiterationCreateInputBuilder
    implements Builder<GiterationCreateInput, GiterationCreateInputBuilder> {
  _$GiterationCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  GIterationsCadenceIDBuilder? _iterationsCadenceId;
  GIterationsCadenceIDBuilder get iterationsCadenceId =>
      _$this._iterationsCadenceId ??= new GIterationsCadenceIDBuilder();
  set iterationsCadenceId(GIterationsCadenceIDBuilder? iterationsCadenceId) =>
      _$this._iterationsCadenceId = iterationsCadenceId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _startDate;
  String? get startDate => _$this._startDate;
  set startDate(String? startDate) => _$this._startDate = startDate;

  String? _dueDate;
  String? get dueDate => _$this._dueDate;
  set dueDate(String? dueDate) => _$this._dueDate = dueDate;

  GiterationCreateInputBuilder();

  GiterationCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _groupPath = $v.groupPath;
      _iterationsCadenceId = $v.iterationsCadenceId?.toBuilder();
      _title = $v.title;
      _description = $v.description;
      _startDate = $v.startDate;
      _dueDate = $v.dueDate;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GiterationCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GiterationCreateInput;
  }

  @override
  void update(void Function(GiterationCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GiterationCreateInput build() => _build();

  _$GiterationCreateInput _build() {
    _$GiterationCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GiterationCreateInput._(
              clientMutationId: clientMutationId,
              projectPath: projectPath,
              groupPath: groupPath,
              iterationsCadenceId: _iterationsCadenceId?.build(),
              title: title,
              description: description,
              startDate: startDate,
              dueDate: dueDate);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'iterationsCadenceId';
        _iterationsCadenceId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GiterationCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIterationDeleteInput extends GIterationDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final GIterationID id;

  factory _$GIterationDeleteInput(
          [void Function(GIterationDeleteInputBuilder)? updates]) =>
      (new GIterationDeleteInputBuilder()..update(updates))._build();

  _$GIterationDeleteInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GIterationDeleteInput', 'id');
  }

  @override
  GIterationDeleteInput rebuild(
          void Function(GIterationDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIterationDeleteInputBuilder toBuilder() =>
      new GIterationDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIterationDeleteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIterationDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GIterationDeleteInputBuilder
    implements Builder<GIterationDeleteInput, GIterationDeleteInputBuilder> {
  _$GIterationDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIterationIDBuilder? _id;
  GIterationIDBuilder get id => _$this._id ??= new GIterationIDBuilder();
  set id(GIterationIDBuilder? id) => _$this._id = id;

  GIterationDeleteInputBuilder();

  GIterationDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIterationDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIterationDeleteInput;
  }

  @override
  void update(void Function(GIterationDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIterationDeleteInput build() => _build();

  _$GIterationDeleteInput _build() {
    _$GIterationDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GIterationDeleteInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GIterationDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIterationID extends GIterationID {
  @override
  final String value;

  factory _$GIterationID([void Function(GIterationIDBuilder)? updates]) =>
      (new GIterationIDBuilder()..update(updates))._build();

  _$GIterationID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GIterationID', 'value');
  }

  @override
  GIterationID rebuild(void Function(GIterationIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIterationIDBuilder toBuilder() => new GIterationIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIterationID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIterationID')..add('value', value))
        .toString();
  }
}

class GIterationIDBuilder
    implements Builder<GIterationID, GIterationIDBuilder> {
  _$GIterationID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIterationIDBuilder();

  GIterationIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIterationID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIterationID;
  }

  @override
  void update(void Function(GIterationIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIterationID build() => _build();

  _$GIterationID _build() {
    final _$result = _$v ??
        new _$GIterationID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIterationID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GIterationsCadenceID extends GIterationsCadenceID {
  @override
  final String value;

  factory _$GIterationsCadenceID(
          [void Function(GIterationsCadenceIDBuilder)? updates]) =>
      (new GIterationsCadenceIDBuilder()..update(updates))._build();

  _$GIterationsCadenceID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GIterationsCadenceID', 'value');
  }

  @override
  GIterationsCadenceID rebuild(
          void Function(GIterationsCadenceIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIterationsCadenceIDBuilder toBuilder() =>
      new GIterationsCadenceIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIterationsCadenceID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIterationsCadenceID')
          ..add('value', value))
        .toString();
  }
}

class GIterationsCadenceIDBuilder
    implements Builder<GIterationsCadenceID, GIterationsCadenceIDBuilder> {
  _$GIterationsCadenceID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GIterationsCadenceIDBuilder();

  GIterationsCadenceIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIterationsCadenceID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIterationsCadenceID;
  }

  @override
  void update(void Function(GIterationsCadenceIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIterationsCadenceID build() => _build();

  _$GIterationsCadenceID _build() {
    final _$result = _$v ??
        new _$GIterationsCadenceID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GIterationsCadenceID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GJiraImportStartInput extends GJiraImportStartInput {
  @override
  final String? clientMutationId;
  @override
  final String jiraProjectKey;
  @override
  final String? jiraProjectName;
  @override
  final String projectPath;
  @override
  final BuiltList<GJiraUsersMappingInputType>? usersMapping;

  factory _$GJiraImportStartInput(
          [void Function(GJiraImportStartInputBuilder)? updates]) =>
      (new GJiraImportStartInputBuilder()..update(updates))._build();

  _$GJiraImportStartInput._(
      {this.clientMutationId,
      required this.jiraProjectKey,
      this.jiraProjectName,
      required this.projectPath,
      this.usersMapping})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        jiraProjectKey, r'GJiraImportStartInput', 'jiraProjectKey');
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GJiraImportStartInput', 'projectPath');
  }

  @override
  GJiraImportStartInput rebuild(
          void Function(GJiraImportStartInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJiraImportStartInputBuilder toBuilder() =>
      new GJiraImportStartInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJiraImportStartInput &&
        clientMutationId == other.clientMutationId &&
        jiraProjectKey == other.jiraProjectKey &&
        jiraProjectName == other.jiraProjectName &&
        projectPath == other.projectPath &&
        usersMapping == other.usersMapping;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), jiraProjectKey.hashCode),
                jiraProjectName.hashCode),
            projectPath.hashCode),
        usersMapping.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJiraImportStartInput')
          ..add('clientMutationId', clientMutationId)
          ..add('jiraProjectKey', jiraProjectKey)
          ..add('jiraProjectName', jiraProjectName)
          ..add('projectPath', projectPath)
          ..add('usersMapping', usersMapping))
        .toString();
  }
}

class GJiraImportStartInputBuilder
    implements Builder<GJiraImportStartInput, GJiraImportStartInputBuilder> {
  _$GJiraImportStartInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _jiraProjectKey;
  String? get jiraProjectKey => _$this._jiraProjectKey;
  set jiraProjectKey(String? jiraProjectKey) =>
      _$this._jiraProjectKey = jiraProjectKey;

  String? _jiraProjectName;
  String? get jiraProjectName => _$this._jiraProjectName;
  set jiraProjectName(String? jiraProjectName) =>
      _$this._jiraProjectName = jiraProjectName;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  ListBuilder<GJiraUsersMappingInputType>? _usersMapping;
  ListBuilder<GJiraUsersMappingInputType> get usersMapping =>
      _$this._usersMapping ??= new ListBuilder<GJiraUsersMappingInputType>();
  set usersMapping(ListBuilder<GJiraUsersMappingInputType>? usersMapping) =>
      _$this._usersMapping = usersMapping;

  GJiraImportStartInputBuilder();

  GJiraImportStartInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _jiraProjectKey = $v.jiraProjectKey;
      _jiraProjectName = $v.jiraProjectName;
      _projectPath = $v.projectPath;
      _usersMapping = $v.usersMapping?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJiraImportStartInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJiraImportStartInput;
  }

  @override
  void update(void Function(GJiraImportStartInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJiraImportStartInput build() => _build();

  _$GJiraImportStartInput _build() {
    _$GJiraImportStartInput _$result;
    try {
      _$result = _$v ??
          new _$GJiraImportStartInput._(
              clientMutationId: clientMutationId,
              jiraProjectKey: BuiltValueNullFieldError.checkNotNull(
                  jiraProjectKey, r'GJiraImportStartInput', 'jiraProjectKey'),
              jiraProjectName: jiraProjectName,
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GJiraImportStartInput', 'projectPath'),
              usersMapping: _usersMapping?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'usersMapping';
        _usersMapping?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GJiraImportStartInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GJiraImportUsersInput extends GJiraImportUsersInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final int? startAt;

  factory _$GJiraImportUsersInput(
          [void Function(GJiraImportUsersInputBuilder)? updates]) =>
      (new GJiraImportUsersInputBuilder()..update(updates))._build();

  _$GJiraImportUsersInput._(
      {this.clientMutationId, required this.projectPath, this.startAt})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GJiraImportUsersInput', 'projectPath');
  }

  @override
  GJiraImportUsersInput rebuild(
          void Function(GJiraImportUsersInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJiraImportUsersInputBuilder toBuilder() =>
      new GJiraImportUsersInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJiraImportUsersInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        startAt == other.startAt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
        startAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJiraImportUsersInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('startAt', startAt))
        .toString();
  }
}

class GJiraImportUsersInputBuilder
    implements Builder<GJiraImportUsersInput, GJiraImportUsersInputBuilder> {
  _$GJiraImportUsersInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  int? _startAt;
  int? get startAt => _$this._startAt;
  set startAt(int? startAt) => _$this._startAt = startAt;

  GJiraImportUsersInputBuilder();

  GJiraImportUsersInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _startAt = $v.startAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJiraImportUsersInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJiraImportUsersInput;
  }

  @override
  void update(void Function(GJiraImportUsersInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJiraImportUsersInput build() => _build();

  _$GJiraImportUsersInput _build() {
    final _$result = _$v ??
        new _$GJiraImportUsersInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GJiraImportUsersInput', 'projectPath'),
            startAt: startAt);
    replace(_$result);
    return _$result;
  }
}

class _$GJiraUsersMappingInputType extends GJiraUsersMappingInputType {
  @override
  final int? gitlabId;
  @override
  final String jiraAccountId;

  factory _$GJiraUsersMappingInputType(
          [void Function(GJiraUsersMappingInputTypeBuilder)? updates]) =>
      (new GJiraUsersMappingInputTypeBuilder()..update(updates))._build();

  _$GJiraUsersMappingInputType._({this.gitlabId, required this.jiraAccountId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        jiraAccountId, r'GJiraUsersMappingInputType', 'jiraAccountId');
  }

  @override
  GJiraUsersMappingInputType rebuild(
          void Function(GJiraUsersMappingInputTypeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJiraUsersMappingInputTypeBuilder toBuilder() =>
      new GJiraUsersMappingInputTypeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJiraUsersMappingInputType &&
        gitlabId == other.gitlabId &&
        jiraAccountId == other.jiraAccountId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, gitlabId.hashCode), jiraAccountId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJiraUsersMappingInputType')
          ..add('gitlabId', gitlabId)
          ..add('jiraAccountId', jiraAccountId))
        .toString();
  }
}

class GJiraUsersMappingInputTypeBuilder
    implements
        Builder<GJiraUsersMappingInputType, GJiraUsersMappingInputTypeBuilder> {
  _$GJiraUsersMappingInputType? _$v;

  int? _gitlabId;
  int? get gitlabId => _$this._gitlabId;
  set gitlabId(int? gitlabId) => _$this._gitlabId = gitlabId;

  String? _jiraAccountId;
  String? get jiraAccountId => _$this._jiraAccountId;
  set jiraAccountId(String? jiraAccountId) =>
      _$this._jiraAccountId = jiraAccountId;

  GJiraUsersMappingInputTypeBuilder();

  GJiraUsersMappingInputTypeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _gitlabId = $v.gitlabId;
      _jiraAccountId = $v.jiraAccountId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJiraUsersMappingInputType other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJiraUsersMappingInputType;
  }

  @override
  void update(void Function(GJiraUsersMappingInputTypeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJiraUsersMappingInputType build() => _build();

  _$GJiraUsersMappingInputType _build() {
    final _$result = _$v ??
        new _$GJiraUsersMappingInputType._(
            gitlabId: gitlabId,
            jiraAccountId: BuiltValueNullFieldError.checkNotNull(
                jiraAccountId, r'GJiraUsersMappingInputType', 'jiraAccountId'));
    replace(_$result);
    return _$result;
  }
}

class _$GJobArtifactsDestroyInput extends GJobArtifactsDestroyInput {
  @override
  final GCiBuildID id;
  @override
  final String? clientMutationId;

  factory _$GJobArtifactsDestroyInput(
          [void Function(GJobArtifactsDestroyInputBuilder)? updates]) =>
      (new GJobArtifactsDestroyInputBuilder()..update(updates))._build();

  _$GJobArtifactsDestroyInput._({required this.id, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GJobArtifactsDestroyInput', 'id');
  }

  @override
  GJobArtifactsDestroyInput rebuild(
          void Function(GJobArtifactsDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJobArtifactsDestroyInputBuilder toBuilder() =>
      new GJobArtifactsDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJobArtifactsDestroyInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJobArtifactsDestroyInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GJobArtifactsDestroyInputBuilder
    implements
        Builder<GJobArtifactsDestroyInput, GJobArtifactsDestroyInputBuilder> {
  _$GJobArtifactsDestroyInput? _$v;

  GCiBuildIDBuilder? _id;
  GCiBuildIDBuilder get id => _$this._id ??= new GCiBuildIDBuilder();
  set id(GCiBuildIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GJobArtifactsDestroyInputBuilder();

  GJobArtifactsDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJobArtifactsDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJobArtifactsDestroyInput;
  }

  @override
  void update(void Function(GJobArtifactsDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJobArtifactsDestroyInput build() => _build();

  _$GJobArtifactsDestroyInput _build() {
    _$GJobArtifactsDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GJobArtifactsDestroyInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GJobArtifactsDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GJobCancelInput extends GJobCancelInput {
  @override
  final GCiBuildID id;
  @override
  final String? clientMutationId;

  factory _$GJobCancelInput([void Function(GJobCancelInputBuilder)? updates]) =>
      (new GJobCancelInputBuilder()..update(updates))._build();

  _$GJobCancelInput._({required this.id, this.clientMutationId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GJobCancelInput', 'id');
  }

  @override
  GJobCancelInput rebuild(void Function(GJobCancelInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJobCancelInputBuilder toBuilder() =>
      new GJobCancelInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJobCancelInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJobCancelInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GJobCancelInputBuilder
    implements Builder<GJobCancelInput, GJobCancelInputBuilder> {
  _$GJobCancelInput? _$v;

  GCiBuildIDBuilder? _id;
  GCiBuildIDBuilder get id => _$this._id ??= new GCiBuildIDBuilder();
  set id(GCiBuildIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GJobCancelInputBuilder();

  GJobCancelInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJobCancelInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJobCancelInput;
  }

  @override
  void update(void Function(GJobCancelInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJobCancelInput build() => _build();

  _$GJobCancelInput _build() {
    _$GJobCancelInput _$result;
    try {
      _$result = _$v ??
          new _$GJobCancelInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GJobCancelInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GJobID extends GJobID {
  @override
  final String value;

  factory _$GJobID([void Function(GJobIDBuilder)? updates]) =>
      (new GJobIDBuilder()..update(updates))._build();

  _$GJobID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GJobID', 'value');
  }

  @override
  GJobID rebuild(void Function(GJobIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJobIDBuilder toBuilder() => new GJobIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJobID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJobID')..add('value', value))
        .toString();
  }
}

class GJobIDBuilder implements Builder<GJobID, GJobIDBuilder> {
  _$GJobID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GJobIDBuilder();

  GJobIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJobID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJobID;
  }

  @override
  void update(void Function(GJobIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJobID build() => _build();

  _$GJobID _build() {
    final _$result = _$v ??
        new _$GJobID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GJobID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GJobPlayInput extends GJobPlayInput {
  @override
  final GCiBuildID id;
  @override
  final String? clientMutationId;

  factory _$GJobPlayInput([void Function(GJobPlayInputBuilder)? updates]) =>
      (new GJobPlayInputBuilder()..update(updates))._build();

  _$GJobPlayInput._({required this.id, this.clientMutationId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GJobPlayInput', 'id');
  }

  @override
  GJobPlayInput rebuild(void Function(GJobPlayInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJobPlayInputBuilder toBuilder() => new GJobPlayInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJobPlayInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJobPlayInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GJobPlayInputBuilder
    implements Builder<GJobPlayInput, GJobPlayInputBuilder> {
  _$GJobPlayInput? _$v;

  GCiBuildIDBuilder? _id;
  GCiBuildIDBuilder get id => _$this._id ??= new GCiBuildIDBuilder();
  set id(GCiBuildIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GJobPlayInputBuilder();

  GJobPlayInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJobPlayInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJobPlayInput;
  }

  @override
  void update(void Function(GJobPlayInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJobPlayInput build() => _build();

  _$GJobPlayInput _build() {
    _$GJobPlayInput _$result;
    try {
      _$result = _$v ??
          new _$GJobPlayInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GJobPlayInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GJobRetryInput extends GJobRetryInput {
  @override
  final GCiBuildID id;
  @override
  final String? clientMutationId;
  @override
  final BuiltList<GCiVariableInput>? variables;

  factory _$GJobRetryInput([void Function(GJobRetryInputBuilder)? updates]) =>
      (new GJobRetryInputBuilder()..update(updates))._build();

  _$GJobRetryInput._({required this.id, this.clientMutationId, this.variables})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GJobRetryInput', 'id');
  }

  @override
  GJobRetryInput rebuild(void Function(GJobRetryInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJobRetryInputBuilder toBuilder() =>
      new GJobRetryInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJobRetryInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId &&
        variables == other.variables;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, id.hashCode), clientMutationId.hashCode),
        variables.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJobRetryInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId)
          ..add('variables', variables))
        .toString();
  }
}

class GJobRetryInputBuilder
    implements Builder<GJobRetryInput, GJobRetryInputBuilder> {
  _$GJobRetryInput? _$v;

  GCiBuildIDBuilder? _id;
  GCiBuildIDBuilder get id => _$this._id ??= new GCiBuildIDBuilder();
  set id(GCiBuildIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<GCiVariableInput>? _variables;
  ListBuilder<GCiVariableInput> get variables =>
      _$this._variables ??= new ListBuilder<GCiVariableInput>();
  set variables(ListBuilder<GCiVariableInput>? variables) =>
      _$this._variables = variables;

  GJobRetryInputBuilder();

  GJobRetryInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _variables = $v.variables?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJobRetryInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJobRetryInput;
  }

  @override
  void update(void Function(GJobRetryInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJobRetryInput build() => _build();

  _$GJobRetryInput _build() {
    _$GJobRetryInput _$result;
    try {
      _$result = _$v ??
          new _$GJobRetryInput._(
              id: id.build(),
              clientMutationId: clientMutationId,
              variables: _variables?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'variables';
        _variables?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GJobRetryInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GJobUnscheduleInput extends GJobUnscheduleInput {
  @override
  final GCiBuildID id;
  @override
  final String? clientMutationId;

  factory _$GJobUnscheduleInput(
          [void Function(GJobUnscheduleInputBuilder)? updates]) =>
      (new GJobUnscheduleInputBuilder()..update(updates))._build();

  _$GJobUnscheduleInput._({required this.id, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GJobUnscheduleInput', 'id');
  }

  @override
  GJobUnscheduleInput rebuild(
          void Function(GJobUnscheduleInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJobUnscheduleInputBuilder toBuilder() =>
      new GJobUnscheduleInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJobUnscheduleInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJobUnscheduleInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GJobUnscheduleInputBuilder
    implements Builder<GJobUnscheduleInput, GJobUnscheduleInputBuilder> {
  _$GJobUnscheduleInput? _$v;

  GCiBuildIDBuilder? _id;
  GCiBuildIDBuilder get id => _$this._id ??= new GCiBuildIDBuilder();
  set id(GCiBuildIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GJobUnscheduleInputBuilder();

  GJobUnscheduleInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJobUnscheduleInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJobUnscheduleInput;
  }

  @override
  void update(void Function(GJobUnscheduleInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJobUnscheduleInput build() => _build();

  _$GJobUnscheduleInput _build() {
    _$GJobUnscheduleInput _$result;
    try {
      _$result = _$v ??
          new _$GJobUnscheduleInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GJobUnscheduleInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GJSON extends GJSON {
  @override
  final String value;

  factory _$GJSON([void Function(GJSONBuilder)? updates]) =>
      (new GJSONBuilder()..update(updates))._build();

  _$GJSON._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GJSON', 'value');
  }

  @override
  GJSON rebuild(void Function(GJSONBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJSONBuilder toBuilder() => new GJSONBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJSON && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJSON')..add('value', value))
        .toString();
  }
}

class GJSONBuilder implements Builder<GJSON, GJSONBuilder> {
  _$GJSON? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GJSONBuilder();

  GJSONBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJSON other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJSON;
  }

  @override
  void update(void Function(GJSONBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJSON build() => _build();

  _$GJSON _build() {
    final _$result = _$v ??
        new _$GJSON._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GJSON', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GJsonString extends GJsonString {
  @override
  final String value;

  factory _$GJsonString([void Function(GJsonStringBuilder)? updates]) =>
      (new GJsonStringBuilder()..update(updates))._build();

  _$GJsonString._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GJsonString', 'value');
  }

  @override
  GJsonString rebuild(void Function(GJsonStringBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJsonStringBuilder toBuilder() => new GJsonStringBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJsonString && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJsonString')..add('value', value))
        .toString();
  }
}

class GJsonStringBuilder implements Builder<GJsonString, GJsonStringBuilder> {
  _$GJsonString? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GJsonStringBuilder();

  GJsonStringBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJsonString other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJsonString;
  }

  @override
  void update(void Function(GJsonStringBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJsonString build() => _build();

  _$GJsonString _build() {
    final _$result = _$v ??
        new _$GJsonString._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GJsonString', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GLabelCreateInput extends GLabelCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String? projectPath;
  @override
  final String? groupPath;
  @override
  final String title;
  @override
  final String? description;
  @override
  final String? color;

  factory _$GLabelCreateInput(
          [void Function(GLabelCreateInputBuilder)? updates]) =>
      (new GLabelCreateInputBuilder()..update(updates))._build();

  _$GLabelCreateInput._(
      {this.clientMutationId,
      this.projectPath,
      this.groupPath,
      required this.title,
      this.description,
      this.color})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(title, r'GLabelCreateInput', 'title');
  }

  @override
  GLabelCreateInput rebuild(void Function(GLabelCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLabelCreateInputBuilder toBuilder() =>
      new GLabelCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLabelCreateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        groupPath == other.groupPath &&
        title == other.title &&
        description == other.description &&
        color == other.color;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc(0, clientMutationId.hashCode),
                        projectPath.hashCode),
                    groupPath.hashCode),
                title.hashCode),
            description.hashCode),
        color.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLabelCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('groupPath', groupPath)
          ..add('title', title)
          ..add('description', description)
          ..add('color', color))
        .toString();
  }
}

class GLabelCreateInputBuilder
    implements Builder<GLabelCreateInput, GLabelCreateInputBuilder> {
  _$GLabelCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _color;
  String? get color => _$this._color;
  set color(String? color) => _$this._color = color;

  GLabelCreateInputBuilder();

  GLabelCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _groupPath = $v.groupPath;
      _title = $v.title;
      _description = $v.description;
      _color = $v.color;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLabelCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLabelCreateInput;
  }

  @override
  void update(void Function(GLabelCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLabelCreateInput build() => _build();

  _$GLabelCreateInput _build() {
    final _$result = _$v ??
        new _$GLabelCreateInput._(
            clientMutationId: clientMutationId,
            projectPath: projectPath,
            groupPath: groupPath,
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GLabelCreateInput', 'title'),
            description: description,
            color: color);
    replace(_$result);
    return _$result;
  }
}

class _$GLabelID extends GLabelID {
  @override
  final String value;

  factory _$GLabelID([void Function(GLabelIDBuilder)? updates]) =>
      (new GLabelIDBuilder()..update(updates))._build();

  _$GLabelID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GLabelID', 'value');
  }

  @override
  GLabelID rebuild(void Function(GLabelIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLabelIDBuilder toBuilder() => new GLabelIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLabelID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLabelID')..add('value', value))
        .toString();
  }
}

class GLabelIDBuilder implements Builder<GLabelID, GLabelIDBuilder> {
  _$GLabelID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GLabelIDBuilder();

  GLabelIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLabelID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLabelID;
  }

  @override
  void update(void Function(GLabelIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLabelID build() => _build();

  _$GLabelID _build() {
    final _$result = _$v ??
        new _$GLabelID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GLabelID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GListID extends GListID {
  @override
  final String value;

  factory _$GListID([void Function(GListIDBuilder)? updates]) =>
      (new GListIDBuilder()..update(updates))._build();

  _$GListID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GListID', 'value');
  }

  @override
  GListID rebuild(void Function(GListIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GListIDBuilder toBuilder() => new GListIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GListID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GListID')..add('value', value))
        .toString();
  }
}

class GListIDBuilder implements Builder<GListID, GListIDBuilder> {
  _$GListID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GListIDBuilder();

  GListIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GListID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GListID;
  }

  @override
  void update(void Function(GListIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GListID build() => _build();

  _$GListID _build() {
    final _$result = _$v ??
        new _$GListID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GListID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GMarkAsSpamSnippetInput extends GMarkAsSpamSnippetInput {
  @override
  final String? clientMutationId;
  @override
  final GSnippetID id;

  factory _$GMarkAsSpamSnippetInput(
          [void Function(GMarkAsSpamSnippetInputBuilder)? updates]) =>
      (new GMarkAsSpamSnippetInputBuilder()..update(updates))._build();

  _$GMarkAsSpamSnippetInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GMarkAsSpamSnippetInput', 'id');
  }

  @override
  GMarkAsSpamSnippetInput rebuild(
          void Function(GMarkAsSpamSnippetInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMarkAsSpamSnippetInputBuilder toBuilder() =>
      new GMarkAsSpamSnippetInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMarkAsSpamSnippetInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMarkAsSpamSnippetInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GMarkAsSpamSnippetInputBuilder
    implements
        Builder<GMarkAsSpamSnippetInput, GMarkAsSpamSnippetInputBuilder> {
  _$GMarkAsSpamSnippetInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GSnippetIDBuilder? _id;
  GSnippetIDBuilder get id => _$this._id ??= new GSnippetIDBuilder();
  set id(GSnippetIDBuilder? id) => _$this._id = id;

  GMarkAsSpamSnippetInputBuilder();

  GMarkAsSpamSnippetInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMarkAsSpamSnippetInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMarkAsSpamSnippetInput;
  }

  @override
  void update(void Function(GMarkAsSpamSnippetInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMarkAsSpamSnippetInput build() => _build();

  _$GMarkAsSpamSnippetInput _build() {
    _$GMarkAsSpamSnippetInput _$result;
    try {
      _$result = _$v ??
          new _$GMarkAsSpamSnippetInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMarkAsSpamSnippetInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestAcceptInput extends GMergeRequestAcceptInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final GMergeStrategyEnum? strategy;
  @override
  final String? commitMessage;
  @override
  final String sha;
  @override
  final String? squashCommitMessage;
  @override
  final bool? shouldRemoveSourceBranch;
  @override
  final bool? squash;

  factory _$GMergeRequestAcceptInput(
          [void Function(GMergeRequestAcceptInputBuilder)? updates]) =>
      (new GMergeRequestAcceptInputBuilder()..update(updates))._build();

  _$GMergeRequestAcceptInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      this.strategy,
      this.commitMessage,
      required this.sha,
      this.squashCommitMessage,
      this.shouldRemoveSourceBranch,
      this.squash})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestAcceptInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GMergeRequestAcceptInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        sha, r'GMergeRequestAcceptInput', 'sha');
  }

  @override
  GMergeRequestAcceptInput rebuild(
          void Function(GMergeRequestAcceptInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestAcceptInputBuilder toBuilder() =>
      new GMergeRequestAcceptInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestAcceptInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        strategy == other.strategy &&
        commitMessage == other.commitMessage &&
        sha == other.sha &&
        squashCommitMessage == other.squashCommitMessage &&
        shouldRemoveSourceBranch == other.shouldRemoveSourceBranch &&
        squash == other.squash;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
                                clientMutationId.hashCode),
                            strategy.hashCode),
                        commitMessage.hashCode),
                    sha.hashCode),
                squashCommitMessage.hashCode),
            shouldRemoveSourceBranch.hashCode),
        squash.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestAcceptInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('strategy', strategy)
          ..add('commitMessage', commitMessage)
          ..add('sha', sha)
          ..add('squashCommitMessage', squashCommitMessage)
          ..add('shouldRemoveSourceBranch', shouldRemoveSourceBranch)
          ..add('squash', squash))
        .toString();
  }
}

class GMergeRequestAcceptInputBuilder
    implements
        Builder<GMergeRequestAcceptInput, GMergeRequestAcceptInputBuilder> {
  _$GMergeRequestAcceptInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GMergeStrategyEnum? _strategy;
  GMergeStrategyEnum? get strategy => _$this._strategy;
  set strategy(GMergeStrategyEnum? strategy) => _$this._strategy = strategy;

  String? _commitMessage;
  String? get commitMessage => _$this._commitMessage;
  set commitMessage(String? commitMessage) =>
      _$this._commitMessage = commitMessage;

  String? _sha;
  String? get sha => _$this._sha;
  set sha(String? sha) => _$this._sha = sha;

  String? _squashCommitMessage;
  String? get squashCommitMessage => _$this._squashCommitMessage;
  set squashCommitMessage(String? squashCommitMessage) =>
      _$this._squashCommitMessage = squashCommitMessage;

  bool? _shouldRemoveSourceBranch;
  bool? get shouldRemoveSourceBranch => _$this._shouldRemoveSourceBranch;
  set shouldRemoveSourceBranch(bool? shouldRemoveSourceBranch) =>
      _$this._shouldRemoveSourceBranch = shouldRemoveSourceBranch;

  bool? _squash;
  bool? get squash => _$this._squash;
  set squash(bool? squash) => _$this._squash = squash;

  GMergeRequestAcceptInputBuilder();

  GMergeRequestAcceptInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _strategy = $v.strategy;
      _commitMessage = $v.commitMessage;
      _sha = $v.sha;
      _squashCommitMessage = $v.squashCommitMessage;
      _shouldRemoveSourceBranch = $v.shouldRemoveSourceBranch;
      _squash = $v.squash;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestAcceptInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestAcceptInput;
  }

  @override
  void update(void Function(GMergeRequestAcceptInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestAcceptInput build() => _build();

  _$GMergeRequestAcceptInput _build() {
    final _$result = _$v ??
        new _$GMergeRequestAcceptInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GMergeRequestAcceptInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GMergeRequestAcceptInput', 'iid'),
            clientMutationId: clientMutationId,
            strategy: strategy,
            commitMessage: commitMessage,
            sha: BuiltValueNullFieldError.checkNotNull(
                sha, r'GMergeRequestAcceptInput', 'sha'),
            squashCommitMessage: squashCommitMessage,
            shouldRemoveSourceBranch: shouldRemoveSourceBranch,
            squash: squash);
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestCreateInput extends GMergeRequestCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String title;
  @override
  final String sourceBranch;
  @override
  final String targetBranch;
  @override
  final String? description;
  @override
  final BuiltList<String>? labels;

  factory _$GMergeRequestCreateInput(
          [void Function(GMergeRequestCreateInputBuilder)? updates]) =>
      (new GMergeRequestCreateInputBuilder()..update(updates))._build();

  _$GMergeRequestCreateInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.title,
      required this.sourceBranch,
      required this.targetBranch,
      this.description,
      this.labels})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GMergeRequestCreateInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        sourceBranch, r'GMergeRequestCreateInput', 'sourceBranch');
    BuiltValueNullFieldError.checkNotNull(
        targetBranch, r'GMergeRequestCreateInput', 'targetBranch');
  }

  @override
  GMergeRequestCreateInput rebuild(
          void Function(GMergeRequestCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestCreateInputBuilder toBuilder() =>
      new GMergeRequestCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestCreateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        title == other.title &&
        sourceBranch == other.sourceBranch &&
        targetBranch == other.targetBranch &&
        description == other.description &&
        labels == other.labels;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, clientMutationId.hashCode),
                            projectPath.hashCode),
                        title.hashCode),
                    sourceBranch.hashCode),
                targetBranch.hashCode),
            description.hashCode),
        labels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('title', title)
          ..add('sourceBranch', sourceBranch)
          ..add('targetBranch', targetBranch)
          ..add('description', description)
          ..add('labels', labels))
        .toString();
  }
}

class GMergeRequestCreateInputBuilder
    implements
        Builder<GMergeRequestCreateInput, GMergeRequestCreateInputBuilder> {
  _$GMergeRequestCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _sourceBranch;
  String? get sourceBranch => _$this._sourceBranch;
  set sourceBranch(String? sourceBranch) => _$this._sourceBranch = sourceBranch;

  String? _targetBranch;
  String? get targetBranch => _$this._targetBranch;
  set targetBranch(String? targetBranch) => _$this._targetBranch = targetBranch;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  ListBuilder<String>? _labels;
  ListBuilder<String> get labels =>
      _$this._labels ??= new ListBuilder<String>();
  set labels(ListBuilder<String>? labels) => _$this._labels = labels;

  GMergeRequestCreateInputBuilder();

  GMergeRequestCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _title = $v.title;
      _sourceBranch = $v.sourceBranch;
      _targetBranch = $v.targetBranch;
      _description = $v.description;
      _labels = $v.labels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestCreateInput;
  }

  @override
  void update(void Function(GMergeRequestCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestCreateInput build() => _build();

  _$GMergeRequestCreateInput _build() {
    _$GMergeRequestCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GMergeRequestCreateInput._(
              clientMutationId: clientMutationId,
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GMergeRequestCreateInput', 'projectPath'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GMergeRequestCreateInput', 'title'),
              sourceBranch: BuiltValueNullFieldError.checkNotNull(
                  sourceBranch, r'GMergeRequestCreateInput', 'sourceBranch'),
              targetBranch: BuiltValueNullFieldError.checkNotNull(
                  targetBranch, r'GMergeRequestCreateInput', 'targetBranch'),
              description: description,
              labels: _labels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labels';
        _labels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMergeRequestCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestID extends GMergeRequestID {
  @override
  final String value;

  factory _$GMergeRequestID([void Function(GMergeRequestIDBuilder)? updates]) =>
      (new GMergeRequestIDBuilder()..update(updates))._build();

  _$GMergeRequestID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GMergeRequestID', 'value');
  }

  @override
  GMergeRequestID rebuild(void Function(GMergeRequestIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestIDBuilder toBuilder() =>
      new GMergeRequestIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestID')
          ..add('value', value))
        .toString();
  }
}

class GMergeRequestIDBuilder
    implements Builder<GMergeRequestID, GMergeRequestIDBuilder> {
  _$GMergeRequestID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GMergeRequestIDBuilder();

  GMergeRequestIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestID;
  }

  @override
  void update(void Function(GMergeRequestIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestID build() => _build();

  _$GMergeRequestID _build() {
    final _$result = _$v ??
        new _$GMergeRequestID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GMergeRequestID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestReviewerRereviewInput
    extends GMergeRequestReviewerRereviewInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final GUserID userId;

  factory _$GMergeRequestReviewerRereviewInput(
          [void Function(GMergeRequestReviewerRereviewInputBuilder)?
              updates]) =>
      (new GMergeRequestReviewerRereviewInputBuilder()..update(updates))
          ._build();

  _$GMergeRequestReviewerRereviewInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.userId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestReviewerRereviewInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GMergeRequestReviewerRereviewInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        userId, r'GMergeRequestReviewerRereviewInput', 'userId');
  }

  @override
  GMergeRequestReviewerRereviewInput rebuild(
          void Function(GMergeRequestReviewerRereviewInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestReviewerRereviewInputBuilder toBuilder() =>
      new GMergeRequestReviewerRereviewInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestReviewerRereviewInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestReviewerRereviewInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('userId', userId))
        .toString();
  }
}

class GMergeRequestReviewerRereviewInputBuilder
    implements
        Builder<GMergeRequestReviewerRereviewInput,
            GMergeRequestReviewerRereviewInputBuilder> {
  _$GMergeRequestReviewerRereviewInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GUserIDBuilder? _userId;
  GUserIDBuilder get userId => _$this._userId ??= new GUserIDBuilder();
  set userId(GUserIDBuilder? userId) => _$this._userId = userId;

  GMergeRequestReviewerRereviewInputBuilder();

  GMergeRequestReviewerRereviewInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _userId = $v.userId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestReviewerRereviewInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestReviewerRereviewInput;
  }

  @override
  void update(
      void Function(GMergeRequestReviewerRereviewInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestReviewerRereviewInput build() => _build();

  _$GMergeRequestReviewerRereviewInput _build() {
    _$GMergeRequestReviewerRereviewInput _$result;
    try {
      _$result = _$v ??
          new _$GMergeRequestReviewerRereviewInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                  r'GMergeRequestReviewerRereviewInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GMergeRequestReviewerRereviewInput', 'iid'),
              clientMutationId: clientMutationId,
              userId: userId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'userId';
        userId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMergeRequestReviewerRereviewInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestSetAssigneesInput extends GMergeRequestSetAssigneesInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final BuiltList<String> assigneeUsernames;
  @override
  final GMutationOperationMode? operationMode;

  factory _$GMergeRequestSetAssigneesInput(
          [void Function(GMergeRequestSetAssigneesInputBuilder)? updates]) =>
      (new GMergeRequestSetAssigneesInputBuilder()..update(updates))._build();

  _$GMergeRequestSetAssigneesInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.assigneeUsernames,
      this.operationMode})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestSetAssigneesInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GMergeRequestSetAssigneesInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(assigneeUsernames,
        r'GMergeRequestSetAssigneesInput', 'assigneeUsernames');
  }

  @override
  GMergeRequestSetAssigneesInput rebuild(
          void Function(GMergeRequestSetAssigneesInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestSetAssigneesInputBuilder toBuilder() =>
      new GMergeRequestSetAssigneesInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestSetAssigneesInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        assigneeUsernames == other.assigneeUsernames &&
        operationMode == other.operationMode;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
                clientMutationId.hashCode),
            assigneeUsernames.hashCode),
        operationMode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestSetAssigneesInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('assigneeUsernames', assigneeUsernames)
          ..add('operationMode', operationMode))
        .toString();
  }
}

class GMergeRequestSetAssigneesInputBuilder
    implements
        Builder<GMergeRequestSetAssigneesInput,
            GMergeRequestSetAssigneesInputBuilder> {
  _$GMergeRequestSetAssigneesInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<String>? _assigneeUsernames;
  ListBuilder<String> get assigneeUsernames =>
      _$this._assigneeUsernames ??= new ListBuilder<String>();
  set assigneeUsernames(ListBuilder<String>? assigneeUsernames) =>
      _$this._assigneeUsernames = assigneeUsernames;

  GMutationOperationMode? _operationMode;
  GMutationOperationMode? get operationMode => _$this._operationMode;
  set operationMode(GMutationOperationMode? operationMode) =>
      _$this._operationMode = operationMode;

  GMergeRequestSetAssigneesInputBuilder();

  GMergeRequestSetAssigneesInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _assigneeUsernames = $v.assigneeUsernames.toBuilder();
      _operationMode = $v.operationMode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestSetAssigneesInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestSetAssigneesInput;
  }

  @override
  void update(void Function(GMergeRequestSetAssigneesInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestSetAssigneesInput build() => _build();

  _$GMergeRequestSetAssigneesInput _build() {
    _$GMergeRequestSetAssigneesInput _$result;
    try {
      _$result = _$v ??
          new _$GMergeRequestSetAssigneesInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                  r'GMergeRequestSetAssigneesInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GMergeRequestSetAssigneesInput', 'iid'),
              clientMutationId: clientMutationId,
              assigneeUsernames: assigneeUsernames.build(),
              operationMode: operationMode);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'assigneeUsernames';
        assigneeUsernames.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMergeRequestSetAssigneesInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestSetDraftInput extends GMergeRequestSetDraftInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final bool draft;

  factory _$GMergeRequestSetDraftInput(
          [void Function(GMergeRequestSetDraftInputBuilder)? updates]) =>
      (new GMergeRequestSetDraftInputBuilder()..update(updates))._build();

  _$GMergeRequestSetDraftInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.draft})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestSetDraftInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GMergeRequestSetDraftInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        draft, r'GMergeRequestSetDraftInput', 'draft');
  }

  @override
  GMergeRequestSetDraftInput rebuild(
          void Function(GMergeRequestSetDraftInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestSetDraftInputBuilder toBuilder() =>
      new GMergeRequestSetDraftInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestSetDraftInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        draft == other.draft;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        draft.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestSetDraftInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('draft', draft))
        .toString();
  }
}

class GMergeRequestSetDraftInputBuilder
    implements
        Builder<GMergeRequestSetDraftInput, GMergeRequestSetDraftInputBuilder> {
  _$GMergeRequestSetDraftInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  bool? _draft;
  bool? get draft => _$this._draft;
  set draft(bool? draft) => _$this._draft = draft;

  GMergeRequestSetDraftInputBuilder();

  GMergeRequestSetDraftInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _draft = $v.draft;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestSetDraftInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestSetDraftInput;
  }

  @override
  void update(void Function(GMergeRequestSetDraftInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestSetDraftInput build() => _build();

  _$GMergeRequestSetDraftInput _build() {
    final _$result = _$v ??
        new _$GMergeRequestSetDraftInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GMergeRequestSetDraftInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GMergeRequestSetDraftInput', 'iid'),
            clientMutationId: clientMutationId,
            draft: BuiltValueNullFieldError.checkNotNull(
                draft, r'GMergeRequestSetDraftInput', 'draft'));
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestSetLabelsInput extends GMergeRequestSetLabelsInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final BuiltList<GLabelID> labelIds;
  @override
  final GMutationOperationMode? operationMode;

  factory _$GMergeRequestSetLabelsInput(
          [void Function(GMergeRequestSetLabelsInputBuilder)? updates]) =>
      (new GMergeRequestSetLabelsInputBuilder()..update(updates))._build();

  _$GMergeRequestSetLabelsInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.labelIds,
      this.operationMode})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestSetLabelsInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GMergeRequestSetLabelsInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        labelIds, r'GMergeRequestSetLabelsInput', 'labelIds');
  }

  @override
  GMergeRequestSetLabelsInput rebuild(
          void Function(GMergeRequestSetLabelsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestSetLabelsInputBuilder toBuilder() =>
      new GMergeRequestSetLabelsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestSetLabelsInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        labelIds == other.labelIds &&
        operationMode == other.operationMode;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
                clientMutationId.hashCode),
            labelIds.hashCode),
        operationMode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestSetLabelsInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('labelIds', labelIds)
          ..add('operationMode', operationMode))
        .toString();
  }
}

class GMergeRequestSetLabelsInputBuilder
    implements
        Builder<GMergeRequestSetLabelsInput,
            GMergeRequestSetLabelsInputBuilder> {
  _$GMergeRequestSetLabelsInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<GLabelID>? _labelIds;
  ListBuilder<GLabelID> get labelIds =>
      _$this._labelIds ??= new ListBuilder<GLabelID>();
  set labelIds(ListBuilder<GLabelID>? labelIds) => _$this._labelIds = labelIds;

  GMutationOperationMode? _operationMode;
  GMutationOperationMode? get operationMode => _$this._operationMode;
  set operationMode(GMutationOperationMode? operationMode) =>
      _$this._operationMode = operationMode;

  GMergeRequestSetLabelsInputBuilder();

  GMergeRequestSetLabelsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _labelIds = $v.labelIds.toBuilder();
      _operationMode = $v.operationMode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestSetLabelsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestSetLabelsInput;
  }

  @override
  void update(void Function(GMergeRequestSetLabelsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestSetLabelsInput build() => _build();

  _$GMergeRequestSetLabelsInput _build() {
    _$GMergeRequestSetLabelsInput _$result;
    try {
      _$result = _$v ??
          new _$GMergeRequestSetLabelsInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GMergeRequestSetLabelsInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GMergeRequestSetLabelsInput', 'iid'),
              clientMutationId: clientMutationId,
              labelIds: labelIds.build(),
              operationMode: operationMode);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labelIds';
        labelIds.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMergeRequestSetLabelsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestSetLockedInput extends GMergeRequestSetLockedInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final bool locked;

  factory _$GMergeRequestSetLockedInput(
          [void Function(GMergeRequestSetLockedInputBuilder)? updates]) =>
      (new GMergeRequestSetLockedInputBuilder()..update(updates))._build();

  _$GMergeRequestSetLockedInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.locked})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestSetLockedInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GMergeRequestSetLockedInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        locked, r'GMergeRequestSetLockedInput', 'locked');
  }

  @override
  GMergeRequestSetLockedInput rebuild(
          void Function(GMergeRequestSetLockedInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestSetLockedInputBuilder toBuilder() =>
      new GMergeRequestSetLockedInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestSetLockedInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        locked == other.locked;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        locked.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestSetLockedInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('locked', locked))
        .toString();
  }
}

class GMergeRequestSetLockedInputBuilder
    implements
        Builder<GMergeRequestSetLockedInput,
            GMergeRequestSetLockedInputBuilder> {
  _$GMergeRequestSetLockedInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  bool? _locked;
  bool? get locked => _$this._locked;
  set locked(bool? locked) => _$this._locked = locked;

  GMergeRequestSetLockedInputBuilder();

  GMergeRequestSetLockedInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _locked = $v.locked;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestSetLockedInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestSetLockedInput;
  }

  @override
  void update(void Function(GMergeRequestSetLockedInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestSetLockedInput build() => _build();

  _$GMergeRequestSetLockedInput _build() {
    final _$result = _$v ??
        new _$GMergeRequestSetLockedInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GMergeRequestSetLockedInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GMergeRequestSetLockedInput', 'iid'),
            clientMutationId: clientMutationId,
            locked: BuiltValueNullFieldError.checkNotNull(
                locked, r'GMergeRequestSetLockedInput', 'locked'));
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestSetMilestoneInput extends GMergeRequestSetMilestoneInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final GMilestoneID? milestoneId;

  factory _$GMergeRequestSetMilestoneInput(
          [void Function(GMergeRequestSetMilestoneInputBuilder)? updates]) =>
      (new GMergeRequestSetMilestoneInputBuilder()..update(updates))._build();

  _$GMergeRequestSetMilestoneInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      this.milestoneId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestSetMilestoneInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GMergeRequestSetMilestoneInput', 'iid');
  }

  @override
  GMergeRequestSetMilestoneInput rebuild(
          void Function(GMergeRequestSetMilestoneInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestSetMilestoneInputBuilder toBuilder() =>
      new GMergeRequestSetMilestoneInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestSetMilestoneInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        milestoneId == other.milestoneId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        milestoneId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestSetMilestoneInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('milestoneId', milestoneId))
        .toString();
  }
}

class GMergeRequestSetMilestoneInputBuilder
    implements
        Builder<GMergeRequestSetMilestoneInput,
            GMergeRequestSetMilestoneInputBuilder> {
  _$GMergeRequestSetMilestoneInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GMilestoneIDBuilder? _milestoneId;
  GMilestoneIDBuilder get milestoneId =>
      _$this._milestoneId ??= new GMilestoneIDBuilder();
  set milestoneId(GMilestoneIDBuilder? milestoneId) =>
      _$this._milestoneId = milestoneId;

  GMergeRequestSetMilestoneInputBuilder();

  GMergeRequestSetMilestoneInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _milestoneId = $v.milestoneId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestSetMilestoneInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestSetMilestoneInput;
  }

  @override
  void update(void Function(GMergeRequestSetMilestoneInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestSetMilestoneInput build() => _build();

  _$GMergeRequestSetMilestoneInput _build() {
    _$GMergeRequestSetMilestoneInput _$result;
    try {
      _$result = _$v ??
          new _$GMergeRequestSetMilestoneInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                  r'GMergeRequestSetMilestoneInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GMergeRequestSetMilestoneInput', 'iid'),
              clientMutationId: clientMutationId,
              milestoneId: _milestoneId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'milestoneId';
        _milestoneId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMergeRequestSetMilestoneInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestSetReviewersInput extends GMergeRequestSetReviewersInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final BuiltList<String> reviewerUsernames;
  @override
  final GMutationOperationMode? operationMode;

  factory _$GMergeRequestSetReviewersInput(
          [void Function(GMergeRequestSetReviewersInputBuilder)? updates]) =>
      (new GMergeRequestSetReviewersInputBuilder()..update(updates))._build();

  _$GMergeRequestSetReviewersInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.reviewerUsernames,
      this.operationMode})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestSetReviewersInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GMergeRequestSetReviewersInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(reviewerUsernames,
        r'GMergeRequestSetReviewersInput', 'reviewerUsernames');
  }

  @override
  GMergeRequestSetReviewersInput rebuild(
          void Function(GMergeRequestSetReviewersInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestSetReviewersInputBuilder toBuilder() =>
      new GMergeRequestSetReviewersInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestSetReviewersInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        reviewerUsernames == other.reviewerUsernames &&
        operationMode == other.operationMode;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
                clientMutationId.hashCode),
            reviewerUsernames.hashCode),
        operationMode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestSetReviewersInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('reviewerUsernames', reviewerUsernames)
          ..add('operationMode', operationMode))
        .toString();
  }
}

class GMergeRequestSetReviewersInputBuilder
    implements
        Builder<GMergeRequestSetReviewersInput,
            GMergeRequestSetReviewersInputBuilder> {
  _$GMergeRequestSetReviewersInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<String>? _reviewerUsernames;
  ListBuilder<String> get reviewerUsernames =>
      _$this._reviewerUsernames ??= new ListBuilder<String>();
  set reviewerUsernames(ListBuilder<String>? reviewerUsernames) =>
      _$this._reviewerUsernames = reviewerUsernames;

  GMutationOperationMode? _operationMode;
  GMutationOperationMode? get operationMode => _$this._operationMode;
  set operationMode(GMutationOperationMode? operationMode) =>
      _$this._operationMode = operationMode;

  GMergeRequestSetReviewersInputBuilder();

  GMergeRequestSetReviewersInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _reviewerUsernames = $v.reviewerUsernames.toBuilder();
      _operationMode = $v.operationMode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestSetReviewersInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestSetReviewersInput;
  }

  @override
  void update(void Function(GMergeRequestSetReviewersInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestSetReviewersInput build() => _build();

  _$GMergeRequestSetReviewersInput _build() {
    _$GMergeRequestSetReviewersInput _$result;
    try {
      _$result = _$v ??
          new _$GMergeRequestSetReviewersInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                  r'GMergeRequestSetReviewersInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GMergeRequestSetReviewersInput', 'iid'),
              clientMutationId: clientMutationId,
              reviewerUsernames: reviewerUsernames.build(),
              operationMode: operationMode);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'reviewerUsernames';
        reviewerUsernames.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMergeRequestSetReviewersInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestSetSubscriptionInput
    extends GMergeRequestSetSubscriptionInput {
  @override
  final String? clientMutationId;
  @override
  final bool subscribedState;
  @override
  final String projectPath;
  @override
  final String iid;

  factory _$GMergeRequestSetSubscriptionInput(
          [void Function(GMergeRequestSetSubscriptionInputBuilder)? updates]) =>
      (new GMergeRequestSetSubscriptionInputBuilder()..update(updates))
          ._build();

  _$GMergeRequestSetSubscriptionInput._(
      {this.clientMutationId,
      required this.subscribedState,
      required this.projectPath,
      required this.iid})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(subscribedState,
        r'GMergeRequestSetSubscriptionInput', 'subscribedState');
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestSetSubscriptionInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GMergeRequestSetSubscriptionInput', 'iid');
  }

  @override
  GMergeRequestSetSubscriptionInput rebuild(
          void Function(GMergeRequestSetSubscriptionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestSetSubscriptionInputBuilder toBuilder() =>
      new GMergeRequestSetSubscriptionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestSetSubscriptionInput &&
        clientMutationId == other.clientMutationId &&
        subscribedState == other.subscribedState &&
        projectPath == other.projectPath &&
        iid == other.iid;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), subscribedState.hashCode),
            projectPath.hashCode),
        iid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestSetSubscriptionInput')
          ..add('clientMutationId', clientMutationId)
          ..add('subscribedState', subscribedState)
          ..add('projectPath', projectPath)
          ..add('iid', iid))
        .toString();
  }
}

class GMergeRequestSetSubscriptionInputBuilder
    implements
        Builder<GMergeRequestSetSubscriptionInput,
            GMergeRequestSetSubscriptionInputBuilder> {
  _$GMergeRequestSetSubscriptionInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  bool? _subscribedState;
  bool? get subscribedState => _$this._subscribedState;
  set subscribedState(bool? subscribedState) =>
      _$this._subscribedState = subscribedState;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  GMergeRequestSetSubscriptionInputBuilder();

  GMergeRequestSetSubscriptionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _subscribedState = $v.subscribedState;
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestSetSubscriptionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestSetSubscriptionInput;
  }

  @override
  void update(
      void Function(GMergeRequestSetSubscriptionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestSetSubscriptionInput build() => _build();

  _$GMergeRequestSetSubscriptionInput _build() {
    final _$result = _$v ??
        new _$GMergeRequestSetSubscriptionInput._(
            clientMutationId: clientMutationId,
            subscribedState: BuiltValueNullFieldError.checkNotNull(
                subscribedState,
                r'GMergeRequestSetSubscriptionInput',
                'subscribedState'),
            projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                r'GMergeRequestSetSubscriptionInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GMergeRequestSetSubscriptionInput', 'iid'));
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestsResolverNegatedParams
    extends GMergeRequestsResolverNegatedParams {
  @override
  final BuiltList<String>? labels;
  @override
  final String? milestoneTitle;

  factory _$GMergeRequestsResolverNegatedParams(
          [void Function(GMergeRequestsResolverNegatedParamsBuilder)?
              updates]) =>
      (new GMergeRequestsResolverNegatedParamsBuilder()..update(updates))
          ._build();

  _$GMergeRequestsResolverNegatedParams._({this.labels, this.milestoneTitle})
      : super._();

  @override
  GMergeRequestsResolverNegatedParams rebuild(
          void Function(GMergeRequestsResolverNegatedParamsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestsResolverNegatedParamsBuilder toBuilder() =>
      new GMergeRequestsResolverNegatedParamsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestsResolverNegatedParams &&
        labels == other.labels &&
        milestoneTitle == other.milestoneTitle;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, labels.hashCode), milestoneTitle.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestsResolverNegatedParams')
          ..add('labels', labels)
          ..add('milestoneTitle', milestoneTitle))
        .toString();
  }
}

class GMergeRequestsResolverNegatedParamsBuilder
    implements
        Builder<GMergeRequestsResolverNegatedParams,
            GMergeRequestsResolverNegatedParamsBuilder> {
  _$GMergeRequestsResolverNegatedParams? _$v;

  ListBuilder<String>? _labels;
  ListBuilder<String> get labels =>
      _$this._labels ??= new ListBuilder<String>();
  set labels(ListBuilder<String>? labels) => _$this._labels = labels;

  String? _milestoneTitle;
  String? get milestoneTitle => _$this._milestoneTitle;
  set milestoneTitle(String? milestoneTitle) =>
      _$this._milestoneTitle = milestoneTitle;

  GMergeRequestsResolverNegatedParamsBuilder();

  GMergeRequestsResolverNegatedParamsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _labels = $v.labels?.toBuilder();
      _milestoneTitle = $v.milestoneTitle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestsResolverNegatedParams other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestsResolverNegatedParams;
  }

  @override
  void update(
      void Function(GMergeRequestsResolverNegatedParamsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestsResolverNegatedParams build() => _build();

  _$GMergeRequestsResolverNegatedParams _build() {
    _$GMergeRequestsResolverNegatedParams _$result;
    try {
      _$result = _$v ??
          new _$GMergeRequestsResolverNegatedParams._(
              labels: _labels?.build(), milestoneTitle: milestoneTitle);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labels';
        _labels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMergeRequestsResolverNegatedParams',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMergeRequestUpdateInput extends GMergeRequestUpdateInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final String? title;
  @override
  final String? targetBranch;
  @override
  final String? description;
  @override
  final GMergeRequestNewState? state;

  factory _$GMergeRequestUpdateInput(
          [void Function(GMergeRequestUpdateInputBuilder)? updates]) =>
      (new GMergeRequestUpdateInputBuilder()..update(updates))._build();

  _$GMergeRequestUpdateInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      this.title,
      this.targetBranch,
      this.description,
      this.state})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GMergeRequestUpdateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GMergeRequestUpdateInput', 'iid');
  }

  @override
  GMergeRequestUpdateInput rebuild(
          void Function(GMergeRequestUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMergeRequestUpdateInputBuilder toBuilder() =>
      new GMergeRequestUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMergeRequestUpdateInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        title == other.title &&
        targetBranch == other.targetBranch &&
        description == other.description &&
        state == other.state;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
                        clientMutationId.hashCode),
                    title.hashCode),
                targetBranch.hashCode),
            description.hashCode),
        state.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMergeRequestUpdateInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('title', title)
          ..add('targetBranch', targetBranch)
          ..add('description', description)
          ..add('state', state))
        .toString();
  }
}

class GMergeRequestUpdateInputBuilder
    implements
        Builder<GMergeRequestUpdateInput, GMergeRequestUpdateInputBuilder> {
  _$GMergeRequestUpdateInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _targetBranch;
  String? get targetBranch => _$this._targetBranch;
  set targetBranch(String? targetBranch) => _$this._targetBranch = targetBranch;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GMergeRequestNewState? _state;
  GMergeRequestNewState? get state => _$this._state;
  set state(GMergeRequestNewState? state) => _$this._state = state;

  GMergeRequestUpdateInputBuilder();

  GMergeRequestUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _title = $v.title;
      _targetBranch = $v.targetBranch;
      _description = $v.description;
      _state = $v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMergeRequestUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMergeRequestUpdateInput;
  }

  @override
  void update(void Function(GMergeRequestUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMergeRequestUpdateInput build() => _build();

  _$GMergeRequestUpdateInput _build() {
    final _$result = _$v ??
        new _$GMergeRequestUpdateInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GMergeRequestUpdateInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GMergeRequestUpdateInput', 'iid'),
            clientMutationId: clientMutationId,
            title: title,
            targetBranch: targetBranch,
            description: description,
            state: state);
    replace(_$result);
    return _$result;
  }
}

class _$GMetricsDashboardAnnotationID extends GMetricsDashboardAnnotationID {
  @override
  final String value;

  factory _$GMetricsDashboardAnnotationID(
          [void Function(GMetricsDashboardAnnotationIDBuilder)? updates]) =>
      (new GMetricsDashboardAnnotationIDBuilder()..update(updates))._build();

  _$GMetricsDashboardAnnotationID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GMetricsDashboardAnnotationID', 'value');
  }

  @override
  GMetricsDashboardAnnotationID rebuild(
          void Function(GMetricsDashboardAnnotationIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMetricsDashboardAnnotationIDBuilder toBuilder() =>
      new GMetricsDashboardAnnotationIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMetricsDashboardAnnotationID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMetricsDashboardAnnotationID')
          ..add('value', value))
        .toString();
  }
}

class GMetricsDashboardAnnotationIDBuilder
    implements
        Builder<GMetricsDashboardAnnotationID,
            GMetricsDashboardAnnotationIDBuilder> {
  _$GMetricsDashboardAnnotationID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GMetricsDashboardAnnotationIDBuilder();

  GMetricsDashboardAnnotationIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMetricsDashboardAnnotationID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMetricsDashboardAnnotationID;
  }

  @override
  void update(void Function(GMetricsDashboardAnnotationIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMetricsDashboardAnnotationID build() => _build();

  _$GMetricsDashboardAnnotationID _build() {
    final _$result = _$v ??
        new _$GMetricsDashboardAnnotationID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GMetricsDashboardAnnotationID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GMilestoneID extends GMilestoneID {
  @override
  final String value;

  factory _$GMilestoneID([void Function(GMilestoneIDBuilder)? updates]) =>
      (new GMilestoneIDBuilder()..update(updates))._build();

  _$GMilestoneID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GMilestoneID', 'value');
  }

  @override
  GMilestoneID rebuild(void Function(GMilestoneIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMilestoneIDBuilder toBuilder() => new GMilestoneIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMilestoneID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMilestoneID')..add('value', value))
        .toString();
  }
}

class GMilestoneIDBuilder
    implements Builder<GMilestoneID, GMilestoneIDBuilder> {
  _$GMilestoneID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GMilestoneIDBuilder();

  GMilestoneIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMilestoneID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMilestoneID;
  }

  @override
  void update(void Function(GMilestoneIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMilestoneID build() => _build();

  _$GMilestoneID _build() {
    final _$result = _$v ??
        new _$GMilestoneID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GMilestoneID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GNamespaceBanDestroyInput extends GNamespaceBanDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GNamespacesNamespaceBanID id;

  factory _$GNamespaceBanDestroyInput(
          [void Function(GNamespaceBanDestroyInputBuilder)? updates]) =>
      (new GNamespaceBanDestroyInputBuilder()..update(updates))._build();

  _$GNamespaceBanDestroyInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNamespaceBanDestroyInput', 'id');
  }

  @override
  GNamespaceBanDestroyInput rebuild(
          void Function(GNamespaceBanDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNamespaceBanDestroyInputBuilder toBuilder() =>
      new GNamespaceBanDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNamespaceBanDestroyInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNamespaceBanDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GNamespaceBanDestroyInputBuilder
    implements
        Builder<GNamespaceBanDestroyInput, GNamespaceBanDestroyInputBuilder> {
  _$GNamespaceBanDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GNamespacesNamespaceBanIDBuilder? _id;
  GNamespacesNamespaceBanIDBuilder get id =>
      _$this._id ??= new GNamespacesNamespaceBanIDBuilder();
  set id(GNamespacesNamespaceBanIDBuilder? id) => _$this._id = id;

  GNamespaceBanDestroyInputBuilder();

  GNamespaceBanDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNamespaceBanDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNamespaceBanDestroyInput;
  }

  @override
  void update(void Function(GNamespaceBanDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNamespaceBanDestroyInput build() => _build();

  _$GNamespaceBanDestroyInput _build() {
    _$GNamespaceBanDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GNamespaceBanDestroyInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNamespaceBanDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNamespaceCiCdSettingsUpdateInput
    extends GNamespaceCiCdSettingsUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final bool? allowStaleRunnerPruning;
  @override
  final String fullPath;

  factory _$GNamespaceCiCdSettingsUpdateInput(
          [void Function(GNamespaceCiCdSettingsUpdateInputBuilder)? updates]) =>
      (new GNamespaceCiCdSettingsUpdateInputBuilder()..update(updates))
          ._build();

  _$GNamespaceCiCdSettingsUpdateInput._(
      {this.clientMutationId,
      this.allowStaleRunnerPruning,
      required this.fullPath})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GNamespaceCiCdSettingsUpdateInput', 'fullPath');
  }

  @override
  GNamespaceCiCdSettingsUpdateInput rebuild(
          void Function(GNamespaceCiCdSettingsUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNamespaceCiCdSettingsUpdateInputBuilder toBuilder() =>
      new GNamespaceCiCdSettingsUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNamespaceCiCdSettingsUpdateInput &&
        clientMutationId == other.clientMutationId &&
        allowStaleRunnerPruning == other.allowStaleRunnerPruning &&
        fullPath == other.fullPath;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, clientMutationId.hashCode),
            allowStaleRunnerPruning.hashCode),
        fullPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNamespaceCiCdSettingsUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('allowStaleRunnerPruning', allowStaleRunnerPruning)
          ..add('fullPath', fullPath))
        .toString();
  }
}

class GNamespaceCiCdSettingsUpdateInputBuilder
    implements
        Builder<GNamespaceCiCdSettingsUpdateInput,
            GNamespaceCiCdSettingsUpdateInputBuilder> {
  _$GNamespaceCiCdSettingsUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  bool? _allowStaleRunnerPruning;
  bool? get allowStaleRunnerPruning => _$this._allowStaleRunnerPruning;
  set allowStaleRunnerPruning(bool? allowStaleRunnerPruning) =>
      _$this._allowStaleRunnerPruning = allowStaleRunnerPruning;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  GNamespaceCiCdSettingsUpdateInputBuilder();

  GNamespaceCiCdSettingsUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _allowStaleRunnerPruning = $v.allowStaleRunnerPruning;
      _fullPath = $v.fullPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNamespaceCiCdSettingsUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNamespaceCiCdSettingsUpdateInput;
  }

  @override
  void update(
      void Function(GNamespaceCiCdSettingsUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNamespaceCiCdSettingsUpdateInput build() => _build();

  _$GNamespaceCiCdSettingsUpdateInput _build() {
    final _$result = _$v ??
        new _$GNamespaceCiCdSettingsUpdateInput._(
            clientMutationId: clientMutationId,
            allowStaleRunnerPruning: allowStaleRunnerPruning,
            fullPath: BuiltValueNullFieldError.checkNotNull(
                fullPath, r'GNamespaceCiCdSettingsUpdateInput', 'fullPath'));
    replace(_$result);
    return _$result;
  }
}

class _$GNamespaceID extends GNamespaceID {
  @override
  final String value;

  factory _$GNamespaceID([void Function(GNamespaceIDBuilder)? updates]) =>
      (new GNamespaceIDBuilder()..update(updates))._build();

  _$GNamespaceID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GNamespaceID', 'value');
  }

  @override
  GNamespaceID rebuild(void Function(GNamespaceIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNamespaceIDBuilder toBuilder() => new GNamespaceIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNamespaceID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNamespaceID')..add('value', value))
        .toString();
  }
}

class GNamespaceIDBuilder
    implements Builder<GNamespaceID, GNamespaceIDBuilder> {
  _$GNamespaceID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GNamespaceIDBuilder();

  GNamespaceIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNamespaceID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNamespaceID;
  }

  @override
  void update(void Function(GNamespaceIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNamespaceID build() => _build();

  _$GNamespaceID _build() {
    final _$result = _$v ??
        new _$GNamespaceID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GNamespaceID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GNamespaceIncreaseStorageTemporarilyInput
    extends GNamespaceIncreaseStorageTemporarilyInput {
  @override
  final GNamespaceID id;
  @override
  final String? clientMutationId;

  factory _$GNamespaceIncreaseStorageTemporarilyInput(
          [void Function(GNamespaceIncreaseStorageTemporarilyInputBuilder)?
              updates]) =>
      (new GNamespaceIncreaseStorageTemporarilyInputBuilder()..update(updates))
          ._build();

  _$GNamespaceIncreaseStorageTemporarilyInput._(
      {required this.id, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GNamespaceIncreaseStorageTemporarilyInput', 'id');
  }

  @override
  GNamespaceIncreaseStorageTemporarilyInput rebuild(
          void Function(GNamespaceIncreaseStorageTemporarilyInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNamespaceIncreaseStorageTemporarilyInputBuilder toBuilder() =>
      new GNamespaceIncreaseStorageTemporarilyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNamespaceIncreaseStorageTemporarilyInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GNamespaceIncreaseStorageTemporarilyInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GNamespaceIncreaseStorageTemporarilyInputBuilder
    implements
        Builder<GNamespaceIncreaseStorageTemporarilyInput,
            GNamespaceIncreaseStorageTemporarilyInputBuilder> {
  _$GNamespaceIncreaseStorageTemporarilyInput? _$v;

  GNamespaceIDBuilder? _id;
  GNamespaceIDBuilder get id => _$this._id ??= new GNamespaceIDBuilder();
  set id(GNamespaceIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GNamespaceIncreaseStorageTemporarilyInputBuilder();

  GNamespaceIncreaseStorageTemporarilyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNamespaceIncreaseStorageTemporarilyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNamespaceIncreaseStorageTemporarilyInput;
  }

  @override
  void update(
      void Function(GNamespaceIncreaseStorageTemporarilyInputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GNamespaceIncreaseStorageTemporarilyInput build() => _build();

  _$GNamespaceIncreaseStorageTemporarilyInput _build() {
    _$GNamespaceIncreaseStorageTemporarilyInput _$result;
    try {
      _$result = _$v ??
          new _$GNamespaceIncreaseStorageTemporarilyInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNamespaceIncreaseStorageTemporarilyInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNamespacesNamespaceBanID extends GNamespacesNamespaceBanID {
  @override
  final String value;

  factory _$GNamespacesNamespaceBanID(
          [void Function(GNamespacesNamespaceBanIDBuilder)? updates]) =>
      (new GNamespacesNamespaceBanIDBuilder()..update(updates))._build();

  _$GNamespacesNamespaceBanID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GNamespacesNamespaceBanID', 'value');
  }

  @override
  GNamespacesNamespaceBanID rebuild(
          void Function(GNamespacesNamespaceBanIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNamespacesNamespaceBanIDBuilder toBuilder() =>
      new GNamespacesNamespaceBanIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNamespacesNamespaceBanID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNamespacesNamespaceBanID')
          ..add('value', value))
        .toString();
  }
}

class GNamespacesNamespaceBanIDBuilder
    implements
        Builder<GNamespacesNamespaceBanID, GNamespacesNamespaceBanIDBuilder> {
  _$GNamespacesNamespaceBanID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GNamespacesNamespaceBanIDBuilder();

  GNamespacesNamespaceBanIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNamespacesNamespaceBanID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNamespacesNamespaceBanID;
  }

  @override
  void update(void Function(GNamespacesNamespaceBanIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNamespacesNamespaceBanID build() => _build();

  _$GNamespacesNamespaceBanID _build() {
    final _$result = _$v ??
        new _$GNamespacesNamespaceBanID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GNamespacesNamespaceBanID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GNegatedBoardIssueInput extends GNegatedBoardIssueInput {
  @override
  final BuiltList<String>? labelName;
  @override
  final String? authorUsername;
  @override
  final String? myReactionEmoji;
  @override
  final BuiltList<String>? iids;
  @override
  final String? milestoneTitle;
  @override
  final BuiltList<String>? assigneeUsername;
  @override
  final String? releaseTag;
  @override
  final BuiltList<GIssueType>? types;
  @override
  final GMilestoneWildcardId? milestoneWildcardId;
  @override
  final GEpicID? epicId;
  @override
  final String? iterationTitle;
  @override
  final String? weight;
  @override
  final BuiltList<GIterationID>? iterationId;
  @override
  final GNegatedIterationWildcardId? iterationWildcardId;

  factory _$GNegatedBoardIssueInput(
          [void Function(GNegatedBoardIssueInputBuilder)? updates]) =>
      (new GNegatedBoardIssueInputBuilder()..update(updates))._build();

  _$GNegatedBoardIssueInput._(
      {this.labelName,
      this.authorUsername,
      this.myReactionEmoji,
      this.iids,
      this.milestoneTitle,
      this.assigneeUsername,
      this.releaseTag,
      this.types,
      this.milestoneWildcardId,
      this.epicId,
      this.iterationTitle,
      this.weight,
      this.iterationId,
      this.iterationWildcardId})
      : super._();

  @override
  GNegatedBoardIssueInput rebuild(
          void Function(GNegatedBoardIssueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNegatedBoardIssueInputBuilder toBuilder() =>
      new GNegatedBoardIssueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNegatedBoardIssueInput &&
        labelName == other.labelName &&
        authorUsername == other.authorUsername &&
        myReactionEmoji == other.myReactionEmoji &&
        iids == other.iids &&
        milestoneTitle == other.milestoneTitle &&
        assigneeUsername == other.assigneeUsername &&
        releaseTag == other.releaseTag &&
        types == other.types &&
        milestoneWildcardId == other.milestoneWildcardId &&
        epicId == other.epicId &&
        iterationTitle == other.iterationTitle &&
        weight == other.weight &&
        iterationId == other.iterationId &&
        iterationWildcardId == other.iterationWildcardId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(0,
                                                            labelName.hashCode),
                                                        authorUsername
                                                            .hashCode),
                                                    myReactionEmoji.hashCode),
                                                iids.hashCode),
                                            milestoneTitle.hashCode),
                                        assigneeUsername.hashCode),
                                    releaseTag.hashCode),
                                types.hashCode),
                            milestoneWildcardId.hashCode),
                        epicId.hashCode),
                    iterationTitle.hashCode),
                weight.hashCode),
            iterationId.hashCode),
        iterationWildcardId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNegatedBoardIssueInput')
          ..add('labelName', labelName)
          ..add('authorUsername', authorUsername)
          ..add('myReactionEmoji', myReactionEmoji)
          ..add('iids', iids)
          ..add('milestoneTitle', milestoneTitle)
          ..add('assigneeUsername', assigneeUsername)
          ..add('releaseTag', releaseTag)
          ..add('types', types)
          ..add('milestoneWildcardId', milestoneWildcardId)
          ..add('epicId', epicId)
          ..add('iterationTitle', iterationTitle)
          ..add('weight', weight)
          ..add('iterationId', iterationId)
          ..add('iterationWildcardId', iterationWildcardId))
        .toString();
  }
}

class GNegatedBoardIssueInputBuilder
    implements
        Builder<GNegatedBoardIssueInput, GNegatedBoardIssueInputBuilder> {
  _$GNegatedBoardIssueInput? _$v;

  ListBuilder<String>? _labelName;
  ListBuilder<String> get labelName =>
      _$this._labelName ??= new ListBuilder<String>();
  set labelName(ListBuilder<String>? labelName) =>
      _$this._labelName = labelName;

  String? _authorUsername;
  String? get authorUsername => _$this._authorUsername;
  set authorUsername(String? authorUsername) =>
      _$this._authorUsername = authorUsername;

  String? _myReactionEmoji;
  String? get myReactionEmoji => _$this._myReactionEmoji;
  set myReactionEmoji(String? myReactionEmoji) =>
      _$this._myReactionEmoji = myReactionEmoji;

  ListBuilder<String>? _iids;
  ListBuilder<String> get iids => _$this._iids ??= new ListBuilder<String>();
  set iids(ListBuilder<String>? iids) => _$this._iids = iids;

  String? _milestoneTitle;
  String? get milestoneTitle => _$this._milestoneTitle;
  set milestoneTitle(String? milestoneTitle) =>
      _$this._milestoneTitle = milestoneTitle;

  ListBuilder<String>? _assigneeUsername;
  ListBuilder<String> get assigneeUsername =>
      _$this._assigneeUsername ??= new ListBuilder<String>();
  set assigneeUsername(ListBuilder<String>? assigneeUsername) =>
      _$this._assigneeUsername = assigneeUsername;

  String? _releaseTag;
  String? get releaseTag => _$this._releaseTag;
  set releaseTag(String? releaseTag) => _$this._releaseTag = releaseTag;

  ListBuilder<GIssueType>? _types;
  ListBuilder<GIssueType> get types =>
      _$this._types ??= new ListBuilder<GIssueType>();
  set types(ListBuilder<GIssueType>? types) => _$this._types = types;

  GMilestoneWildcardId? _milestoneWildcardId;
  GMilestoneWildcardId? get milestoneWildcardId => _$this._milestoneWildcardId;
  set milestoneWildcardId(GMilestoneWildcardId? milestoneWildcardId) =>
      _$this._milestoneWildcardId = milestoneWildcardId;

  GEpicIDBuilder? _epicId;
  GEpicIDBuilder get epicId => _$this._epicId ??= new GEpicIDBuilder();
  set epicId(GEpicIDBuilder? epicId) => _$this._epicId = epicId;

  String? _iterationTitle;
  String? get iterationTitle => _$this._iterationTitle;
  set iterationTitle(String? iterationTitle) =>
      _$this._iterationTitle = iterationTitle;

  String? _weight;
  String? get weight => _$this._weight;
  set weight(String? weight) => _$this._weight = weight;

  ListBuilder<GIterationID>? _iterationId;
  ListBuilder<GIterationID> get iterationId =>
      _$this._iterationId ??= new ListBuilder<GIterationID>();
  set iterationId(ListBuilder<GIterationID>? iterationId) =>
      _$this._iterationId = iterationId;

  GNegatedIterationWildcardId? _iterationWildcardId;
  GNegatedIterationWildcardId? get iterationWildcardId =>
      _$this._iterationWildcardId;
  set iterationWildcardId(GNegatedIterationWildcardId? iterationWildcardId) =>
      _$this._iterationWildcardId = iterationWildcardId;

  GNegatedBoardIssueInputBuilder();

  GNegatedBoardIssueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _labelName = $v.labelName?.toBuilder();
      _authorUsername = $v.authorUsername;
      _myReactionEmoji = $v.myReactionEmoji;
      _iids = $v.iids?.toBuilder();
      _milestoneTitle = $v.milestoneTitle;
      _assigneeUsername = $v.assigneeUsername?.toBuilder();
      _releaseTag = $v.releaseTag;
      _types = $v.types?.toBuilder();
      _milestoneWildcardId = $v.milestoneWildcardId;
      _epicId = $v.epicId?.toBuilder();
      _iterationTitle = $v.iterationTitle;
      _weight = $v.weight;
      _iterationId = $v.iterationId?.toBuilder();
      _iterationWildcardId = $v.iterationWildcardId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNegatedBoardIssueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNegatedBoardIssueInput;
  }

  @override
  void update(void Function(GNegatedBoardIssueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNegatedBoardIssueInput build() => _build();

  _$GNegatedBoardIssueInput _build() {
    _$GNegatedBoardIssueInput _$result;
    try {
      _$result = _$v ??
          new _$GNegatedBoardIssueInput._(
              labelName: _labelName?.build(),
              authorUsername: authorUsername,
              myReactionEmoji: myReactionEmoji,
              iids: _iids?.build(),
              milestoneTitle: milestoneTitle,
              assigneeUsername: _assigneeUsername?.build(),
              releaseTag: releaseTag,
              types: _types?.build(),
              milestoneWildcardId: milestoneWildcardId,
              epicId: _epicId?.build(),
              iterationTitle: iterationTitle,
              weight: weight,
              iterationId: _iterationId?.build(),
              iterationWildcardId: iterationWildcardId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labelName';
        _labelName?.build();

        _$failedField = 'iids';
        _iids?.build();

        _$failedField = 'assigneeUsername';
        _assigneeUsername?.build();

        _$failedField = 'types';
        _types?.build();

        _$failedField = 'epicId';
        _epicId?.build();

        _$failedField = 'iterationId';
        _iterationId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNegatedBoardIssueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNegatedEpicBoardIssueInput extends GNegatedEpicBoardIssueInput {
  @override
  final BuiltList<String>? labelName;
  @override
  final String? authorUsername;
  @override
  final String? myReactionEmoji;

  factory _$GNegatedEpicBoardIssueInput(
          [void Function(GNegatedEpicBoardIssueInputBuilder)? updates]) =>
      (new GNegatedEpicBoardIssueInputBuilder()..update(updates))._build();

  _$GNegatedEpicBoardIssueInput._(
      {this.labelName, this.authorUsername, this.myReactionEmoji})
      : super._();

  @override
  GNegatedEpicBoardIssueInput rebuild(
          void Function(GNegatedEpicBoardIssueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNegatedEpicBoardIssueInputBuilder toBuilder() =>
      new GNegatedEpicBoardIssueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNegatedEpicBoardIssueInput &&
        labelName == other.labelName &&
        authorUsername == other.authorUsername &&
        myReactionEmoji == other.myReactionEmoji;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, labelName.hashCode), authorUsername.hashCode),
        myReactionEmoji.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNegatedEpicBoardIssueInput')
          ..add('labelName', labelName)
          ..add('authorUsername', authorUsername)
          ..add('myReactionEmoji', myReactionEmoji))
        .toString();
  }
}

class GNegatedEpicBoardIssueInputBuilder
    implements
        Builder<GNegatedEpicBoardIssueInput,
            GNegatedEpicBoardIssueInputBuilder> {
  _$GNegatedEpicBoardIssueInput? _$v;

  ListBuilder<String>? _labelName;
  ListBuilder<String> get labelName =>
      _$this._labelName ??= new ListBuilder<String>();
  set labelName(ListBuilder<String>? labelName) =>
      _$this._labelName = labelName;

  String? _authorUsername;
  String? get authorUsername => _$this._authorUsername;
  set authorUsername(String? authorUsername) =>
      _$this._authorUsername = authorUsername;

  String? _myReactionEmoji;
  String? get myReactionEmoji => _$this._myReactionEmoji;
  set myReactionEmoji(String? myReactionEmoji) =>
      _$this._myReactionEmoji = myReactionEmoji;

  GNegatedEpicBoardIssueInputBuilder();

  GNegatedEpicBoardIssueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _labelName = $v.labelName?.toBuilder();
      _authorUsername = $v.authorUsername;
      _myReactionEmoji = $v.myReactionEmoji;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNegatedEpicBoardIssueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNegatedEpicBoardIssueInput;
  }

  @override
  void update(void Function(GNegatedEpicBoardIssueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNegatedEpicBoardIssueInput build() => _build();

  _$GNegatedEpicBoardIssueInput _build() {
    _$GNegatedEpicBoardIssueInput _$result;
    try {
      _$result = _$v ??
          new _$GNegatedEpicBoardIssueInput._(
              labelName: _labelName?.build(),
              authorUsername: authorUsername,
              myReactionEmoji: myReactionEmoji);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labelName';
        _labelName?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNegatedEpicBoardIssueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNegatedEpicFilterInput extends GNegatedEpicFilterInput {
  @override
  final BuiltList<String>? labelName;
  @override
  final String? authorUsername;
  @override
  final String? myReactionEmoji;

  factory _$GNegatedEpicFilterInput(
          [void Function(GNegatedEpicFilterInputBuilder)? updates]) =>
      (new GNegatedEpicFilterInputBuilder()..update(updates))._build();

  _$GNegatedEpicFilterInput._(
      {this.labelName, this.authorUsername, this.myReactionEmoji})
      : super._();

  @override
  GNegatedEpicFilterInput rebuild(
          void Function(GNegatedEpicFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNegatedEpicFilterInputBuilder toBuilder() =>
      new GNegatedEpicFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNegatedEpicFilterInput &&
        labelName == other.labelName &&
        authorUsername == other.authorUsername &&
        myReactionEmoji == other.myReactionEmoji;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, labelName.hashCode), authorUsername.hashCode),
        myReactionEmoji.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNegatedEpicFilterInput')
          ..add('labelName', labelName)
          ..add('authorUsername', authorUsername)
          ..add('myReactionEmoji', myReactionEmoji))
        .toString();
  }
}

class GNegatedEpicFilterInputBuilder
    implements
        Builder<GNegatedEpicFilterInput, GNegatedEpicFilterInputBuilder> {
  _$GNegatedEpicFilterInput? _$v;

  ListBuilder<String>? _labelName;
  ListBuilder<String> get labelName =>
      _$this._labelName ??= new ListBuilder<String>();
  set labelName(ListBuilder<String>? labelName) =>
      _$this._labelName = labelName;

  String? _authorUsername;
  String? get authorUsername => _$this._authorUsername;
  set authorUsername(String? authorUsername) =>
      _$this._authorUsername = authorUsername;

  String? _myReactionEmoji;
  String? get myReactionEmoji => _$this._myReactionEmoji;
  set myReactionEmoji(String? myReactionEmoji) =>
      _$this._myReactionEmoji = myReactionEmoji;

  GNegatedEpicFilterInputBuilder();

  GNegatedEpicFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _labelName = $v.labelName?.toBuilder();
      _authorUsername = $v.authorUsername;
      _myReactionEmoji = $v.myReactionEmoji;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNegatedEpicFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNegatedEpicFilterInput;
  }

  @override
  void update(void Function(GNegatedEpicFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNegatedEpicFilterInput build() => _build();

  _$GNegatedEpicFilterInput _build() {
    _$GNegatedEpicFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GNegatedEpicFilterInput._(
              labelName: _labelName?.build(),
              authorUsername: authorUsername,
              myReactionEmoji: myReactionEmoji);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'labelName';
        _labelName?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNegatedEpicFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNegatedIssueFilterInput extends GNegatedIssueFilterInput {
  @override
  final String? assigneeId;
  @override
  final BuiltList<String>? assigneeUsernames;
  @override
  final String? authorUsername;
  @override
  final BuiltList<String>? iids;
  @override
  final BuiltList<String>? labelName;
  @override
  final BuiltList<String>? milestoneTitle;
  @override
  final GNegatedMilestoneWildcardId? milestoneWildcardId;
  @override
  final String? myReactionEmoji;
  @override
  final BuiltList<String>? releaseTag;
  @override
  final BuiltList<GIssueType>? types;
  @override
  final String? epicId;
  @override
  final String? weight;
  @override
  final BuiltList<String>? iterationId;
  @override
  final GIterationWildcardId? iterationWildcardId;

  factory _$GNegatedIssueFilterInput(
          [void Function(GNegatedIssueFilterInputBuilder)? updates]) =>
      (new GNegatedIssueFilterInputBuilder()..update(updates))._build();

  _$GNegatedIssueFilterInput._(
      {this.assigneeId,
      this.assigneeUsernames,
      this.authorUsername,
      this.iids,
      this.labelName,
      this.milestoneTitle,
      this.milestoneWildcardId,
      this.myReactionEmoji,
      this.releaseTag,
      this.types,
      this.epicId,
      this.weight,
      this.iterationId,
      this.iterationWildcardId})
      : super._();

  @override
  GNegatedIssueFilterInput rebuild(
          void Function(GNegatedIssueFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNegatedIssueFilterInputBuilder toBuilder() =>
      new GNegatedIssueFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNegatedIssueFilterInput &&
        assigneeId == other.assigneeId &&
        assigneeUsernames == other.assigneeUsernames &&
        authorUsername == other.authorUsername &&
        iids == other.iids &&
        labelName == other.labelName &&
        milestoneTitle == other.milestoneTitle &&
        milestoneWildcardId == other.milestoneWildcardId &&
        myReactionEmoji == other.myReactionEmoji &&
        releaseTag == other.releaseTag &&
        types == other.types &&
        epicId == other.epicId &&
        weight == other.weight &&
        iterationId == other.iterationId &&
        iterationWildcardId == other.iterationWildcardId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            assigneeId
                                                                .hashCode),
                                                        assigneeUsernames
                                                            .hashCode),
                                                    authorUsername.hashCode),
                                                iids.hashCode),
                                            labelName.hashCode),
                                        milestoneTitle.hashCode),
                                    milestoneWildcardId.hashCode),
                                myReactionEmoji.hashCode),
                            releaseTag.hashCode),
                        types.hashCode),
                    epicId.hashCode),
                weight.hashCode),
            iterationId.hashCode),
        iterationWildcardId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNegatedIssueFilterInput')
          ..add('assigneeId', assigneeId)
          ..add('assigneeUsernames', assigneeUsernames)
          ..add('authorUsername', authorUsername)
          ..add('iids', iids)
          ..add('labelName', labelName)
          ..add('milestoneTitle', milestoneTitle)
          ..add('milestoneWildcardId', milestoneWildcardId)
          ..add('myReactionEmoji', myReactionEmoji)
          ..add('releaseTag', releaseTag)
          ..add('types', types)
          ..add('epicId', epicId)
          ..add('weight', weight)
          ..add('iterationId', iterationId)
          ..add('iterationWildcardId', iterationWildcardId))
        .toString();
  }
}

class GNegatedIssueFilterInputBuilder
    implements
        Builder<GNegatedIssueFilterInput, GNegatedIssueFilterInputBuilder> {
  _$GNegatedIssueFilterInput? _$v;

  String? _assigneeId;
  String? get assigneeId => _$this._assigneeId;
  set assigneeId(String? assigneeId) => _$this._assigneeId = assigneeId;

  ListBuilder<String>? _assigneeUsernames;
  ListBuilder<String> get assigneeUsernames =>
      _$this._assigneeUsernames ??= new ListBuilder<String>();
  set assigneeUsernames(ListBuilder<String>? assigneeUsernames) =>
      _$this._assigneeUsernames = assigneeUsernames;

  String? _authorUsername;
  String? get authorUsername => _$this._authorUsername;
  set authorUsername(String? authorUsername) =>
      _$this._authorUsername = authorUsername;

  ListBuilder<String>? _iids;
  ListBuilder<String> get iids => _$this._iids ??= new ListBuilder<String>();
  set iids(ListBuilder<String>? iids) => _$this._iids = iids;

  ListBuilder<String>? _labelName;
  ListBuilder<String> get labelName =>
      _$this._labelName ??= new ListBuilder<String>();
  set labelName(ListBuilder<String>? labelName) =>
      _$this._labelName = labelName;

  ListBuilder<String>? _milestoneTitle;
  ListBuilder<String> get milestoneTitle =>
      _$this._milestoneTitle ??= new ListBuilder<String>();
  set milestoneTitle(ListBuilder<String>? milestoneTitle) =>
      _$this._milestoneTitle = milestoneTitle;

  GNegatedMilestoneWildcardId? _milestoneWildcardId;
  GNegatedMilestoneWildcardId? get milestoneWildcardId =>
      _$this._milestoneWildcardId;
  set milestoneWildcardId(GNegatedMilestoneWildcardId? milestoneWildcardId) =>
      _$this._milestoneWildcardId = milestoneWildcardId;

  String? _myReactionEmoji;
  String? get myReactionEmoji => _$this._myReactionEmoji;
  set myReactionEmoji(String? myReactionEmoji) =>
      _$this._myReactionEmoji = myReactionEmoji;

  ListBuilder<String>? _releaseTag;
  ListBuilder<String> get releaseTag =>
      _$this._releaseTag ??= new ListBuilder<String>();
  set releaseTag(ListBuilder<String>? releaseTag) =>
      _$this._releaseTag = releaseTag;

  ListBuilder<GIssueType>? _types;
  ListBuilder<GIssueType> get types =>
      _$this._types ??= new ListBuilder<GIssueType>();
  set types(ListBuilder<GIssueType>? types) => _$this._types = types;

  String? _epicId;
  String? get epicId => _$this._epicId;
  set epicId(String? epicId) => _$this._epicId = epicId;

  String? _weight;
  String? get weight => _$this._weight;
  set weight(String? weight) => _$this._weight = weight;

  ListBuilder<String>? _iterationId;
  ListBuilder<String> get iterationId =>
      _$this._iterationId ??= new ListBuilder<String>();
  set iterationId(ListBuilder<String>? iterationId) =>
      _$this._iterationId = iterationId;

  GIterationWildcardId? _iterationWildcardId;
  GIterationWildcardId? get iterationWildcardId => _$this._iterationWildcardId;
  set iterationWildcardId(GIterationWildcardId? iterationWildcardId) =>
      _$this._iterationWildcardId = iterationWildcardId;

  GNegatedIssueFilterInputBuilder();

  GNegatedIssueFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _assigneeId = $v.assigneeId;
      _assigneeUsernames = $v.assigneeUsernames?.toBuilder();
      _authorUsername = $v.authorUsername;
      _iids = $v.iids?.toBuilder();
      _labelName = $v.labelName?.toBuilder();
      _milestoneTitle = $v.milestoneTitle?.toBuilder();
      _milestoneWildcardId = $v.milestoneWildcardId;
      _myReactionEmoji = $v.myReactionEmoji;
      _releaseTag = $v.releaseTag?.toBuilder();
      _types = $v.types?.toBuilder();
      _epicId = $v.epicId;
      _weight = $v.weight;
      _iterationId = $v.iterationId?.toBuilder();
      _iterationWildcardId = $v.iterationWildcardId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNegatedIssueFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNegatedIssueFilterInput;
  }

  @override
  void update(void Function(GNegatedIssueFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNegatedIssueFilterInput build() => _build();

  _$GNegatedIssueFilterInput _build() {
    _$GNegatedIssueFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GNegatedIssueFilterInput._(
              assigneeId: assigneeId,
              assigneeUsernames: _assigneeUsernames?.build(),
              authorUsername: authorUsername,
              iids: _iids?.build(),
              labelName: _labelName?.build(),
              milestoneTitle: _milestoneTitle?.build(),
              milestoneWildcardId: milestoneWildcardId,
              myReactionEmoji: myReactionEmoji,
              releaseTag: _releaseTag?.build(),
              types: _types?.build(),
              epicId: epicId,
              weight: weight,
              iterationId: _iterationId?.build(),
              iterationWildcardId: iterationWildcardId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'assigneeUsernames';
        _assigneeUsernames?.build();

        _$failedField = 'iids';
        _iids?.build();
        _$failedField = 'labelName';
        _labelName?.build();
        _$failedField = 'milestoneTitle';
        _milestoneTitle?.build();

        _$failedField = 'releaseTag';
        _releaseTag?.build();
        _$failedField = 'types';
        _types?.build();

        _$failedField = 'iterationId';
        _iterationId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GNegatedIssueFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GNoteableID extends GNoteableID {
  @override
  final String value;

  factory _$GNoteableID([void Function(GNoteableIDBuilder)? updates]) =>
      (new GNoteableIDBuilder()..update(updates))._build();

  _$GNoteableID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GNoteableID', 'value');
  }

  @override
  GNoteableID rebuild(void Function(GNoteableIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNoteableIDBuilder toBuilder() => new GNoteableIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNoteableID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNoteableID')..add('value', value))
        .toString();
  }
}

class GNoteableIDBuilder implements Builder<GNoteableID, GNoteableIDBuilder> {
  _$GNoteableID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GNoteableIDBuilder();

  GNoteableIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNoteableID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNoteableID;
  }

  @override
  void update(void Function(GNoteableIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNoteableID build() => _build();

  _$GNoteableID _build() {
    final _$result = _$v ??
        new _$GNoteableID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GNoteableID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GNoteID extends GNoteID {
  @override
  final String value;

  factory _$GNoteID([void Function(GNoteIDBuilder)? updates]) =>
      (new GNoteIDBuilder()..update(updates))._build();

  _$GNoteID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GNoteID', 'value');
  }

  @override
  GNoteID rebuild(void Function(GNoteIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNoteIDBuilder toBuilder() => new GNoteIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNoteID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNoteID')..add('value', value))
        .toString();
  }
}

class GNoteIDBuilder implements Builder<GNoteID, GNoteIDBuilder> {
  _$GNoteID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GNoteIDBuilder();

  GNoteIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNoteID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNoteID;
  }

  @override
  void update(void Function(GNoteIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNoteID build() => _build();

  _$GNoteID _build() {
    final _$result = _$v ??
        new _$GNoteID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GNoteID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GOncallRotationActivePeriodInputType
    extends GOncallRotationActivePeriodInputType {
  @override
  final String startTime;
  @override
  final String endTime;

  factory _$GOncallRotationActivePeriodInputType(
          [void Function(GOncallRotationActivePeriodInputTypeBuilder)?
              updates]) =>
      (new GOncallRotationActivePeriodInputTypeBuilder()..update(updates))
          ._build();

  _$GOncallRotationActivePeriodInputType._(
      {required this.startTime, required this.endTime})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        startTime, r'GOncallRotationActivePeriodInputType', 'startTime');
    BuiltValueNullFieldError.checkNotNull(
        endTime, r'GOncallRotationActivePeriodInputType', 'endTime');
  }

  @override
  GOncallRotationActivePeriodInputType rebuild(
          void Function(GOncallRotationActivePeriodInputTypeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOncallRotationActivePeriodInputTypeBuilder toBuilder() =>
      new GOncallRotationActivePeriodInputTypeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOncallRotationActivePeriodInputType &&
        startTime == other.startTime &&
        endTime == other.endTime;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, startTime.hashCode), endTime.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOncallRotationActivePeriodInputType')
          ..add('startTime', startTime)
          ..add('endTime', endTime))
        .toString();
  }
}

class GOncallRotationActivePeriodInputTypeBuilder
    implements
        Builder<GOncallRotationActivePeriodInputType,
            GOncallRotationActivePeriodInputTypeBuilder> {
  _$GOncallRotationActivePeriodInputType? _$v;

  String? _startTime;
  String? get startTime => _$this._startTime;
  set startTime(String? startTime) => _$this._startTime = startTime;

  String? _endTime;
  String? get endTime => _$this._endTime;
  set endTime(String? endTime) => _$this._endTime = endTime;

  GOncallRotationActivePeriodInputTypeBuilder();

  GOncallRotationActivePeriodInputTypeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _startTime = $v.startTime;
      _endTime = $v.endTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOncallRotationActivePeriodInputType other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOncallRotationActivePeriodInputType;
  }

  @override
  void update(
      void Function(GOncallRotationActivePeriodInputTypeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOncallRotationActivePeriodInputType build() => _build();

  _$GOncallRotationActivePeriodInputType _build() {
    final _$result = _$v ??
        new _$GOncallRotationActivePeriodInputType._(
            startTime: BuiltValueNullFieldError.checkNotNull(startTime,
                r'GOncallRotationActivePeriodInputType', 'startTime'),
            endTime: BuiltValueNullFieldError.checkNotNull(
                endTime, r'GOncallRotationActivePeriodInputType', 'endTime'));
    replace(_$result);
    return _$result;
  }
}

class _$GOncallRotationCreateInput extends GOncallRotationCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String scheduleIid;
  @override
  final String name;
  @override
  final GOncallRotationDateInputType startsAt;
  @override
  final GOncallRotationDateInputType? endsAt;
  @override
  final GOncallRotationLengthInputType rotationLength;
  @override
  final GOncallRotationActivePeriodInputType? activePeriod;
  @override
  final BuiltList<GOncallUserInputType> participants;

  factory _$GOncallRotationCreateInput(
          [void Function(GOncallRotationCreateInputBuilder)? updates]) =>
      (new GOncallRotationCreateInputBuilder()..update(updates))._build();

  _$GOncallRotationCreateInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.scheduleIid,
      required this.name,
      required this.startsAt,
      this.endsAt,
      required this.rotationLength,
      this.activePeriod,
      required this.participants})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GOncallRotationCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        scheduleIid, r'GOncallRotationCreateInput', 'scheduleIid');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GOncallRotationCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        startsAt, r'GOncallRotationCreateInput', 'startsAt');
    BuiltValueNullFieldError.checkNotNull(
        rotationLength, r'GOncallRotationCreateInput', 'rotationLength');
    BuiltValueNullFieldError.checkNotNull(
        participants, r'GOncallRotationCreateInput', 'participants');
  }

  @override
  GOncallRotationCreateInput rebuild(
          void Function(GOncallRotationCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOncallRotationCreateInputBuilder toBuilder() =>
      new GOncallRotationCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOncallRotationCreateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        scheduleIid == other.scheduleIid &&
        name == other.name &&
        startsAt == other.startsAt &&
        endsAt == other.endsAt &&
        rotationLength == other.rotationLength &&
        activePeriod == other.activePeriod &&
        participants == other.participants;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, clientMutationId.hashCode),
                                    projectPath.hashCode),
                                scheduleIid.hashCode),
                            name.hashCode),
                        startsAt.hashCode),
                    endsAt.hashCode),
                rotationLength.hashCode),
            activePeriod.hashCode),
        participants.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOncallRotationCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('scheduleIid', scheduleIid)
          ..add('name', name)
          ..add('startsAt', startsAt)
          ..add('endsAt', endsAt)
          ..add('rotationLength', rotationLength)
          ..add('activePeriod', activePeriod)
          ..add('participants', participants))
        .toString();
  }
}

class GOncallRotationCreateInputBuilder
    implements
        Builder<GOncallRotationCreateInput, GOncallRotationCreateInputBuilder> {
  _$GOncallRotationCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _scheduleIid;
  String? get scheduleIid => _$this._scheduleIid;
  set scheduleIid(String? scheduleIid) => _$this._scheduleIid = scheduleIid;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GOncallRotationDateInputTypeBuilder? _startsAt;
  GOncallRotationDateInputTypeBuilder get startsAt =>
      _$this._startsAt ??= new GOncallRotationDateInputTypeBuilder();
  set startsAt(GOncallRotationDateInputTypeBuilder? startsAt) =>
      _$this._startsAt = startsAt;

  GOncallRotationDateInputTypeBuilder? _endsAt;
  GOncallRotationDateInputTypeBuilder get endsAt =>
      _$this._endsAt ??= new GOncallRotationDateInputTypeBuilder();
  set endsAt(GOncallRotationDateInputTypeBuilder? endsAt) =>
      _$this._endsAt = endsAt;

  GOncallRotationLengthInputTypeBuilder? _rotationLength;
  GOncallRotationLengthInputTypeBuilder get rotationLength =>
      _$this._rotationLength ??= new GOncallRotationLengthInputTypeBuilder();
  set rotationLength(GOncallRotationLengthInputTypeBuilder? rotationLength) =>
      _$this._rotationLength = rotationLength;

  GOncallRotationActivePeriodInputTypeBuilder? _activePeriod;
  GOncallRotationActivePeriodInputTypeBuilder get activePeriod =>
      _$this._activePeriod ??=
          new GOncallRotationActivePeriodInputTypeBuilder();
  set activePeriod(GOncallRotationActivePeriodInputTypeBuilder? activePeriod) =>
      _$this._activePeriod = activePeriod;

  ListBuilder<GOncallUserInputType>? _participants;
  ListBuilder<GOncallUserInputType> get participants =>
      _$this._participants ??= new ListBuilder<GOncallUserInputType>();
  set participants(ListBuilder<GOncallUserInputType>? participants) =>
      _$this._participants = participants;

  GOncallRotationCreateInputBuilder();

  GOncallRotationCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _scheduleIid = $v.scheduleIid;
      _name = $v.name;
      _startsAt = $v.startsAt.toBuilder();
      _endsAt = $v.endsAt?.toBuilder();
      _rotationLength = $v.rotationLength.toBuilder();
      _activePeriod = $v.activePeriod?.toBuilder();
      _participants = $v.participants.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOncallRotationCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOncallRotationCreateInput;
  }

  @override
  void update(void Function(GOncallRotationCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOncallRotationCreateInput build() => _build();

  _$GOncallRotationCreateInput _build() {
    _$GOncallRotationCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GOncallRotationCreateInput._(
              clientMutationId: clientMutationId,
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GOncallRotationCreateInput', 'projectPath'),
              scheduleIid: BuiltValueNullFieldError.checkNotNull(
                  scheduleIid, r'GOncallRotationCreateInput', 'scheduleIid'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GOncallRotationCreateInput', 'name'),
              startsAt: startsAt.build(),
              endsAt: _endsAt?.build(),
              rotationLength: rotationLength.build(),
              activePeriod: _activePeriod?.build(),
              participants: participants.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'startsAt';
        startsAt.build();
        _$failedField = 'endsAt';
        _endsAt?.build();
        _$failedField = 'rotationLength';
        rotationLength.build();
        _$failedField = 'activePeriod';
        _activePeriod?.build();
        _$failedField = 'participants';
        participants.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOncallRotationCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOncallRotationDateInputType extends GOncallRotationDateInputType {
  @override
  final String date;
  @override
  final String time;

  factory _$GOncallRotationDateInputType(
          [void Function(GOncallRotationDateInputTypeBuilder)? updates]) =>
      (new GOncallRotationDateInputTypeBuilder()..update(updates))._build();

  _$GOncallRotationDateInputType._({required this.date, required this.time})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        date, r'GOncallRotationDateInputType', 'date');
    BuiltValueNullFieldError.checkNotNull(
        time, r'GOncallRotationDateInputType', 'time');
  }

  @override
  GOncallRotationDateInputType rebuild(
          void Function(GOncallRotationDateInputTypeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOncallRotationDateInputTypeBuilder toBuilder() =>
      new GOncallRotationDateInputTypeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOncallRotationDateInputType &&
        date == other.date &&
        time == other.time;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, date.hashCode), time.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOncallRotationDateInputType')
          ..add('date', date)
          ..add('time', time))
        .toString();
  }
}

class GOncallRotationDateInputTypeBuilder
    implements
        Builder<GOncallRotationDateInputType,
            GOncallRotationDateInputTypeBuilder> {
  _$GOncallRotationDateInputType? _$v;

  String? _date;
  String? get date => _$this._date;
  set date(String? date) => _$this._date = date;

  String? _time;
  String? get time => _$this._time;
  set time(String? time) => _$this._time = time;

  GOncallRotationDateInputTypeBuilder();

  GOncallRotationDateInputTypeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _date = $v.date;
      _time = $v.time;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOncallRotationDateInputType other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOncallRotationDateInputType;
  }

  @override
  void update(void Function(GOncallRotationDateInputTypeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOncallRotationDateInputType build() => _build();

  _$GOncallRotationDateInputType _build() {
    final _$result = _$v ??
        new _$GOncallRotationDateInputType._(
            date: BuiltValueNullFieldError.checkNotNull(
                date, r'GOncallRotationDateInputType', 'date'),
            time: BuiltValueNullFieldError.checkNotNull(
                time, r'GOncallRotationDateInputType', 'time'));
    replace(_$result);
    return _$result;
  }
}

class _$GOncallRotationDestroyInput extends GOncallRotationDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String scheduleIid;
  @override
  final GIncidentManagementOncallRotationID id;

  factory _$GOncallRotationDestroyInput(
          [void Function(GOncallRotationDestroyInputBuilder)? updates]) =>
      (new GOncallRotationDestroyInputBuilder()..update(updates))._build();

  _$GOncallRotationDestroyInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.scheduleIid,
      required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GOncallRotationDestroyInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        scheduleIid, r'GOncallRotationDestroyInput', 'scheduleIid');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GOncallRotationDestroyInput', 'id');
  }

  @override
  GOncallRotationDestroyInput rebuild(
          void Function(GOncallRotationDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOncallRotationDestroyInputBuilder toBuilder() =>
      new GOncallRotationDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOncallRotationDestroyInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        scheduleIid == other.scheduleIid &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
            scheduleIid.hashCode),
        id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOncallRotationDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('scheduleIid', scheduleIid)
          ..add('id', id))
        .toString();
  }
}

class GOncallRotationDestroyInputBuilder
    implements
        Builder<GOncallRotationDestroyInput,
            GOncallRotationDestroyInputBuilder> {
  _$GOncallRotationDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _scheduleIid;
  String? get scheduleIid => _$this._scheduleIid;
  set scheduleIid(String? scheduleIid) => _$this._scheduleIid = scheduleIid;

  GIncidentManagementOncallRotationIDBuilder? _id;
  GIncidentManagementOncallRotationIDBuilder get id =>
      _$this._id ??= new GIncidentManagementOncallRotationIDBuilder();
  set id(GIncidentManagementOncallRotationIDBuilder? id) => _$this._id = id;

  GOncallRotationDestroyInputBuilder();

  GOncallRotationDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _scheduleIid = $v.scheduleIid;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOncallRotationDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOncallRotationDestroyInput;
  }

  @override
  void update(void Function(GOncallRotationDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOncallRotationDestroyInput build() => _build();

  _$GOncallRotationDestroyInput _build() {
    _$GOncallRotationDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GOncallRotationDestroyInput._(
              clientMutationId: clientMutationId,
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GOncallRotationDestroyInput', 'projectPath'),
              scheduleIid: BuiltValueNullFieldError.checkNotNull(
                  scheduleIid, r'GOncallRotationDestroyInput', 'scheduleIid'),
              id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOncallRotationDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOncallRotationLengthInputType extends GOncallRotationLengthInputType {
  @override
  final int length;
  @override
  final GOncallRotationUnitEnum unit;

  factory _$GOncallRotationLengthInputType(
          [void Function(GOncallRotationLengthInputTypeBuilder)? updates]) =>
      (new GOncallRotationLengthInputTypeBuilder()..update(updates))._build();

  _$GOncallRotationLengthInputType._({required this.length, required this.unit})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        length, r'GOncallRotationLengthInputType', 'length');
    BuiltValueNullFieldError.checkNotNull(
        unit, r'GOncallRotationLengthInputType', 'unit');
  }

  @override
  GOncallRotationLengthInputType rebuild(
          void Function(GOncallRotationLengthInputTypeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOncallRotationLengthInputTypeBuilder toBuilder() =>
      new GOncallRotationLengthInputTypeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOncallRotationLengthInputType &&
        length == other.length &&
        unit == other.unit;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, length.hashCode), unit.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOncallRotationLengthInputType')
          ..add('length', length)
          ..add('unit', unit))
        .toString();
  }
}

class GOncallRotationLengthInputTypeBuilder
    implements
        Builder<GOncallRotationLengthInputType,
            GOncallRotationLengthInputTypeBuilder> {
  _$GOncallRotationLengthInputType? _$v;

  int? _length;
  int? get length => _$this._length;
  set length(int? length) => _$this._length = length;

  GOncallRotationUnitEnum? _unit;
  GOncallRotationUnitEnum? get unit => _$this._unit;
  set unit(GOncallRotationUnitEnum? unit) => _$this._unit = unit;

  GOncallRotationLengthInputTypeBuilder();

  GOncallRotationLengthInputTypeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _length = $v.length;
      _unit = $v.unit;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOncallRotationLengthInputType other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOncallRotationLengthInputType;
  }

  @override
  void update(void Function(GOncallRotationLengthInputTypeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOncallRotationLengthInputType build() => _build();

  _$GOncallRotationLengthInputType _build() {
    final _$result = _$v ??
        new _$GOncallRotationLengthInputType._(
            length: BuiltValueNullFieldError.checkNotNull(
                length, r'GOncallRotationLengthInputType', 'length'),
            unit: BuiltValueNullFieldError.checkNotNull(
                unit, r'GOncallRotationLengthInputType', 'unit'));
    replace(_$result);
    return _$result;
  }
}

class _$GOncallRotationUpdateInput extends GOncallRotationUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GIncidentManagementOncallRotationID id;
  @override
  final String? name;
  @override
  final GOncallRotationDateInputType? startsAt;
  @override
  final GOncallRotationDateInputType? endsAt;
  @override
  final GOncallRotationLengthInputType? rotationLength;
  @override
  final GOncallRotationActivePeriodInputType? activePeriod;
  @override
  final BuiltList<GOncallUserInputType>? participants;

  factory _$GOncallRotationUpdateInput(
          [void Function(GOncallRotationUpdateInputBuilder)? updates]) =>
      (new GOncallRotationUpdateInputBuilder()..update(updates))._build();

  _$GOncallRotationUpdateInput._(
      {this.clientMutationId,
      required this.id,
      this.name,
      this.startsAt,
      this.endsAt,
      this.rotationLength,
      this.activePeriod,
      this.participants})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GOncallRotationUpdateInput', 'id');
  }

  @override
  GOncallRotationUpdateInput rebuild(
          void Function(GOncallRotationUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOncallRotationUpdateInputBuilder toBuilder() =>
      new GOncallRotationUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOncallRotationUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        name == other.name &&
        startsAt == other.startsAt &&
        endsAt == other.endsAt &&
        rotationLength == other.rotationLength &&
        activePeriod == other.activePeriod &&
        participants == other.participants;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
                            name.hashCode),
                        startsAt.hashCode),
                    endsAt.hashCode),
                rotationLength.hashCode),
            activePeriod.hashCode),
        participants.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOncallRotationUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('name', name)
          ..add('startsAt', startsAt)
          ..add('endsAt', endsAt)
          ..add('rotationLength', rotationLength)
          ..add('activePeriod', activePeriod)
          ..add('participants', participants))
        .toString();
  }
}

class GOncallRotationUpdateInputBuilder
    implements
        Builder<GOncallRotationUpdateInput, GOncallRotationUpdateInputBuilder> {
  _$GOncallRotationUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIncidentManagementOncallRotationIDBuilder? _id;
  GIncidentManagementOncallRotationIDBuilder get id =>
      _$this._id ??= new GIncidentManagementOncallRotationIDBuilder();
  set id(GIncidentManagementOncallRotationIDBuilder? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GOncallRotationDateInputTypeBuilder? _startsAt;
  GOncallRotationDateInputTypeBuilder get startsAt =>
      _$this._startsAt ??= new GOncallRotationDateInputTypeBuilder();
  set startsAt(GOncallRotationDateInputTypeBuilder? startsAt) =>
      _$this._startsAt = startsAt;

  GOncallRotationDateInputTypeBuilder? _endsAt;
  GOncallRotationDateInputTypeBuilder get endsAt =>
      _$this._endsAt ??= new GOncallRotationDateInputTypeBuilder();
  set endsAt(GOncallRotationDateInputTypeBuilder? endsAt) =>
      _$this._endsAt = endsAt;

  GOncallRotationLengthInputTypeBuilder? _rotationLength;
  GOncallRotationLengthInputTypeBuilder get rotationLength =>
      _$this._rotationLength ??= new GOncallRotationLengthInputTypeBuilder();
  set rotationLength(GOncallRotationLengthInputTypeBuilder? rotationLength) =>
      _$this._rotationLength = rotationLength;

  GOncallRotationActivePeriodInputTypeBuilder? _activePeriod;
  GOncallRotationActivePeriodInputTypeBuilder get activePeriod =>
      _$this._activePeriod ??=
          new GOncallRotationActivePeriodInputTypeBuilder();
  set activePeriod(GOncallRotationActivePeriodInputTypeBuilder? activePeriod) =>
      _$this._activePeriod = activePeriod;

  ListBuilder<GOncallUserInputType>? _participants;
  ListBuilder<GOncallUserInputType> get participants =>
      _$this._participants ??= new ListBuilder<GOncallUserInputType>();
  set participants(ListBuilder<GOncallUserInputType>? participants) =>
      _$this._participants = participants;

  GOncallRotationUpdateInputBuilder();

  GOncallRotationUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _name = $v.name;
      _startsAt = $v.startsAt?.toBuilder();
      _endsAt = $v.endsAt?.toBuilder();
      _rotationLength = $v.rotationLength?.toBuilder();
      _activePeriod = $v.activePeriod?.toBuilder();
      _participants = $v.participants?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOncallRotationUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOncallRotationUpdateInput;
  }

  @override
  void update(void Function(GOncallRotationUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOncallRotationUpdateInput build() => _build();

  _$GOncallRotationUpdateInput _build() {
    _$GOncallRotationUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GOncallRotationUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              name: name,
              startsAt: _startsAt?.build(),
              endsAt: _endsAt?.build(),
              rotationLength: _rotationLength?.build(),
              activePeriod: _activePeriod?.build(),
              participants: _participants?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'startsAt';
        _startsAt?.build();
        _$failedField = 'endsAt';
        _endsAt?.build();
        _$failedField = 'rotationLength';
        _rotationLength?.build();
        _$failedField = 'activePeriod';
        _activePeriod?.build();
        _$failedField = 'participants';
        _participants?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOncallRotationUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOncallScheduleCreateInput extends GOncallScheduleCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String name;
  @override
  final String? description;
  @override
  final String timezone;

  factory _$GOncallScheduleCreateInput(
          [void Function(GOncallScheduleCreateInputBuilder)? updates]) =>
      (new GOncallScheduleCreateInputBuilder()..update(updates))._build();

  _$GOncallScheduleCreateInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.name,
      this.description,
      required this.timezone})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GOncallScheduleCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GOncallScheduleCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        timezone, r'GOncallScheduleCreateInput', 'timezone');
  }

  @override
  GOncallScheduleCreateInput rebuild(
          void Function(GOncallScheduleCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOncallScheduleCreateInputBuilder toBuilder() =>
      new GOncallScheduleCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOncallScheduleCreateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        name == other.name &&
        description == other.description &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
                name.hashCode),
            description.hashCode),
        timezone.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOncallScheduleCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('name', name)
          ..add('description', description)
          ..add('timezone', timezone))
        .toString();
  }
}

class GOncallScheduleCreateInputBuilder
    implements
        Builder<GOncallScheduleCreateInput, GOncallScheduleCreateInputBuilder> {
  _$GOncallScheduleCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _timezone;
  String? get timezone => _$this._timezone;
  set timezone(String? timezone) => _$this._timezone = timezone;

  GOncallScheduleCreateInputBuilder();

  GOncallScheduleCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _name = $v.name;
      _description = $v.description;
      _timezone = $v.timezone;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOncallScheduleCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOncallScheduleCreateInput;
  }

  @override
  void update(void Function(GOncallScheduleCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOncallScheduleCreateInput build() => _build();

  _$GOncallScheduleCreateInput _build() {
    final _$result = _$v ??
        new _$GOncallScheduleCreateInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GOncallScheduleCreateInput', 'projectPath'),
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GOncallScheduleCreateInput', 'name'),
            description: description,
            timezone: BuiltValueNullFieldError.checkNotNull(
                timezone, r'GOncallScheduleCreateInput', 'timezone'));
    replace(_$result);
    return _$result;
  }
}

class _$GOncallScheduleDestroyInput extends GOncallScheduleDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String iid;

  factory _$GOncallScheduleDestroyInput(
          [void Function(GOncallScheduleDestroyInputBuilder)? updates]) =>
      (new GOncallScheduleDestroyInputBuilder()..update(updates))._build();

  _$GOncallScheduleDestroyInput._(
      {this.clientMutationId, required this.projectPath, required this.iid})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GOncallScheduleDestroyInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GOncallScheduleDestroyInput', 'iid');
  }

  @override
  GOncallScheduleDestroyInput rebuild(
          void Function(GOncallScheduleDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOncallScheduleDestroyInputBuilder toBuilder() =>
      new GOncallScheduleDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOncallScheduleDestroyInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        iid == other.iid;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
        iid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOncallScheduleDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('iid', iid))
        .toString();
  }
}

class GOncallScheduleDestroyInputBuilder
    implements
        Builder<GOncallScheduleDestroyInput,
            GOncallScheduleDestroyInputBuilder> {
  _$GOncallScheduleDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  GOncallScheduleDestroyInputBuilder();

  GOncallScheduleDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOncallScheduleDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOncallScheduleDestroyInput;
  }

  @override
  void update(void Function(GOncallScheduleDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOncallScheduleDestroyInput build() => _build();

  _$GOncallScheduleDestroyInput _build() {
    final _$result = _$v ??
        new _$GOncallScheduleDestroyInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GOncallScheduleDestroyInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GOncallScheduleDestroyInput', 'iid'));
    replace(_$result);
    return _$result;
  }
}

class _$GOncallScheduleUpdateInput extends GOncallScheduleUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? name;
  @override
  final String? description;
  @override
  final String? timezone;

  factory _$GOncallScheduleUpdateInput(
          [void Function(GOncallScheduleUpdateInputBuilder)? updates]) =>
      (new GOncallScheduleUpdateInputBuilder()..update(updates))._build();

  _$GOncallScheduleUpdateInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.iid,
      this.name,
      this.description,
      this.timezone})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GOncallScheduleUpdateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GOncallScheduleUpdateInput', 'iid');
  }

  @override
  GOncallScheduleUpdateInput rebuild(
          void Function(GOncallScheduleUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOncallScheduleUpdateInputBuilder toBuilder() =>
      new GOncallScheduleUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOncallScheduleUpdateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        name == other.name &&
        description == other.description &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc(0, clientMutationId.hashCode),
                        projectPath.hashCode),
                    iid.hashCode),
                name.hashCode),
            description.hashCode),
        timezone.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOncallScheduleUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('name', name)
          ..add('description', description)
          ..add('timezone', timezone))
        .toString();
  }
}

class GOncallScheduleUpdateInputBuilder
    implements
        Builder<GOncallScheduleUpdateInput, GOncallScheduleUpdateInputBuilder> {
  _$GOncallScheduleUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _timezone;
  String? get timezone => _$this._timezone;
  set timezone(String? timezone) => _$this._timezone = timezone;

  GOncallScheduleUpdateInputBuilder();

  GOncallScheduleUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _name = $v.name;
      _description = $v.description;
      _timezone = $v.timezone;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOncallScheduleUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOncallScheduleUpdateInput;
  }

  @override
  void update(void Function(GOncallScheduleUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOncallScheduleUpdateInput build() => _build();

  _$GOncallScheduleUpdateInput _build() {
    final _$result = _$v ??
        new _$GOncallScheduleUpdateInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GOncallScheduleUpdateInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GOncallScheduleUpdateInput', 'iid'),
            name: name,
            description: description,
            timezone: timezone);
    replace(_$result);
    return _$result;
  }
}

class _$GOncallUserInputType extends GOncallUserInputType {
  @override
  final String username;
  @override
  final GDataVisualizationColorEnum? colorPalette;
  @override
  final GDataVisualizationWeightEnum? colorWeight;

  factory _$GOncallUserInputType(
          [void Function(GOncallUserInputTypeBuilder)? updates]) =>
      (new GOncallUserInputTypeBuilder()..update(updates))._build();

  _$GOncallUserInputType._(
      {required this.username, this.colorPalette, this.colorWeight})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        username, r'GOncallUserInputType', 'username');
  }

  @override
  GOncallUserInputType rebuild(
          void Function(GOncallUserInputTypeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOncallUserInputTypeBuilder toBuilder() =>
      new GOncallUserInputTypeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOncallUserInputType &&
        username == other.username &&
        colorPalette == other.colorPalette &&
        colorWeight == other.colorWeight;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, username.hashCode), colorPalette.hashCode),
        colorWeight.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOncallUserInputType')
          ..add('username', username)
          ..add('colorPalette', colorPalette)
          ..add('colorWeight', colorWeight))
        .toString();
  }
}

class GOncallUserInputTypeBuilder
    implements Builder<GOncallUserInputType, GOncallUserInputTypeBuilder> {
  _$GOncallUserInputType? _$v;

  String? _username;
  String? get username => _$this._username;
  set username(String? username) => _$this._username = username;

  GDataVisualizationColorEnum? _colorPalette;
  GDataVisualizationColorEnum? get colorPalette => _$this._colorPalette;
  set colorPalette(GDataVisualizationColorEnum? colorPalette) =>
      _$this._colorPalette = colorPalette;

  GDataVisualizationWeightEnum? _colorWeight;
  GDataVisualizationWeightEnum? get colorWeight => _$this._colorWeight;
  set colorWeight(GDataVisualizationWeightEnum? colorWeight) =>
      _$this._colorWeight = colorWeight;

  GOncallUserInputTypeBuilder();

  GOncallUserInputTypeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _username = $v.username;
      _colorPalette = $v.colorPalette;
      _colorWeight = $v.colorWeight;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOncallUserInputType other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOncallUserInputType;
  }

  @override
  void update(void Function(GOncallUserInputTypeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOncallUserInputType build() => _build();

  _$GOncallUserInputType _build() {
    final _$result = _$v ??
        new _$GOncallUserInputType._(
            username: BuiltValueNullFieldError.checkNotNull(
                username, r'GOncallUserInputType', 'username'),
            colorPalette: colorPalette,
            colorWeight: colorWeight);
    replace(_$result);
    return _$result;
  }
}

class _$GPackagesConanFileMetadatumID extends GPackagesConanFileMetadatumID {
  @override
  final String value;

  factory _$GPackagesConanFileMetadatumID(
          [void Function(GPackagesConanFileMetadatumIDBuilder)? updates]) =>
      (new GPackagesConanFileMetadatumIDBuilder()..update(updates))._build();

  _$GPackagesConanFileMetadatumID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPackagesConanFileMetadatumID', 'value');
  }

  @override
  GPackagesConanFileMetadatumID rebuild(
          void Function(GPackagesConanFileMetadatumIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPackagesConanFileMetadatumIDBuilder toBuilder() =>
      new GPackagesConanFileMetadatumIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPackagesConanFileMetadatumID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPackagesConanFileMetadatumID')
          ..add('value', value))
        .toString();
  }
}

class GPackagesConanFileMetadatumIDBuilder
    implements
        Builder<GPackagesConanFileMetadatumID,
            GPackagesConanFileMetadatumIDBuilder> {
  _$GPackagesConanFileMetadatumID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPackagesConanFileMetadatumIDBuilder();

  GPackagesConanFileMetadatumIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPackagesConanFileMetadatumID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPackagesConanFileMetadatumID;
  }

  @override
  void update(void Function(GPackagesConanFileMetadatumIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPackagesConanFileMetadatumID build() => _build();

  _$GPackagesConanFileMetadatumID _build() {
    final _$result = _$v ??
        new _$GPackagesConanFileMetadatumID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPackagesConanFileMetadatumID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPackagesConanMetadatumID extends GPackagesConanMetadatumID {
  @override
  final String value;

  factory _$GPackagesConanMetadatumID(
          [void Function(GPackagesConanMetadatumIDBuilder)? updates]) =>
      (new GPackagesConanMetadatumIDBuilder()..update(updates))._build();

  _$GPackagesConanMetadatumID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPackagesConanMetadatumID', 'value');
  }

  @override
  GPackagesConanMetadatumID rebuild(
          void Function(GPackagesConanMetadatumIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPackagesConanMetadatumIDBuilder toBuilder() =>
      new GPackagesConanMetadatumIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPackagesConanMetadatumID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPackagesConanMetadatumID')
          ..add('value', value))
        .toString();
  }
}

class GPackagesConanMetadatumIDBuilder
    implements
        Builder<GPackagesConanMetadatumID, GPackagesConanMetadatumIDBuilder> {
  _$GPackagesConanMetadatumID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPackagesConanMetadatumIDBuilder();

  GPackagesConanMetadatumIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPackagesConanMetadatumID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPackagesConanMetadatumID;
  }

  @override
  void update(void Function(GPackagesConanMetadatumIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPackagesConanMetadatumID build() => _build();

  _$GPackagesConanMetadatumID _build() {
    final _$result = _$v ??
        new _$GPackagesConanMetadatumID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPackagesConanMetadatumID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPackagesDependencyID extends GPackagesDependencyID {
  @override
  final String value;

  factory _$GPackagesDependencyID(
          [void Function(GPackagesDependencyIDBuilder)? updates]) =>
      (new GPackagesDependencyIDBuilder()..update(updates))._build();

  _$GPackagesDependencyID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPackagesDependencyID', 'value');
  }

  @override
  GPackagesDependencyID rebuild(
          void Function(GPackagesDependencyIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPackagesDependencyIDBuilder toBuilder() =>
      new GPackagesDependencyIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPackagesDependencyID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPackagesDependencyID')
          ..add('value', value))
        .toString();
  }
}

class GPackagesDependencyIDBuilder
    implements Builder<GPackagesDependencyID, GPackagesDependencyIDBuilder> {
  _$GPackagesDependencyID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPackagesDependencyIDBuilder();

  GPackagesDependencyIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPackagesDependencyID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPackagesDependencyID;
  }

  @override
  void update(void Function(GPackagesDependencyIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPackagesDependencyID build() => _build();

  _$GPackagesDependencyID _build() {
    final _$result = _$v ??
        new _$GPackagesDependencyID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPackagesDependencyID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPackagesDependencyLinkID extends GPackagesDependencyLinkID {
  @override
  final String value;

  factory _$GPackagesDependencyLinkID(
          [void Function(GPackagesDependencyLinkIDBuilder)? updates]) =>
      (new GPackagesDependencyLinkIDBuilder()..update(updates))._build();

  _$GPackagesDependencyLinkID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPackagesDependencyLinkID', 'value');
  }

  @override
  GPackagesDependencyLinkID rebuild(
          void Function(GPackagesDependencyLinkIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPackagesDependencyLinkIDBuilder toBuilder() =>
      new GPackagesDependencyLinkIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPackagesDependencyLinkID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPackagesDependencyLinkID')
          ..add('value', value))
        .toString();
  }
}

class GPackagesDependencyLinkIDBuilder
    implements
        Builder<GPackagesDependencyLinkID, GPackagesDependencyLinkIDBuilder> {
  _$GPackagesDependencyLinkID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPackagesDependencyLinkIDBuilder();

  GPackagesDependencyLinkIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPackagesDependencyLinkID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPackagesDependencyLinkID;
  }

  @override
  void update(void Function(GPackagesDependencyLinkIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPackagesDependencyLinkID build() => _build();

  _$GPackagesDependencyLinkID _build() {
    final _$result = _$v ??
        new _$GPackagesDependencyLinkID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPackagesDependencyLinkID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPackagesMavenMetadatumID extends GPackagesMavenMetadatumID {
  @override
  final String value;

  factory _$GPackagesMavenMetadatumID(
          [void Function(GPackagesMavenMetadatumIDBuilder)? updates]) =>
      (new GPackagesMavenMetadatumIDBuilder()..update(updates))._build();

  _$GPackagesMavenMetadatumID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPackagesMavenMetadatumID', 'value');
  }

  @override
  GPackagesMavenMetadatumID rebuild(
          void Function(GPackagesMavenMetadatumIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPackagesMavenMetadatumIDBuilder toBuilder() =>
      new GPackagesMavenMetadatumIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPackagesMavenMetadatumID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPackagesMavenMetadatumID')
          ..add('value', value))
        .toString();
  }
}

class GPackagesMavenMetadatumIDBuilder
    implements
        Builder<GPackagesMavenMetadatumID, GPackagesMavenMetadatumIDBuilder> {
  _$GPackagesMavenMetadatumID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPackagesMavenMetadatumIDBuilder();

  GPackagesMavenMetadatumIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPackagesMavenMetadatumID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPackagesMavenMetadatumID;
  }

  @override
  void update(void Function(GPackagesMavenMetadatumIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPackagesMavenMetadatumID build() => _build();

  _$GPackagesMavenMetadatumID _build() {
    final _$result = _$v ??
        new _$GPackagesMavenMetadatumID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPackagesMavenMetadatumID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPackagesNugetDependencyLinkMetadatumID
    extends GPackagesNugetDependencyLinkMetadatumID {
  @override
  final String value;

  factory _$GPackagesNugetDependencyLinkMetadatumID(
          [void Function(GPackagesNugetDependencyLinkMetadatumIDBuilder)?
              updates]) =>
      (new GPackagesNugetDependencyLinkMetadatumIDBuilder()..update(updates))
          ._build();

  _$GPackagesNugetDependencyLinkMetadatumID._({required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPackagesNugetDependencyLinkMetadatumID', 'value');
  }

  @override
  GPackagesNugetDependencyLinkMetadatumID rebuild(
          void Function(GPackagesNugetDependencyLinkMetadatumIDBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPackagesNugetDependencyLinkMetadatumIDBuilder toBuilder() =>
      new GPackagesNugetDependencyLinkMetadatumIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPackagesNugetDependencyLinkMetadatumID &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPackagesNugetDependencyLinkMetadatumID')
          ..add('value', value))
        .toString();
  }
}

class GPackagesNugetDependencyLinkMetadatumIDBuilder
    implements
        Builder<GPackagesNugetDependencyLinkMetadatumID,
            GPackagesNugetDependencyLinkMetadatumIDBuilder> {
  _$GPackagesNugetDependencyLinkMetadatumID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPackagesNugetDependencyLinkMetadatumIDBuilder();

  GPackagesNugetDependencyLinkMetadatumIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPackagesNugetDependencyLinkMetadatumID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPackagesNugetDependencyLinkMetadatumID;
  }

  @override
  void update(
      void Function(GPackagesNugetDependencyLinkMetadatumIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPackagesNugetDependencyLinkMetadatumID build() => _build();

  _$GPackagesNugetDependencyLinkMetadatumID _build() {
    final _$result = _$v ??
        new _$GPackagesNugetDependencyLinkMetadatumID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPackagesNugetDependencyLinkMetadatumID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPackagesNugetMetadatumID extends GPackagesNugetMetadatumID {
  @override
  final String value;

  factory _$GPackagesNugetMetadatumID(
          [void Function(GPackagesNugetMetadatumIDBuilder)? updates]) =>
      (new GPackagesNugetMetadatumIDBuilder()..update(updates))._build();

  _$GPackagesNugetMetadatumID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPackagesNugetMetadatumID', 'value');
  }

  @override
  GPackagesNugetMetadatumID rebuild(
          void Function(GPackagesNugetMetadatumIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPackagesNugetMetadatumIDBuilder toBuilder() =>
      new GPackagesNugetMetadatumIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPackagesNugetMetadatumID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPackagesNugetMetadatumID')
          ..add('value', value))
        .toString();
  }
}

class GPackagesNugetMetadatumIDBuilder
    implements
        Builder<GPackagesNugetMetadatumID, GPackagesNugetMetadatumIDBuilder> {
  _$GPackagesNugetMetadatumID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPackagesNugetMetadatumIDBuilder();

  GPackagesNugetMetadatumIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPackagesNugetMetadatumID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPackagesNugetMetadatumID;
  }

  @override
  void update(void Function(GPackagesNugetMetadatumIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPackagesNugetMetadatumID build() => _build();

  _$GPackagesNugetMetadatumID _build() {
    final _$result = _$v ??
        new _$GPackagesNugetMetadatumID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPackagesNugetMetadatumID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPackagesPackageFileID extends GPackagesPackageFileID {
  @override
  final String value;

  factory _$GPackagesPackageFileID(
          [void Function(GPackagesPackageFileIDBuilder)? updates]) =>
      (new GPackagesPackageFileIDBuilder()..update(updates))._build();

  _$GPackagesPackageFileID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPackagesPackageFileID', 'value');
  }

  @override
  GPackagesPackageFileID rebuild(
          void Function(GPackagesPackageFileIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPackagesPackageFileIDBuilder toBuilder() =>
      new GPackagesPackageFileIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPackagesPackageFileID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPackagesPackageFileID')
          ..add('value', value))
        .toString();
  }
}

class GPackagesPackageFileIDBuilder
    implements Builder<GPackagesPackageFileID, GPackagesPackageFileIDBuilder> {
  _$GPackagesPackageFileID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPackagesPackageFileIDBuilder();

  GPackagesPackageFileIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPackagesPackageFileID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPackagesPackageFileID;
  }

  @override
  void update(void Function(GPackagesPackageFileIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPackagesPackageFileID build() => _build();

  _$GPackagesPackageFileID _build() {
    final _$result = _$v ??
        new _$GPackagesPackageFileID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPackagesPackageFileID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPackagesPackageID extends GPackagesPackageID {
  @override
  final String value;

  factory _$GPackagesPackageID(
          [void Function(GPackagesPackageIDBuilder)? updates]) =>
      (new GPackagesPackageIDBuilder()..update(updates))._build();

  _$GPackagesPackageID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPackagesPackageID', 'value');
  }

  @override
  GPackagesPackageID rebuild(
          void Function(GPackagesPackageIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPackagesPackageIDBuilder toBuilder() =>
      new GPackagesPackageIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPackagesPackageID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPackagesPackageID')
          ..add('value', value))
        .toString();
  }
}

class GPackagesPackageIDBuilder
    implements Builder<GPackagesPackageID, GPackagesPackageIDBuilder> {
  _$GPackagesPackageID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPackagesPackageIDBuilder();

  GPackagesPackageIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPackagesPackageID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPackagesPackageID;
  }

  @override
  void update(void Function(GPackagesPackageIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPackagesPackageID build() => _build();

  _$GPackagesPackageID _build() {
    final _$result = _$v ??
        new _$GPackagesPackageID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPackagesPackageID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPackagesPypiMetadatumID extends GPackagesPypiMetadatumID {
  @override
  final String value;

  factory _$GPackagesPypiMetadatumID(
          [void Function(GPackagesPypiMetadatumIDBuilder)? updates]) =>
      (new GPackagesPypiMetadatumIDBuilder()..update(updates))._build();

  _$GPackagesPypiMetadatumID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPackagesPypiMetadatumID', 'value');
  }

  @override
  GPackagesPypiMetadatumID rebuild(
          void Function(GPackagesPypiMetadatumIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPackagesPypiMetadatumIDBuilder toBuilder() =>
      new GPackagesPypiMetadatumIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPackagesPypiMetadatumID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPackagesPypiMetadatumID')
          ..add('value', value))
        .toString();
  }
}

class GPackagesPypiMetadatumIDBuilder
    implements
        Builder<GPackagesPypiMetadatumID, GPackagesPypiMetadatumIDBuilder> {
  _$GPackagesPypiMetadatumID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPackagesPypiMetadatumIDBuilder();

  GPackagesPypiMetadatumIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPackagesPypiMetadatumID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPackagesPypiMetadatumID;
  }

  @override
  void update(void Function(GPackagesPypiMetadatumIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPackagesPypiMetadatumID build() => _build();

  _$GPackagesPypiMetadatumID _build() {
    final _$result = _$v ??
        new _$GPackagesPypiMetadatumID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPackagesPypiMetadatumID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPagesMarkOnboardingCompleteInput
    extends GPagesMarkOnboardingCompleteInput {
  @override
  final String projectPath;
  @override
  final String? clientMutationId;

  factory _$GPagesMarkOnboardingCompleteInput(
          [void Function(GPagesMarkOnboardingCompleteInputBuilder)? updates]) =>
      (new GPagesMarkOnboardingCompleteInputBuilder()..update(updates))
          ._build();

  _$GPagesMarkOnboardingCompleteInput._(
      {required this.projectPath, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GPagesMarkOnboardingCompleteInput', 'projectPath');
  }

  @override
  GPagesMarkOnboardingCompleteInput rebuild(
          void Function(GPagesMarkOnboardingCompleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPagesMarkOnboardingCompleteInputBuilder toBuilder() =>
      new GPagesMarkOnboardingCompleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPagesMarkOnboardingCompleteInput &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, projectPath.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPagesMarkOnboardingCompleteInput')
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GPagesMarkOnboardingCompleteInputBuilder
    implements
        Builder<GPagesMarkOnboardingCompleteInput,
            GPagesMarkOnboardingCompleteInputBuilder> {
  _$GPagesMarkOnboardingCompleteInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GPagesMarkOnboardingCompleteInputBuilder();

  GPagesMarkOnboardingCompleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPagesMarkOnboardingCompleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPagesMarkOnboardingCompleteInput;
  }

  @override
  void update(
      void Function(GPagesMarkOnboardingCompleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPagesMarkOnboardingCompleteInput build() => _build();

  _$GPagesMarkOnboardingCompleteInput _build() {
    final _$result = _$v ??
        new _$GPagesMarkOnboardingCompleteInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                r'GPagesMarkOnboardingCompleteInput', 'projectPath'),
            clientMutationId: clientMutationId);
    replace(_$result);
    return _$result;
  }
}

class _$GPathLockID extends GPathLockID {
  @override
  final String value;

  factory _$GPathLockID([void Function(GPathLockIDBuilder)? updates]) =>
      (new GPathLockIDBuilder()..update(updates))._build();

  _$GPathLockID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GPathLockID', 'value');
  }

  @override
  GPathLockID rebuild(void Function(GPathLockIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPathLockIDBuilder toBuilder() => new GPathLockIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPathLockID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPathLockID')..add('value', value))
        .toString();
  }
}

class GPathLockIDBuilder implements Builder<GPathLockID, GPathLockIDBuilder> {
  _$GPathLockID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPathLockIDBuilder();

  GPathLockIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPathLockID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPathLockID;
  }

  @override
  void update(void Function(GPathLockIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPathLockID build() => _build();

  _$GPathLockID _build() {
    final _$result = _$v ??
        new _$GPathLockID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPathLockID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPayloadAlertFieldPathSegment extends GPayloadAlertFieldPathSegment {
  @override
  final String value;

  factory _$GPayloadAlertFieldPathSegment(
          [void Function(GPayloadAlertFieldPathSegmentBuilder)? updates]) =>
      (new GPayloadAlertFieldPathSegmentBuilder()..update(updates))._build();

  _$GPayloadAlertFieldPathSegment._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GPayloadAlertFieldPathSegment', 'value');
  }

  @override
  GPayloadAlertFieldPathSegment rebuild(
          void Function(GPayloadAlertFieldPathSegmentBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPayloadAlertFieldPathSegmentBuilder toBuilder() =>
      new GPayloadAlertFieldPathSegmentBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPayloadAlertFieldPathSegment && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPayloadAlertFieldPathSegment')
          ..add('value', value))
        .toString();
  }
}

class GPayloadAlertFieldPathSegmentBuilder
    implements
        Builder<GPayloadAlertFieldPathSegment,
            GPayloadAlertFieldPathSegmentBuilder> {
  _$GPayloadAlertFieldPathSegment? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPayloadAlertFieldPathSegmentBuilder();

  GPayloadAlertFieldPathSegmentBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPayloadAlertFieldPathSegment other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPayloadAlertFieldPathSegment;
  }

  @override
  void update(void Function(GPayloadAlertFieldPathSegmentBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPayloadAlertFieldPathSegment build() => _build();

  _$GPayloadAlertFieldPathSegment _build() {
    final _$result = _$v ??
        new _$GPayloadAlertFieldPathSegment._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPayloadAlertFieldPathSegment', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPipelineCancelInput extends GPipelineCancelInput {
  @override
  final GCiPipelineID id;
  @override
  final String? clientMutationId;

  factory _$GPipelineCancelInput(
          [void Function(GPipelineCancelInputBuilder)? updates]) =>
      (new GPipelineCancelInputBuilder()..update(updates))._build();

  _$GPipelineCancelInput._({required this.id, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GPipelineCancelInput', 'id');
  }

  @override
  GPipelineCancelInput rebuild(
          void Function(GPipelineCancelInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPipelineCancelInputBuilder toBuilder() =>
      new GPipelineCancelInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPipelineCancelInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPipelineCancelInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GPipelineCancelInputBuilder
    implements Builder<GPipelineCancelInput, GPipelineCancelInputBuilder> {
  _$GPipelineCancelInput? _$v;

  GCiPipelineIDBuilder? _id;
  GCiPipelineIDBuilder get id => _$this._id ??= new GCiPipelineIDBuilder();
  set id(GCiPipelineIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GPipelineCancelInputBuilder();

  GPipelineCancelInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPipelineCancelInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPipelineCancelInput;
  }

  @override
  void update(void Function(GPipelineCancelInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPipelineCancelInput build() => _build();

  _$GPipelineCancelInput _build() {
    _$GPipelineCancelInput _$result;
    try {
      _$result = _$v ??
          new _$GPipelineCancelInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPipelineCancelInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPipelineDestroyInput extends GPipelineDestroyInput {
  @override
  final GCiPipelineID id;
  @override
  final String? clientMutationId;

  factory _$GPipelineDestroyInput(
          [void Function(GPipelineDestroyInputBuilder)? updates]) =>
      (new GPipelineDestroyInputBuilder()..update(updates))._build();

  _$GPipelineDestroyInput._({required this.id, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GPipelineDestroyInput', 'id');
  }

  @override
  GPipelineDestroyInput rebuild(
          void Function(GPipelineDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPipelineDestroyInputBuilder toBuilder() =>
      new GPipelineDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPipelineDestroyInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPipelineDestroyInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GPipelineDestroyInputBuilder
    implements Builder<GPipelineDestroyInput, GPipelineDestroyInputBuilder> {
  _$GPipelineDestroyInput? _$v;

  GCiPipelineIDBuilder? _id;
  GCiPipelineIDBuilder get id => _$this._id ??= new GCiPipelineIDBuilder();
  set id(GCiPipelineIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GPipelineDestroyInputBuilder();

  GPipelineDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPipelineDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPipelineDestroyInput;
  }

  @override
  void update(void Function(GPipelineDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPipelineDestroyInput build() => _build();

  _$GPipelineDestroyInput _build() {
    _$GPipelineDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GPipelineDestroyInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPipelineDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPipelineRetryInput extends GPipelineRetryInput {
  @override
  final GCiPipelineID id;
  @override
  final String? clientMutationId;

  factory _$GPipelineRetryInput(
          [void Function(GPipelineRetryInputBuilder)? updates]) =>
      (new GPipelineRetryInputBuilder()..update(updates))._build();

  _$GPipelineRetryInput._({required this.id, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GPipelineRetryInput', 'id');
  }

  @override
  GPipelineRetryInput rebuild(
          void Function(GPipelineRetryInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPipelineRetryInputBuilder toBuilder() =>
      new GPipelineRetryInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPipelineRetryInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPipelineRetryInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GPipelineRetryInputBuilder
    implements Builder<GPipelineRetryInput, GPipelineRetryInputBuilder> {
  _$GPipelineRetryInput? _$v;

  GCiPipelineIDBuilder? _id;
  GCiPipelineIDBuilder get id => _$this._id ??= new GCiPipelineIDBuilder();
  set id(GCiPipelineIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GPipelineRetryInputBuilder();

  GPipelineRetryInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPipelineRetryInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPipelineRetryInput;
  }

  @override
  void update(void Function(GPipelineRetryInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPipelineRetryInput build() => _build();

  _$GPipelineRetryInput _build() {
    _$GPipelineRetryInput _$result;
    try {
      _$result = _$v ??
          new _$GPipelineRetryInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPipelineRetryInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectCiCdSettingsUpdateInput
    extends GProjectCiCdSettingsUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final String fullPath;
  @override
  final bool? keepLatestArtifact;
  @override
  final bool? jobTokenScopeEnabled;
  @override
  final bool? mergePipelinesEnabled;
  @override
  final bool? mergeTrainsEnabled;

  factory _$GProjectCiCdSettingsUpdateInput(
          [void Function(GProjectCiCdSettingsUpdateInputBuilder)? updates]) =>
      (new GProjectCiCdSettingsUpdateInputBuilder()..update(updates))._build();

  _$GProjectCiCdSettingsUpdateInput._(
      {this.clientMutationId,
      required this.fullPath,
      this.keepLatestArtifact,
      this.jobTokenScopeEnabled,
      this.mergePipelinesEnabled,
      this.mergeTrainsEnabled})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        fullPath, r'GProjectCiCdSettingsUpdateInput', 'fullPath');
  }

  @override
  GProjectCiCdSettingsUpdateInput rebuild(
          void Function(GProjectCiCdSettingsUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectCiCdSettingsUpdateInputBuilder toBuilder() =>
      new GProjectCiCdSettingsUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectCiCdSettingsUpdateInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath &&
        keepLatestArtifact == other.keepLatestArtifact &&
        jobTokenScopeEnabled == other.jobTokenScopeEnabled &&
        mergePipelinesEnabled == other.mergePipelinesEnabled &&
        mergeTrainsEnabled == other.mergeTrainsEnabled;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, clientMutationId.hashCode), fullPath.hashCode),
                    keepLatestArtifact.hashCode),
                jobTokenScopeEnabled.hashCode),
            mergePipelinesEnabled.hashCode),
        mergeTrainsEnabled.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectCiCdSettingsUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath)
          ..add('keepLatestArtifact', keepLatestArtifact)
          ..add('jobTokenScopeEnabled', jobTokenScopeEnabled)
          ..add('mergePipelinesEnabled', mergePipelinesEnabled)
          ..add('mergeTrainsEnabled', mergeTrainsEnabled))
        .toString();
  }
}

class GProjectCiCdSettingsUpdateInputBuilder
    implements
        Builder<GProjectCiCdSettingsUpdateInput,
            GProjectCiCdSettingsUpdateInputBuilder> {
  _$GProjectCiCdSettingsUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  bool? _keepLatestArtifact;
  bool? get keepLatestArtifact => _$this._keepLatestArtifact;
  set keepLatestArtifact(bool? keepLatestArtifact) =>
      _$this._keepLatestArtifact = keepLatestArtifact;

  bool? _jobTokenScopeEnabled;
  bool? get jobTokenScopeEnabled => _$this._jobTokenScopeEnabled;
  set jobTokenScopeEnabled(bool? jobTokenScopeEnabled) =>
      _$this._jobTokenScopeEnabled = jobTokenScopeEnabled;

  bool? _mergePipelinesEnabled;
  bool? get mergePipelinesEnabled => _$this._mergePipelinesEnabled;
  set mergePipelinesEnabled(bool? mergePipelinesEnabled) =>
      _$this._mergePipelinesEnabled = mergePipelinesEnabled;

  bool? _mergeTrainsEnabled;
  bool? get mergeTrainsEnabled => _$this._mergeTrainsEnabled;
  set mergeTrainsEnabled(bool? mergeTrainsEnabled) =>
      _$this._mergeTrainsEnabled = mergeTrainsEnabled;

  GProjectCiCdSettingsUpdateInputBuilder();

  GProjectCiCdSettingsUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _keepLatestArtifact = $v.keepLatestArtifact;
      _jobTokenScopeEnabled = $v.jobTokenScopeEnabled;
      _mergePipelinesEnabled = $v.mergePipelinesEnabled;
      _mergeTrainsEnabled = $v.mergeTrainsEnabled;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectCiCdSettingsUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectCiCdSettingsUpdateInput;
  }

  @override
  void update(void Function(GProjectCiCdSettingsUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectCiCdSettingsUpdateInput build() => _build();

  _$GProjectCiCdSettingsUpdateInput _build() {
    final _$result = _$v ??
        new _$GProjectCiCdSettingsUpdateInput._(
            clientMutationId: clientMutationId,
            fullPath: BuiltValueNullFieldError.checkNotNull(
                fullPath, r'GProjectCiCdSettingsUpdateInput', 'fullPath'),
            keepLatestArtifact: keepLatestArtifact,
            jobTokenScopeEnabled: jobTokenScopeEnabled,
            mergePipelinesEnabled: mergePipelinesEnabled,
            mergeTrainsEnabled: mergeTrainsEnabled);
    replace(_$result);
    return _$result;
  }
}

class _$GProjectID extends GProjectID {
  @override
  final String value;

  factory _$GProjectID([void Function(GProjectIDBuilder)? updates]) =>
      (new GProjectIDBuilder()..update(updates))._build();

  _$GProjectID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GProjectID', 'value');
  }

  @override
  GProjectID rebuild(void Function(GProjectIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectIDBuilder toBuilder() => new GProjectIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectID')..add('value', value))
        .toString();
  }
}

class GProjectIDBuilder implements Builder<GProjectID, GProjectIDBuilder> {
  _$GProjectID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GProjectIDBuilder();

  GProjectIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectID;
  }

  @override
  void update(void Function(GProjectIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectID build() => _build();

  _$GProjectID _build() {
    final _$result = _$v ??
        new _$GProjectID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GProjectID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GProjectSetComplianceFrameworkInput
    extends GProjectSetComplianceFrameworkInput {
  @override
  final String? clientMutationId;
  @override
  final GProjectID projectId;
  @override
  final GComplianceManagementFrameworkID? complianceFrameworkId;

  factory _$GProjectSetComplianceFrameworkInput(
          [void Function(GProjectSetComplianceFrameworkInputBuilder)?
              updates]) =>
      (new GProjectSetComplianceFrameworkInputBuilder()..update(updates))
          ._build();

  _$GProjectSetComplianceFrameworkInput._(
      {this.clientMutationId,
      required this.projectId,
      this.complianceFrameworkId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectId, r'GProjectSetComplianceFrameworkInput', 'projectId');
  }

  @override
  GProjectSetComplianceFrameworkInput rebuild(
          void Function(GProjectSetComplianceFrameworkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectSetComplianceFrameworkInputBuilder toBuilder() =>
      new GProjectSetComplianceFrameworkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectSetComplianceFrameworkInput &&
        clientMutationId == other.clientMutationId &&
        projectId == other.projectId &&
        complianceFrameworkId == other.complianceFrameworkId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), projectId.hashCode),
        complianceFrameworkId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectSetComplianceFrameworkInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectId', projectId)
          ..add('complianceFrameworkId', complianceFrameworkId))
        .toString();
  }
}

class GProjectSetComplianceFrameworkInputBuilder
    implements
        Builder<GProjectSetComplianceFrameworkInput,
            GProjectSetComplianceFrameworkInputBuilder> {
  _$GProjectSetComplianceFrameworkInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GProjectIDBuilder? _projectId;
  GProjectIDBuilder get projectId =>
      _$this._projectId ??= new GProjectIDBuilder();
  set projectId(GProjectIDBuilder? projectId) => _$this._projectId = projectId;

  GComplianceManagementFrameworkIDBuilder? _complianceFrameworkId;
  GComplianceManagementFrameworkIDBuilder get complianceFrameworkId =>
      _$this._complianceFrameworkId ??=
          new GComplianceManagementFrameworkIDBuilder();
  set complianceFrameworkId(
          GComplianceManagementFrameworkIDBuilder? complianceFrameworkId) =>
      _$this._complianceFrameworkId = complianceFrameworkId;

  GProjectSetComplianceFrameworkInputBuilder();

  GProjectSetComplianceFrameworkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectId = $v.projectId.toBuilder();
      _complianceFrameworkId = $v.complianceFrameworkId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectSetComplianceFrameworkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectSetComplianceFrameworkInput;
  }

  @override
  void update(
      void Function(GProjectSetComplianceFrameworkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectSetComplianceFrameworkInput build() => _build();

  _$GProjectSetComplianceFrameworkInput _build() {
    _$GProjectSetComplianceFrameworkInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectSetComplianceFrameworkInput._(
              clientMutationId: clientMutationId,
              projectId: projectId.build(),
              complianceFrameworkId: _complianceFrameworkId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'projectId';
        projectId.build();
        _$failedField = 'complianceFrameworkId';
        _complianceFrameworkId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectSetComplianceFrameworkInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectSetLockedInput extends GProjectSetLockedInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final String filePath;
  @override
  final bool lock;

  factory _$GProjectSetLockedInput(
          [void Function(GProjectSetLockedInputBuilder)? updates]) =>
      (new GProjectSetLockedInputBuilder()..update(updates))._build();

  _$GProjectSetLockedInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.filePath,
      required this.lock})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GProjectSetLockedInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        filePath, r'GProjectSetLockedInput', 'filePath');
    BuiltValueNullFieldError.checkNotNull(
        lock, r'GProjectSetLockedInput', 'lock');
  }

  @override
  GProjectSetLockedInput rebuild(
          void Function(GProjectSetLockedInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectSetLockedInputBuilder toBuilder() =>
      new GProjectSetLockedInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectSetLockedInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        filePath == other.filePath &&
        lock == other.lock;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
            filePath.hashCode),
        lock.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectSetLockedInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('filePath', filePath)
          ..add('lock', lock))
        .toString();
  }
}

class GProjectSetLockedInputBuilder
    implements Builder<GProjectSetLockedInput, GProjectSetLockedInputBuilder> {
  _$GProjectSetLockedInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _filePath;
  String? get filePath => _$this._filePath;
  set filePath(String? filePath) => _$this._filePath = filePath;

  bool? _lock;
  bool? get lock => _$this._lock;
  set lock(bool? lock) => _$this._lock = lock;

  GProjectSetLockedInputBuilder();

  GProjectSetLockedInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _filePath = $v.filePath;
      _lock = $v.lock;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectSetLockedInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectSetLockedInput;
  }

  @override
  void update(void Function(GProjectSetLockedInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectSetLockedInput build() => _build();

  _$GProjectSetLockedInput _build() {
    final _$result = _$v ??
        new _$GProjectSetLockedInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GProjectSetLockedInput', 'projectPath'),
            filePath: BuiltValueNullFieldError.checkNotNull(
                filePath, r'GProjectSetLockedInput', 'filePath'),
            lock: BuiltValueNullFieldError.checkNotNull(
                lock, r'GProjectSetLockedInput', 'lock'));
    replace(_$result);
    return _$result;
  }
}

class _$GPrometheusIntegrationCreateInput
    extends GPrometheusIntegrationCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final bool active;
  @override
  final String apiUrl;

  factory _$GPrometheusIntegrationCreateInput(
          [void Function(GPrometheusIntegrationCreateInputBuilder)? updates]) =>
      (new GPrometheusIntegrationCreateInputBuilder()..update(updates))
          ._build();

  _$GPrometheusIntegrationCreateInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.active,
      required this.apiUrl})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GPrometheusIntegrationCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        active, r'GPrometheusIntegrationCreateInput', 'active');
    BuiltValueNullFieldError.checkNotNull(
        apiUrl, r'GPrometheusIntegrationCreateInput', 'apiUrl');
  }

  @override
  GPrometheusIntegrationCreateInput rebuild(
          void Function(GPrometheusIntegrationCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPrometheusIntegrationCreateInputBuilder toBuilder() =>
      new GPrometheusIntegrationCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPrometheusIntegrationCreateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        active == other.active &&
        apiUrl == other.apiUrl;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
            active.hashCode),
        apiUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPrometheusIntegrationCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('active', active)
          ..add('apiUrl', apiUrl))
        .toString();
  }
}

class GPrometheusIntegrationCreateInputBuilder
    implements
        Builder<GPrometheusIntegrationCreateInput,
            GPrometheusIntegrationCreateInputBuilder> {
  _$GPrometheusIntegrationCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  String? _apiUrl;
  String? get apiUrl => _$this._apiUrl;
  set apiUrl(String? apiUrl) => _$this._apiUrl = apiUrl;

  GPrometheusIntegrationCreateInputBuilder();

  GPrometheusIntegrationCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _active = $v.active;
      _apiUrl = $v.apiUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPrometheusIntegrationCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPrometheusIntegrationCreateInput;
  }

  @override
  void update(
      void Function(GPrometheusIntegrationCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPrometheusIntegrationCreateInput build() => _build();

  _$GPrometheusIntegrationCreateInput _build() {
    final _$result = _$v ??
        new _$GPrometheusIntegrationCreateInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                r'GPrometheusIntegrationCreateInput', 'projectPath'),
            active: BuiltValueNullFieldError.checkNotNull(
                active, r'GPrometheusIntegrationCreateInput', 'active'),
            apiUrl: BuiltValueNullFieldError.checkNotNull(
                apiUrl, r'GPrometheusIntegrationCreateInput', 'apiUrl'));
    replace(_$result);
    return _$result;
  }
}

class _$GPrometheusIntegrationResetTokenInput
    extends GPrometheusIntegrationResetTokenInput {
  @override
  final String? clientMutationId;
  @override
  final GIntegrationsPrometheusID id;

  factory _$GPrometheusIntegrationResetTokenInput(
          [void Function(GPrometheusIntegrationResetTokenInputBuilder)?
              updates]) =>
      (new GPrometheusIntegrationResetTokenInputBuilder()..update(updates))
          ._build();

  _$GPrometheusIntegrationResetTokenInput._(
      {this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GPrometheusIntegrationResetTokenInput', 'id');
  }

  @override
  GPrometheusIntegrationResetTokenInput rebuild(
          void Function(GPrometheusIntegrationResetTokenInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPrometheusIntegrationResetTokenInputBuilder toBuilder() =>
      new GPrometheusIntegrationResetTokenInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPrometheusIntegrationResetTokenInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPrometheusIntegrationResetTokenInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GPrometheusIntegrationResetTokenInputBuilder
    implements
        Builder<GPrometheusIntegrationResetTokenInput,
            GPrometheusIntegrationResetTokenInputBuilder> {
  _$GPrometheusIntegrationResetTokenInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIntegrationsPrometheusIDBuilder? _id;
  GIntegrationsPrometheusIDBuilder get id =>
      _$this._id ??= new GIntegrationsPrometheusIDBuilder();
  set id(GIntegrationsPrometheusIDBuilder? id) => _$this._id = id;

  GPrometheusIntegrationResetTokenInputBuilder();

  GPrometheusIntegrationResetTokenInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPrometheusIntegrationResetTokenInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPrometheusIntegrationResetTokenInput;
  }

  @override
  void update(
      void Function(GPrometheusIntegrationResetTokenInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPrometheusIntegrationResetTokenInput build() => _build();

  _$GPrometheusIntegrationResetTokenInput _build() {
    _$GPrometheusIntegrationResetTokenInput _$result;
    try {
      _$result = _$v ??
          new _$GPrometheusIntegrationResetTokenInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPrometheusIntegrationResetTokenInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPrometheusIntegrationUpdateInput
    extends GPrometheusIntegrationUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GIntegrationsPrometheusID id;
  @override
  final bool? active;
  @override
  final String? apiUrl;

  factory _$GPrometheusIntegrationUpdateInput(
          [void Function(GPrometheusIntegrationUpdateInputBuilder)? updates]) =>
      (new GPrometheusIntegrationUpdateInputBuilder()..update(updates))
          ._build();

  _$GPrometheusIntegrationUpdateInput._(
      {this.clientMutationId, required this.id, this.active, this.apiUrl})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GPrometheusIntegrationUpdateInput', 'id');
  }

  @override
  GPrometheusIntegrationUpdateInput rebuild(
          void Function(GPrometheusIntegrationUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPrometheusIntegrationUpdateInputBuilder toBuilder() =>
      new GPrometheusIntegrationUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPrometheusIntegrationUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        active == other.active &&
        apiUrl == other.apiUrl;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
            active.hashCode),
        apiUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPrometheusIntegrationUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('active', active)
          ..add('apiUrl', apiUrl))
        .toString();
  }
}

class GPrometheusIntegrationUpdateInputBuilder
    implements
        Builder<GPrometheusIntegrationUpdateInput,
            GPrometheusIntegrationUpdateInputBuilder> {
  _$GPrometheusIntegrationUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIntegrationsPrometheusIDBuilder? _id;
  GIntegrationsPrometheusIDBuilder get id =>
      _$this._id ??= new GIntegrationsPrometheusIDBuilder();
  set id(GIntegrationsPrometheusIDBuilder? id) => _$this._id = id;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  String? _apiUrl;
  String? get apiUrl => _$this._apiUrl;
  set apiUrl(String? apiUrl) => _$this._apiUrl = apiUrl;

  GPrometheusIntegrationUpdateInputBuilder();

  GPrometheusIntegrationUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _active = $v.active;
      _apiUrl = $v.apiUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPrometheusIntegrationUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPrometheusIntegrationUpdateInput;
  }

  @override
  void update(
      void Function(GPrometheusIntegrationUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPrometheusIntegrationUpdateInput build() => _build();

  _$GPrometheusIntegrationUpdateInput _build() {
    _$GPrometheusIntegrationUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GPrometheusIntegrationUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              active: active,
              apiUrl: apiUrl);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPrometheusIntegrationUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPromoteToEpicInput extends GPromoteToEpicInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final String? groupPath;

  factory _$GPromoteToEpicInput(
          [void Function(GPromoteToEpicInputBuilder)? updates]) =>
      (new GPromoteToEpicInputBuilder()..update(updates))._build();

  _$GPromoteToEpicInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      this.groupPath})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GPromoteToEpicInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(iid, r'GPromoteToEpicInput', 'iid');
  }

  @override
  GPromoteToEpicInput rebuild(
          void Function(GPromoteToEpicInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPromoteToEpicInputBuilder toBuilder() =>
      new GPromoteToEpicInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPromoteToEpicInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        groupPath == other.groupPath;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        groupPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPromoteToEpicInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('groupPath', groupPath))
        .toString();
  }
}

class GPromoteToEpicInputBuilder
    implements Builder<GPromoteToEpicInput, GPromoteToEpicInputBuilder> {
  _$GPromoteToEpicInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  GPromoteToEpicInputBuilder();

  GPromoteToEpicInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _groupPath = $v.groupPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPromoteToEpicInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPromoteToEpicInput;
  }

  @override
  void update(void Function(GPromoteToEpicInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPromoteToEpicInput build() => _build();

  _$GPromoteToEpicInput _build() {
    final _$result = _$v ??
        new _$GPromoteToEpicInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GPromoteToEpicInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GPromoteToEpicInput', 'iid'),
            clientMutationId: clientMutationId,
            groupPath: groupPath);
    replace(_$result);
    return _$result;
  }
}

class _$GReleaseAssetLinkCreateInput extends GReleaseAssetLinkCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String name;
  @override
  final String url;
  @override
  final String? directAssetPath;
  @override
  final GReleaseAssetLinkType? linkType;
  @override
  final String projectPath;
  @override
  final String tagName;

  factory _$GReleaseAssetLinkCreateInput(
          [void Function(GReleaseAssetLinkCreateInputBuilder)? updates]) =>
      (new GReleaseAssetLinkCreateInputBuilder()..update(updates))._build();

  _$GReleaseAssetLinkCreateInput._(
      {this.clientMutationId,
      required this.name,
      required this.url,
      this.directAssetPath,
      this.linkType,
      required this.projectPath,
      required this.tagName})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GReleaseAssetLinkCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        url, r'GReleaseAssetLinkCreateInput', 'url');
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GReleaseAssetLinkCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        tagName, r'GReleaseAssetLinkCreateInput', 'tagName');
  }

  @override
  GReleaseAssetLinkCreateInput rebuild(
          void Function(GReleaseAssetLinkCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReleaseAssetLinkCreateInputBuilder toBuilder() =>
      new GReleaseAssetLinkCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReleaseAssetLinkCreateInput &&
        clientMutationId == other.clientMutationId &&
        name == other.name &&
        url == other.url &&
        directAssetPath == other.directAssetPath &&
        linkType == other.linkType &&
        projectPath == other.projectPath &&
        tagName == other.tagName;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, clientMutationId.hashCode), name.hashCode),
                        url.hashCode),
                    directAssetPath.hashCode),
                linkType.hashCode),
            projectPath.hashCode),
        tagName.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReleaseAssetLinkCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('name', name)
          ..add('url', url)
          ..add('directAssetPath', directAssetPath)
          ..add('linkType', linkType)
          ..add('projectPath', projectPath)
          ..add('tagName', tagName))
        .toString();
  }
}

class GReleaseAssetLinkCreateInputBuilder
    implements
        Builder<GReleaseAssetLinkCreateInput,
            GReleaseAssetLinkCreateInputBuilder> {
  _$GReleaseAssetLinkCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  String? _directAssetPath;
  String? get directAssetPath => _$this._directAssetPath;
  set directAssetPath(String? directAssetPath) =>
      _$this._directAssetPath = directAssetPath;

  GReleaseAssetLinkType? _linkType;
  GReleaseAssetLinkType? get linkType => _$this._linkType;
  set linkType(GReleaseAssetLinkType? linkType) => _$this._linkType = linkType;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _tagName;
  String? get tagName => _$this._tagName;
  set tagName(String? tagName) => _$this._tagName = tagName;

  GReleaseAssetLinkCreateInputBuilder();

  GReleaseAssetLinkCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _name = $v.name;
      _url = $v.url;
      _directAssetPath = $v.directAssetPath;
      _linkType = $v.linkType;
      _projectPath = $v.projectPath;
      _tagName = $v.tagName;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReleaseAssetLinkCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReleaseAssetLinkCreateInput;
  }

  @override
  void update(void Function(GReleaseAssetLinkCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReleaseAssetLinkCreateInput build() => _build();

  _$GReleaseAssetLinkCreateInput _build() {
    final _$result = _$v ??
        new _$GReleaseAssetLinkCreateInput._(
            clientMutationId: clientMutationId,
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GReleaseAssetLinkCreateInput', 'name'),
            url: BuiltValueNullFieldError.checkNotNull(
                url, r'GReleaseAssetLinkCreateInput', 'url'),
            directAssetPath: directAssetPath,
            linkType: linkType,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GReleaseAssetLinkCreateInput', 'projectPath'),
            tagName: BuiltValueNullFieldError.checkNotNull(
                tagName, r'GReleaseAssetLinkCreateInput', 'tagName'));
    replace(_$result);
    return _$result;
  }
}

class _$GReleaseAssetLinkDeleteInput extends GReleaseAssetLinkDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final GReleasesLinkID id;

  factory _$GReleaseAssetLinkDeleteInput(
          [void Function(GReleaseAssetLinkDeleteInputBuilder)? updates]) =>
      (new GReleaseAssetLinkDeleteInputBuilder()..update(updates))._build();

  _$GReleaseAssetLinkDeleteInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GReleaseAssetLinkDeleteInput', 'id');
  }

  @override
  GReleaseAssetLinkDeleteInput rebuild(
          void Function(GReleaseAssetLinkDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReleaseAssetLinkDeleteInputBuilder toBuilder() =>
      new GReleaseAssetLinkDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReleaseAssetLinkDeleteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReleaseAssetLinkDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GReleaseAssetLinkDeleteInputBuilder
    implements
        Builder<GReleaseAssetLinkDeleteInput,
            GReleaseAssetLinkDeleteInputBuilder> {
  _$GReleaseAssetLinkDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GReleasesLinkIDBuilder? _id;
  GReleasesLinkIDBuilder get id => _$this._id ??= new GReleasesLinkIDBuilder();
  set id(GReleasesLinkIDBuilder? id) => _$this._id = id;

  GReleaseAssetLinkDeleteInputBuilder();

  GReleaseAssetLinkDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReleaseAssetLinkDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReleaseAssetLinkDeleteInput;
  }

  @override
  void update(void Function(GReleaseAssetLinkDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReleaseAssetLinkDeleteInput build() => _build();

  _$GReleaseAssetLinkDeleteInput _build() {
    _$GReleaseAssetLinkDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GReleaseAssetLinkDeleteInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GReleaseAssetLinkDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GReleaseAssetLinkInput extends GReleaseAssetLinkInput {
  @override
  final String name;
  @override
  final String url;
  @override
  final String? directAssetPath;
  @override
  final GReleaseAssetLinkType? linkType;

  factory _$GReleaseAssetLinkInput(
          [void Function(GReleaseAssetLinkInputBuilder)? updates]) =>
      (new GReleaseAssetLinkInputBuilder()..update(updates))._build();

  _$GReleaseAssetLinkInput._(
      {required this.name,
      required this.url,
      this.directAssetPath,
      this.linkType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GReleaseAssetLinkInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        url, r'GReleaseAssetLinkInput', 'url');
  }

  @override
  GReleaseAssetLinkInput rebuild(
          void Function(GReleaseAssetLinkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReleaseAssetLinkInputBuilder toBuilder() =>
      new GReleaseAssetLinkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReleaseAssetLinkInput &&
        name == other.name &&
        url == other.url &&
        directAssetPath == other.directAssetPath &&
        linkType == other.linkType;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, name.hashCode), url.hashCode), directAssetPath.hashCode),
        linkType.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReleaseAssetLinkInput')
          ..add('name', name)
          ..add('url', url)
          ..add('directAssetPath', directAssetPath)
          ..add('linkType', linkType))
        .toString();
  }
}

class GReleaseAssetLinkInputBuilder
    implements Builder<GReleaseAssetLinkInput, GReleaseAssetLinkInputBuilder> {
  _$GReleaseAssetLinkInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  String? _directAssetPath;
  String? get directAssetPath => _$this._directAssetPath;
  set directAssetPath(String? directAssetPath) =>
      _$this._directAssetPath = directAssetPath;

  GReleaseAssetLinkType? _linkType;
  GReleaseAssetLinkType? get linkType => _$this._linkType;
  set linkType(GReleaseAssetLinkType? linkType) => _$this._linkType = linkType;

  GReleaseAssetLinkInputBuilder();

  GReleaseAssetLinkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _url = $v.url;
      _directAssetPath = $v.directAssetPath;
      _linkType = $v.linkType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReleaseAssetLinkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReleaseAssetLinkInput;
  }

  @override
  void update(void Function(GReleaseAssetLinkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReleaseAssetLinkInput build() => _build();

  _$GReleaseAssetLinkInput _build() {
    final _$result = _$v ??
        new _$GReleaseAssetLinkInput._(
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GReleaseAssetLinkInput', 'name'),
            url: BuiltValueNullFieldError.checkNotNull(
                url, r'GReleaseAssetLinkInput', 'url'),
            directAssetPath: directAssetPath,
            linkType: linkType);
    replace(_$result);
    return _$result;
  }
}

class _$GReleaseAssetLinkUpdateInput extends GReleaseAssetLinkUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GReleasesLinkID id;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final String? directAssetPath;
  @override
  final GReleaseAssetLinkType? linkType;

  factory _$GReleaseAssetLinkUpdateInput(
          [void Function(GReleaseAssetLinkUpdateInputBuilder)? updates]) =>
      (new GReleaseAssetLinkUpdateInputBuilder()..update(updates))._build();

  _$GReleaseAssetLinkUpdateInput._(
      {this.clientMutationId,
      required this.id,
      this.name,
      this.url,
      this.directAssetPath,
      this.linkType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GReleaseAssetLinkUpdateInput', 'id');
  }

  @override
  GReleaseAssetLinkUpdateInput rebuild(
          void Function(GReleaseAssetLinkUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReleaseAssetLinkUpdateInputBuilder toBuilder() =>
      new GReleaseAssetLinkUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReleaseAssetLinkUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        name == other.name &&
        url == other.url &&
        directAssetPath == other.directAssetPath &&
        linkType == other.linkType;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
                    name.hashCode),
                url.hashCode),
            directAssetPath.hashCode),
        linkType.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReleaseAssetLinkUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('name', name)
          ..add('url', url)
          ..add('directAssetPath', directAssetPath)
          ..add('linkType', linkType))
        .toString();
  }
}

class GReleaseAssetLinkUpdateInputBuilder
    implements
        Builder<GReleaseAssetLinkUpdateInput,
            GReleaseAssetLinkUpdateInputBuilder> {
  _$GReleaseAssetLinkUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GReleasesLinkIDBuilder? _id;
  GReleasesLinkIDBuilder get id => _$this._id ??= new GReleasesLinkIDBuilder();
  set id(GReleasesLinkIDBuilder? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  String? _directAssetPath;
  String? get directAssetPath => _$this._directAssetPath;
  set directAssetPath(String? directAssetPath) =>
      _$this._directAssetPath = directAssetPath;

  GReleaseAssetLinkType? _linkType;
  GReleaseAssetLinkType? get linkType => _$this._linkType;
  set linkType(GReleaseAssetLinkType? linkType) => _$this._linkType = linkType;

  GReleaseAssetLinkUpdateInputBuilder();

  GReleaseAssetLinkUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _name = $v.name;
      _url = $v.url;
      _directAssetPath = $v.directAssetPath;
      _linkType = $v.linkType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReleaseAssetLinkUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReleaseAssetLinkUpdateInput;
  }

  @override
  void update(void Function(GReleaseAssetLinkUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReleaseAssetLinkUpdateInput build() => _build();

  _$GReleaseAssetLinkUpdateInput _build() {
    _$GReleaseAssetLinkUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GReleaseAssetLinkUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              name: name,
              url: url,
              directAssetPath: directAssetPath,
              linkType: linkType);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GReleaseAssetLinkUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GReleaseAssetsInput extends GReleaseAssetsInput {
  @override
  final BuiltList<GReleaseAssetLinkInput>? links;

  factory _$GReleaseAssetsInput(
          [void Function(GReleaseAssetsInputBuilder)? updates]) =>
      (new GReleaseAssetsInputBuilder()..update(updates))._build();

  _$GReleaseAssetsInput._({this.links}) : super._();

  @override
  GReleaseAssetsInput rebuild(
          void Function(GReleaseAssetsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReleaseAssetsInputBuilder toBuilder() =>
      new GReleaseAssetsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReleaseAssetsInput && links == other.links;
  }

  @override
  int get hashCode {
    return $jf($jc(0, links.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReleaseAssetsInput')
          ..add('links', links))
        .toString();
  }
}

class GReleaseAssetsInputBuilder
    implements Builder<GReleaseAssetsInput, GReleaseAssetsInputBuilder> {
  _$GReleaseAssetsInput? _$v;

  ListBuilder<GReleaseAssetLinkInput>? _links;
  ListBuilder<GReleaseAssetLinkInput> get links =>
      _$this._links ??= new ListBuilder<GReleaseAssetLinkInput>();
  set links(ListBuilder<GReleaseAssetLinkInput>? links) =>
      _$this._links = links;

  GReleaseAssetsInputBuilder();

  GReleaseAssetsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _links = $v.links?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReleaseAssetsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReleaseAssetsInput;
  }

  @override
  void update(void Function(GReleaseAssetsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReleaseAssetsInput build() => _build();

  _$GReleaseAssetsInput _build() {
    _$GReleaseAssetsInput _$result;
    try {
      _$result = _$v ?? new _$GReleaseAssetsInput._(links: _links?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'links';
        _links?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GReleaseAssetsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GReleaseCreateInput extends GReleaseCreateInput {
  @override
  final String projectPath;
  @override
  final String? clientMutationId;
  @override
  final String tagName;
  @override
  final String? tagMessage;
  @override
  final String? ref;
  @override
  final String? name;
  @override
  final String? description;
  @override
  final GTime? releasedAt;
  @override
  final BuiltList<String>? milestones;
  @override
  final GReleaseAssetsInput? assets;

  factory _$GReleaseCreateInput(
          [void Function(GReleaseCreateInputBuilder)? updates]) =>
      (new GReleaseCreateInputBuilder()..update(updates))._build();

  _$GReleaseCreateInput._(
      {required this.projectPath,
      this.clientMutationId,
      required this.tagName,
      this.tagMessage,
      this.ref,
      this.name,
      this.description,
      this.releasedAt,
      this.milestones,
      this.assets})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GReleaseCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        tagName, r'GReleaseCreateInput', 'tagName');
  }

  @override
  GReleaseCreateInput rebuild(
          void Function(GReleaseCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReleaseCreateInputBuilder toBuilder() =>
      new GReleaseCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReleaseCreateInput &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId &&
        tagName == other.tagName &&
        tagMessage == other.tagMessage &&
        ref == other.ref &&
        name == other.name &&
        description == other.description &&
        releasedAt == other.releasedAt &&
        milestones == other.milestones &&
        assets == other.assets;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, projectPath.hashCode),
                                        clientMutationId.hashCode),
                                    tagName.hashCode),
                                tagMessage.hashCode),
                            ref.hashCode),
                        name.hashCode),
                    description.hashCode),
                releasedAt.hashCode),
            milestones.hashCode),
        assets.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReleaseCreateInput')
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId)
          ..add('tagName', tagName)
          ..add('tagMessage', tagMessage)
          ..add('ref', ref)
          ..add('name', name)
          ..add('description', description)
          ..add('releasedAt', releasedAt)
          ..add('milestones', milestones)
          ..add('assets', assets))
        .toString();
  }
}

class GReleaseCreateInputBuilder
    implements Builder<GReleaseCreateInput, GReleaseCreateInputBuilder> {
  _$GReleaseCreateInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _tagName;
  String? get tagName => _$this._tagName;
  set tagName(String? tagName) => _$this._tagName = tagName;

  String? _tagMessage;
  String? get tagMessage => _$this._tagMessage;
  set tagMessage(String? tagMessage) => _$this._tagMessage = tagMessage;

  String? _ref;
  String? get ref => _$this._ref;
  set ref(String? ref) => _$this._ref = ref;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GTimeBuilder? _releasedAt;
  GTimeBuilder get releasedAt => _$this._releasedAt ??= new GTimeBuilder();
  set releasedAt(GTimeBuilder? releasedAt) => _$this._releasedAt = releasedAt;

  ListBuilder<String>? _milestones;
  ListBuilder<String> get milestones =>
      _$this._milestones ??= new ListBuilder<String>();
  set milestones(ListBuilder<String>? milestones) =>
      _$this._milestones = milestones;

  GReleaseAssetsInputBuilder? _assets;
  GReleaseAssetsInputBuilder get assets =>
      _$this._assets ??= new GReleaseAssetsInputBuilder();
  set assets(GReleaseAssetsInputBuilder? assets) => _$this._assets = assets;

  GReleaseCreateInputBuilder();

  GReleaseCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _tagName = $v.tagName;
      _tagMessage = $v.tagMessage;
      _ref = $v.ref;
      _name = $v.name;
      _description = $v.description;
      _releasedAt = $v.releasedAt?.toBuilder();
      _milestones = $v.milestones?.toBuilder();
      _assets = $v.assets?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReleaseCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReleaseCreateInput;
  }

  @override
  void update(void Function(GReleaseCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReleaseCreateInput build() => _build();

  _$GReleaseCreateInput _build() {
    _$GReleaseCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GReleaseCreateInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GReleaseCreateInput', 'projectPath'),
              clientMutationId: clientMutationId,
              tagName: BuiltValueNullFieldError.checkNotNull(
                  tagName, r'GReleaseCreateInput', 'tagName'),
              tagMessage: tagMessage,
              ref: ref,
              name: name,
              description: description,
              releasedAt: _releasedAt?.build(),
              milestones: _milestones?.build(),
              assets: _assets?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'releasedAt';
        _releasedAt?.build();
        _$failedField = 'milestones';
        _milestones?.build();
        _$failedField = 'assets';
        _assets?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GReleaseCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GReleaseDeleteInput extends GReleaseDeleteInput {
  @override
  final String projectPath;
  @override
  final String? clientMutationId;
  @override
  final String tagName;

  factory _$GReleaseDeleteInput(
          [void Function(GReleaseDeleteInputBuilder)? updates]) =>
      (new GReleaseDeleteInputBuilder()..update(updates))._build();

  _$GReleaseDeleteInput._(
      {required this.projectPath, this.clientMutationId, required this.tagName})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GReleaseDeleteInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        tagName, r'GReleaseDeleteInput', 'tagName');
  }

  @override
  GReleaseDeleteInput rebuild(
          void Function(GReleaseDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReleaseDeleteInputBuilder toBuilder() =>
      new GReleaseDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReleaseDeleteInput &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId &&
        tagName == other.tagName;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, projectPath.hashCode), clientMutationId.hashCode),
        tagName.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReleaseDeleteInput')
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId)
          ..add('tagName', tagName))
        .toString();
  }
}

class GReleaseDeleteInputBuilder
    implements Builder<GReleaseDeleteInput, GReleaseDeleteInputBuilder> {
  _$GReleaseDeleteInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _tagName;
  String? get tagName => _$this._tagName;
  set tagName(String? tagName) => _$this._tagName = tagName;

  GReleaseDeleteInputBuilder();

  GReleaseDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _tagName = $v.tagName;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReleaseDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReleaseDeleteInput;
  }

  @override
  void update(void Function(GReleaseDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReleaseDeleteInput build() => _build();

  _$GReleaseDeleteInput _build() {
    final _$result = _$v ??
        new _$GReleaseDeleteInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GReleaseDeleteInput', 'projectPath'),
            clientMutationId: clientMutationId,
            tagName: BuiltValueNullFieldError.checkNotNull(
                tagName, r'GReleaseDeleteInput', 'tagName'));
    replace(_$result);
    return _$result;
  }
}

class _$GReleaseID extends GReleaseID {
  @override
  final String value;

  factory _$GReleaseID([void Function(GReleaseIDBuilder)? updates]) =>
      (new GReleaseIDBuilder()..update(updates))._build();

  _$GReleaseID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GReleaseID', 'value');
  }

  @override
  GReleaseID rebuild(void Function(GReleaseIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReleaseIDBuilder toBuilder() => new GReleaseIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReleaseID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReleaseID')..add('value', value))
        .toString();
  }
}

class GReleaseIDBuilder implements Builder<GReleaseID, GReleaseIDBuilder> {
  _$GReleaseID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GReleaseIDBuilder();

  GReleaseIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReleaseID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReleaseID;
  }

  @override
  void update(void Function(GReleaseIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReleaseID build() => _build();

  _$GReleaseID _build() {
    final _$result = _$v ??
        new _$GReleaseID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GReleaseID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GReleasesLinkID extends GReleasesLinkID {
  @override
  final String value;

  factory _$GReleasesLinkID([void Function(GReleasesLinkIDBuilder)? updates]) =>
      (new GReleasesLinkIDBuilder()..update(updates))._build();

  _$GReleasesLinkID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GReleasesLinkID', 'value');
  }

  @override
  GReleasesLinkID rebuild(void Function(GReleasesLinkIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReleasesLinkIDBuilder toBuilder() =>
      new GReleasesLinkIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReleasesLinkID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReleasesLinkID')
          ..add('value', value))
        .toString();
  }
}

class GReleasesLinkIDBuilder
    implements Builder<GReleasesLinkID, GReleasesLinkIDBuilder> {
  _$GReleasesLinkID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GReleasesLinkIDBuilder();

  GReleasesLinkIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReleasesLinkID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReleasesLinkID;
  }

  @override
  void update(void Function(GReleasesLinkIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReleasesLinkID build() => _build();

  _$GReleasesLinkID _build() {
    final _$result = _$v ??
        new _$GReleasesLinkID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GReleasesLinkID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GReleaseUpdateInput extends GReleaseUpdateInput {
  @override
  final String projectPath;
  @override
  final String? clientMutationId;
  @override
  final String tagName;
  @override
  final String? name;
  @override
  final String? description;
  @override
  final GTime? releasedAt;
  @override
  final BuiltList<String>? milestones;

  factory _$GReleaseUpdateInput(
          [void Function(GReleaseUpdateInputBuilder)? updates]) =>
      (new GReleaseUpdateInputBuilder()..update(updates))._build();

  _$GReleaseUpdateInput._(
      {required this.projectPath,
      this.clientMutationId,
      required this.tagName,
      this.name,
      this.description,
      this.releasedAt,
      this.milestones})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GReleaseUpdateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        tagName, r'GReleaseUpdateInput', 'tagName');
  }

  @override
  GReleaseUpdateInput rebuild(
          void Function(GReleaseUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReleaseUpdateInputBuilder toBuilder() =>
      new GReleaseUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReleaseUpdateInput &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId &&
        tagName == other.tagName &&
        name == other.name &&
        description == other.description &&
        releasedAt == other.releasedAt &&
        milestones == other.milestones;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, projectPath.hashCode),
                            clientMutationId.hashCode),
                        tagName.hashCode),
                    name.hashCode),
                description.hashCode),
            releasedAt.hashCode),
        milestones.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReleaseUpdateInput')
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId)
          ..add('tagName', tagName)
          ..add('name', name)
          ..add('description', description)
          ..add('releasedAt', releasedAt)
          ..add('milestones', milestones))
        .toString();
  }
}

class GReleaseUpdateInputBuilder
    implements Builder<GReleaseUpdateInput, GReleaseUpdateInputBuilder> {
  _$GReleaseUpdateInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _tagName;
  String? get tagName => _$this._tagName;
  set tagName(String? tagName) => _$this._tagName = tagName;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GTimeBuilder? _releasedAt;
  GTimeBuilder get releasedAt => _$this._releasedAt ??= new GTimeBuilder();
  set releasedAt(GTimeBuilder? releasedAt) => _$this._releasedAt = releasedAt;

  ListBuilder<String>? _milestones;
  ListBuilder<String> get milestones =>
      _$this._milestones ??= new ListBuilder<String>();
  set milestones(ListBuilder<String>? milestones) =>
      _$this._milestones = milestones;

  GReleaseUpdateInputBuilder();

  GReleaseUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _tagName = $v.tagName;
      _name = $v.name;
      _description = $v.description;
      _releasedAt = $v.releasedAt?.toBuilder();
      _milestones = $v.milestones?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReleaseUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReleaseUpdateInput;
  }

  @override
  void update(void Function(GReleaseUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReleaseUpdateInput build() => _build();

  _$GReleaseUpdateInput _build() {
    _$GReleaseUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GReleaseUpdateInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GReleaseUpdateInput', 'projectPath'),
              clientMutationId: clientMutationId,
              tagName: BuiltValueNullFieldError.checkNotNull(
                  tagName, r'GReleaseUpdateInput', 'tagName'),
              name: name,
              description: description,
              releasedAt: _releasedAt?.build(),
              milestones: _milestones?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'releasedAt';
        _releasedAt?.build();
        _$failedField = 'milestones';
        _milestones?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GReleaseUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GRemoveProjectFromSecurityDashboardInput
    extends GRemoveProjectFromSecurityDashboardInput {
  @override
  final String? clientMutationId;
  @override
  final GProjectID id;

  factory _$GRemoveProjectFromSecurityDashboardInput(
          [void Function(GRemoveProjectFromSecurityDashboardInputBuilder)?
              updates]) =>
      (new GRemoveProjectFromSecurityDashboardInputBuilder()..update(updates))
          ._build();

  _$GRemoveProjectFromSecurityDashboardInput._(
      {this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GRemoveProjectFromSecurityDashboardInput', 'id');
  }

  @override
  GRemoveProjectFromSecurityDashboardInput rebuild(
          void Function(GRemoveProjectFromSecurityDashboardInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GRemoveProjectFromSecurityDashboardInputBuilder toBuilder() =>
      new GRemoveProjectFromSecurityDashboardInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GRemoveProjectFromSecurityDashboardInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GRemoveProjectFromSecurityDashboardInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GRemoveProjectFromSecurityDashboardInputBuilder
    implements
        Builder<GRemoveProjectFromSecurityDashboardInput,
            GRemoveProjectFromSecurityDashboardInputBuilder> {
  _$GRemoveProjectFromSecurityDashboardInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GProjectIDBuilder? _id;
  GProjectIDBuilder get id => _$this._id ??= new GProjectIDBuilder();
  set id(GProjectIDBuilder? id) => _$this._id = id;

  GRemoveProjectFromSecurityDashboardInputBuilder();

  GRemoveProjectFromSecurityDashboardInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GRemoveProjectFromSecurityDashboardInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GRemoveProjectFromSecurityDashboardInput;
  }

  @override
  void update(
      void Function(GRemoveProjectFromSecurityDashboardInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GRemoveProjectFromSecurityDashboardInput build() => _build();

  _$GRemoveProjectFromSecurityDashboardInput _build() {
    _$GRemoveProjectFromSecurityDashboardInput _$result;
    try {
      _$result = _$v ??
          new _$GRemoveProjectFromSecurityDashboardInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GRemoveProjectFromSecurityDashboardInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GRepositionImageDiffNoteInput extends GRepositionImageDiffNoteInput {
  @override
  final String? clientMutationId;
  @override
  final GDiffNoteID id;
  @override
  final GUpdateDiffImagePositionInput position;

  factory _$GRepositionImageDiffNoteInput(
          [void Function(GRepositionImageDiffNoteInputBuilder)? updates]) =>
      (new GRepositionImageDiffNoteInputBuilder()..update(updates))._build();

  _$GRepositionImageDiffNoteInput._(
      {this.clientMutationId, required this.id, required this.position})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GRepositionImageDiffNoteInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        position, r'GRepositionImageDiffNoteInput', 'position');
  }

  @override
  GRepositionImageDiffNoteInput rebuild(
          void Function(GRepositionImageDiffNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GRepositionImageDiffNoteInputBuilder toBuilder() =>
      new GRepositionImageDiffNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GRepositionImageDiffNoteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        position == other.position;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
        position.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GRepositionImageDiffNoteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('position', position))
        .toString();
  }
}

class GRepositionImageDiffNoteInputBuilder
    implements
        Builder<GRepositionImageDiffNoteInput,
            GRepositionImageDiffNoteInputBuilder> {
  _$GRepositionImageDiffNoteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GDiffNoteIDBuilder? _id;
  GDiffNoteIDBuilder get id => _$this._id ??= new GDiffNoteIDBuilder();
  set id(GDiffNoteIDBuilder? id) => _$this._id = id;

  GUpdateDiffImagePositionInputBuilder? _position;
  GUpdateDiffImagePositionInputBuilder get position =>
      _$this._position ??= new GUpdateDiffImagePositionInputBuilder();
  set position(GUpdateDiffImagePositionInputBuilder? position) =>
      _$this._position = position;

  GRepositionImageDiffNoteInputBuilder();

  GRepositionImageDiffNoteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _position = $v.position.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GRepositionImageDiffNoteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GRepositionImageDiffNoteInput;
  }

  @override
  void update(void Function(GRepositionImageDiffNoteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GRepositionImageDiffNoteInput build() => _build();

  _$GRepositionImageDiffNoteInput _build() {
    _$GRepositionImageDiffNoteInput _$result;
    try {
      _$result = _$v ??
          new _$GRepositionImageDiffNoteInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              position: position.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
        _$failedField = 'position';
        position.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GRepositionImageDiffNoteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GRunnerDeleteInput extends GRunnerDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final GCiRunnerID id;

  factory _$GRunnerDeleteInput(
          [void Function(GRunnerDeleteInputBuilder)? updates]) =>
      (new GRunnerDeleteInputBuilder()..update(updates))._build();

  _$GRunnerDeleteInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GRunnerDeleteInput', 'id');
  }

  @override
  GRunnerDeleteInput rebuild(
          void Function(GRunnerDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GRunnerDeleteInputBuilder toBuilder() =>
      new GRunnerDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GRunnerDeleteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GRunnerDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GRunnerDeleteInputBuilder
    implements Builder<GRunnerDeleteInput, GRunnerDeleteInputBuilder> {
  _$GRunnerDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCiRunnerIDBuilder? _id;
  GCiRunnerIDBuilder get id => _$this._id ??= new GCiRunnerIDBuilder();
  set id(GCiRunnerIDBuilder? id) => _$this._id = id;

  GRunnerDeleteInputBuilder();

  GRunnerDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GRunnerDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GRunnerDeleteInput;
  }

  @override
  void update(void Function(GRunnerDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GRunnerDeleteInput build() => _build();

  _$GRunnerDeleteInput _build() {
    _$GRunnerDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GRunnerDeleteInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GRunnerDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GRunnersRegistrationTokenResetInput
    extends GRunnersRegistrationTokenResetInput {
  @override
  final String? clientMutationId;
  @override
  final GCiRunnerType type;
  @override
  final String? id;

  factory _$GRunnersRegistrationTokenResetInput(
          [void Function(GRunnersRegistrationTokenResetInputBuilder)?
              updates]) =>
      (new GRunnersRegistrationTokenResetInputBuilder()..update(updates))
          ._build();

  _$GRunnersRegistrationTokenResetInput._(
      {this.clientMutationId, required this.type, this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        type, r'GRunnersRegistrationTokenResetInput', 'type');
  }

  @override
  GRunnersRegistrationTokenResetInput rebuild(
          void Function(GRunnersRegistrationTokenResetInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GRunnersRegistrationTokenResetInputBuilder toBuilder() =>
      new GRunnersRegistrationTokenResetInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GRunnersRegistrationTokenResetInput &&
        clientMutationId == other.clientMutationId &&
        type == other.type &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, clientMutationId.hashCode), type.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GRunnersRegistrationTokenResetInput')
          ..add('clientMutationId', clientMutationId)
          ..add('type', type)
          ..add('id', id))
        .toString();
  }
}

class GRunnersRegistrationTokenResetInputBuilder
    implements
        Builder<GRunnersRegistrationTokenResetInput,
            GRunnersRegistrationTokenResetInputBuilder> {
  _$GRunnersRegistrationTokenResetInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCiRunnerType? _type;
  GCiRunnerType? get type => _$this._type;
  set type(GCiRunnerType? type) => _$this._type = type;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GRunnersRegistrationTokenResetInputBuilder();

  GRunnersRegistrationTokenResetInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _type = $v.type;
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GRunnersRegistrationTokenResetInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GRunnersRegistrationTokenResetInput;
  }

  @override
  void update(
      void Function(GRunnersRegistrationTokenResetInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GRunnersRegistrationTokenResetInput build() => _build();

  _$GRunnersRegistrationTokenResetInput _build() {
    final _$result = _$v ??
        new _$GRunnersRegistrationTokenResetInput._(
            clientMutationId: clientMutationId,
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GRunnersRegistrationTokenResetInput', 'type'),
            id: id);
    replace(_$result);
    return _$result;
  }
}

class _$GRunnerUpdateInput extends GRunnerUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GCiRunnerID id;
  @override
  final String? description;
  @override
  final String? maintenanceNote;
  @override
  final int? maximumTimeout;
  @override
  final GCiRunnerAccessLevel? accessLevel;
  @override
  final bool? paused;
  @override
  final bool? locked;
  @override
  final bool? runUntagged;
  @override
  final BuiltList<String>? tagList;
  @override
  final BuiltList<GProjectID>? associatedProjects;
  @override
  final double? publicProjectsMinutesCostFactor;
  @override
  final double? privateProjectsMinutesCostFactor;

  factory _$GRunnerUpdateInput(
          [void Function(GRunnerUpdateInputBuilder)? updates]) =>
      (new GRunnerUpdateInputBuilder()..update(updates))._build();

  _$GRunnerUpdateInput._(
      {this.clientMutationId,
      required this.id,
      this.description,
      this.maintenanceNote,
      this.maximumTimeout,
      this.accessLevel,
      this.paused,
      this.locked,
      this.runUntagged,
      this.tagList,
      this.associatedProjects,
      this.publicProjectsMinutesCostFactor,
      this.privateProjectsMinutesCostFactor})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GRunnerUpdateInput', 'id');
  }

  @override
  GRunnerUpdateInput rebuild(
          void Function(GRunnerUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GRunnerUpdateInputBuilder toBuilder() =>
      new GRunnerUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GRunnerUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        description == other.description &&
        maintenanceNote == other.maintenanceNote &&
        maximumTimeout == other.maximumTimeout &&
        accessLevel == other.accessLevel &&
        paused == other.paused &&
        locked == other.locked &&
        runUntagged == other.runUntagged &&
        tagList == other.tagList &&
        associatedProjects == other.associatedProjects &&
        publicProjectsMinutesCostFactor ==
            other.publicProjectsMinutesCostFactor &&
        privateProjectsMinutesCostFactor ==
            other.privateProjectsMinutesCostFactor;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        0,
                                                        clientMutationId
                                                            .hashCode),
                                                    id.hashCode),
                                                description.hashCode),
                                            maintenanceNote.hashCode),
                                        maximumTimeout.hashCode),
                                    accessLevel.hashCode),
                                paused.hashCode),
                            locked.hashCode),
                        runUntagged.hashCode),
                    tagList.hashCode),
                associatedProjects.hashCode),
            publicProjectsMinutesCostFactor.hashCode),
        privateProjectsMinutesCostFactor.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GRunnerUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('description', description)
          ..add('maintenanceNote', maintenanceNote)
          ..add('maximumTimeout', maximumTimeout)
          ..add('accessLevel', accessLevel)
          ..add('paused', paused)
          ..add('locked', locked)
          ..add('runUntagged', runUntagged)
          ..add('tagList', tagList)
          ..add('associatedProjects', associatedProjects)
          ..add('publicProjectsMinutesCostFactor',
              publicProjectsMinutesCostFactor)
          ..add('privateProjectsMinutesCostFactor',
              privateProjectsMinutesCostFactor))
        .toString();
  }
}

class GRunnerUpdateInputBuilder
    implements Builder<GRunnerUpdateInput, GRunnerUpdateInputBuilder> {
  _$GRunnerUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GCiRunnerIDBuilder? _id;
  GCiRunnerIDBuilder get id => _$this._id ??= new GCiRunnerIDBuilder();
  set id(GCiRunnerIDBuilder? id) => _$this._id = id;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _maintenanceNote;
  String? get maintenanceNote => _$this._maintenanceNote;
  set maintenanceNote(String? maintenanceNote) =>
      _$this._maintenanceNote = maintenanceNote;

  int? _maximumTimeout;
  int? get maximumTimeout => _$this._maximumTimeout;
  set maximumTimeout(int? maximumTimeout) =>
      _$this._maximumTimeout = maximumTimeout;

  GCiRunnerAccessLevel? _accessLevel;
  GCiRunnerAccessLevel? get accessLevel => _$this._accessLevel;
  set accessLevel(GCiRunnerAccessLevel? accessLevel) =>
      _$this._accessLevel = accessLevel;

  bool? _paused;
  bool? get paused => _$this._paused;
  set paused(bool? paused) => _$this._paused = paused;

  bool? _locked;
  bool? get locked => _$this._locked;
  set locked(bool? locked) => _$this._locked = locked;

  bool? _runUntagged;
  bool? get runUntagged => _$this._runUntagged;
  set runUntagged(bool? runUntagged) => _$this._runUntagged = runUntagged;

  ListBuilder<String>? _tagList;
  ListBuilder<String> get tagList =>
      _$this._tagList ??= new ListBuilder<String>();
  set tagList(ListBuilder<String>? tagList) => _$this._tagList = tagList;

  ListBuilder<GProjectID>? _associatedProjects;
  ListBuilder<GProjectID> get associatedProjects =>
      _$this._associatedProjects ??= new ListBuilder<GProjectID>();
  set associatedProjects(ListBuilder<GProjectID>? associatedProjects) =>
      _$this._associatedProjects = associatedProjects;

  double? _publicProjectsMinutesCostFactor;
  double? get publicProjectsMinutesCostFactor =>
      _$this._publicProjectsMinutesCostFactor;
  set publicProjectsMinutesCostFactor(
          double? publicProjectsMinutesCostFactor) =>
      _$this._publicProjectsMinutesCostFactor = publicProjectsMinutesCostFactor;

  double? _privateProjectsMinutesCostFactor;
  double? get privateProjectsMinutesCostFactor =>
      _$this._privateProjectsMinutesCostFactor;
  set privateProjectsMinutesCostFactor(
          double? privateProjectsMinutesCostFactor) =>
      _$this._privateProjectsMinutesCostFactor =
          privateProjectsMinutesCostFactor;

  GRunnerUpdateInputBuilder();

  GRunnerUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _description = $v.description;
      _maintenanceNote = $v.maintenanceNote;
      _maximumTimeout = $v.maximumTimeout;
      _accessLevel = $v.accessLevel;
      _paused = $v.paused;
      _locked = $v.locked;
      _runUntagged = $v.runUntagged;
      _tagList = $v.tagList?.toBuilder();
      _associatedProjects = $v.associatedProjects?.toBuilder();
      _publicProjectsMinutesCostFactor = $v.publicProjectsMinutesCostFactor;
      _privateProjectsMinutesCostFactor = $v.privateProjectsMinutesCostFactor;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GRunnerUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GRunnerUpdateInput;
  }

  @override
  void update(void Function(GRunnerUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GRunnerUpdateInput build() => _build();

  _$GRunnerUpdateInput _build() {
    _$GRunnerUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GRunnerUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              description: description,
              maintenanceNote: maintenanceNote,
              maximumTimeout: maximumTimeout,
              accessLevel: accessLevel,
              paused: paused,
              locked: locked,
              runUntagged: runUntagged,
              tagList: _tagList?.build(),
              associatedProjects: _associatedProjects?.build(),
              publicProjectsMinutesCostFactor: publicProjectsMinutesCostFactor,
              privateProjectsMinutesCostFactor:
                  privateProjectsMinutesCostFactor);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'tagList';
        _tagList?.build();
        _$failedField = 'associatedProjects';
        _associatedProjects?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GRunnerUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSastCiConfigurationAnalyzersEntityInput
    extends GSastCiConfigurationAnalyzersEntityInput {
  @override
  final String name;
  @override
  final bool enabled;
  @override
  final BuiltList<GSastCiConfigurationEntityInput>? variables;

  factory _$GSastCiConfigurationAnalyzersEntityInput(
          [void Function(GSastCiConfigurationAnalyzersEntityInputBuilder)?
              updates]) =>
      (new GSastCiConfigurationAnalyzersEntityInputBuilder()..update(updates))
          ._build();

  _$GSastCiConfigurationAnalyzersEntityInput._(
      {required this.name, required this.enabled, this.variables})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GSastCiConfigurationAnalyzersEntityInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        enabled, r'GSastCiConfigurationAnalyzersEntityInput', 'enabled');
  }

  @override
  GSastCiConfigurationAnalyzersEntityInput rebuild(
          void Function(GSastCiConfigurationAnalyzersEntityInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSastCiConfigurationAnalyzersEntityInputBuilder toBuilder() =>
      new GSastCiConfigurationAnalyzersEntityInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSastCiConfigurationAnalyzersEntityInput &&
        name == other.name &&
        enabled == other.enabled &&
        variables == other.variables;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, name.hashCode), enabled.hashCode), variables.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSastCiConfigurationAnalyzersEntityInput')
          ..add('name', name)
          ..add('enabled', enabled)
          ..add('variables', variables))
        .toString();
  }
}

class GSastCiConfigurationAnalyzersEntityInputBuilder
    implements
        Builder<GSastCiConfigurationAnalyzersEntityInput,
            GSastCiConfigurationAnalyzersEntityInputBuilder> {
  _$GSastCiConfigurationAnalyzersEntityInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  bool? _enabled;
  bool? get enabled => _$this._enabled;
  set enabled(bool? enabled) => _$this._enabled = enabled;

  ListBuilder<GSastCiConfigurationEntityInput>? _variables;
  ListBuilder<GSastCiConfigurationEntityInput> get variables =>
      _$this._variables ??= new ListBuilder<GSastCiConfigurationEntityInput>();
  set variables(ListBuilder<GSastCiConfigurationEntityInput>? variables) =>
      _$this._variables = variables;

  GSastCiConfigurationAnalyzersEntityInputBuilder();

  GSastCiConfigurationAnalyzersEntityInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _enabled = $v.enabled;
      _variables = $v.variables?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSastCiConfigurationAnalyzersEntityInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSastCiConfigurationAnalyzersEntityInput;
  }

  @override
  void update(
      void Function(GSastCiConfigurationAnalyzersEntityInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSastCiConfigurationAnalyzersEntityInput build() => _build();

  _$GSastCiConfigurationAnalyzersEntityInput _build() {
    _$GSastCiConfigurationAnalyzersEntityInput _$result;
    try {
      _$result = _$v ??
          new _$GSastCiConfigurationAnalyzersEntityInput._(
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GSastCiConfigurationAnalyzersEntityInput', 'name'),
              enabled: BuiltValueNullFieldError.checkNotNull(enabled,
                  r'GSastCiConfigurationAnalyzersEntityInput', 'enabled'),
              variables: _variables?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'variables';
        _variables?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSastCiConfigurationAnalyzersEntityInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSastCiConfigurationEntityInput
    extends GSastCiConfigurationEntityInput {
  @override
  final String field;
  @override
  final String defaultValue;
  @override
  final String value;

  factory _$GSastCiConfigurationEntityInput(
          [void Function(GSastCiConfigurationEntityInputBuilder)? updates]) =>
      (new GSastCiConfigurationEntityInputBuilder()..update(updates))._build();

  _$GSastCiConfigurationEntityInput._(
      {required this.field, required this.defaultValue, required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        field, r'GSastCiConfigurationEntityInput', 'field');
    BuiltValueNullFieldError.checkNotNull(
        defaultValue, r'GSastCiConfigurationEntityInput', 'defaultValue');
    BuiltValueNullFieldError.checkNotNull(
        value, r'GSastCiConfigurationEntityInput', 'value');
  }

  @override
  GSastCiConfigurationEntityInput rebuild(
          void Function(GSastCiConfigurationEntityInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSastCiConfigurationEntityInputBuilder toBuilder() =>
      new GSastCiConfigurationEntityInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSastCiConfigurationEntityInput &&
        field == other.field &&
        defaultValue == other.defaultValue &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, field.hashCode), defaultValue.hashCode), value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSastCiConfigurationEntityInput')
          ..add('field', field)
          ..add('defaultValue', defaultValue)
          ..add('value', value))
        .toString();
  }
}

class GSastCiConfigurationEntityInputBuilder
    implements
        Builder<GSastCiConfigurationEntityInput,
            GSastCiConfigurationEntityInputBuilder> {
  _$GSastCiConfigurationEntityInput? _$v;

  String? _field;
  String? get field => _$this._field;
  set field(String? field) => _$this._field = field;

  String? _defaultValue;
  String? get defaultValue => _$this._defaultValue;
  set defaultValue(String? defaultValue) => _$this._defaultValue = defaultValue;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GSastCiConfigurationEntityInputBuilder();

  GSastCiConfigurationEntityInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _field = $v.field;
      _defaultValue = $v.defaultValue;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSastCiConfigurationEntityInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSastCiConfigurationEntityInput;
  }

  @override
  void update(void Function(GSastCiConfigurationEntityInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSastCiConfigurationEntityInput build() => _build();

  _$GSastCiConfigurationEntityInput _build() {
    final _$result = _$v ??
        new _$GSastCiConfigurationEntityInput._(
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GSastCiConfigurationEntityInput', 'field'),
            defaultValue: BuiltValueNullFieldError.checkNotNull(defaultValue,
                r'GSastCiConfigurationEntityInput', 'defaultValue'),
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GSastCiConfigurationEntityInput', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GSastCiConfigurationInput extends GSastCiConfigurationInput {
  @override
  final BuiltList<GSastCiConfigurationEntityInput>? global;
  @override
  final BuiltList<GSastCiConfigurationEntityInput>? pipeline;
  @override
  final BuiltList<GSastCiConfigurationAnalyzersEntityInput>? analyzers;

  factory _$GSastCiConfigurationInput(
          [void Function(GSastCiConfigurationInputBuilder)? updates]) =>
      (new GSastCiConfigurationInputBuilder()..update(updates))._build();

  _$GSastCiConfigurationInput._({this.global, this.pipeline, this.analyzers})
      : super._();

  @override
  GSastCiConfigurationInput rebuild(
          void Function(GSastCiConfigurationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSastCiConfigurationInputBuilder toBuilder() =>
      new GSastCiConfigurationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSastCiConfigurationInput &&
        global == other.global &&
        pipeline == other.pipeline &&
        analyzers == other.analyzers;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, global.hashCode), pipeline.hashCode), analyzers.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSastCiConfigurationInput')
          ..add('global', global)
          ..add('pipeline', pipeline)
          ..add('analyzers', analyzers))
        .toString();
  }
}

class GSastCiConfigurationInputBuilder
    implements
        Builder<GSastCiConfigurationInput, GSastCiConfigurationInputBuilder> {
  _$GSastCiConfigurationInput? _$v;

  ListBuilder<GSastCiConfigurationEntityInput>? _global;
  ListBuilder<GSastCiConfigurationEntityInput> get global =>
      _$this._global ??= new ListBuilder<GSastCiConfigurationEntityInput>();
  set global(ListBuilder<GSastCiConfigurationEntityInput>? global) =>
      _$this._global = global;

  ListBuilder<GSastCiConfigurationEntityInput>? _pipeline;
  ListBuilder<GSastCiConfigurationEntityInput> get pipeline =>
      _$this._pipeline ??= new ListBuilder<GSastCiConfigurationEntityInput>();
  set pipeline(ListBuilder<GSastCiConfigurationEntityInput>? pipeline) =>
      _$this._pipeline = pipeline;

  ListBuilder<GSastCiConfigurationAnalyzersEntityInput>? _analyzers;
  ListBuilder<GSastCiConfigurationAnalyzersEntityInput> get analyzers =>
      _$this._analyzers ??=
          new ListBuilder<GSastCiConfigurationAnalyzersEntityInput>();
  set analyzers(
          ListBuilder<GSastCiConfigurationAnalyzersEntityInput>? analyzers) =>
      _$this._analyzers = analyzers;

  GSastCiConfigurationInputBuilder();

  GSastCiConfigurationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _global = $v.global?.toBuilder();
      _pipeline = $v.pipeline?.toBuilder();
      _analyzers = $v.analyzers?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSastCiConfigurationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSastCiConfigurationInput;
  }

  @override
  void update(void Function(GSastCiConfigurationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSastCiConfigurationInput build() => _build();

  _$GSastCiConfigurationInput _build() {
    _$GSastCiConfigurationInput _$result;
    try {
      _$result = _$v ??
          new _$GSastCiConfigurationInput._(
              global: _global?.build(),
              pipeline: _pipeline?.build(),
              analyzers: _analyzers?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'global';
        _global?.build();
        _$failedField = 'pipeline';
        _pipeline?.build();
        _$failedField = 'analyzers';
        _analyzers?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSastCiConfigurationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSavedReplyCreateInput extends GSavedReplyCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String name;
  @override
  final String content;

  factory _$GSavedReplyCreateInput(
          [void Function(GSavedReplyCreateInputBuilder)? updates]) =>
      (new GSavedReplyCreateInputBuilder()..update(updates))._build();

  _$GSavedReplyCreateInput._(
      {this.clientMutationId, required this.name, required this.content})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GSavedReplyCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        content, r'GSavedReplyCreateInput', 'content');
  }

  @override
  GSavedReplyCreateInput rebuild(
          void Function(GSavedReplyCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSavedReplyCreateInputBuilder toBuilder() =>
      new GSavedReplyCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSavedReplyCreateInput &&
        clientMutationId == other.clientMutationId &&
        name == other.name &&
        content == other.content;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), name.hashCode),
        content.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSavedReplyCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('name', name)
          ..add('content', content))
        .toString();
  }
}

class GSavedReplyCreateInputBuilder
    implements Builder<GSavedReplyCreateInput, GSavedReplyCreateInputBuilder> {
  _$GSavedReplyCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _content;
  String? get content => _$this._content;
  set content(String? content) => _$this._content = content;

  GSavedReplyCreateInputBuilder();

  GSavedReplyCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _name = $v.name;
      _content = $v.content;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSavedReplyCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSavedReplyCreateInput;
  }

  @override
  void update(void Function(GSavedReplyCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSavedReplyCreateInput build() => _build();

  _$GSavedReplyCreateInput _build() {
    final _$result = _$v ??
        new _$GSavedReplyCreateInput._(
            clientMutationId: clientMutationId,
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GSavedReplyCreateInput', 'name'),
            content: BuiltValueNullFieldError.checkNotNull(
                content, r'GSavedReplyCreateInput', 'content'));
    replace(_$result);
    return _$result;
  }
}

class _$GSavedReplyDestroyInput extends GSavedReplyDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GUsersSavedReplyID id;

  factory _$GSavedReplyDestroyInput(
          [void Function(GSavedReplyDestroyInputBuilder)? updates]) =>
      (new GSavedReplyDestroyInputBuilder()..update(updates))._build();

  _$GSavedReplyDestroyInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GSavedReplyDestroyInput', 'id');
  }

  @override
  GSavedReplyDestroyInput rebuild(
          void Function(GSavedReplyDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSavedReplyDestroyInputBuilder toBuilder() =>
      new GSavedReplyDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSavedReplyDestroyInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSavedReplyDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GSavedReplyDestroyInputBuilder
    implements
        Builder<GSavedReplyDestroyInput, GSavedReplyDestroyInputBuilder> {
  _$GSavedReplyDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GUsersSavedReplyIDBuilder? _id;
  GUsersSavedReplyIDBuilder get id =>
      _$this._id ??= new GUsersSavedReplyIDBuilder();
  set id(GUsersSavedReplyIDBuilder? id) => _$this._id = id;

  GSavedReplyDestroyInputBuilder();

  GSavedReplyDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSavedReplyDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSavedReplyDestroyInput;
  }

  @override
  void update(void Function(GSavedReplyDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSavedReplyDestroyInput build() => _build();

  _$GSavedReplyDestroyInput _build() {
    _$GSavedReplyDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GSavedReplyDestroyInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSavedReplyDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSavedReplyUpdateInput extends GSavedReplyUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GUsersSavedReplyID id;
  @override
  final String name;
  @override
  final String content;

  factory _$GSavedReplyUpdateInput(
          [void Function(GSavedReplyUpdateInputBuilder)? updates]) =>
      (new GSavedReplyUpdateInputBuilder()..update(updates))._build();

  _$GSavedReplyUpdateInput._(
      {this.clientMutationId,
      required this.id,
      required this.name,
      required this.content})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GSavedReplyUpdateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GSavedReplyUpdateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        content, r'GSavedReplyUpdateInput', 'content');
  }

  @override
  GSavedReplyUpdateInput rebuild(
          void Function(GSavedReplyUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSavedReplyUpdateInputBuilder toBuilder() =>
      new GSavedReplyUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSavedReplyUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        name == other.name &&
        content == other.content;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode), name.hashCode),
        content.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSavedReplyUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('name', name)
          ..add('content', content))
        .toString();
  }
}

class GSavedReplyUpdateInputBuilder
    implements Builder<GSavedReplyUpdateInput, GSavedReplyUpdateInputBuilder> {
  _$GSavedReplyUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GUsersSavedReplyIDBuilder? _id;
  GUsersSavedReplyIDBuilder get id =>
      _$this._id ??= new GUsersSavedReplyIDBuilder();
  set id(GUsersSavedReplyIDBuilder? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _content;
  String? get content => _$this._content;
  set content(String? content) => _$this._content = content;

  GSavedReplyUpdateInputBuilder();

  GSavedReplyUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _name = $v.name;
      _content = $v.content;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSavedReplyUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSavedReplyUpdateInput;
  }

  @override
  void update(void Function(GSavedReplyUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSavedReplyUpdateInput build() => _build();

  _$GSavedReplyUpdateInput _build() {
    _$GSavedReplyUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GSavedReplyUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GSavedReplyUpdateInput', 'name'),
              content: BuiltValueNullFieldError.checkNotNull(
                  content, r'GSavedReplyUpdateInput', 'content'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSavedReplyUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GScanExecutionPolicyCommitInput
    extends GScanExecutionPolicyCommitInput {
  @override
  final String? clientMutationId;
  @override
  final String? fullPath;
  @override
  final String policyYaml;
  @override
  final GMutationOperationMode operationMode;
  @override
  final String? name;

  factory _$GScanExecutionPolicyCommitInput(
          [void Function(GScanExecutionPolicyCommitInputBuilder)? updates]) =>
      (new GScanExecutionPolicyCommitInputBuilder()..update(updates))._build();

  _$GScanExecutionPolicyCommitInput._(
      {this.clientMutationId,
      this.fullPath,
      required this.policyYaml,
      required this.operationMode,
      this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        policyYaml, r'GScanExecutionPolicyCommitInput', 'policyYaml');
    BuiltValueNullFieldError.checkNotNull(
        operationMode, r'GScanExecutionPolicyCommitInput', 'operationMode');
  }

  @override
  GScanExecutionPolicyCommitInput rebuild(
          void Function(GScanExecutionPolicyCommitInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GScanExecutionPolicyCommitInputBuilder toBuilder() =>
      new GScanExecutionPolicyCommitInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GScanExecutionPolicyCommitInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath &&
        policyYaml == other.policyYaml &&
        operationMode == other.operationMode &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), fullPath.hashCode),
                policyYaml.hashCode),
            operationMode.hashCode),
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GScanExecutionPolicyCommitInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath)
          ..add('policyYaml', policyYaml)
          ..add('operationMode', operationMode)
          ..add('name', name))
        .toString();
  }
}

class GScanExecutionPolicyCommitInputBuilder
    implements
        Builder<GScanExecutionPolicyCommitInput,
            GScanExecutionPolicyCommitInputBuilder> {
  _$GScanExecutionPolicyCommitInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  String? _policyYaml;
  String? get policyYaml => _$this._policyYaml;
  set policyYaml(String? policyYaml) => _$this._policyYaml = policyYaml;

  GMutationOperationMode? _operationMode;
  GMutationOperationMode? get operationMode => _$this._operationMode;
  set operationMode(GMutationOperationMode? operationMode) =>
      _$this._operationMode = operationMode;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GScanExecutionPolicyCommitInputBuilder();

  GScanExecutionPolicyCommitInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _policyYaml = $v.policyYaml;
      _operationMode = $v.operationMode;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GScanExecutionPolicyCommitInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GScanExecutionPolicyCommitInput;
  }

  @override
  void update(void Function(GScanExecutionPolicyCommitInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GScanExecutionPolicyCommitInput build() => _build();

  _$GScanExecutionPolicyCommitInput _build() {
    final _$result = _$v ??
        new _$GScanExecutionPolicyCommitInput._(
            clientMutationId: clientMutationId,
            fullPath: fullPath,
            policyYaml: BuiltValueNullFieldError.checkNotNull(
                policyYaml, r'GScanExecutionPolicyCommitInput', 'policyYaml'),
            operationMode: BuiltValueNullFieldError.checkNotNull(operationMode,
                r'GScanExecutionPolicyCommitInput', 'operationMode'),
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GSecurityFindingCreateIssueInput
    extends GSecurityFindingCreateIssueInput {
  @override
  final String? clientMutationId;
  @override
  final String uuid;
  @override
  final GProjectID project;

  factory _$GSecurityFindingCreateIssueInput(
          [void Function(GSecurityFindingCreateIssueInputBuilder)? updates]) =>
      (new GSecurityFindingCreateIssueInputBuilder()..update(updates))._build();

  _$GSecurityFindingCreateIssueInput._(
      {this.clientMutationId, required this.uuid, required this.project})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        uuid, r'GSecurityFindingCreateIssueInput', 'uuid');
    BuiltValueNullFieldError.checkNotNull(
        project, r'GSecurityFindingCreateIssueInput', 'project');
  }

  @override
  GSecurityFindingCreateIssueInput rebuild(
          void Function(GSecurityFindingCreateIssueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSecurityFindingCreateIssueInputBuilder toBuilder() =>
      new GSecurityFindingCreateIssueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSecurityFindingCreateIssueInput &&
        clientMutationId == other.clientMutationId &&
        uuid == other.uuid &&
        project == other.project;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), uuid.hashCode),
        project.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSecurityFindingCreateIssueInput')
          ..add('clientMutationId', clientMutationId)
          ..add('uuid', uuid)
          ..add('project', project))
        .toString();
  }
}

class GSecurityFindingCreateIssueInputBuilder
    implements
        Builder<GSecurityFindingCreateIssueInput,
            GSecurityFindingCreateIssueInputBuilder> {
  _$GSecurityFindingCreateIssueInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _uuid;
  String? get uuid => _$this._uuid;
  set uuid(String? uuid) => _$this._uuid = uuid;

  GProjectIDBuilder? _project;
  GProjectIDBuilder get project => _$this._project ??= new GProjectIDBuilder();
  set project(GProjectIDBuilder? project) => _$this._project = project;

  GSecurityFindingCreateIssueInputBuilder();

  GSecurityFindingCreateIssueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _uuid = $v.uuid;
      _project = $v.project.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSecurityFindingCreateIssueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSecurityFindingCreateIssueInput;
  }

  @override
  void update(void Function(GSecurityFindingCreateIssueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSecurityFindingCreateIssueInput build() => _build();

  _$GSecurityFindingCreateIssueInput _build() {
    _$GSecurityFindingCreateIssueInput _$result;
    try {
      _$result = _$v ??
          new _$GSecurityFindingCreateIssueInput._(
              clientMutationId: clientMutationId,
              uuid: BuiltValueNullFieldError.checkNotNull(
                  uuid, r'GSecurityFindingCreateIssueInput', 'uuid'),
              project: project.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'project';
        project.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSecurityFindingCreateIssueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSecurityFindingDismissInput extends GSecurityFindingDismissInput {
  @override
  final String? clientMutationId;
  @override
  final String uuid;
  @override
  final String? comment;
  @override
  final GVulnerabilityDismissalReason? dismissalReason;

  factory _$GSecurityFindingDismissInput(
          [void Function(GSecurityFindingDismissInputBuilder)? updates]) =>
      (new GSecurityFindingDismissInputBuilder()..update(updates))._build();

  _$GSecurityFindingDismissInput._(
      {this.clientMutationId,
      required this.uuid,
      this.comment,
      this.dismissalReason})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        uuid, r'GSecurityFindingDismissInput', 'uuid');
  }

  @override
  GSecurityFindingDismissInput rebuild(
          void Function(GSecurityFindingDismissInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSecurityFindingDismissInputBuilder toBuilder() =>
      new GSecurityFindingDismissInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSecurityFindingDismissInput &&
        clientMutationId == other.clientMutationId &&
        uuid == other.uuid &&
        comment == other.comment &&
        dismissalReason == other.dismissalReason;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), uuid.hashCode),
            comment.hashCode),
        dismissalReason.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSecurityFindingDismissInput')
          ..add('clientMutationId', clientMutationId)
          ..add('uuid', uuid)
          ..add('comment', comment)
          ..add('dismissalReason', dismissalReason))
        .toString();
  }
}

class GSecurityFindingDismissInputBuilder
    implements
        Builder<GSecurityFindingDismissInput,
            GSecurityFindingDismissInputBuilder> {
  _$GSecurityFindingDismissInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _uuid;
  String? get uuid => _$this._uuid;
  set uuid(String? uuid) => _$this._uuid = uuid;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  GVulnerabilityDismissalReason? _dismissalReason;
  GVulnerabilityDismissalReason? get dismissalReason => _$this._dismissalReason;
  set dismissalReason(GVulnerabilityDismissalReason? dismissalReason) =>
      _$this._dismissalReason = dismissalReason;

  GSecurityFindingDismissInputBuilder();

  GSecurityFindingDismissInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _uuid = $v.uuid;
      _comment = $v.comment;
      _dismissalReason = $v.dismissalReason;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSecurityFindingDismissInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSecurityFindingDismissInput;
  }

  @override
  void update(void Function(GSecurityFindingDismissInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSecurityFindingDismissInput build() => _build();

  _$GSecurityFindingDismissInput _build() {
    final _$result = _$v ??
        new _$GSecurityFindingDismissInput._(
            clientMutationId: clientMutationId,
            uuid: BuiltValueNullFieldError.checkNotNull(
                uuid, r'GSecurityFindingDismissInput', 'uuid'),
            comment: comment,
            dismissalReason: dismissalReason);
    replace(_$result);
    return _$result;
  }
}

class _$GSecurityPolicyProjectAssignInput
    extends GSecurityPolicyProjectAssignInput {
  @override
  final String? clientMutationId;
  @override
  final String? fullPath;
  @override
  final GProjectID securityPolicyProjectId;

  factory _$GSecurityPolicyProjectAssignInput(
          [void Function(GSecurityPolicyProjectAssignInputBuilder)? updates]) =>
      (new GSecurityPolicyProjectAssignInputBuilder()..update(updates))
          ._build();

  _$GSecurityPolicyProjectAssignInput._(
      {this.clientMutationId,
      this.fullPath,
      required this.securityPolicyProjectId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(securityPolicyProjectId,
        r'GSecurityPolicyProjectAssignInput', 'securityPolicyProjectId');
  }

  @override
  GSecurityPolicyProjectAssignInput rebuild(
          void Function(GSecurityPolicyProjectAssignInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSecurityPolicyProjectAssignInputBuilder toBuilder() =>
      new GSecurityPolicyProjectAssignInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSecurityPolicyProjectAssignInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath &&
        securityPolicyProjectId == other.securityPolicyProjectId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), fullPath.hashCode),
        securityPolicyProjectId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSecurityPolicyProjectAssignInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath)
          ..add('securityPolicyProjectId', securityPolicyProjectId))
        .toString();
  }
}

class GSecurityPolicyProjectAssignInputBuilder
    implements
        Builder<GSecurityPolicyProjectAssignInput,
            GSecurityPolicyProjectAssignInputBuilder> {
  _$GSecurityPolicyProjectAssignInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  GProjectIDBuilder? _securityPolicyProjectId;
  GProjectIDBuilder get securityPolicyProjectId =>
      _$this._securityPolicyProjectId ??= new GProjectIDBuilder();
  set securityPolicyProjectId(GProjectIDBuilder? securityPolicyProjectId) =>
      _$this._securityPolicyProjectId = securityPolicyProjectId;

  GSecurityPolicyProjectAssignInputBuilder();

  GSecurityPolicyProjectAssignInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _securityPolicyProjectId = $v.securityPolicyProjectId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSecurityPolicyProjectAssignInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSecurityPolicyProjectAssignInput;
  }

  @override
  void update(
      void Function(GSecurityPolicyProjectAssignInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSecurityPolicyProjectAssignInput build() => _build();

  _$GSecurityPolicyProjectAssignInput _build() {
    _$GSecurityPolicyProjectAssignInput _$result;
    try {
      _$result = _$v ??
          new _$GSecurityPolicyProjectAssignInput._(
              clientMutationId: clientMutationId,
              fullPath: fullPath,
              securityPolicyProjectId: securityPolicyProjectId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'securityPolicyProjectId';
        securityPolicyProjectId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSecurityPolicyProjectAssignInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSecurityPolicyProjectCreateInput
    extends GSecurityPolicyProjectCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String? fullPath;

  factory _$GSecurityPolicyProjectCreateInput(
          [void Function(GSecurityPolicyProjectCreateInputBuilder)? updates]) =>
      (new GSecurityPolicyProjectCreateInputBuilder()..update(updates))
          ._build();

  _$GSecurityPolicyProjectCreateInput._({this.clientMutationId, this.fullPath})
      : super._();

  @override
  GSecurityPolicyProjectCreateInput rebuild(
          void Function(GSecurityPolicyProjectCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSecurityPolicyProjectCreateInputBuilder toBuilder() =>
      new GSecurityPolicyProjectCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSecurityPolicyProjectCreateInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), fullPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSecurityPolicyProjectCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath))
        .toString();
  }
}

class GSecurityPolicyProjectCreateInputBuilder
    implements
        Builder<GSecurityPolicyProjectCreateInput,
            GSecurityPolicyProjectCreateInputBuilder> {
  _$GSecurityPolicyProjectCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  GSecurityPolicyProjectCreateInputBuilder();

  GSecurityPolicyProjectCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSecurityPolicyProjectCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSecurityPolicyProjectCreateInput;
  }

  @override
  void update(
      void Function(GSecurityPolicyProjectCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSecurityPolicyProjectCreateInput build() => _build();

  _$GSecurityPolicyProjectCreateInput _build() {
    final _$result = _$v ??
        new _$GSecurityPolicyProjectCreateInput._(
            clientMutationId: clientMutationId, fullPath: fullPath);
    replace(_$result);
    return _$result;
  }
}

class _$GSecurityPolicyProjectUnassignInput
    extends GSecurityPolicyProjectUnassignInput {
  @override
  final String? clientMutationId;
  @override
  final String? fullPath;

  factory _$GSecurityPolicyProjectUnassignInput(
          [void Function(GSecurityPolicyProjectUnassignInputBuilder)?
              updates]) =>
      (new GSecurityPolicyProjectUnassignInputBuilder()..update(updates))
          ._build();

  _$GSecurityPolicyProjectUnassignInput._(
      {this.clientMutationId, this.fullPath})
      : super._();

  @override
  GSecurityPolicyProjectUnassignInput rebuild(
          void Function(GSecurityPolicyProjectUnassignInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSecurityPolicyProjectUnassignInputBuilder toBuilder() =>
      new GSecurityPolicyProjectUnassignInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSecurityPolicyProjectUnassignInput &&
        clientMutationId == other.clientMutationId &&
        fullPath == other.fullPath;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), fullPath.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSecurityPolicyProjectUnassignInput')
          ..add('clientMutationId', clientMutationId)
          ..add('fullPath', fullPath))
        .toString();
  }
}

class GSecurityPolicyProjectUnassignInputBuilder
    implements
        Builder<GSecurityPolicyProjectUnassignInput,
            GSecurityPolicyProjectUnassignInputBuilder> {
  _$GSecurityPolicyProjectUnassignInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _fullPath;
  String? get fullPath => _$this._fullPath;
  set fullPath(String? fullPath) => _$this._fullPath = fullPath;

  GSecurityPolicyProjectUnassignInputBuilder();

  GSecurityPolicyProjectUnassignInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _fullPath = $v.fullPath;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSecurityPolicyProjectUnassignInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSecurityPolicyProjectUnassignInput;
  }

  @override
  void update(
      void Function(GSecurityPolicyProjectUnassignInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSecurityPolicyProjectUnassignInput build() => _build();

  _$GSecurityPolicyProjectUnassignInput _build() {
    final _$result = _$v ??
        new _$GSecurityPolicyProjectUnassignInput._(
            clientMutationId: clientMutationId, fullPath: fullPath);
    replace(_$result);
    return _$result;
  }
}

class _$GSecurityTrainingProviderID extends GSecurityTrainingProviderID {
  @override
  final String value;

  factory _$GSecurityTrainingProviderID(
          [void Function(GSecurityTrainingProviderIDBuilder)? updates]) =>
      (new GSecurityTrainingProviderIDBuilder()..update(updates))._build();

  _$GSecurityTrainingProviderID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GSecurityTrainingProviderID', 'value');
  }

  @override
  GSecurityTrainingProviderID rebuild(
          void Function(GSecurityTrainingProviderIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSecurityTrainingProviderIDBuilder toBuilder() =>
      new GSecurityTrainingProviderIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSecurityTrainingProviderID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSecurityTrainingProviderID')
          ..add('value', value))
        .toString();
  }
}

class GSecurityTrainingProviderIDBuilder
    implements
        Builder<GSecurityTrainingProviderID,
            GSecurityTrainingProviderIDBuilder> {
  _$GSecurityTrainingProviderID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GSecurityTrainingProviderIDBuilder();

  GSecurityTrainingProviderIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSecurityTrainingProviderID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSecurityTrainingProviderID;
  }

  @override
  void update(void Function(GSecurityTrainingProviderIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSecurityTrainingProviderID build() => _build();

  _$GSecurityTrainingProviderID _build() {
    final _$result = _$v ??
        new _$GSecurityTrainingProviderID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GSecurityTrainingProviderID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GSecurityTrainingUpdateInput extends GSecurityTrainingUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final GSecurityTrainingProviderID providerId;
  @override
  final bool isEnabled;
  @override
  final bool? isPrimary;

  factory _$GSecurityTrainingUpdateInput(
          [void Function(GSecurityTrainingUpdateInputBuilder)? updates]) =>
      (new GSecurityTrainingUpdateInputBuilder()..update(updates))._build();

  _$GSecurityTrainingUpdateInput._(
      {this.clientMutationId,
      required this.projectPath,
      required this.providerId,
      required this.isEnabled,
      this.isPrimary})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GSecurityTrainingUpdateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        providerId, r'GSecurityTrainingUpdateInput', 'providerId');
    BuiltValueNullFieldError.checkNotNull(
        isEnabled, r'GSecurityTrainingUpdateInput', 'isEnabled');
  }

  @override
  GSecurityTrainingUpdateInput rebuild(
          void Function(GSecurityTrainingUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSecurityTrainingUpdateInputBuilder toBuilder() =>
      new GSecurityTrainingUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSecurityTrainingUpdateInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        providerId == other.providerId &&
        isEnabled == other.isEnabled &&
        isPrimary == other.isPrimary;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
                providerId.hashCode),
            isEnabled.hashCode),
        isPrimary.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSecurityTrainingUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('providerId', providerId)
          ..add('isEnabled', isEnabled)
          ..add('isPrimary', isPrimary))
        .toString();
  }
}

class GSecurityTrainingUpdateInputBuilder
    implements
        Builder<GSecurityTrainingUpdateInput,
            GSecurityTrainingUpdateInputBuilder> {
  _$GSecurityTrainingUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  GSecurityTrainingProviderIDBuilder? _providerId;
  GSecurityTrainingProviderIDBuilder get providerId =>
      _$this._providerId ??= new GSecurityTrainingProviderIDBuilder();
  set providerId(GSecurityTrainingProviderIDBuilder? providerId) =>
      _$this._providerId = providerId;

  bool? _isEnabled;
  bool? get isEnabled => _$this._isEnabled;
  set isEnabled(bool? isEnabled) => _$this._isEnabled = isEnabled;

  bool? _isPrimary;
  bool? get isPrimary => _$this._isPrimary;
  set isPrimary(bool? isPrimary) => _$this._isPrimary = isPrimary;

  GSecurityTrainingUpdateInputBuilder();

  GSecurityTrainingUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _providerId = $v.providerId.toBuilder();
      _isEnabled = $v.isEnabled;
      _isPrimary = $v.isPrimary;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSecurityTrainingUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSecurityTrainingUpdateInput;
  }

  @override
  void update(void Function(GSecurityTrainingUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSecurityTrainingUpdateInput build() => _build();

  _$GSecurityTrainingUpdateInput _build() {
    _$GSecurityTrainingUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GSecurityTrainingUpdateInput._(
              clientMutationId: clientMutationId,
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GSecurityTrainingUpdateInput', 'projectPath'),
              providerId: providerId.build(),
              isEnabled: BuiltValueNullFieldError.checkNotNull(
                  isEnabled, r'GSecurityTrainingUpdateInput', 'isEnabled'),
              isPrimary: isPrimary);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'providerId';
        providerId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSecurityTrainingUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSnippetBlobActionInputType extends GSnippetBlobActionInputType {
  @override
  final GSnippetBlobActionEnum action;
  @override
  final String? previousPath;
  @override
  final String filePath;
  @override
  final String? content;

  factory _$GSnippetBlobActionInputType(
          [void Function(GSnippetBlobActionInputTypeBuilder)? updates]) =>
      (new GSnippetBlobActionInputTypeBuilder()..update(updates))._build();

  _$GSnippetBlobActionInputType._(
      {required this.action,
      this.previousPath,
      required this.filePath,
      this.content})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        action, r'GSnippetBlobActionInputType', 'action');
    BuiltValueNullFieldError.checkNotNull(
        filePath, r'GSnippetBlobActionInputType', 'filePath');
  }

  @override
  GSnippetBlobActionInputType rebuild(
          void Function(GSnippetBlobActionInputTypeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSnippetBlobActionInputTypeBuilder toBuilder() =>
      new GSnippetBlobActionInputTypeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSnippetBlobActionInputType &&
        action == other.action &&
        previousPath == other.previousPath &&
        filePath == other.filePath &&
        content == other.content;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, action.hashCode), previousPath.hashCode),
            filePath.hashCode),
        content.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSnippetBlobActionInputType')
          ..add('action', action)
          ..add('previousPath', previousPath)
          ..add('filePath', filePath)
          ..add('content', content))
        .toString();
  }
}

class GSnippetBlobActionInputTypeBuilder
    implements
        Builder<GSnippetBlobActionInputType,
            GSnippetBlobActionInputTypeBuilder> {
  _$GSnippetBlobActionInputType? _$v;

  GSnippetBlobActionEnum? _action;
  GSnippetBlobActionEnum? get action => _$this._action;
  set action(GSnippetBlobActionEnum? action) => _$this._action = action;

  String? _previousPath;
  String? get previousPath => _$this._previousPath;
  set previousPath(String? previousPath) => _$this._previousPath = previousPath;

  String? _filePath;
  String? get filePath => _$this._filePath;
  set filePath(String? filePath) => _$this._filePath = filePath;

  String? _content;
  String? get content => _$this._content;
  set content(String? content) => _$this._content = content;

  GSnippetBlobActionInputTypeBuilder();

  GSnippetBlobActionInputTypeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _action = $v.action;
      _previousPath = $v.previousPath;
      _filePath = $v.filePath;
      _content = $v.content;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSnippetBlobActionInputType other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSnippetBlobActionInputType;
  }

  @override
  void update(void Function(GSnippetBlobActionInputTypeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSnippetBlobActionInputType build() => _build();

  _$GSnippetBlobActionInputType _build() {
    final _$result = _$v ??
        new _$GSnippetBlobActionInputType._(
            action: BuiltValueNullFieldError.checkNotNull(
                action, r'GSnippetBlobActionInputType', 'action'),
            previousPath: previousPath,
            filePath: BuiltValueNullFieldError.checkNotNull(
                filePath, r'GSnippetBlobActionInputType', 'filePath'),
            content: content);
    replace(_$result);
    return _$result;
  }
}

class _$GSnippetID extends GSnippetID {
  @override
  final String value;

  factory _$GSnippetID([void Function(GSnippetIDBuilder)? updates]) =>
      (new GSnippetIDBuilder()..update(updates))._build();

  _$GSnippetID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GSnippetID', 'value');
  }

  @override
  GSnippetID rebuild(void Function(GSnippetIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSnippetIDBuilder toBuilder() => new GSnippetIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSnippetID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSnippetID')..add('value', value))
        .toString();
  }
}

class GSnippetIDBuilder implements Builder<GSnippetID, GSnippetIDBuilder> {
  _$GSnippetID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GSnippetIDBuilder();

  GSnippetIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSnippetID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSnippetID;
  }

  @override
  void update(void Function(GSnippetIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSnippetID build() => _build();

  _$GSnippetID _build() {
    final _$result = _$v ??
        new _$GSnippetID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GSnippetID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GTerraformStateDeleteInput extends GTerraformStateDeleteInput {
  @override
  final GTerraformStateID id;
  @override
  final String? clientMutationId;

  factory _$GTerraformStateDeleteInput(
          [void Function(GTerraformStateDeleteInputBuilder)? updates]) =>
      (new GTerraformStateDeleteInputBuilder()..update(updates))._build();

  _$GTerraformStateDeleteInput._({required this.id, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GTerraformStateDeleteInput', 'id');
  }

  @override
  GTerraformStateDeleteInput rebuild(
          void Function(GTerraformStateDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTerraformStateDeleteInputBuilder toBuilder() =>
      new GTerraformStateDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTerraformStateDeleteInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTerraformStateDeleteInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GTerraformStateDeleteInputBuilder
    implements
        Builder<GTerraformStateDeleteInput, GTerraformStateDeleteInputBuilder> {
  _$GTerraformStateDeleteInput? _$v;

  GTerraformStateIDBuilder? _id;
  GTerraformStateIDBuilder get id =>
      _$this._id ??= new GTerraformStateIDBuilder();
  set id(GTerraformStateIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GTerraformStateDeleteInputBuilder();

  GTerraformStateDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTerraformStateDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTerraformStateDeleteInput;
  }

  @override
  void update(void Function(GTerraformStateDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTerraformStateDeleteInput build() => _build();

  _$GTerraformStateDeleteInput _build() {
    _$GTerraformStateDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GTerraformStateDeleteInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTerraformStateDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTerraformStateID extends GTerraformStateID {
  @override
  final String value;

  factory _$GTerraformStateID(
          [void Function(GTerraformStateIDBuilder)? updates]) =>
      (new GTerraformStateIDBuilder()..update(updates))._build();

  _$GTerraformStateID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GTerraformStateID', 'value');
  }

  @override
  GTerraformStateID rebuild(void Function(GTerraformStateIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTerraformStateIDBuilder toBuilder() =>
      new GTerraformStateIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTerraformStateID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTerraformStateID')
          ..add('value', value))
        .toString();
  }
}

class GTerraformStateIDBuilder
    implements Builder<GTerraformStateID, GTerraformStateIDBuilder> {
  _$GTerraformStateID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GTerraformStateIDBuilder();

  GTerraformStateIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTerraformStateID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTerraformStateID;
  }

  @override
  void update(void Function(GTerraformStateIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTerraformStateID build() => _build();

  _$GTerraformStateID _build() {
    final _$result = _$v ??
        new _$GTerraformStateID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GTerraformStateID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GTerraformStateLockInput extends GTerraformStateLockInput {
  @override
  final GTerraformStateID id;
  @override
  final String? clientMutationId;

  factory _$GTerraformStateLockInput(
          [void Function(GTerraformStateLockInputBuilder)? updates]) =>
      (new GTerraformStateLockInputBuilder()..update(updates))._build();

  _$GTerraformStateLockInput._({required this.id, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GTerraformStateLockInput', 'id');
  }

  @override
  GTerraformStateLockInput rebuild(
          void Function(GTerraformStateLockInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTerraformStateLockInputBuilder toBuilder() =>
      new GTerraformStateLockInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTerraformStateLockInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTerraformStateLockInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GTerraformStateLockInputBuilder
    implements
        Builder<GTerraformStateLockInput, GTerraformStateLockInputBuilder> {
  _$GTerraformStateLockInput? _$v;

  GTerraformStateIDBuilder? _id;
  GTerraformStateIDBuilder get id =>
      _$this._id ??= new GTerraformStateIDBuilder();
  set id(GTerraformStateIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GTerraformStateLockInputBuilder();

  GTerraformStateLockInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTerraformStateLockInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTerraformStateLockInput;
  }

  @override
  void update(void Function(GTerraformStateLockInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTerraformStateLockInput build() => _build();

  _$GTerraformStateLockInput _build() {
    _$GTerraformStateLockInput _$result;
    try {
      _$result = _$v ??
          new _$GTerraformStateLockInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTerraformStateLockInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTerraformStateUnlockInput extends GTerraformStateUnlockInput {
  @override
  final GTerraformStateID id;
  @override
  final String? clientMutationId;

  factory _$GTerraformStateUnlockInput(
          [void Function(GTerraformStateUnlockInputBuilder)? updates]) =>
      (new GTerraformStateUnlockInputBuilder()..update(updates))._build();

  _$GTerraformStateUnlockInput._({required this.id, this.clientMutationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GTerraformStateUnlockInput', 'id');
  }

  @override
  GTerraformStateUnlockInput rebuild(
          void Function(GTerraformStateUnlockInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTerraformStateUnlockInputBuilder toBuilder() =>
      new GTerraformStateUnlockInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTerraformStateUnlockInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), clientMutationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTerraformStateUnlockInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId))
        .toString();
  }
}

class GTerraformStateUnlockInputBuilder
    implements
        Builder<GTerraformStateUnlockInput, GTerraformStateUnlockInputBuilder> {
  _$GTerraformStateUnlockInput? _$v;

  GTerraformStateIDBuilder? _id;
  GTerraformStateIDBuilder get id =>
      _$this._id ??= new GTerraformStateIDBuilder();
  set id(GTerraformStateIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GTerraformStateUnlockInputBuilder();

  GTerraformStateUnlockInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTerraformStateUnlockInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTerraformStateUnlockInput;
  }

  @override
  void update(void Function(GTerraformStateUnlockInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTerraformStateUnlockInput build() => _build();

  _$GTerraformStateUnlockInput _build() {
    _$GTerraformStateUnlockInput _$result;
    try {
      _$result = _$v ??
          new _$GTerraformStateUnlockInput._(
              id: id.build(), clientMutationId: clientMutationId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTerraformStateUnlockInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTime extends GTime {
  @override
  final String value;

  factory _$GTime([void Function(GTimeBuilder)? updates]) =>
      (new GTimeBuilder()..update(updates))._build();

  _$GTime._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GTime', 'value');
  }

  @override
  GTime rebuild(void Function(GTimeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimeBuilder toBuilder() => new GTimeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTime && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTime')..add('value', value))
        .toString();
  }
}

class GTimeBuilder implements Builder<GTime, GTimeBuilder> {
  _$GTime? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GTimeBuilder();

  GTimeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTime other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTime;
  }

  @override
  void update(void Function(GTimeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTime build() => _build();

  _$GTime _build() {
    final _$result = _$v ??
        new _$GTime._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GTime', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GTimeframe extends GTimeframe {
  @override
  final GDate start;
  @override
  final GDate end;

  factory _$GTimeframe([void Function(GTimeframeBuilder)? updates]) =>
      (new GTimeframeBuilder()..update(updates))._build();

  _$GTimeframe._({required this.start, required this.end}) : super._() {
    BuiltValueNullFieldError.checkNotNull(start, r'GTimeframe', 'start');
    BuiltValueNullFieldError.checkNotNull(end, r'GTimeframe', 'end');
  }

  @override
  GTimeframe rebuild(void Function(GTimeframeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimeframeBuilder toBuilder() => new GTimeframeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTimeframe && start == other.start && end == other.end;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, start.hashCode), end.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTimeframe')
          ..add('start', start)
          ..add('end', end))
        .toString();
  }
}

class GTimeframeBuilder implements Builder<GTimeframe, GTimeframeBuilder> {
  _$GTimeframe? _$v;

  GDateBuilder? _start;
  GDateBuilder get start => _$this._start ??= new GDateBuilder();
  set start(GDateBuilder? start) => _$this._start = start;

  GDateBuilder? _end;
  GDateBuilder get end => _$this._end ??= new GDateBuilder();
  set end(GDateBuilder? end) => _$this._end = end;

  GTimeframeBuilder();

  GTimeframeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _start = $v.start.toBuilder();
      _end = $v.end.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTimeframe other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTimeframe;
  }

  @override
  void update(void Function(GTimeframeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTimeframe build() => _build();

  _$GTimeframe _build() {
    _$GTimeframe _$result;
    try {
      _$result =
          _$v ?? new _$GTimeframe._(start: start.build(), end: end.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'start';
        start.build();
        _$failedField = 'end';
        end.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTimeframe', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTimelineEventCreateInput extends GTimelineEventCreateInput {
  @override
  final String? clientMutationId;
  @override
  final GIssueID incidentId;
  @override
  final String note;
  @override
  final GTime occurredAt;

  factory _$GTimelineEventCreateInput(
          [void Function(GTimelineEventCreateInputBuilder)? updates]) =>
      (new GTimelineEventCreateInputBuilder()..update(updates))._build();

  _$GTimelineEventCreateInput._(
      {this.clientMutationId,
      required this.incidentId,
      required this.note,
      required this.occurredAt})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        incidentId, r'GTimelineEventCreateInput', 'incidentId');
    BuiltValueNullFieldError.checkNotNull(
        note, r'GTimelineEventCreateInput', 'note');
    BuiltValueNullFieldError.checkNotNull(
        occurredAt, r'GTimelineEventCreateInput', 'occurredAt');
  }

  @override
  GTimelineEventCreateInput rebuild(
          void Function(GTimelineEventCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimelineEventCreateInputBuilder toBuilder() =>
      new GTimelineEventCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTimelineEventCreateInput &&
        clientMutationId == other.clientMutationId &&
        incidentId == other.incidentId &&
        note == other.note &&
        occurredAt == other.occurredAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), incidentId.hashCode),
            note.hashCode),
        occurredAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTimelineEventCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('incidentId', incidentId)
          ..add('note', note)
          ..add('occurredAt', occurredAt))
        .toString();
  }
}

class GTimelineEventCreateInputBuilder
    implements
        Builder<GTimelineEventCreateInput, GTimelineEventCreateInputBuilder> {
  _$GTimelineEventCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIssueIDBuilder? _incidentId;
  GIssueIDBuilder get incidentId =>
      _$this._incidentId ??= new GIssueIDBuilder();
  set incidentId(GIssueIDBuilder? incidentId) =>
      _$this._incidentId = incidentId;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  GTimeBuilder? _occurredAt;
  GTimeBuilder get occurredAt => _$this._occurredAt ??= new GTimeBuilder();
  set occurredAt(GTimeBuilder? occurredAt) => _$this._occurredAt = occurredAt;

  GTimelineEventCreateInputBuilder();

  GTimelineEventCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _incidentId = $v.incidentId.toBuilder();
      _note = $v.note;
      _occurredAt = $v.occurredAt.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTimelineEventCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTimelineEventCreateInput;
  }

  @override
  void update(void Function(GTimelineEventCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTimelineEventCreateInput build() => _build();

  _$GTimelineEventCreateInput _build() {
    _$GTimelineEventCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GTimelineEventCreateInput._(
              clientMutationId: clientMutationId,
              incidentId: incidentId.build(),
              note: BuiltValueNullFieldError.checkNotNull(
                  note, r'GTimelineEventCreateInput', 'note'),
              occurredAt: occurredAt.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'incidentId';
        incidentId.build();

        _$failedField = 'occurredAt';
        occurredAt.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTimelineEventCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTimelineEventDestroyInput extends GTimelineEventDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GIncidentManagementTimelineEventID id;

  factory _$GTimelineEventDestroyInput(
          [void Function(GTimelineEventDestroyInputBuilder)? updates]) =>
      (new GTimelineEventDestroyInputBuilder()..update(updates))._build();

  _$GTimelineEventDestroyInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GTimelineEventDestroyInput', 'id');
  }

  @override
  GTimelineEventDestroyInput rebuild(
          void Function(GTimelineEventDestroyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimelineEventDestroyInputBuilder toBuilder() =>
      new GTimelineEventDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTimelineEventDestroyInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTimelineEventDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GTimelineEventDestroyInputBuilder
    implements
        Builder<GTimelineEventDestroyInput, GTimelineEventDestroyInputBuilder> {
  _$GTimelineEventDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIncidentManagementTimelineEventIDBuilder? _id;
  GIncidentManagementTimelineEventIDBuilder get id =>
      _$this._id ??= new GIncidentManagementTimelineEventIDBuilder();
  set id(GIncidentManagementTimelineEventIDBuilder? id) => _$this._id = id;

  GTimelineEventDestroyInputBuilder();

  GTimelineEventDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTimelineEventDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTimelineEventDestroyInput;
  }

  @override
  void update(void Function(GTimelineEventDestroyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTimelineEventDestroyInput build() => _build();

  _$GTimelineEventDestroyInput _build() {
    _$GTimelineEventDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GTimelineEventDestroyInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTimelineEventDestroyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTimelineEventPromoteFromNoteInput
    extends GTimelineEventPromoteFromNoteInput {
  @override
  final String? clientMutationId;
  @override
  final GNoteID noteId;

  factory _$GTimelineEventPromoteFromNoteInput(
          [void Function(GTimelineEventPromoteFromNoteInputBuilder)?
              updates]) =>
      (new GTimelineEventPromoteFromNoteInputBuilder()..update(updates))
          ._build();

  _$GTimelineEventPromoteFromNoteInput._(
      {this.clientMutationId, required this.noteId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        noteId, r'GTimelineEventPromoteFromNoteInput', 'noteId');
  }

  @override
  GTimelineEventPromoteFromNoteInput rebuild(
          void Function(GTimelineEventPromoteFromNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimelineEventPromoteFromNoteInputBuilder toBuilder() =>
      new GTimelineEventPromoteFromNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTimelineEventPromoteFromNoteInput &&
        clientMutationId == other.clientMutationId &&
        noteId == other.noteId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), noteId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTimelineEventPromoteFromNoteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('noteId', noteId))
        .toString();
  }
}

class GTimelineEventPromoteFromNoteInputBuilder
    implements
        Builder<GTimelineEventPromoteFromNoteInput,
            GTimelineEventPromoteFromNoteInputBuilder> {
  _$GTimelineEventPromoteFromNoteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GNoteIDBuilder? _noteId;
  GNoteIDBuilder get noteId => _$this._noteId ??= new GNoteIDBuilder();
  set noteId(GNoteIDBuilder? noteId) => _$this._noteId = noteId;

  GTimelineEventPromoteFromNoteInputBuilder();

  GTimelineEventPromoteFromNoteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _noteId = $v.noteId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTimelineEventPromoteFromNoteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTimelineEventPromoteFromNoteInput;
  }

  @override
  void update(
      void Function(GTimelineEventPromoteFromNoteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTimelineEventPromoteFromNoteInput build() => _build();

  _$GTimelineEventPromoteFromNoteInput _build() {
    _$GTimelineEventPromoteFromNoteInput _$result;
    try {
      _$result = _$v ??
          new _$GTimelineEventPromoteFromNoteInput._(
              clientMutationId: clientMutationId, noteId: noteId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'noteId';
        noteId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTimelineEventPromoteFromNoteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTimelineEventUpdateInput extends GTimelineEventUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GIncidentManagementTimelineEventID id;
  @override
  final String? note;
  @override
  final GTime? occurredAt;

  factory _$GTimelineEventUpdateInput(
          [void Function(GTimelineEventUpdateInputBuilder)? updates]) =>
      (new GTimelineEventUpdateInputBuilder()..update(updates))._build();

  _$GTimelineEventUpdateInput._(
      {this.clientMutationId, required this.id, this.note, this.occurredAt})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GTimelineEventUpdateInput', 'id');
  }

  @override
  GTimelineEventUpdateInput rebuild(
          void Function(GTimelineEventUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimelineEventUpdateInputBuilder toBuilder() =>
      new GTimelineEventUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTimelineEventUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        note == other.note &&
        occurredAt == other.occurredAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode), note.hashCode),
        occurredAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTimelineEventUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('note', note)
          ..add('occurredAt', occurredAt))
        .toString();
  }
}

class GTimelineEventUpdateInputBuilder
    implements
        Builder<GTimelineEventUpdateInput, GTimelineEventUpdateInputBuilder> {
  _$GTimelineEventUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIncidentManagementTimelineEventIDBuilder? _id;
  GIncidentManagementTimelineEventIDBuilder get id =>
      _$this._id ??= new GIncidentManagementTimelineEventIDBuilder();
  set id(GIncidentManagementTimelineEventIDBuilder? id) => _$this._id = id;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  GTimeBuilder? _occurredAt;
  GTimeBuilder get occurredAt => _$this._occurredAt ??= new GTimeBuilder();
  set occurredAt(GTimeBuilder? occurredAt) => _$this._occurredAt = occurredAt;

  GTimelineEventUpdateInputBuilder();

  GTimelineEventUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _note = $v.note;
      _occurredAt = $v.occurredAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTimelineEventUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTimelineEventUpdateInput;
  }

  @override
  void update(void Function(GTimelineEventUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTimelineEventUpdateInput build() => _build();

  _$GTimelineEventUpdateInput _build() {
    _$GTimelineEventUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GTimelineEventUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              note: note,
              occurredAt: _occurredAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'occurredAt';
        _occurredAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTimelineEventUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTimelogCreateInput extends GTimelogCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String timeSpent;
  @override
  final GDate spentAt;
  @override
  final String summary;
  @override
  final GIssuableID issuableId;

  factory _$GTimelogCreateInput(
          [void Function(GTimelogCreateInputBuilder)? updates]) =>
      (new GTimelogCreateInputBuilder()..update(updates))._build();

  _$GTimelogCreateInput._(
      {this.clientMutationId,
      required this.timeSpent,
      required this.spentAt,
      required this.summary,
      required this.issuableId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        timeSpent, r'GTimelogCreateInput', 'timeSpent');
    BuiltValueNullFieldError.checkNotNull(
        spentAt, r'GTimelogCreateInput', 'spentAt');
    BuiltValueNullFieldError.checkNotNull(
        summary, r'GTimelogCreateInput', 'summary');
    BuiltValueNullFieldError.checkNotNull(
        issuableId, r'GTimelogCreateInput', 'issuableId');
  }

  @override
  GTimelogCreateInput rebuild(
          void Function(GTimelogCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimelogCreateInputBuilder toBuilder() =>
      new GTimelogCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTimelogCreateInput &&
        clientMutationId == other.clientMutationId &&
        timeSpent == other.timeSpent &&
        spentAt == other.spentAt &&
        summary == other.summary &&
        issuableId == other.issuableId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), timeSpent.hashCode),
                spentAt.hashCode),
            summary.hashCode),
        issuableId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTimelogCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('timeSpent', timeSpent)
          ..add('spentAt', spentAt)
          ..add('summary', summary)
          ..add('issuableId', issuableId))
        .toString();
  }
}

class GTimelogCreateInputBuilder
    implements Builder<GTimelogCreateInput, GTimelogCreateInputBuilder> {
  _$GTimelogCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _timeSpent;
  String? get timeSpent => _$this._timeSpent;
  set timeSpent(String? timeSpent) => _$this._timeSpent = timeSpent;

  GDateBuilder? _spentAt;
  GDateBuilder get spentAt => _$this._spentAt ??= new GDateBuilder();
  set spentAt(GDateBuilder? spentAt) => _$this._spentAt = spentAt;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  GIssuableIDBuilder? _issuableId;
  GIssuableIDBuilder get issuableId =>
      _$this._issuableId ??= new GIssuableIDBuilder();
  set issuableId(GIssuableIDBuilder? issuableId) =>
      _$this._issuableId = issuableId;

  GTimelogCreateInputBuilder();

  GTimelogCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _timeSpent = $v.timeSpent;
      _spentAt = $v.spentAt.toBuilder();
      _summary = $v.summary;
      _issuableId = $v.issuableId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTimelogCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTimelogCreateInput;
  }

  @override
  void update(void Function(GTimelogCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTimelogCreateInput build() => _build();

  _$GTimelogCreateInput _build() {
    _$GTimelogCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GTimelogCreateInput._(
              clientMutationId: clientMutationId,
              timeSpent: BuiltValueNullFieldError.checkNotNull(
                  timeSpent, r'GTimelogCreateInput', 'timeSpent'),
              spentAt: spentAt.build(),
              summary: BuiltValueNullFieldError.checkNotNull(
                  summary, r'GTimelogCreateInput', 'summary'),
              issuableId: issuableId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'spentAt';
        spentAt.build();

        _$failedField = 'issuableId';
        issuableId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTimelogCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTimelogDeleteInput extends GTimelogDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final GTimelogID id;

  factory _$GTimelogDeleteInput(
          [void Function(GTimelogDeleteInputBuilder)? updates]) =>
      (new GTimelogDeleteInputBuilder()..update(updates))._build();

  _$GTimelogDeleteInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GTimelogDeleteInput', 'id');
  }

  @override
  GTimelogDeleteInput rebuild(
          void Function(GTimelogDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimelogDeleteInputBuilder toBuilder() =>
      new GTimelogDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTimelogDeleteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTimelogDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GTimelogDeleteInputBuilder
    implements Builder<GTimelogDeleteInput, GTimelogDeleteInputBuilder> {
  _$GTimelogDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GTimelogIDBuilder? _id;
  GTimelogIDBuilder get id => _$this._id ??= new GTimelogIDBuilder();
  set id(GTimelogIDBuilder? id) => _$this._id = id;

  GTimelogDeleteInputBuilder();

  GTimelogDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTimelogDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTimelogDeleteInput;
  }

  @override
  void update(void Function(GTimelogDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTimelogDeleteInput build() => _build();

  _$GTimelogDeleteInput _build() {
    _$GTimelogDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GTimelogDeleteInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTimelogDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTimelogID extends GTimelogID {
  @override
  final String value;

  factory _$GTimelogID([void Function(GTimelogIDBuilder)? updates]) =>
      (new GTimelogIDBuilder()..update(updates))._build();

  _$GTimelogID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GTimelogID', 'value');
  }

  @override
  GTimelogID rebuild(void Function(GTimelogIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimelogIDBuilder toBuilder() => new GTimelogIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTimelogID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTimelogID')..add('value', value))
        .toString();
  }
}

class GTimelogIDBuilder implements Builder<GTimelogID, GTimelogIDBuilder> {
  _$GTimelogID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GTimelogIDBuilder();

  GTimelogIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTimelogID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTimelogID;
  }

  @override
  void update(void Function(GTimelogIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTimelogID build() => _build();

  _$GTimelogID _build() {
    final _$result = _$v ??
        new _$GTimelogID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GTimelogID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GTodoableID extends GTodoableID {
  @override
  final String value;

  factory _$GTodoableID([void Function(GTodoableIDBuilder)? updates]) =>
      (new GTodoableIDBuilder()..update(updates))._build();

  _$GTodoableID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GTodoableID', 'value');
  }

  @override
  GTodoableID rebuild(void Function(GTodoableIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTodoableIDBuilder toBuilder() => new GTodoableIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTodoableID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTodoableID')..add('value', value))
        .toString();
  }
}

class GTodoableIDBuilder implements Builder<GTodoableID, GTodoableIDBuilder> {
  _$GTodoableID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GTodoableIDBuilder();

  GTodoableIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTodoableID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTodoableID;
  }

  @override
  void update(void Function(GTodoableIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTodoableID build() => _build();

  _$GTodoableID _build() {
    final _$result = _$v ??
        new _$GTodoableID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GTodoableID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GTodoCreateInput extends GTodoCreateInput {
  @override
  final String? clientMutationId;
  @override
  final GTodoableID targetId;

  factory _$GTodoCreateInput(
          [void Function(GTodoCreateInputBuilder)? updates]) =>
      (new GTodoCreateInputBuilder()..update(updates))._build();

  _$GTodoCreateInput._({this.clientMutationId, required this.targetId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        targetId, r'GTodoCreateInput', 'targetId');
  }

  @override
  GTodoCreateInput rebuild(void Function(GTodoCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTodoCreateInputBuilder toBuilder() =>
      new GTodoCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTodoCreateInput &&
        clientMutationId == other.clientMutationId &&
        targetId == other.targetId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), targetId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTodoCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('targetId', targetId))
        .toString();
  }
}

class GTodoCreateInputBuilder
    implements Builder<GTodoCreateInput, GTodoCreateInputBuilder> {
  _$GTodoCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GTodoableIDBuilder? _targetId;
  GTodoableIDBuilder get targetId =>
      _$this._targetId ??= new GTodoableIDBuilder();
  set targetId(GTodoableIDBuilder? targetId) => _$this._targetId = targetId;

  GTodoCreateInputBuilder();

  GTodoCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _targetId = $v.targetId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTodoCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTodoCreateInput;
  }

  @override
  void update(void Function(GTodoCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTodoCreateInput build() => _build();

  _$GTodoCreateInput _build() {
    _$GTodoCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GTodoCreateInput._(
              clientMutationId: clientMutationId, targetId: targetId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'targetId';
        targetId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTodoCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTodoID extends GTodoID {
  @override
  final String value;

  factory _$GTodoID([void Function(GTodoIDBuilder)? updates]) =>
      (new GTodoIDBuilder()..update(updates))._build();

  _$GTodoID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GTodoID', 'value');
  }

  @override
  GTodoID rebuild(void Function(GTodoIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTodoIDBuilder toBuilder() => new GTodoIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTodoID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTodoID')..add('value', value))
        .toString();
  }
}

class GTodoIDBuilder implements Builder<GTodoID, GTodoIDBuilder> {
  _$GTodoID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GTodoIDBuilder();

  GTodoIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTodoID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTodoID;
  }

  @override
  void update(void Function(GTodoIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTodoID build() => _build();

  _$GTodoID _build() {
    final _$result = _$v ??
        new _$GTodoID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GTodoID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GTodoMarkDoneInput extends GTodoMarkDoneInput {
  @override
  final String? clientMutationId;
  @override
  final GTodoID id;

  factory _$GTodoMarkDoneInput(
          [void Function(GTodoMarkDoneInputBuilder)? updates]) =>
      (new GTodoMarkDoneInputBuilder()..update(updates))._build();

  _$GTodoMarkDoneInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GTodoMarkDoneInput', 'id');
  }

  @override
  GTodoMarkDoneInput rebuild(
          void Function(GTodoMarkDoneInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTodoMarkDoneInputBuilder toBuilder() =>
      new GTodoMarkDoneInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTodoMarkDoneInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTodoMarkDoneInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GTodoMarkDoneInputBuilder
    implements Builder<GTodoMarkDoneInput, GTodoMarkDoneInputBuilder> {
  _$GTodoMarkDoneInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GTodoIDBuilder? _id;
  GTodoIDBuilder get id => _$this._id ??= new GTodoIDBuilder();
  set id(GTodoIDBuilder? id) => _$this._id = id;

  GTodoMarkDoneInputBuilder();

  GTodoMarkDoneInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTodoMarkDoneInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTodoMarkDoneInput;
  }

  @override
  void update(void Function(GTodoMarkDoneInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTodoMarkDoneInput build() => _build();

  _$GTodoMarkDoneInput _build() {
    _$GTodoMarkDoneInput _$result;
    try {
      _$result = _$v ??
          new _$GTodoMarkDoneInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTodoMarkDoneInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTodoRestoreInput extends GTodoRestoreInput {
  @override
  final String? clientMutationId;
  @override
  final GTodoID id;

  factory _$GTodoRestoreInput(
          [void Function(GTodoRestoreInputBuilder)? updates]) =>
      (new GTodoRestoreInputBuilder()..update(updates))._build();

  _$GTodoRestoreInput._({this.clientMutationId, required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GTodoRestoreInput', 'id');
  }

  @override
  GTodoRestoreInput rebuild(void Function(GTodoRestoreInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTodoRestoreInputBuilder toBuilder() =>
      new GTodoRestoreInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTodoRestoreInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTodoRestoreInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GTodoRestoreInputBuilder
    implements Builder<GTodoRestoreInput, GTodoRestoreInputBuilder> {
  _$GTodoRestoreInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GTodoIDBuilder? _id;
  GTodoIDBuilder get id => _$this._id ??= new GTodoIDBuilder();
  set id(GTodoIDBuilder? id) => _$this._id = id;

  GTodoRestoreInputBuilder();

  GTodoRestoreInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTodoRestoreInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTodoRestoreInput;
  }

  @override
  void update(void Function(GTodoRestoreInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTodoRestoreInput build() => _build();

  _$GTodoRestoreInput _build() {
    _$GTodoRestoreInput _$result;
    try {
      _$result = _$v ??
          new _$GTodoRestoreInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTodoRestoreInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTodoRestoreManyInput extends GTodoRestoreManyInput {
  @override
  final String? clientMutationId;
  @override
  final BuiltList<GTodoID> ids;

  factory _$GTodoRestoreManyInput(
          [void Function(GTodoRestoreManyInputBuilder)? updates]) =>
      (new GTodoRestoreManyInputBuilder()..update(updates))._build();

  _$GTodoRestoreManyInput._({this.clientMutationId, required this.ids})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(ids, r'GTodoRestoreManyInput', 'ids');
  }

  @override
  GTodoRestoreManyInput rebuild(
          void Function(GTodoRestoreManyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTodoRestoreManyInputBuilder toBuilder() =>
      new GTodoRestoreManyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTodoRestoreManyInput &&
        clientMutationId == other.clientMutationId &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTodoRestoreManyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('ids', ids))
        .toString();
  }
}

class GTodoRestoreManyInputBuilder
    implements Builder<GTodoRestoreManyInput, GTodoRestoreManyInputBuilder> {
  _$GTodoRestoreManyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  ListBuilder<GTodoID>? _ids;
  ListBuilder<GTodoID> get ids => _$this._ids ??= new ListBuilder<GTodoID>();
  set ids(ListBuilder<GTodoID>? ids) => _$this._ids = ids;

  GTodoRestoreManyInputBuilder();

  GTodoRestoreManyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _ids = $v.ids.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTodoRestoreManyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTodoRestoreManyInput;
  }

  @override
  void update(void Function(GTodoRestoreManyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTodoRestoreManyInput build() => _build();

  _$GTodoRestoreManyInput _build() {
    _$GTodoRestoreManyInput _$result;
    try {
      _$result = _$v ??
          new _$GTodoRestoreManyInput._(
              clientMutationId: clientMutationId, ids: ids.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'ids';
        ids.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTodoRestoreManyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTodosMarkAllDoneInput extends GTodosMarkAllDoneInput {
  @override
  final String? clientMutationId;
  @override
  final GTodoableID? targetId;

  factory _$GTodosMarkAllDoneInput(
          [void Function(GTodosMarkAllDoneInputBuilder)? updates]) =>
      (new GTodosMarkAllDoneInputBuilder()..update(updates))._build();

  _$GTodosMarkAllDoneInput._({this.clientMutationId, this.targetId})
      : super._();

  @override
  GTodosMarkAllDoneInput rebuild(
          void Function(GTodosMarkAllDoneInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTodosMarkAllDoneInputBuilder toBuilder() =>
      new GTodosMarkAllDoneInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTodosMarkAllDoneInput &&
        clientMutationId == other.clientMutationId &&
        targetId == other.targetId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), targetId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTodosMarkAllDoneInput')
          ..add('clientMutationId', clientMutationId)
          ..add('targetId', targetId))
        .toString();
  }
}

class GTodosMarkAllDoneInputBuilder
    implements Builder<GTodosMarkAllDoneInput, GTodosMarkAllDoneInputBuilder> {
  _$GTodosMarkAllDoneInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GTodoableIDBuilder? _targetId;
  GTodoableIDBuilder get targetId =>
      _$this._targetId ??= new GTodoableIDBuilder();
  set targetId(GTodoableIDBuilder? targetId) => _$this._targetId = targetId;

  GTodosMarkAllDoneInputBuilder();

  GTodosMarkAllDoneInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _targetId = $v.targetId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTodosMarkAllDoneInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTodosMarkAllDoneInput;
  }

  @override
  void update(void Function(GTodosMarkAllDoneInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTodosMarkAllDoneInput build() => _build();

  _$GTodosMarkAllDoneInput _build() {
    _$GTodosMarkAllDoneInput _$result;
    try {
      _$result = _$v ??
          new _$GTodosMarkAllDoneInput._(
              clientMutationId: clientMutationId, targetId: _targetId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'targetId';
        _targetId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTodosMarkAllDoneInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUntrustedRegexp extends GUntrustedRegexp {
  @override
  final String value;

  factory _$GUntrustedRegexp(
          [void Function(GUntrustedRegexpBuilder)? updates]) =>
      (new GUntrustedRegexpBuilder()..update(updates))._build();

  _$GUntrustedRegexp._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GUntrustedRegexp', 'value');
  }

  @override
  GUntrustedRegexp rebuild(void Function(GUntrustedRegexpBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUntrustedRegexpBuilder toBuilder() =>
      new GUntrustedRegexpBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUntrustedRegexp && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUntrustedRegexp')
          ..add('value', value))
        .toString();
  }
}

class GUntrustedRegexpBuilder
    implements Builder<GUntrustedRegexp, GUntrustedRegexpBuilder> {
  _$GUntrustedRegexp? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GUntrustedRegexpBuilder();

  GUntrustedRegexpBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUntrustedRegexp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUntrustedRegexp;
  }

  @override
  void update(void Function(GUntrustedRegexpBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUntrustedRegexp build() => _build();

  _$GUntrustedRegexp _build() {
    final _$result = _$v ??
        new _$GUntrustedRegexp._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GUntrustedRegexp', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateAlertStatusInput extends GUpdateAlertStatusInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final GAlertManagementStatus status;

  factory _$GUpdateAlertStatusInput(
          [void Function(GUpdateAlertStatusInputBuilder)? updates]) =>
      (new GUpdateAlertStatusInputBuilder()..update(updates))._build();

  _$GUpdateAlertStatusInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      required this.status})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GUpdateAlertStatusInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GUpdateAlertStatusInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        status, r'GUpdateAlertStatusInput', 'status');
  }

  @override
  GUpdateAlertStatusInput rebuild(
          void Function(GUpdateAlertStatusInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateAlertStatusInputBuilder toBuilder() =>
      new GUpdateAlertStatusInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateAlertStatusInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        status == other.status;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, projectPath.hashCode), iid.hashCode),
            clientMutationId.hashCode),
        status.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateAlertStatusInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('status', status))
        .toString();
  }
}

class GUpdateAlertStatusInputBuilder
    implements
        Builder<GUpdateAlertStatusInput, GUpdateAlertStatusInputBuilder> {
  _$GUpdateAlertStatusInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GAlertManagementStatus? _status;
  GAlertManagementStatus? get status => _$this._status;
  set status(GAlertManagementStatus? status) => _$this._status = status;

  GUpdateAlertStatusInputBuilder();

  GUpdateAlertStatusInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _status = $v.status;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateAlertStatusInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateAlertStatusInput;
  }

  @override
  void update(void Function(GUpdateAlertStatusInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateAlertStatusInput build() => _build();

  _$GUpdateAlertStatusInput _build() {
    final _$result = _$v ??
        new _$GUpdateAlertStatusInput._(
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GUpdateAlertStatusInput', 'projectPath'),
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GUpdateAlertStatusInput', 'iid'),
            clientMutationId: clientMutationId,
            status: BuiltValueNullFieldError.checkNotNull(
                status, r'GUpdateAlertStatusInput', 'status'));
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateBoardEpicUserPreferencesInput
    extends GUpdateBoardEpicUserPreferencesInput {
  @override
  final String? clientMutationId;
  @override
  final GBoardID boardId;
  @override
  final GEpicID epicId;
  @override
  final bool collapsed;

  factory _$GUpdateBoardEpicUserPreferencesInput(
          [void Function(GUpdateBoardEpicUserPreferencesInputBuilder)?
              updates]) =>
      (new GUpdateBoardEpicUserPreferencesInputBuilder()..update(updates))
          ._build();

  _$GUpdateBoardEpicUserPreferencesInput._(
      {this.clientMutationId,
      required this.boardId,
      required this.epicId,
      required this.collapsed})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        boardId, r'GUpdateBoardEpicUserPreferencesInput', 'boardId');
    BuiltValueNullFieldError.checkNotNull(
        epicId, r'GUpdateBoardEpicUserPreferencesInput', 'epicId');
    BuiltValueNullFieldError.checkNotNull(
        collapsed, r'GUpdateBoardEpicUserPreferencesInput', 'collapsed');
  }

  @override
  GUpdateBoardEpicUserPreferencesInput rebuild(
          void Function(GUpdateBoardEpicUserPreferencesInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateBoardEpicUserPreferencesInputBuilder toBuilder() =>
      new GUpdateBoardEpicUserPreferencesInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateBoardEpicUserPreferencesInput &&
        clientMutationId == other.clientMutationId &&
        boardId == other.boardId &&
        epicId == other.epicId &&
        collapsed == other.collapsed;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), boardId.hashCode),
            epicId.hashCode),
        collapsed.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateBoardEpicUserPreferencesInput')
          ..add('clientMutationId', clientMutationId)
          ..add('boardId', boardId)
          ..add('epicId', epicId)
          ..add('collapsed', collapsed))
        .toString();
  }
}

class GUpdateBoardEpicUserPreferencesInputBuilder
    implements
        Builder<GUpdateBoardEpicUserPreferencesInput,
            GUpdateBoardEpicUserPreferencesInputBuilder> {
  _$GUpdateBoardEpicUserPreferencesInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GBoardIDBuilder? _boardId;
  GBoardIDBuilder get boardId => _$this._boardId ??= new GBoardIDBuilder();
  set boardId(GBoardIDBuilder? boardId) => _$this._boardId = boardId;

  GEpicIDBuilder? _epicId;
  GEpicIDBuilder get epicId => _$this._epicId ??= new GEpicIDBuilder();
  set epicId(GEpicIDBuilder? epicId) => _$this._epicId = epicId;

  bool? _collapsed;
  bool? get collapsed => _$this._collapsed;
  set collapsed(bool? collapsed) => _$this._collapsed = collapsed;

  GUpdateBoardEpicUserPreferencesInputBuilder();

  GUpdateBoardEpicUserPreferencesInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _boardId = $v.boardId.toBuilder();
      _epicId = $v.epicId.toBuilder();
      _collapsed = $v.collapsed;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateBoardEpicUserPreferencesInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateBoardEpicUserPreferencesInput;
  }

  @override
  void update(
      void Function(GUpdateBoardEpicUserPreferencesInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateBoardEpicUserPreferencesInput build() => _build();

  _$GUpdateBoardEpicUserPreferencesInput _build() {
    _$GUpdateBoardEpicUserPreferencesInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateBoardEpicUserPreferencesInput._(
              clientMutationId: clientMutationId,
              boardId: boardId.build(),
              epicId: epicId.build(),
              collapsed: BuiltValueNullFieldError.checkNotNull(collapsed,
                  r'GUpdateBoardEpicUserPreferencesInput', 'collapsed'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'boardId';
        boardId.build();
        _$failedField = 'epicId';
        epicId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateBoardEpicUserPreferencesInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateBoardInput extends GUpdateBoardInput {
  @override
  final String? clientMutationId;
  @override
  final String? name;
  @override
  final bool? hideBacklogList;
  @override
  final bool? hideClosedList;
  @override
  final GBoardID id;
  @override
  final GUserID? assigneeId;
  @override
  final GMilestoneID? milestoneId;
  @override
  final GIterationID? iterationId;
  @override
  final GIterationsCadenceID? iterationCadenceId;
  @override
  final int? weight;
  @override
  final BuiltList<String>? labels;
  @override
  final BuiltList<GLabelID>? labelIds;

  factory _$GUpdateBoardInput(
          [void Function(GUpdateBoardInputBuilder)? updates]) =>
      (new GUpdateBoardInputBuilder()..update(updates))._build();

  _$GUpdateBoardInput._(
      {this.clientMutationId,
      this.name,
      this.hideBacklogList,
      this.hideClosedList,
      required this.id,
      this.assigneeId,
      this.milestoneId,
      this.iterationId,
      this.iterationCadenceId,
      this.weight,
      this.labels,
      this.labelIds})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GUpdateBoardInput', 'id');
  }

  @override
  GUpdateBoardInput rebuild(void Function(GUpdateBoardInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateBoardInputBuilder toBuilder() =>
      new GUpdateBoardInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateBoardInput &&
        clientMutationId == other.clientMutationId &&
        name == other.name &&
        hideBacklogList == other.hideBacklogList &&
        hideClosedList == other.hideClosedList &&
        id == other.id &&
        assigneeId == other.assigneeId &&
        milestoneId == other.milestoneId &&
        iterationId == other.iterationId &&
        iterationCadenceId == other.iterationCadenceId &&
        weight == other.weight &&
        labels == other.labels &&
        labelIds == other.labelIds;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(0,
                                                    clientMutationId.hashCode),
                                                name.hashCode),
                                            hideBacklogList.hashCode),
                                        hideClosedList.hashCode),
                                    id.hashCode),
                                assigneeId.hashCode),
                            milestoneId.hashCode),
                        iterationId.hashCode),
                    iterationCadenceId.hashCode),
                weight.hashCode),
            labels.hashCode),
        labelIds.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateBoardInput')
          ..add('clientMutationId', clientMutationId)
          ..add('name', name)
          ..add('hideBacklogList', hideBacklogList)
          ..add('hideClosedList', hideClosedList)
          ..add('id', id)
          ..add('assigneeId', assigneeId)
          ..add('milestoneId', milestoneId)
          ..add('iterationId', iterationId)
          ..add('iterationCadenceId', iterationCadenceId)
          ..add('weight', weight)
          ..add('labels', labels)
          ..add('labelIds', labelIds))
        .toString();
  }
}

class GUpdateBoardInputBuilder
    implements Builder<GUpdateBoardInput, GUpdateBoardInputBuilder> {
  _$GUpdateBoardInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  bool? _hideBacklogList;
  bool? get hideBacklogList => _$this._hideBacklogList;
  set hideBacklogList(bool? hideBacklogList) =>
      _$this._hideBacklogList = hideBacklogList;

  bool? _hideClosedList;
  bool? get hideClosedList => _$this._hideClosedList;
  set hideClosedList(bool? hideClosedList) =>
      _$this._hideClosedList = hideClosedList;

  GBoardIDBuilder? _id;
  GBoardIDBuilder get id => _$this._id ??= new GBoardIDBuilder();
  set id(GBoardIDBuilder? id) => _$this._id = id;

  GUserIDBuilder? _assigneeId;
  GUserIDBuilder get assigneeId => _$this._assigneeId ??= new GUserIDBuilder();
  set assigneeId(GUserIDBuilder? assigneeId) => _$this._assigneeId = assigneeId;

  GMilestoneIDBuilder? _milestoneId;
  GMilestoneIDBuilder get milestoneId =>
      _$this._milestoneId ??= new GMilestoneIDBuilder();
  set milestoneId(GMilestoneIDBuilder? milestoneId) =>
      _$this._milestoneId = milestoneId;

  GIterationIDBuilder? _iterationId;
  GIterationIDBuilder get iterationId =>
      _$this._iterationId ??= new GIterationIDBuilder();
  set iterationId(GIterationIDBuilder? iterationId) =>
      _$this._iterationId = iterationId;

  GIterationsCadenceIDBuilder? _iterationCadenceId;
  GIterationsCadenceIDBuilder get iterationCadenceId =>
      _$this._iterationCadenceId ??= new GIterationsCadenceIDBuilder();
  set iterationCadenceId(GIterationsCadenceIDBuilder? iterationCadenceId) =>
      _$this._iterationCadenceId = iterationCadenceId;

  int? _weight;
  int? get weight => _$this._weight;
  set weight(int? weight) => _$this._weight = weight;

  ListBuilder<String>? _labels;
  ListBuilder<String> get labels =>
      _$this._labels ??= new ListBuilder<String>();
  set labels(ListBuilder<String>? labels) => _$this._labels = labels;

  ListBuilder<GLabelID>? _labelIds;
  ListBuilder<GLabelID> get labelIds =>
      _$this._labelIds ??= new ListBuilder<GLabelID>();
  set labelIds(ListBuilder<GLabelID>? labelIds) => _$this._labelIds = labelIds;

  GUpdateBoardInputBuilder();

  GUpdateBoardInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _name = $v.name;
      _hideBacklogList = $v.hideBacklogList;
      _hideClosedList = $v.hideClosedList;
      _id = $v.id.toBuilder();
      _assigneeId = $v.assigneeId?.toBuilder();
      _milestoneId = $v.milestoneId?.toBuilder();
      _iterationId = $v.iterationId?.toBuilder();
      _iterationCadenceId = $v.iterationCadenceId?.toBuilder();
      _weight = $v.weight;
      _labels = $v.labels?.toBuilder();
      _labelIds = $v.labelIds?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateBoardInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateBoardInput;
  }

  @override
  void update(void Function(GUpdateBoardInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateBoardInput build() => _build();

  _$GUpdateBoardInput _build() {
    _$GUpdateBoardInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateBoardInput._(
              clientMutationId: clientMutationId,
              name: name,
              hideBacklogList: hideBacklogList,
              hideClosedList: hideClosedList,
              id: id.build(),
              assigneeId: _assigneeId?.build(),
              milestoneId: _milestoneId?.build(),
              iterationId: _iterationId?.build(),
              iterationCadenceId: _iterationCadenceId?.build(),
              weight: weight,
              labels: _labels?.build(),
              labelIds: _labelIds?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
        _$failedField = 'assigneeId';
        _assigneeId?.build();
        _$failedField = 'milestoneId';
        _milestoneId?.build();
        _$failedField = 'iterationId';
        _iterationId?.build();
        _$failedField = 'iterationCadenceId';
        _iterationCadenceId?.build();

        _$failedField = 'labels';
        _labels?.build();
        _$failedField = 'labelIds';
        _labelIds?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateBoardInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateBoardListInput extends GUpdateBoardListInput {
  @override
  final int? position;
  @override
  final bool? collapsed;
  @override
  final String? clientMutationId;
  @override
  final GListID listId;

  factory _$GUpdateBoardListInput(
          [void Function(GUpdateBoardListInputBuilder)? updates]) =>
      (new GUpdateBoardListInputBuilder()..update(updates))._build();

  _$GUpdateBoardListInput._(
      {this.position,
      this.collapsed,
      this.clientMutationId,
      required this.listId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        listId, r'GUpdateBoardListInput', 'listId');
  }

  @override
  GUpdateBoardListInput rebuild(
          void Function(GUpdateBoardListInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateBoardListInputBuilder toBuilder() =>
      new GUpdateBoardListInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateBoardListInput &&
        position == other.position &&
        collapsed == other.collapsed &&
        clientMutationId == other.clientMutationId &&
        listId == other.listId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, position.hashCode), collapsed.hashCode),
            clientMutationId.hashCode),
        listId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateBoardListInput')
          ..add('position', position)
          ..add('collapsed', collapsed)
          ..add('clientMutationId', clientMutationId)
          ..add('listId', listId))
        .toString();
  }
}

class GUpdateBoardListInputBuilder
    implements Builder<GUpdateBoardListInput, GUpdateBoardListInputBuilder> {
  _$GUpdateBoardListInput? _$v;

  int? _position;
  int? get position => _$this._position;
  set position(int? position) => _$this._position = position;

  bool? _collapsed;
  bool? get collapsed => _$this._collapsed;
  set collapsed(bool? collapsed) => _$this._collapsed = collapsed;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GListIDBuilder? _listId;
  GListIDBuilder get listId => _$this._listId ??= new GListIDBuilder();
  set listId(GListIDBuilder? listId) => _$this._listId = listId;

  GUpdateBoardListInputBuilder();

  GUpdateBoardListInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _position = $v.position;
      _collapsed = $v.collapsed;
      _clientMutationId = $v.clientMutationId;
      _listId = $v.listId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateBoardListInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateBoardListInput;
  }

  @override
  void update(void Function(GUpdateBoardListInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateBoardListInput build() => _build();

  _$GUpdateBoardListInput _build() {
    _$GUpdateBoardListInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateBoardListInput._(
              position: position,
              collapsed: collapsed,
              clientMutationId: clientMutationId,
              listId: listId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'listId';
        listId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateBoardListInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateComplianceFrameworkInput
    extends GUpdateComplianceFrameworkInput {
  @override
  final String? clientMutationId;
  @override
  final GComplianceManagementFrameworkID id;
  @override
  final GComplianceFrameworkInput params;

  factory _$GUpdateComplianceFrameworkInput(
          [void Function(GUpdateComplianceFrameworkInputBuilder)? updates]) =>
      (new GUpdateComplianceFrameworkInputBuilder()..update(updates))._build();

  _$GUpdateComplianceFrameworkInput._(
      {this.clientMutationId, required this.id, required this.params})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GUpdateComplianceFrameworkInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        params, r'GUpdateComplianceFrameworkInput', 'params');
  }

  @override
  GUpdateComplianceFrameworkInput rebuild(
          void Function(GUpdateComplianceFrameworkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateComplianceFrameworkInputBuilder toBuilder() =>
      new GUpdateComplianceFrameworkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateComplianceFrameworkInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        params == other.params;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, clientMutationId.hashCode), id.hashCode), params.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateComplianceFrameworkInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('params', params))
        .toString();
  }
}

class GUpdateComplianceFrameworkInputBuilder
    implements
        Builder<GUpdateComplianceFrameworkInput,
            GUpdateComplianceFrameworkInputBuilder> {
  _$GUpdateComplianceFrameworkInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GComplianceManagementFrameworkIDBuilder? _id;
  GComplianceManagementFrameworkIDBuilder get id =>
      _$this._id ??= new GComplianceManagementFrameworkIDBuilder();
  set id(GComplianceManagementFrameworkIDBuilder? id) => _$this._id = id;

  GComplianceFrameworkInputBuilder? _params;
  GComplianceFrameworkInputBuilder get params =>
      _$this._params ??= new GComplianceFrameworkInputBuilder();
  set params(GComplianceFrameworkInputBuilder? params) =>
      _$this._params = params;

  GUpdateComplianceFrameworkInputBuilder();

  GUpdateComplianceFrameworkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _params = $v.params.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateComplianceFrameworkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateComplianceFrameworkInput;
  }

  @override
  void update(void Function(GUpdateComplianceFrameworkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateComplianceFrameworkInput build() => _build();

  _$GUpdateComplianceFrameworkInput _build() {
    _$GUpdateComplianceFrameworkInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateComplianceFrameworkInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              params: params.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
        _$failedField = 'params';
        params.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateComplianceFrameworkInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateContainerExpirationPolicyInput
    extends GUpdateContainerExpirationPolicyInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final bool? enabled;
  @override
  final GContainerExpirationPolicyCadenceEnum? cadence;
  @override
  final GContainerExpirationPolicyOlderThanEnum? olderThan;
  @override
  final GContainerExpirationPolicyKeepEnum? keepN;
  @override
  final GUntrustedRegexp? nameRegex;
  @override
  final GUntrustedRegexp? nameRegexKeep;

  factory _$GUpdateContainerExpirationPolicyInput(
          [void Function(GUpdateContainerExpirationPolicyInputBuilder)?
              updates]) =>
      (new GUpdateContainerExpirationPolicyInputBuilder()..update(updates))
          ._build();

  _$GUpdateContainerExpirationPolicyInput._(
      {this.clientMutationId,
      required this.projectPath,
      this.enabled,
      this.cadence,
      this.olderThan,
      this.keepN,
      this.nameRegex,
      this.nameRegexKeep})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GUpdateContainerExpirationPolicyInput', 'projectPath');
  }

  @override
  GUpdateContainerExpirationPolicyInput rebuild(
          void Function(GUpdateContainerExpirationPolicyInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateContainerExpirationPolicyInputBuilder toBuilder() =>
      new GUpdateContainerExpirationPolicyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateContainerExpirationPolicyInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        enabled == other.enabled &&
        cadence == other.cadence &&
        olderThan == other.olderThan &&
        keepN == other.keepN &&
        nameRegex == other.nameRegex &&
        nameRegexKeep == other.nameRegexKeep;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, clientMutationId.hashCode),
                                projectPath.hashCode),
                            enabled.hashCode),
                        cadence.hashCode),
                    olderThan.hashCode),
                keepN.hashCode),
            nameRegex.hashCode),
        nameRegexKeep.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GUpdateContainerExpirationPolicyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('enabled', enabled)
          ..add('cadence', cadence)
          ..add('olderThan', olderThan)
          ..add('keepN', keepN)
          ..add('nameRegex', nameRegex)
          ..add('nameRegexKeep', nameRegexKeep))
        .toString();
  }
}

class GUpdateContainerExpirationPolicyInputBuilder
    implements
        Builder<GUpdateContainerExpirationPolicyInput,
            GUpdateContainerExpirationPolicyInputBuilder> {
  _$GUpdateContainerExpirationPolicyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  bool? _enabled;
  bool? get enabled => _$this._enabled;
  set enabled(bool? enabled) => _$this._enabled = enabled;

  GContainerExpirationPolicyCadenceEnum? _cadence;
  GContainerExpirationPolicyCadenceEnum? get cadence => _$this._cadence;
  set cadence(GContainerExpirationPolicyCadenceEnum? cadence) =>
      _$this._cadence = cadence;

  GContainerExpirationPolicyOlderThanEnum? _olderThan;
  GContainerExpirationPolicyOlderThanEnum? get olderThan => _$this._olderThan;
  set olderThan(GContainerExpirationPolicyOlderThanEnum? olderThan) =>
      _$this._olderThan = olderThan;

  GContainerExpirationPolicyKeepEnum? _keepN;
  GContainerExpirationPolicyKeepEnum? get keepN => _$this._keepN;
  set keepN(GContainerExpirationPolicyKeepEnum? keepN) => _$this._keepN = keepN;

  GUntrustedRegexpBuilder? _nameRegex;
  GUntrustedRegexpBuilder get nameRegex =>
      _$this._nameRegex ??= new GUntrustedRegexpBuilder();
  set nameRegex(GUntrustedRegexpBuilder? nameRegex) =>
      _$this._nameRegex = nameRegex;

  GUntrustedRegexpBuilder? _nameRegexKeep;
  GUntrustedRegexpBuilder get nameRegexKeep =>
      _$this._nameRegexKeep ??= new GUntrustedRegexpBuilder();
  set nameRegexKeep(GUntrustedRegexpBuilder? nameRegexKeep) =>
      _$this._nameRegexKeep = nameRegexKeep;

  GUpdateContainerExpirationPolicyInputBuilder();

  GUpdateContainerExpirationPolicyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _enabled = $v.enabled;
      _cadence = $v.cadence;
      _olderThan = $v.olderThan;
      _keepN = $v.keepN;
      _nameRegex = $v.nameRegex?.toBuilder();
      _nameRegexKeep = $v.nameRegexKeep?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateContainerExpirationPolicyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateContainerExpirationPolicyInput;
  }

  @override
  void update(
      void Function(GUpdateContainerExpirationPolicyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateContainerExpirationPolicyInput build() => _build();

  _$GUpdateContainerExpirationPolicyInput _build() {
    _$GUpdateContainerExpirationPolicyInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateContainerExpirationPolicyInput._(
              clientMutationId: clientMutationId,
              projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                  r'GUpdateContainerExpirationPolicyInput', 'projectPath'),
              enabled: enabled,
              cadence: cadence,
              olderThan: olderThan,
              keepN: keepN,
              nameRegex: _nameRegex?.build(),
              nameRegexKeep: _nameRegexKeep?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'nameRegex';
        _nameRegex?.build();
        _$failedField = 'nameRegexKeep';
        _nameRegexKeep?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateContainerExpirationPolicyInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateDependencyProxyImageTtlGroupPolicyInput
    extends GUpdateDependencyProxyImageTtlGroupPolicyInput {
  @override
  final String? clientMutationId;
  @override
  final String groupPath;
  @override
  final bool? enabled;
  @override
  final int? ttl;

  factory _$GUpdateDependencyProxyImageTtlGroupPolicyInput(
          [void Function(GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder)?
              updates]) =>
      (new GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder()
            ..update(updates))
          ._build();

  _$GUpdateDependencyProxyImageTtlGroupPolicyInput._(
      {this.clientMutationId, required this.groupPath, this.enabled, this.ttl})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(groupPath,
        r'GUpdateDependencyProxyImageTtlGroupPolicyInput', 'groupPath');
  }

  @override
  GUpdateDependencyProxyImageTtlGroupPolicyInput rebuild(
          void Function(GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder toBuilder() =>
      new GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateDependencyProxyImageTtlGroupPolicyInput &&
        clientMutationId == other.clientMutationId &&
        groupPath == other.groupPath &&
        enabled == other.enabled &&
        ttl == other.ttl;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), groupPath.hashCode),
            enabled.hashCode),
        ttl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GUpdateDependencyProxyImageTtlGroupPolicyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('groupPath', groupPath)
          ..add('enabled', enabled)
          ..add('ttl', ttl))
        .toString();
  }
}

class GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder
    implements
        Builder<GUpdateDependencyProxyImageTtlGroupPolicyInput,
            GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder> {
  _$GUpdateDependencyProxyImageTtlGroupPolicyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  bool? _enabled;
  bool? get enabled => _$this._enabled;
  set enabled(bool? enabled) => _$this._enabled = enabled;

  int? _ttl;
  int? get ttl => _$this._ttl;
  set ttl(int? ttl) => _$this._ttl = ttl;

  GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder();

  GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _groupPath = $v.groupPath;
      _enabled = $v.enabled;
      _ttl = $v.ttl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateDependencyProxyImageTtlGroupPolicyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateDependencyProxyImageTtlGroupPolicyInput;
  }

  @override
  void update(
      void Function(GUpdateDependencyProxyImageTtlGroupPolicyInputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateDependencyProxyImageTtlGroupPolicyInput build() => _build();

  _$GUpdateDependencyProxyImageTtlGroupPolicyInput _build() {
    final _$result = _$v ??
        new _$GUpdateDependencyProxyImageTtlGroupPolicyInput._(
            clientMutationId: clientMutationId,
            groupPath: BuiltValueNullFieldError.checkNotNull(groupPath,
                r'GUpdateDependencyProxyImageTtlGroupPolicyInput', 'groupPath'),
            enabled: enabled,
            ttl: ttl);
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateDependencyProxySettingsInput
    extends GUpdateDependencyProxySettingsInput {
  @override
  final String? clientMutationId;
  @override
  final String groupPath;
  @override
  final bool? enabled;

  factory _$GUpdateDependencyProxySettingsInput(
          [void Function(GUpdateDependencyProxySettingsInputBuilder)?
              updates]) =>
      (new GUpdateDependencyProxySettingsInputBuilder()..update(updates))
          ._build();

  _$GUpdateDependencyProxySettingsInput._(
      {this.clientMutationId, required this.groupPath, this.enabled})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        groupPath, r'GUpdateDependencyProxySettingsInput', 'groupPath');
  }

  @override
  GUpdateDependencyProxySettingsInput rebuild(
          void Function(GUpdateDependencyProxySettingsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateDependencyProxySettingsInputBuilder toBuilder() =>
      new GUpdateDependencyProxySettingsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateDependencyProxySettingsInput &&
        clientMutationId == other.clientMutationId &&
        groupPath == other.groupPath &&
        enabled == other.enabled;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), groupPath.hashCode),
        enabled.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateDependencyProxySettingsInput')
          ..add('clientMutationId', clientMutationId)
          ..add('groupPath', groupPath)
          ..add('enabled', enabled))
        .toString();
  }
}

class GUpdateDependencyProxySettingsInputBuilder
    implements
        Builder<GUpdateDependencyProxySettingsInput,
            GUpdateDependencyProxySettingsInputBuilder> {
  _$GUpdateDependencyProxySettingsInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  bool? _enabled;
  bool? get enabled => _$this._enabled;
  set enabled(bool? enabled) => _$this._enabled = enabled;

  GUpdateDependencyProxySettingsInputBuilder();

  GUpdateDependencyProxySettingsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _groupPath = $v.groupPath;
      _enabled = $v.enabled;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateDependencyProxySettingsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateDependencyProxySettingsInput;
  }

  @override
  void update(
      void Function(GUpdateDependencyProxySettingsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateDependencyProxySettingsInput build() => _build();

  _$GUpdateDependencyProxySettingsInput _build() {
    final _$result = _$v ??
        new _$GUpdateDependencyProxySettingsInput._(
            clientMutationId: clientMutationId,
            groupPath: BuiltValueNullFieldError.checkNotNull(
                groupPath, r'GUpdateDependencyProxySettingsInput', 'groupPath'),
            enabled: enabled);
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateDiffImagePositionInput extends GUpdateDiffImagePositionInput {
  @override
  final int? x;
  @override
  final int? y;
  @override
  final int? width;
  @override
  final int? height;

  factory _$GUpdateDiffImagePositionInput(
          [void Function(GUpdateDiffImagePositionInputBuilder)? updates]) =>
      (new GUpdateDiffImagePositionInputBuilder()..update(updates))._build();

  _$GUpdateDiffImagePositionInput._({this.x, this.y, this.width, this.height})
      : super._();

  @override
  GUpdateDiffImagePositionInput rebuild(
          void Function(GUpdateDiffImagePositionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateDiffImagePositionInputBuilder toBuilder() =>
      new GUpdateDiffImagePositionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateDiffImagePositionInput &&
        x == other.x &&
        y == other.y &&
        width == other.width &&
        height == other.height;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc(0, x.hashCode), y.hashCode), width.hashCode),
        height.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateDiffImagePositionInput')
          ..add('x', x)
          ..add('y', y)
          ..add('width', width)
          ..add('height', height))
        .toString();
  }
}

class GUpdateDiffImagePositionInputBuilder
    implements
        Builder<GUpdateDiffImagePositionInput,
            GUpdateDiffImagePositionInputBuilder> {
  _$GUpdateDiffImagePositionInput? _$v;

  int? _x;
  int? get x => _$this._x;
  set x(int? x) => _$this._x = x;

  int? _y;
  int? get y => _$this._y;
  set y(int? y) => _$this._y = y;

  int? _width;
  int? get width => _$this._width;
  set width(int? width) => _$this._width = width;

  int? _height;
  int? get height => _$this._height;
  set height(int? height) => _$this._height = height;

  GUpdateDiffImagePositionInputBuilder();

  GUpdateDiffImagePositionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _x = $v.x;
      _y = $v.y;
      _width = $v.width;
      _height = $v.height;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateDiffImagePositionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateDiffImagePositionInput;
  }

  @override
  void update(void Function(GUpdateDiffImagePositionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateDiffImagePositionInput build() => _build();

  _$GUpdateDiffImagePositionInput _build() {
    final _$result = _$v ??
        new _$GUpdateDiffImagePositionInput._(
            x: x, y: y, width: width, height: height);
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateEpicBoardListInput extends GUpdateEpicBoardListInput {
  @override
  final int? position;
  @override
  final bool? collapsed;
  @override
  final String? clientMutationId;
  @override
  final GBoardsEpicListID listId;

  factory _$GUpdateEpicBoardListInput(
          [void Function(GUpdateEpicBoardListInputBuilder)? updates]) =>
      (new GUpdateEpicBoardListInputBuilder()..update(updates))._build();

  _$GUpdateEpicBoardListInput._(
      {this.position,
      this.collapsed,
      this.clientMutationId,
      required this.listId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        listId, r'GUpdateEpicBoardListInput', 'listId');
  }

  @override
  GUpdateEpicBoardListInput rebuild(
          void Function(GUpdateEpicBoardListInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateEpicBoardListInputBuilder toBuilder() =>
      new GUpdateEpicBoardListInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateEpicBoardListInput &&
        position == other.position &&
        collapsed == other.collapsed &&
        clientMutationId == other.clientMutationId &&
        listId == other.listId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, position.hashCode), collapsed.hashCode),
            clientMutationId.hashCode),
        listId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateEpicBoardListInput')
          ..add('position', position)
          ..add('collapsed', collapsed)
          ..add('clientMutationId', clientMutationId)
          ..add('listId', listId))
        .toString();
  }
}

class GUpdateEpicBoardListInputBuilder
    implements
        Builder<GUpdateEpicBoardListInput, GUpdateEpicBoardListInputBuilder> {
  _$GUpdateEpicBoardListInput? _$v;

  int? _position;
  int? get position => _$this._position;
  set position(int? position) => _$this._position = position;

  bool? _collapsed;
  bool? get collapsed => _$this._collapsed;
  set collapsed(bool? collapsed) => _$this._collapsed = collapsed;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GBoardsEpicListIDBuilder? _listId;
  GBoardsEpicListIDBuilder get listId =>
      _$this._listId ??= new GBoardsEpicListIDBuilder();
  set listId(GBoardsEpicListIDBuilder? listId) => _$this._listId = listId;

  GUpdateEpicBoardListInputBuilder();

  GUpdateEpicBoardListInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _position = $v.position;
      _collapsed = $v.collapsed;
      _clientMutationId = $v.clientMutationId;
      _listId = $v.listId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateEpicBoardListInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateEpicBoardListInput;
  }

  @override
  void update(void Function(GUpdateEpicBoardListInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateEpicBoardListInput build() => _build();

  _$GUpdateEpicBoardListInput _build() {
    _$GUpdateEpicBoardListInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateEpicBoardListInput._(
              position: position,
              collapsed: collapsed,
              clientMutationId: clientMutationId,
              listId: listId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'listId';
        listId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateEpicBoardListInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateEpicInput extends GUpdateEpicInput {
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final String groupPath;
  @override
  final String? title;
  @override
  final String? description;
  @override
  final bool? confidential;
  @override
  final String? startDateFixed;
  @override
  final String? dueDateFixed;
  @override
  final bool? startDateIsFixed;
  @override
  final bool? dueDateIsFixed;
  @override
  final BuiltList<String>? addLabelIds;
  @override
  final BuiltList<String>? removeLabelIds;
  @override
  final BuiltList<String>? addLabels;
  @override
  final GColor? color;
  @override
  final GEpicStateEvent? stateEvent;
  @override
  final BuiltList<String>? removeLabels;

  factory _$GUpdateEpicInput(
          [void Function(GUpdateEpicInputBuilder)? updates]) =>
      (new GUpdateEpicInputBuilder()..update(updates))._build();

  _$GUpdateEpicInput._(
      {required this.iid,
      this.clientMutationId,
      required this.groupPath,
      this.title,
      this.description,
      this.confidential,
      this.startDateFixed,
      this.dueDateFixed,
      this.startDateIsFixed,
      this.dueDateIsFixed,
      this.addLabelIds,
      this.removeLabelIds,
      this.addLabels,
      this.color,
      this.stateEvent,
      this.removeLabels})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(iid, r'GUpdateEpicInput', 'iid');
    BuiltValueNullFieldError.checkNotNull(
        groupPath, r'GUpdateEpicInput', 'groupPath');
  }

  @override
  GUpdateEpicInput rebuild(void Function(GUpdateEpicInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateEpicInputBuilder toBuilder() =>
      new GUpdateEpicInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateEpicInput &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        groupPath == other.groupPath &&
        title == other.title &&
        description == other.description &&
        confidential == other.confidential &&
        startDateFixed == other.startDateFixed &&
        dueDateFixed == other.dueDateFixed &&
        startDateIsFixed == other.startDateIsFixed &&
        dueDateIsFixed == other.dueDateIsFixed &&
        addLabelIds == other.addLabelIds &&
        removeLabelIds == other.removeLabelIds &&
        addLabels == other.addLabels &&
        color == other.color &&
        stateEvent == other.stateEvent &&
        removeLabels == other.removeLabels;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    iid
                                                                        .hashCode),
                                                                clientMutationId
                                                                    .hashCode),
                                                            groupPath.hashCode),
                                                        title.hashCode),
                                                    description.hashCode),
                                                confidential.hashCode),
                                            startDateFixed.hashCode),
                                        dueDateFixed.hashCode),
                                    startDateIsFixed.hashCode),
                                dueDateIsFixed.hashCode),
                            addLabelIds.hashCode),
                        removeLabelIds.hashCode),
                    addLabels.hashCode),
                color.hashCode),
            stateEvent.hashCode),
        removeLabels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateEpicInput')
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('groupPath', groupPath)
          ..add('title', title)
          ..add('description', description)
          ..add('confidential', confidential)
          ..add('startDateFixed', startDateFixed)
          ..add('dueDateFixed', dueDateFixed)
          ..add('startDateIsFixed', startDateIsFixed)
          ..add('dueDateIsFixed', dueDateIsFixed)
          ..add('addLabelIds', addLabelIds)
          ..add('removeLabelIds', removeLabelIds)
          ..add('addLabels', addLabels)
          ..add('color', color)
          ..add('stateEvent', stateEvent)
          ..add('removeLabels', removeLabels))
        .toString();
  }
}

class GUpdateEpicInputBuilder
    implements Builder<GUpdateEpicInput, GUpdateEpicInputBuilder> {
  _$GUpdateEpicInput? _$v;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _confidential;
  bool? get confidential => _$this._confidential;
  set confidential(bool? confidential) => _$this._confidential = confidential;

  String? _startDateFixed;
  String? get startDateFixed => _$this._startDateFixed;
  set startDateFixed(String? startDateFixed) =>
      _$this._startDateFixed = startDateFixed;

  String? _dueDateFixed;
  String? get dueDateFixed => _$this._dueDateFixed;
  set dueDateFixed(String? dueDateFixed) => _$this._dueDateFixed = dueDateFixed;

  bool? _startDateIsFixed;
  bool? get startDateIsFixed => _$this._startDateIsFixed;
  set startDateIsFixed(bool? startDateIsFixed) =>
      _$this._startDateIsFixed = startDateIsFixed;

  bool? _dueDateIsFixed;
  bool? get dueDateIsFixed => _$this._dueDateIsFixed;
  set dueDateIsFixed(bool? dueDateIsFixed) =>
      _$this._dueDateIsFixed = dueDateIsFixed;

  ListBuilder<String>? _addLabelIds;
  ListBuilder<String> get addLabelIds =>
      _$this._addLabelIds ??= new ListBuilder<String>();
  set addLabelIds(ListBuilder<String>? addLabelIds) =>
      _$this._addLabelIds = addLabelIds;

  ListBuilder<String>? _removeLabelIds;
  ListBuilder<String> get removeLabelIds =>
      _$this._removeLabelIds ??= new ListBuilder<String>();
  set removeLabelIds(ListBuilder<String>? removeLabelIds) =>
      _$this._removeLabelIds = removeLabelIds;

  ListBuilder<String>? _addLabels;
  ListBuilder<String> get addLabels =>
      _$this._addLabels ??= new ListBuilder<String>();
  set addLabels(ListBuilder<String>? addLabels) =>
      _$this._addLabels = addLabels;

  GColorBuilder? _color;
  GColorBuilder get color => _$this._color ??= new GColorBuilder();
  set color(GColorBuilder? color) => _$this._color = color;

  GEpicStateEvent? _stateEvent;
  GEpicStateEvent? get stateEvent => _$this._stateEvent;
  set stateEvent(GEpicStateEvent? stateEvent) =>
      _$this._stateEvent = stateEvent;

  ListBuilder<String>? _removeLabels;
  ListBuilder<String> get removeLabels =>
      _$this._removeLabels ??= new ListBuilder<String>();
  set removeLabels(ListBuilder<String>? removeLabels) =>
      _$this._removeLabels = removeLabels;

  GUpdateEpicInputBuilder();

  GUpdateEpicInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _groupPath = $v.groupPath;
      _title = $v.title;
      _description = $v.description;
      _confidential = $v.confidential;
      _startDateFixed = $v.startDateFixed;
      _dueDateFixed = $v.dueDateFixed;
      _startDateIsFixed = $v.startDateIsFixed;
      _dueDateIsFixed = $v.dueDateIsFixed;
      _addLabelIds = $v.addLabelIds?.toBuilder();
      _removeLabelIds = $v.removeLabelIds?.toBuilder();
      _addLabels = $v.addLabels?.toBuilder();
      _color = $v.color?.toBuilder();
      _stateEvent = $v.stateEvent;
      _removeLabels = $v.removeLabels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateEpicInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateEpicInput;
  }

  @override
  void update(void Function(GUpdateEpicInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateEpicInput build() => _build();

  _$GUpdateEpicInput _build() {
    _$GUpdateEpicInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateEpicInput._(
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GUpdateEpicInput', 'iid'),
              clientMutationId: clientMutationId,
              groupPath: BuiltValueNullFieldError.checkNotNull(
                  groupPath, r'GUpdateEpicInput', 'groupPath'),
              title: title,
              description: description,
              confidential: confidential,
              startDateFixed: startDateFixed,
              dueDateFixed: dueDateFixed,
              startDateIsFixed: startDateIsFixed,
              dueDateIsFixed: dueDateIsFixed,
              addLabelIds: _addLabelIds?.build(),
              removeLabelIds: _removeLabelIds?.build(),
              addLabels: _addLabels?.build(),
              color: _color?.build(),
              stateEvent: stateEvent,
              removeLabels: _removeLabels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addLabelIds';
        _addLabelIds?.build();
        _$failedField = 'removeLabelIds';
        _removeLabelIds?.build();
        _$failedField = 'addLabels';
        _addLabels?.build();
        _$failedField = 'color';
        _color?.build();

        _$failedField = 'removeLabels';
        _removeLabels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateEpicInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateImageDiffNoteInput extends GUpdateImageDiffNoteInput {
  @override
  final GNoteID id;
  @override
  final String? clientMutationId;
  @override
  final String? body;
  @override
  final GUpdateDiffImagePositionInput? position;

  factory _$GUpdateImageDiffNoteInput(
          [void Function(GUpdateImageDiffNoteInputBuilder)? updates]) =>
      (new GUpdateImageDiffNoteInputBuilder()..update(updates))._build();

  _$GUpdateImageDiffNoteInput._(
      {required this.id, this.clientMutationId, this.body, this.position})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GUpdateImageDiffNoteInput', 'id');
  }

  @override
  GUpdateImageDiffNoteInput rebuild(
          void Function(GUpdateImageDiffNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateImageDiffNoteInputBuilder toBuilder() =>
      new GUpdateImageDiffNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateImageDiffNoteInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId &&
        body == other.body &&
        position == other.position;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, id.hashCode), clientMutationId.hashCode), body.hashCode),
        position.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateImageDiffNoteInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId)
          ..add('body', body)
          ..add('position', position))
        .toString();
  }
}

class GUpdateImageDiffNoteInputBuilder
    implements
        Builder<GUpdateImageDiffNoteInput, GUpdateImageDiffNoteInputBuilder> {
  _$GUpdateImageDiffNoteInput? _$v;

  GNoteIDBuilder? _id;
  GNoteIDBuilder get id => _$this._id ??= new GNoteIDBuilder();
  set id(GNoteIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _body;
  String? get body => _$this._body;
  set body(String? body) => _$this._body = body;

  GUpdateDiffImagePositionInputBuilder? _position;
  GUpdateDiffImagePositionInputBuilder get position =>
      _$this._position ??= new GUpdateDiffImagePositionInputBuilder();
  set position(GUpdateDiffImagePositionInputBuilder? position) =>
      _$this._position = position;

  GUpdateImageDiffNoteInputBuilder();

  GUpdateImageDiffNoteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _body = $v.body;
      _position = $v.position?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateImageDiffNoteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateImageDiffNoteInput;
  }

  @override
  void update(void Function(GUpdateImageDiffNoteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateImageDiffNoteInput build() => _build();

  _$GUpdateImageDiffNoteInput _build() {
    _$GUpdateImageDiffNoteInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateImageDiffNoteInput._(
              id: id.build(),
              clientMutationId: clientMutationId,
              body: body,
              position: _position?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'position';
        _position?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateImageDiffNoteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateIssueInput extends GUpdateIssueInput {
  @override
  final String projectPath;
  @override
  final String iid;
  @override
  final String? clientMutationId;
  @override
  final String? description;
  @override
  final GISO8601Date? dueDate;
  @override
  final bool? confidential;
  @override
  final bool? locked;
  @override
  final GIssueType? type;
  @override
  final String? title;
  @override
  final String? milestoneId;
  @override
  final BuiltList<String>? addLabelIds;
  @override
  final BuiltList<String>? removeLabelIds;
  @override
  final BuiltList<String>? labelIds;
  @override
  final GIssueStateEvent? stateEvent;
  @override
  final GHealthStatus? healthStatus;
  @override
  final int? weight;
  @override
  final GEpicID? epicId;

  factory _$GUpdateIssueInput(
          [void Function(GUpdateIssueInputBuilder)? updates]) =>
      (new GUpdateIssueInputBuilder()..update(updates))._build();

  _$GUpdateIssueInput._(
      {required this.projectPath,
      required this.iid,
      this.clientMutationId,
      this.description,
      this.dueDate,
      this.confidential,
      this.locked,
      this.type,
      this.title,
      this.milestoneId,
      this.addLabelIds,
      this.removeLabelIds,
      this.labelIds,
      this.stateEvent,
      this.healthStatus,
      this.weight,
      this.epicId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GUpdateIssueInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(iid, r'GUpdateIssueInput', 'iid');
  }

  @override
  GUpdateIssueInput rebuild(void Function(GUpdateIssueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateIssueInputBuilder toBuilder() =>
      new GUpdateIssueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateIssueInput &&
        projectPath == other.projectPath &&
        iid == other.iid &&
        clientMutationId == other.clientMutationId &&
        description == other.description &&
        dueDate == other.dueDate &&
        confidential == other.confidential &&
        locked == other.locked &&
        type == other.type &&
        title == other.title &&
        milestoneId == other.milestoneId &&
        addLabelIds == other.addLabelIds &&
        removeLabelIds == other.removeLabelIds &&
        labelIds == other.labelIds &&
        stateEvent == other.stateEvent &&
        healthStatus == other.healthStatus &&
        weight == other.weight &&
        epicId == other.epicId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        0,
                                                                        projectPath
                                                                            .hashCode),
                                                                    iid
                                                                        .hashCode),
                                                                clientMutationId
                                                                    .hashCode),
                                                            description
                                                                .hashCode),
                                                        dueDate.hashCode),
                                                    confidential.hashCode),
                                                locked.hashCode),
                                            type.hashCode),
                                        title.hashCode),
                                    milestoneId.hashCode),
                                addLabelIds.hashCode),
                            removeLabelIds.hashCode),
                        labelIds.hashCode),
                    stateEvent.hashCode),
                healthStatus.hashCode),
            weight.hashCode),
        epicId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateIssueInput')
          ..add('projectPath', projectPath)
          ..add('iid', iid)
          ..add('clientMutationId', clientMutationId)
          ..add('description', description)
          ..add('dueDate', dueDate)
          ..add('confidential', confidential)
          ..add('locked', locked)
          ..add('type', type)
          ..add('title', title)
          ..add('milestoneId', milestoneId)
          ..add('addLabelIds', addLabelIds)
          ..add('removeLabelIds', removeLabelIds)
          ..add('labelIds', labelIds)
          ..add('stateEvent', stateEvent)
          ..add('healthStatus', healthStatus)
          ..add('weight', weight)
          ..add('epicId', epicId))
        .toString();
  }
}

class GUpdateIssueInputBuilder
    implements Builder<GUpdateIssueInput, GUpdateIssueInputBuilder> {
  _$GUpdateIssueInput? _$v;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GISO8601DateBuilder? _dueDate;
  GISO8601DateBuilder get dueDate =>
      _$this._dueDate ??= new GISO8601DateBuilder();
  set dueDate(GISO8601DateBuilder? dueDate) => _$this._dueDate = dueDate;

  bool? _confidential;
  bool? get confidential => _$this._confidential;
  set confidential(bool? confidential) => _$this._confidential = confidential;

  bool? _locked;
  bool? get locked => _$this._locked;
  set locked(bool? locked) => _$this._locked = locked;

  GIssueType? _type;
  GIssueType? get type => _$this._type;
  set type(GIssueType? type) => _$this._type = type;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _milestoneId;
  String? get milestoneId => _$this._milestoneId;
  set milestoneId(String? milestoneId) => _$this._milestoneId = milestoneId;

  ListBuilder<String>? _addLabelIds;
  ListBuilder<String> get addLabelIds =>
      _$this._addLabelIds ??= new ListBuilder<String>();
  set addLabelIds(ListBuilder<String>? addLabelIds) =>
      _$this._addLabelIds = addLabelIds;

  ListBuilder<String>? _removeLabelIds;
  ListBuilder<String> get removeLabelIds =>
      _$this._removeLabelIds ??= new ListBuilder<String>();
  set removeLabelIds(ListBuilder<String>? removeLabelIds) =>
      _$this._removeLabelIds = removeLabelIds;

  ListBuilder<String>? _labelIds;
  ListBuilder<String> get labelIds =>
      _$this._labelIds ??= new ListBuilder<String>();
  set labelIds(ListBuilder<String>? labelIds) => _$this._labelIds = labelIds;

  GIssueStateEvent? _stateEvent;
  GIssueStateEvent? get stateEvent => _$this._stateEvent;
  set stateEvent(GIssueStateEvent? stateEvent) =>
      _$this._stateEvent = stateEvent;

  GHealthStatus? _healthStatus;
  GHealthStatus? get healthStatus => _$this._healthStatus;
  set healthStatus(GHealthStatus? healthStatus) =>
      _$this._healthStatus = healthStatus;

  int? _weight;
  int? get weight => _$this._weight;
  set weight(int? weight) => _$this._weight = weight;

  GEpicIDBuilder? _epicId;
  GEpicIDBuilder get epicId => _$this._epicId ??= new GEpicIDBuilder();
  set epicId(GEpicIDBuilder? epicId) => _$this._epicId = epicId;

  GUpdateIssueInputBuilder();

  GUpdateIssueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projectPath = $v.projectPath;
      _iid = $v.iid;
      _clientMutationId = $v.clientMutationId;
      _description = $v.description;
      _dueDate = $v.dueDate?.toBuilder();
      _confidential = $v.confidential;
      _locked = $v.locked;
      _type = $v.type;
      _title = $v.title;
      _milestoneId = $v.milestoneId;
      _addLabelIds = $v.addLabelIds?.toBuilder();
      _removeLabelIds = $v.removeLabelIds?.toBuilder();
      _labelIds = $v.labelIds?.toBuilder();
      _stateEvent = $v.stateEvent;
      _healthStatus = $v.healthStatus;
      _weight = $v.weight;
      _epicId = $v.epicId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateIssueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateIssueInput;
  }

  @override
  void update(void Function(GUpdateIssueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateIssueInput build() => _build();

  _$GUpdateIssueInput _build() {
    _$GUpdateIssueInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateIssueInput._(
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GUpdateIssueInput', 'projectPath'),
              iid: BuiltValueNullFieldError.checkNotNull(
                  iid, r'GUpdateIssueInput', 'iid'),
              clientMutationId: clientMutationId,
              description: description,
              dueDate: _dueDate?.build(),
              confidential: confidential,
              locked: locked,
              type: type,
              title: title,
              milestoneId: milestoneId,
              addLabelIds: _addLabelIds?.build(),
              removeLabelIds: _removeLabelIds?.build(),
              labelIds: _labelIds?.build(),
              stateEvent: stateEvent,
              healthStatus: healthStatus,
              weight: weight,
              epicId: _epicId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'dueDate';
        _dueDate?.build();

        _$failedField = 'addLabelIds';
        _addLabelIds?.build();
        _$failedField = 'removeLabelIds';
        _removeLabelIds?.build();
        _$failedField = 'labelIds';
        _labelIds?.build();

        _$failedField = 'epicId';
        _epicId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateIssueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateIterationInput extends GUpdateIterationInput {
  @override
  final String? clientMutationId;
  @override
  final String groupPath;
  @override
  final String id;
  @override
  final String? title;
  @override
  final String? description;
  @override
  final String? startDate;
  @override
  final String? dueDate;

  factory _$GUpdateIterationInput(
          [void Function(GUpdateIterationInputBuilder)? updates]) =>
      (new GUpdateIterationInputBuilder()..update(updates))._build();

  _$GUpdateIterationInput._(
      {this.clientMutationId,
      required this.groupPath,
      required this.id,
      this.title,
      this.description,
      this.startDate,
      this.dueDate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        groupPath, r'GUpdateIterationInput', 'groupPath');
    BuiltValueNullFieldError.checkNotNull(id, r'GUpdateIterationInput', 'id');
  }

  @override
  GUpdateIterationInput rebuild(
          void Function(GUpdateIterationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateIterationInputBuilder toBuilder() =>
      new GUpdateIterationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateIterationInput &&
        clientMutationId == other.clientMutationId &&
        groupPath == other.groupPath &&
        id == other.id &&
        title == other.title &&
        description == other.description &&
        startDate == other.startDate &&
        dueDate == other.dueDate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, clientMutationId.hashCode),
                            groupPath.hashCode),
                        id.hashCode),
                    title.hashCode),
                description.hashCode),
            startDate.hashCode),
        dueDate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateIterationInput')
          ..add('clientMutationId', clientMutationId)
          ..add('groupPath', groupPath)
          ..add('id', id)
          ..add('title', title)
          ..add('description', description)
          ..add('startDate', startDate)
          ..add('dueDate', dueDate))
        .toString();
  }
}

class GUpdateIterationInputBuilder
    implements Builder<GUpdateIterationInput, GUpdateIterationInputBuilder> {
  _$GUpdateIterationInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _startDate;
  String? get startDate => _$this._startDate;
  set startDate(String? startDate) => _$this._startDate = startDate;

  String? _dueDate;
  String? get dueDate => _$this._dueDate;
  set dueDate(String? dueDate) => _$this._dueDate = dueDate;

  GUpdateIterationInputBuilder();

  GUpdateIterationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _groupPath = $v.groupPath;
      _id = $v.id;
      _title = $v.title;
      _description = $v.description;
      _startDate = $v.startDate;
      _dueDate = $v.dueDate;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateIterationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateIterationInput;
  }

  @override
  void update(void Function(GUpdateIterationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateIterationInput build() => _build();

  _$GUpdateIterationInput _build() {
    final _$result = _$v ??
        new _$GUpdateIterationInput._(
            clientMutationId: clientMutationId,
            groupPath: BuiltValueNullFieldError.checkNotNull(
                groupPath, r'GUpdateIterationInput', 'groupPath'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GUpdateIterationInput', 'id'),
            title: title,
            description: description,
            startDate: startDate,
            dueDate: dueDate);
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateNamespacePackageSettingsInput
    extends GUpdateNamespacePackageSettingsInput {
  @override
  final String? clientMutationId;
  @override
  final String namespacePath;
  @override
  final bool? mavenDuplicatesAllowed;
  @override
  final GUntrustedRegexp? mavenDuplicateExceptionRegex;
  @override
  final bool? genericDuplicatesAllowed;
  @override
  final GUntrustedRegexp? genericDuplicateExceptionRegex;

  factory _$GUpdateNamespacePackageSettingsInput(
          [void Function(GUpdateNamespacePackageSettingsInputBuilder)?
              updates]) =>
      (new GUpdateNamespacePackageSettingsInputBuilder()..update(updates))
          ._build();

  _$GUpdateNamespacePackageSettingsInput._(
      {this.clientMutationId,
      required this.namespacePath,
      this.mavenDuplicatesAllowed,
      this.mavenDuplicateExceptionRegex,
      this.genericDuplicatesAllowed,
      this.genericDuplicateExceptionRegex})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(namespacePath,
        r'GUpdateNamespacePackageSettingsInput', 'namespacePath');
  }

  @override
  GUpdateNamespacePackageSettingsInput rebuild(
          void Function(GUpdateNamespacePackageSettingsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateNamespacePackageSettingsInputBuilder toBuilder() =>
      new GUpdateNamespacePackageSettingsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateNamespacePackageSettingsInput &&
        clientMutationId == other.clientMutationId &&
        namespacePath == other.namespacePath &&
        mavenDuplicatesAllowed == other.mavenDuplicatesAllowed &&
        mavenDuplicateExceptionRegex == other.mavenDuplicateExceptionRegex &&
        genericDuplicatesAllowed == other.genericDuplicatesAllowed &&
        genericDuplicateExceptionRegex == other.genericDuplicateExceptionRegex;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc(0, clientMutationId.hashCode),
                        namespacePath.hashCode),
                    mavenDuplicatesAllowed.hashCode),
                mavenDuplicateExceptionRegex.hashCode),
            genericDuplicatesAllowed.hashCode),
        genericDuplicateExceptionRegex.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateNamespacePackageSettingsInput')
          ..add('clientMutationId', clientMutationId)
          ..add('namespacePath', namespacePath)
          ..add('mavenDuplicatesAllowed', mavenDuplicatesAllowed)
          ..add('mavenDuplicateExceptionRegex', mavenDuplicateExceptionRegex)
          ..add('genericDuplicatesAllowed', genericDuplicatesAllowed)
          ..add(
              'genericDuplicateExceptionRegex', genericDuplicateExceptionRegex))
        .toString();
  }
}

class GUpdateNamespacePackageSettingsInputBuilder
    implements
        Builder<GUpdateNamespacePackageSettingsInput,
            GUpdateNamespacePackageSettingsInputBuilder> {
  _$GUpdateNamespacePackageSettingsInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _namespacePath;
  String? get namespacePath => _$this._namespacePath;
  set namespacePath(String? namespacePath) =>
      _$this._namespacePath = namespacePath;

  bool? _mavenDuplicatesAllowed;
  bool? get mavenDuplicatesAllowed => _$this._mavenDuplicatesAllowed;
  set mavenDuplicatesAllowed(bool? mavenDuplicatesAllowed) =>
      _$this._mavenDuplicatesAllowed = mavenDuplicatesAllowed;

  GUntrustedRegexpBuilder? _mavenDuplicateExceptionRegex;
  GUntrustedRegexpBuilder get mavenDuplicateExceptionRegex =>
      _$this._mavenDuplicateExceptionRegex ??= new GUntrustedRegexpBuilder();
  set mavenDuplicateExceptionRegex(
          GUntrustedRegexpBuilder? mavenDuplicateExceptionRegex) =>
      _$this._mavenDuplicateExceptionRegex = mavenDuplicateExceptionRegex;

  bool? _genericDuplicatesAllowed;
  bool? get genericDuplicatesAllowed => _$this._genericDuplicatesAllowed;
  set genericDuplicatesAllowed(bool? genericDuplicatesAllowed) =>
      _$this._genericDuplicatesAllowed = genericDuplicatesAllowed;

  GUntrustedRegexpBuilder? _genericDuplicateExceptionRegex;
  GUntrustedRegexpBuilder get genericDuplicateExceptionRegex =>
      _$this._genericDuplicateExceptionRegex ??= new GUntrustedRegexpBuilder();
  set genericDuplicateExceptionRegex(
          GUntrustedRegexpBuilder? genericDuplicateExceptionRegex) =>
      _$this._genericDuplicateExceptionRegex = genericDuplicateExceptionRegex;

  GUpdateNamespacePackageSettingsInputBuilder();

  GUpdateNamespacePackageSettingsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _namespacePath = $v.namespacePath;
      _mavenDuplicatesAllowed = $v.mavenDuplicatesAllowed;
      _mavenDuplicateExceptionRegex =
          $v.mavenDuplicateExceptionRegex?.toBuilder();
      _genericDuplicatesAllowed = $v.genericDuplicatesAllowed;
      _genericDuplicateExceptionRegex =
          $v.genericDuplicateExceptionRegex?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateNamespacePackageSettingsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateNamespacePackageSettingsInput;
  }

  @override
  void update(
      void Function(GUpdateNamespacePackageSettingsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateNamespacePackageSettingsInput build() => _build();

  _$GUpdateNamespacePackageSettingsInput _build() {
    _$GUpdateNamespacePackageSettingsInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateNamespacePackageSettingsInput._(
              clientMutationId: clientMutationId,
              namespacePath: BuiltValueNullFieldError.checkNotNull(
                  namespacePath,
                  r'GUpdateNamespacePackageSettingsInput',
                  'namespacePath'),
              mavenDuplicatesAllowed: mavenDuplicatesAllowed,
              mavenDuplicateExceptionRegex:
                  _mavenDuplicateExceptionRegex?.build(),
              genericDuplicatesAllowed: genericDuplicatesAllowed,
              genericDuplicateExceptionRegex:
                  _genericDuplicateExceptionRegex?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'mavenDuplicateExceptionRegex';
        _mavenDuplicateExceptionRegex?.build();

        _$failedField = 'genericDuplicateExceptionRegex';
        _genericDuplicateExceptionRegex?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateNamespacePackageSettingsInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateNoteInput extends GUpdateNoteInput {
  @override
  final GNoteID id;
  @override
  final String? clientMutationId;
  @override
  final String? body;

  factory _$GUpdateNoteInput(
          [void Function(GUpdateNoteInputBuilder)? updates]) =>
      (new GUpdateNoteInputBuilder()..update(updates))._build();

  _$GUpdateNoteInput._({required this.id, this.clientMutationId, this.body})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GUpdateNoteInput', 'id');
  }

  @override
  GUpdateNoteInput rebuild(void Function(GUpdateNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateNoteInputBuilder toBuilder() =>
      new GUpdateNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateNoteInput &&
        id == other.id &&
        clientMutationId == other.clientMutationId &&
        body == other.body;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, id.hashCode), clientMutationId.hashCode), body.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateNoteInput')
          ..add('id', id)
          ..add('clientMutationId', clientMutationId)
          ..add('body', body))
        .toString();
  }
}

class GUpdateNoteInputBuilder
    implements Builder<GUpdateNoteInput, GUpdateNoteInputBuilder> {
  _$GUpdateNoteInput? _$v;

  GNoteIDBuilder? _id;
  GNoteIDBuilder get id => _$this._id ??= new GNoteIDBuilder();
  set id(GNoteIDBuilder? id) => _$this._id = id;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _body;
  String? get body => _$this._body;
  set body(String? body) => _$this._body = body;

  GUpdateNoteInputBuilder();

  GUpdateNoteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _clientMutationId = $v.clientMutationId;
      _body = $v.body;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateNoteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateNoteInput;
  }

  @override
  void update(void Function(GUpdateNoteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateNoteInput build() => _build();

  _$GUpdateNoteInput _build() {
    _$GUpdateNoteInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateNoteInput._(
              id: id.build(), clientMutationId: clientMutationId, body: body);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateNoteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdatePackagesCleanupPolicyInput
    extends GUpdatePackagesCleanupPolicyInput {
  @override
  final String? clientMutationId;
  @override
  final String projectPath;
  @override
  final GPackagesCleanupKeepDuplicatedPackageFilesEnum?
      keepNDuplicatedPackageFiles;

  factory _$GUpdatePackagesCleanupPolicyInput(
          [void Function(GUpdatePackagesCleanupPolicyInputBuilder)? updates]) =>
      (new GUpdatePackagesCleanupPolicyInputBuilder()..update(updates))
          ._build();

  _$GUpdatePackagesCleanupPolicyInput._(
      {this.clientMutationId,
      required this.projectPath,
      this.keepNDuplicatedPackageFiles})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GUpdatePackagesCleanupPolicyInput', 'projectPath');
  }

  @override
  GUpdatePackagesCleanupPolicyInput rebuild(
          void Function(GUpdatePackagesCleanupPolicyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdatePackagesCleanupPolicyInputBuilder toBuilder() =>
      new GUpdatePackagesCleanupPolicyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdatePackagesCleanupPolicyInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        keepNDuplicatedPackageFiles == other.keepNDuplicatedPackageFiles;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
        keepNDuplicatedPackageFiles.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdatePackagesCleanupPolicyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('keepNDuplicatedPackageFiles', keepNDuplicatedPackageFiles))
        .toString();
  }
}

class GUpdatePackagesCleanupPolicyInputBuilder
    implements
        Builder<GUpdatePackagesCleanupPolicyInput,
            GUpdatePackagesCleanupPolicyInputBuilder> {
  _$GUpdatePackagesCleanupPolicyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  GPackagesCleanupKeepDuplicatedPackageFilesEnum? _keepNDuplicatedPackageFiles;
  GPackagesCleanupKeepDuplicatedPackageFilesEnum?
      get keepNDuplicatedPackageFiles => _$this._keepNDuplicatedPackageFiles;
  set keepNDuplicatedPackageFiles(
          GPackagesCleanupKeepDuplicatedPackageFilesEnum?
              keepNDuplicatedPackageFiles) =>
      _$this._keepNDuplicatedPackageFiles = keepNDuplicatedPackageFiles;

  GUpdatePackagesCleanupPolicyInputBuilder();

  GUpdatePackagesCleanupPolicyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _keepNDuplicatedPackageFiles = $v.keepNDuplicatedPackageFiles;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdatePackagesCleanupPolicyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdatePackagesCleanupPolicyInput;
  }

  @override
  void update(
      void Function(GUpdatePackagesCleanupPolicyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdatePackagesCleanupPolicyInput build() => _build();

  _$GUpdatePackagesCleanupPolicyInput _build() {
    final _$result = _$v ??
        new _$GUpdatePackagesCleanupPolicyInput._(
            clientMutationId: clientMutationId,
            projectPath: BuiltValueNullFieldError.checkNotNull(projectPath,
                r'GUpdatePackagesCleanupPolicyInput', 'projectPath'),
            keepNDuplicatedPackageFiles: keepNDuplicatedPackageFiles);
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateRequirementInput extends GUpdateRequirementInput {
  @override
  final String? title;
  @override
  final String? description;
  @override
  final String projectPath;
  @override
  final String? clientMutationId;
  @override
  final GRequirementState? state;
  @override
  final String iid;
  @override
  final GTestReportState? lastTestReportState;

  factory _$GUpdateRequirementInput(
          [void Function(GUpdateRequirementInputBuilder)? updates]) =>
      (new GUpdateRequirementInputBuilder()..update(updates))._build();

  _$GUpdateRequirementInput._(
      {this.title,
      this.description,
      required this.projectPath,
      this.clientMutationId,
      this.state,
      required this.iid,
      this.lastTestReportState})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GUpdateRequirementInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        iid, r'GUpdateRequirementInput', 'iid');
  }

  @override
  GUpdateRequirementInput rebuild(
          void Function(GUpdateRequirementInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateRequirementInputBuilder toBuilder() =>
      new GUpdateRequirementInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateRequirementInput &&
        title == other.title &&
        description == other.description &&
        projectPath == other.projectPath &&
        clientMutationId == other.clientMutationId &&
        state == other.state &&
        iid == other.iid &&
        lastTestReportState == other.lastTestReportState;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, title.hashCode), description.hashCode),
                        projectPath.hashCode),
                    clientMutationId.hashCode),
                state.hashCode),
            iid.hashCode),
        lastTestReportState.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateRequirementInput')
          ..add('title', title)
          ..add('description', description)
          ..add('projectPath', projectPath)
          ..add('clientMutationId', clientMutationId)
          ..add('state', state)
          ..add('iid', iid)
          ..add('lastTestReportState', lastTestReportState))
        .toString();
  }
}

class GUpdateRequirementInputBuilder
    implements
        Builder<GUpdateRequirementInput, GUpdateRequirementInputBuilder> {
  _$GUpdateRequirementInput? _$v;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GRequirementState? _state;
  GRequirementState? get state => _$this._state;
  set state(GRequirementState? state) => _$this._state = state;

  String? _iid;
  String? get iid => _$this._iid;
  set iid(String? iid) => _$this._iid = iid;

  GTestReportState? _lastTestReportState;
  GTestReportState? get lastTestReportState => _$this._lastTestReportState;
  set lastTestReportState(GTestReportState? lastTestReportState) =>
      _$this._lastTestReportState = lastTestReportState;

  GUpdateRequirementInputBuilder();

  GUpdateRequirementInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _title = $v.title;
      _description = $v.description;
      _projectPath = $v.projectPath;
      _clientMutationId = $v.clientMutationId;
      _state = $v.state;
      _iid = $v.iid;
      _lastTestReportState = $v.lastTestReportState;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateRequirementInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateRequirementInput;
  }

  @override
  void update(void Function(GUpdateRequirementInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateRequirementInput build() => _build();

  _$GUpdateRequirementInput _build() {
    final _$result = _$v ??
        new _$GUpdateRequirementInput._(
            title: title,
            description: description,
            projectPath: BuiltValueNullFieldError.checkNotNull(
                projectPath, r'GUpdateRequirementInput', 'projectPath'),
            clientMutationId: clientMutationId,
            state: state,
            iid: BuiltValueNullFieldError.checkNotNull(
                iid, r'GUpdateRequirementInput', 'iid'),
            lastTestReportState: lastTestReportState);
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateSnippetInput extends GUpdateSnippetInput {
  @override
  final String? clientMutationId;
  @override
  final GSnippetID id;
  @override
  final String? title;
  @override
  final String? description;
  @override
  final GVisibilityLevelsEnum? visibilityLevel;
  @override
  final BuiltList<GSnippetBlobActionInputType>? blobActions;

  factory _$GUpdateSnippetInput(
          [void Function(GUpdateSnippetInputBuilder)? updates]) =>
      (new GUpdateSnippetInputBuilder()..update(updates))._build();

  _$GUpdateSnippetInput._(
      {this.clientMutationId,
      required this.id,
      this.title,
      this.description,
      this.visibilityLevel,
      this.blobActions})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GUpdateSnippetInput', 'id');
  }

  @override
  GUpdateSnippetInput rebuild(
          void Function(GUpdateSnippetInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateSnippetInputBuilder toBuilder() =>
      new GUpdateSnippetInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateSnippetInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        title == other.title &&
        description == other.description &&
        visibilityLevel == other.visibilityLevel &&
        blobActions == other.blobActions;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
                    title.hashCode),
                description.hashCode),
            visibilityLevel.hashCode),
        blobActions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateSnippetInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('title', title)
          ..add('description', description)
          ..add('visibilityLevel', visibilityLevel)
          ..add('blobActions', blobActions))
        .toString();
  }
}

class GUpdateSnippetInputBuilder
    implements Builder<GUpdateSnippetInput, GUpdateSnippetInputBuilder> {
  _$GUpdateSnippetInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GSnippetIDBuilder? _id;
  GSnippetIDBuilder get id => _$this._id ??= new GSnippetIDBuilder();
  set id(GSnippetIDBuilder? id) => _$this._id = id;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GVisibilityLevelsEnum? _visibilityLevel;
  GVisibilityLevelsEnum? get visibilityLevel => _$this._visibilityLevel;
  set visibilityLevel(GVisibilityLevelsEnum? visibilityLevel) =>
      _$this._visibilityLevel = visibilityLevel;

  ListBuilder<GSnippetBlobActionInputType>? _blobActions;
  ListBuilder<GSnippetBlobActionInputType> get blobActions =>
      _$this._blobActions ??= new ListBuilder<GSnippetBlobActionInputType>();
  set blobActions(ListBuilder<GSnippetBlobActionInputType>? blobActions) =>
      _$this._blobActions = blobActions;

  GUpdateSnippetInputBuilder();

  GUpdateSnippetInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _title = $v.title;
      _description = $v.description;
      _visibilityLevel = $v.visibilityLevel;
      _blobActions = $v.blobActions?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateSnippetInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateSnippetInput;
  }

  @override
  void update(void Function(GUpdateSnippetInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateSnippetInput build() => _build();

  _$GUpdateSnippetInput _build() {
    _$GUpdateSnippetInput _$result;
    try {
      _$result = _$v ??
          new _$GUpdateSnippetInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              title: title,
              description: description,
              visibilityLevel: visibilityLevel,
              blobActions: _blobActions?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'blobActions';
        _blobActions?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUpdateSnippetInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpload extends GUpload {
  @override
  final String value;

  factory _$GUpload([void Function(GUploadBuilder)? updates]) =>
      (new GUploadBuilder()..update(updates))._build();

  _$GUpload._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GUpload', 'value');
  }

  @override
  GUpload rebuild(void Function(GUploadBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUploadBuilder toBuilder() => new GUploadBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpload && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpload')..add('value', value))
        .toString();
  }
}

class GUploadBuilder implements Builder<GUpload, GUploadBuilder> {
  _$GUpload? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GUploadBuilder();

  GUploadBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpload other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpload;
  }

  @override
  void update(void Function(GUploadBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpload build() => _build();

  _$GUpload _build() {
    final _$result = _$v ??
        new _$GUpload._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GUpload', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GUploadDeleteInput extends GUploadDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final String? projectPath;
  @override
  final String? groupPath;
  @override
  final String secret;
  @override
  final String filename;

  factory _$GUploadDeleteInput(
          [void Function(GUploadDeleteInputBuilder)? updates]) =>
      (new GUploadDeleteInputBuilder()..update(updates))._build();

  _$GUploadDeleteInput._(
      {this.clientMutationId,
      this.projectPath,
      this.groupPath,
      required this.secret,
      required this.filename})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        secret, r'GUploadDeleteInput', 'secret');
    BuiltValueNullFieldError.checkNotNull(
        filename, r'GUploadDeleteInput', 'filename');
  }

  @override
  GUploadDeleteInput rebuild(
          void Function(GUploadDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUploadDeleteInputBuilder toBuilder() =>
      new GUploadDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUploadDeleteInput &&
        clientMutationId == other.clientMutationId &&
        projectPath == other.projectPath &&
        groupPath == other.groupPath &&
        secret == other.secret &&
        filename == other.filename;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, clientMutationId.hashCode), projectPath.hashCode),
                groupPath.hashCode),
            secret.hashCode),
        filename.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUploadDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('projectPath', projectPath)
          ..add('groupPath', groupPath)
          ..add('secret', secret)
          ..add('filename', filename))
        .toString();
  }
}

class GUploadDeleteInputBuilder
    implements Builder<GUploadDeleteInput, GUploadDeleteInputBuilder> {
  _$GUploadDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _groupPath;
  String? get groupPath => _$this._groupPath;
  set groupPath(String? groupPath) => _$this._groupPath = groupPath;

  String? _secret;
  String? get secret => _$this._secret;
  set secret(String? secret) => _$this._secret = secret;

  String? _filename;
  String? get filename => _$this._filename;
  set filename(String? filename) => _$this._filename = filename;

  GUploadDeleteInputBuilder();

  GUploadDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _projectPath = $v.projectPath;
      _groupPath = $v.groupPath;
      _secret = $v.secret;
      _filename = $v.filename;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUploadDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUploadDeleteInput;
  }

  @override
  void update(void Function(GUploadDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUploadDeleteInput build() => _build();

  _$GUploadDeleteInput _build() {
    final _$result = _$v ??
        new _$GUploadDeleteInput._(
            clientMutationId: clientMutationId,
            projectPath: projectPath,
            groupPath: groupPath,
            secret: BuiltValueNullFieldError.checkNotNull(
                secret, r'GUploadDeleteInput', 'secret'),
            filename: BuiltValueNullFieldError.checkNotNull(
                filename, r'GUploadDeleteInput', 'filename'));
    replace(_$result);
    return _$result;
  }
}

class _$GUploadID extends GUploadID {
  @override
  final String value;

  factory _$GUploadID([void Function(GUploadIDBuilder)? updates]) =>
      (new GUploadIDBuilder()..update(updates))._build();

  _$GUploadID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GUploadID', 'value');
  }

  @override
  GUploadID rebuild(void Function(GUploadIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUploadIDBuilder toBuilder() => new GUploadIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUploadID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUploadID')..add('value', value))
        .toString();
  }
}

class GUploadIDBuilder implements Builder<GUploadID, GUploadIDBuilder> {
  _$GUploadID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GUploadIDBuilder();

  GUploadIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUploadID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUploadID;
  }

  @override
  void update(void Function(GUploadIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUploadID build() => _build();

  _$GUploadID _build() {
    final _$result = _$v ??
        new _$GUploadID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GUploadID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GUserCalloutCreateInput extends GUserCalloutCreateInput {
  @override
  final String? clientMutationId;
  @override
  final String featureName;

  factory _$GUserCalloutCreateInput(
          [void Function(GUserCalloutCreateInputBuilder)? updates]) =>
      (new GUserCalloutCreateInputBuilder()..update(updates))._build();

  _$GUserCalloutCreateInput._(
      {this.clientMutationId, required this.featureName})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        featureName, r'GUserCalloutCreateInput', 'featureName');
  }

  @override
  GUserCalloutCreateInput rebuild(
          void Function(GUserCalloutCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserCalloutCreateInputBuilder toBuilder() =>
      new GUserCalloutCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserCalloutCreateInput &&
        clientMutationId == other.clientMutationId &&
        featureName == other.featureName;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), featureName.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserCalloutCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('featureName', featureName))
        .toString();
  }
}

class GUserCalloutCreateInputBuilder
    implements
        Builder<GUserCalloutCreateInput, GUserCalloutCreateInputBuilder> {
  _$GUserCalloutCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _featureName;
  String? get featureName => _$this._featureName;
  set featureName(String? featureName) => _$this._featureName = featureName;

  GUserCalloutCreateInputBuilder();

  GUserCalloutCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _featureName = $v.featureName;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserCalloutCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserCalloutCreateInput;
  }

  @override
  void update(void Function(GUserCalloutCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserCalloutCreateInput build() => _build();

  _$GUserCalloutCreateInput _build() {
    final _$result = _$v ??
        new _$GUserCalloutCreateInput._(
            clientMutationId: clientMutationId,
            featureName: BuiltValueNullFieldError.checkNotNull(
                featureName, r'GUserCalloutCreateInput', 'featureName'));
    replace(_$result);
    return _$result;
  }
}

class _$GUserID extends GUserID {
  @override
  final String value;

  factory _$GUserID([void Function(GUserIDBuilder)? updates]) =>
      (new GUserIDBuilder()..update(updates))._build();

  _$GUserID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GUserID', 'value');
  }

  @override
  GUserID rebuild(void Function(GUserIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserIDBuilder toBuilder() => new GUserIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserID')..add('value', value))
        .toString();
  }
}

class GUserIDBuilder implements Builder<GUserID, GUserIDBuilder> {
  _$GUserID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GUserIDBuilder();

  GUserIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserID;
  }

  @override
  void update(void Function(GUserIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserID build() => _build();

  _$GUserID _build() {
    final _$result = _$v ??
        new _$GUserID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GUserID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GUserPreferencesUpdateInput extends GUserPreferencesUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GIssueSort? issuesSort;

  factory _$GUserPreferencesUpdateInput(
          [void Function(GUserPreferencesUpdateInputBuilder)? updates]) =>
      (new GUserPreferencesUpdateInputBuilder()..update(updates))._build();

  _$GUserPreferencesUpdateInput._({this.clientMutationId, this.issuesSort})
      : super._();

  @override
  GUserPreferencesUpdateInput rebuild(
          void Function(GUserPreferencesUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserPreferencesUpdateInputBuilder toBuilder() =>
      new GUserPreferencesUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserPreferencesUpdateInput &&
        clientMutationId == other.clientMutationId &&
        issuesSort == other.issuesSort;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), issuesSort.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserPreferencesUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('issuesSort', issuesSort))
        .toString();
  }
}

class GUserPreferencesUpdateInputBuilder
    implements
        Builder<GUserPreferencesUpdateInput,
            GUserPreferencesUpdateInputBuilder> {
  _$GUserPreferencesUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GIssueSort? _issuesSort;
  GIssueSort? get issuesSort => _$this._issuesSort;
  set issuesSort(GIssueSort? issuesSort) => _$this._issuesSort = issuesSort;

  GUserPreferencesUpdateInputBuilder();

  GUserPreferencesUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _issuesSort = $v.issuesSort;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserPreferencesUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserPreferencesUpdateInput;
  }

  @override
  void update(void Function(GUserPreferencesUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserPreferencesUpdateInput build() => _build();

  _$GUserPreferencesUpdateInput _build() {
    final _$result = _$v ??
        new _$GUserPreferencesUpdateInput._(
            clientMutationId: clientMutationId, issuesSort: issuesSort);
    replace(_$result);
    return _$result;
  }
}

class _$GUsersSavedReplyID extends GUsersSavedReplyID {
  @override
  final String value;

  factory _$GUsersSavedReplyID(
          [void Function(GUsersSavedReplyIDBuilder)? updates]) =>
      (new GUsersSavedReplyIDBuilder()..update(updates))._build();

  _$GUsersSavedReplyID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GUsersSavedReplyID', 'value');
  }

  @override
  GUsersSavedReplyID rebuild(
          void Function(GUsersSavedReplyIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUsersSavedReplyIDBuilder toBuilder() =>
      new GUsersSavedReplyIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUsersSavedReplyID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUsersSavedReplyID')
          ..add('value', value))
        .toString();
  }
}

class GUsersSavedReplyIDBuilder
    implements Builder<GUsersSavedReplyID, GUsersSavedReplyIDBuilder> {
  _$GUsersSavedReplyID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GUsersSavedReplyIDBuilder();

  GUsersSavedReplyIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUsersSavedReplyID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUsersSavedReplyID;
  }

  @override
  void update(void Function(GUsersSavedReplyIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUsersSavedReplyID build() => _build();

  _$GUsersSavedReplyID _build() {
    final _$result = _$v ??
        new _$GUsersSavedReplyID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GUsersSavedReplyID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilitiesExternalIssueLinkID
    extends GVulnerabilitiesExternalIssueLinkID {
  @override
  final String value;

  factory _$GVulnerabilitiesExternalIssueLinkID(
          [void Function(GVulnerabilitiesExternalIssueLinkIDBuilder)?
              updates]) =>
      (new GVulnerabilitiesExternalIssueLinkIDBuilder()..update(updates))
          ._build();

  _$GVulnerabilitiesExternalIssueLinkID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GVulnerabilitiesExternalIssueLinkID', 'value');
  }

  @override
  GVulnerabilitiesExternalIssueLinkID rebuild(
          void Function(GVulnerabilitiesExternalIssueLinkIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilitiesExternalIssueLinkIDBuilder toBuilder() =>
      new GVulnerabilitiesExternalIssueLinkIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilitiesExternalIssueLinkID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilitiesExternalIssueLinkID')
          ..add('value', value))
        .toString();
  }
}

class GVulnerabilitiesExternalIssueLinkIDBuilder
    implements
        Builder<GVulnerabilitiesExternalIssueLinkID,
            GVulnerabilitiesExternalIssueLinkIDBuilder> {
  _$GVulnerabilitiesExternalIssueLinkID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GVulnerabilitiesExternalIssueLinkIDBuilder();

  GVulnerabilitiesExternalIssueLinkIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilitiesExternalIssueLinkID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilitiesExternalIssueLinkID;
  }

  @override
  void update(
      void Function(GVulnerabilitiesExternalIssueLinkIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilitiesExternalIssueLinkID build() => _build();

  _$GVulnerabilitiesExternalIssueLinkID _build() {
    final _$result = _$v ??
        new _$GVulnerabilitiesExternalIssueLinkID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GVulnerabilitiesExternalIssueLinkID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilitiesFindingID extends GVulnerabilitiesFindingID {
  @override
  final String value;

  factory _$GVulnerabilitiesFindingID(
          [void Function(GVulnerabilitiesFindingIDBuilder)? updates]) =>
      (new GVulnerabilitiesFindingIDBuilder()..update(updates))._build();

  _$GVulnerabilitiesFindingID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GVulnerabilitiesFindingID', 'value');
  }

  @override
  GVulnerabilitiesFindingID rebuild(
          void Function(GVulnerabilitiesFindingIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilitiesFindingIDBuilder toBuilder() =>
      new GVulnerabilitiesFindingIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilitiesFindingID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilitiesFindingID')
          ..add('value', value))
        .toString();
  }
}

class GVulnerabilitiesFindingIDBuilder
    implements
        Builder<GVulnerabilitiesFindingID, GVulnerabilitiesFindingIDBuilder> {
  _$GVulnerabilitiesFindingID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GVulnerabilitiesFindingIDBuilder();

  GVulnerabilitiesFindingIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilitiesFindingID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilitiesFindingID;
  }

  @override
  void update(void Function(GVulnerabilitiesFindingIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilitiesFindingID build() => _build();

  _$GVulnerabilitiesFindingID _build() {
    final _$result = _$v ??
        new _$GVulnerabilitiesFindingID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GVulnerabilitiesFindingID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilitiesScannerID extends GVulnerabilitiesScannerID {
  @override
  final String value;

  factory _$GVulnerabilitiesScannerID(
          [void Function(GVulnerabilitiesScannerIDBuilder)? updates]) =>
      (new GVulnerabilitiesScannerIDBuilder()..update(updates))._build();

  _$GVulnerabilitiesScannerID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        value, r'GVulnerabilitiesScannerID', 'value');
  }

  @override
  GVulnerabilitiesScannerID rebuild(
          void Function(GVulnerabilitiesScannerIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilitiesScannerIDBuilder toBuilder() =>
      new GVulnerabilitiesScannerIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilitiesScannerID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilitiesScannerID')
          ..add('value', value))
        .toString();
  }
}

class GVulnerabilitiesScannerIDBuilder
    implements
        Builder<GVulnerabilitiesScannerID, GVulnerabilitiesScannerIDBuilder> {
  _$GVulnerabilitiesScannerID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GVulnerabilitiesScannerIDBuilder();

  GVulnerabilitiesScannerIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilitiesScannerID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilitiesScannerID;
  }

  @override
  void update(void Function(GVulnerabilitiesScannerIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilitiesScannerID build() => _build();

  _$GVulnerabilitiesScannerID _build() {
    final _$result = _$v ??
        new _$GVulnerabilitiesScannerID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GVulnerabilitiesScannerID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityConfirmInput extends GVulnerabilityConfirmInput {
  @override
  final String? clientMutationId;
  @override
  final GVulnerabilityID id;

  factory _$GVulnerabilityConfirmInput(
          [void Function(GVulnerabilityConfirmInputBuilder)? updates]) =>
      (new GVulnerabilityConfirmInputBuilder()..update(updates))._build();

  _$GVulnerabilityConfirmInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GVulnerabilityConfirmInput', 'id');
  }

  @override
  GVulnerabilityConfirmInput rebuild(
          void Function(GVulnerabilityConfirmInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityConfirmInputBuilder toBuilder() =>
      new GVulnerabilityConfirmInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityConfirmInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilityConfirmInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GVulnerabilityConfirmInputBuilder
    implements
        Builder<GVulnerabilityConfirmInput, GVulnerabilityConfirmInputBuilder> {
  _$GVulnerabilityConfirmInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GVulnerabilityIDBuilder? _id;
  GVulnerabilityIDBuilder get id =>
      _$this._id ??= new GVulnerabilityIDBuilder();
  set id(GVulnerabilityIDBuilder? id) => _$this._id = id;

  GVulnerabilityConfirmInputBuilder();

  GVulnerabilityConfirmInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityConfirmInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityConfirmInput;
  }

  @override
  void update(void Function(GVulnerabilityConfirmInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityConfirmInput build() => _build();

  _$GVulnerabilityConfirmInput _build() {
    _$GVulnerabilityConfirmInput _$result;
    try {
      _$result = _$v ??
          new _$GVulnerabilityConfirmInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVulnerabilityConfirmInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityCreateInput extends GVulnerabilityCreateInput {
  @override
  final String? clientMutationId;
  @override
  final GProjectID project;
  @override
  final String name;
  @override
  final String description;
  @override
  final GVulnerabilityScannerInput scanner;
  @override
  final BuiltList<GVulnerabilityIdentifierInput> identifiers;
  @override
  final GVulnerabilityState? state;
  @override
  final GVulnerabilitySeverity? severity;
  @override
  final String? solution;
  @override
  final String? message;
  @override
  final GTime? detectedAt;
  @override
  final GTime? confirmedAt;
  @override
  final GTime? resolvedAt;
  @override
  final GTime? dismissedAt;

  factory _$GVulnerabilityCreateInput(
          [void Function(GVulnerabilityCreateInputBuilder)? updates]) =>
      (new GVulnerabilityCreateInputBuilder()..update(updates))._build();

  _$GVulnerabilityCreateInput._(
      {this.clientMutationId,
      required this.project,
      required this.name,
      required this.description,
      required this.scanner,
      required this.identifiers,
      this.state,
      this.severity,
      this.solution,
      this.message,
      this.detectedAt,
      this.confirmedAt,
      this.resolvedAt,
      this.dismissedAt})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        project, r'GVulnerabilityCreateInput', 'project');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GVulnerabilityCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        description, r'GVulnerabilityCreateInput', 'description');
    BuiltValueNullFieldError.checkNotNull(
        scanner, r'GVulnerabilityCreateInput', 'scanner');
    BuiltValueNullFieldError.checkNotNull(
        identifiers, r'GVulnerabilityCreateInput', 'identifiers');
  }

  @override
  GVulnerabilityCreateInput rebuild(
          void Function(GVulnerabilityCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityCreateInputBuilder toBuilder() =>
      new GVulnerabilityCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityCreateInput &&
        clientMutationId == other.clientMutationId &&
        project == other.project &&
        name == other.name &&
        description == other.description &&
        scanner == other.scanner &&
        identifiers == other.identifiers &&
        state == other.state &&
        severity == other.severity &&
        solution == other.solution &&
        message == other.message &&
        detectedAt == other.detectedAt &&
        confirmedAt == other.confirmedAt &&
        resolvedAt == other.resolvedAt &&
        dismissedAt == other.dismissedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            clientMutationId
                                                                .hashCode),
                                                        project.hashCode),
                                                    name.hashCode),
                                                description.hashCode),
                                            scanner.hashCode),
                                        identifiers.hashCode),
                                    state.hashCode),
                                severity.hashCode),
                            solution.hashCode),
                        message.hashCode),
                    detectedAt.hashCode),
                confirmedAt.hashCode),
            resolvedAt.hashCode),
        dismissedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilityCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('project', project)
          ..add('name', name)
          ..add('description', description)
          ..add('scanner', scanner)
          ..add('identifiers', identifiers)
          ..add('state', state)
          ..add('severity', severity)
          ..add('solution', solution)
          ..add('message', message)
          ..add('detectedAt', detectedAt)
          ..add('confirmedAt', confirmedAt)
          ..add('resolvedAt', resolvedAt)
          ..add('dismissedAt', dismissedAt))
        .toString();
  }
}

class GVulnerabilityCreateInputBuilder
    implements
        Builder<GVulnerabilityCreateInput, GVulnerabilityCreateInputBuilder> {
  _$GVulnerabilityCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GProjectIDBuilder? _project;
  GProjectIDBuilder get project => _$this._project ??= new GProjectIDBuilder();
  set project(GProjectIDBuilder? project) => _$this._project = project;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GVulnerabilityScannerInputBuilder? _scanner;
  GVulnerabilityScannerInputBuilder get scanner =>
      _$this._scanner ??= new GVulnerabilityScannerInputBuilder();
  set scanner(GVulnerabilityScannerInputBuilder? scanner) =>
      _$this._scanner = scanner;

  ListBuilder<GVulnerabilityIdentifierInput>? _identifiers;
  ListBuilder<GVulnerabilityIdentifierInput> get identifiers =>
      _$this._identifiers ??= new ListBuilder<GVulnerabilityIdentifierInput>();
  set identifiers(ListBuilder<GVulnerabilityIdentifierInput>? identifiers) =>
      _$this._identifiers = identifiers;

  GVulnerabilityState? _state;
  GVulnerabilityState? get state => _$this._state;
  set state(GVulnerabilityState? state) => _$this._state = state;

  GVulnerabilitySeverity? _severity;
  GVulnerabilitySeverity? get severity => _$this._severity;
  set severity(GVulnerabilitySeverity? severity) => _$this._severity = severity;

  String? _solution;
  String? get solution => _$this._solution;
  set solution(String? solution) => _$this._solution = solution;

  String? _message;
  String? get message => _$this._message;
  set message(String? message) => _$this._message = message;

  GTimeBuilder? _detectedAt;
  GTimeBuilder get detectedAt => _$this._detectedAt ??= new GTimeBuilder();
  set detectedAt(GTimeBuilder? detectedAt) => _$this._detectedAt = detectedAt;

  GTimeBuilder? _confirmedAt;
  GTimeBuilder get confirmedAt => _$this._confirmedAt ??= new GTimeBuilder();
  set confirmedAt(GTimeBuilder? confirmedAt) =>
      _$this._confirmedAt = confirmedAt;

  GTimeBuilder? _resolvedAt;
  GTimeBuilder get resolvedAt => _$this._resolvedAt ??= new GTimeBuilder();
  set resolvedAt(GTimeBuilder? resolvedAt) => _$this._resolvedAt = resolvedAt;

  GTimeBuilder? _dismissedAt;
  GTimeBuilder get dismissedAt => _$this._dismissedAt ??= new GTimeBuilder();
  set dismissedAt(GTimeBuilder? dismissedAt) =>
      _$this._dismissedAt = dismissedAt;

  GVulnerabilityCreateInputBuilder();

  GVulnerabilityCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _project = $v.project.toBuilder();
      _name = $v.name;
      _description = $v.description;
      _scanner = $v.scanner.toBuilder();
      _identifiers = $v.identifiers.toBuilder();
      _state = $v.state;
      _severity = $v.severity;
      _solution = $v.solution;
      _message = $v.message;
      _detectedAt = $v.detectedAt?.toBuilder();
      _confirmedAt = $v.confirmedAt?.toBuilder();
      _resolvedAt = $v.resolvedAt?.toBuilder();
      _dismissedAt = $v.dismissedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityCreateInput;
  }

  @override
  void update(void Function(GVulnerabilityCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityCreateInput build() => _build();

  _$GVulnerabilityCreateInput _build() {
    _$GVulnerabilityCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GVulnerabilityCreateInput._(
              clientMutationId: clientMutationId,
              project: project.build(),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GVulnerabilityCreateInput', 'name'),
              description: BuiltValueNullFieldError.checkNotNull(
                  description, r'GVulnerabilityCreateInput', 'description'),
              scanner: scanner.build(),
              identifiers: identifiers.build(),
              state: state,
              severity: severity,
              solution: solution,
              message: message,
              detectedAt: _detectedAt?.build(),
              confirmedAt: _confirmedAt?.build(),
              resolvedAt: _resolvedAt?.build(),
              dismissedAt: _dismissedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'project';
        project.build();

        _$failedField = 'scanner';
        scanner.build();
        _$failedField = 'identifiers';
        identifiers.build();

        _$failedField = 'detectedAt';
        _detectedAt?.build();
        _$failedField = 'confirmedAt';
        _confirmedAt?.build();
        _$failedField = 'resolvedAt';
        _resolvedAt?.build();
        _$failedField = 'dismissedAt';
        _dismissedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVulnerabilityCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityDismissInput extends GVulnerabilityDismissInput {
  @override
  final String? clientMutationId;
  @override
  final GVulnerabilityID id;
  @override
  final String? comment;
  @override
  final GVulnerabilityDismissalReason? dismissalReason;

  factory _$GVulnerabilityDismissInput(
          [void Function(GVulnerabilityDismissInputBuilder)? updates]) =>
      (new GVulnerabilityDismissInputBuilder()..update(updates))._build();

  _$GVulnerabilityDismissInput._(
      {this.clientMutationId,
      required this.id,
      this.comment,
      this.dismissalReason})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GVulnerabilityDismissInput', 'id');
  }

  @override
  GVulnerabilityDismissInput rebuild(
          void Function(GVulnerabilityDismissInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityDismissInputBuilder toBuilder() =>
      new GVulnerabilityDismissInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityDismissInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        comment == other.comment &&
        dismissalReason == other.dismissalReason;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
            comment.hashCode),
        dismissalReason.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilityDismissInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('comment', comment)
          ..add('dismissalReason', dismissalReason))
        .toString();
  }
}

class GVulnerabilityDismissInputBuilder
    implements
        Builder<GVulnerabilityDismissInput, GVulnerabilityDismissInputBuilder> {
  _$GVulnerabilityDismissInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GVulnerabilityIDBuilder? _id;
  GVulnerabilityIDBuilder get id =>
      _$this._id ??= new GVulnerabilityIDBuilder();
  set id(GVulnerabilityIDBuilder? id) => _$this._id = id;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  GVulnerabilityDismissalReason? _dismissalReason;
  GVulnerabilityDismissalReason? get dismissalReason => _$this._dismissalReason;
  set dismissalReason(GVulnerabilityDismissalReason? dismissalReason) =>
      _$this._dismissalReason = dismissalReason;

  GVulnerabilityDismissInputBuilder();

  GVulnerabilityDismissInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _comment = $v.comment;
      _dismissalReason = $v.dismissalReason;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityDismissInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityDismissInput;
  }

  @override
  void update(void Function(GVulnerabilityDismissInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityDismissInput build() => _build();

  _$GVulnerabilityDismissInput _build() {
    _$GVulnerabilityDismissInput _$result;
    try {
      _$result = _$v ??
          new _$GVulnerabilityDismissInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              comment: comment,
              dismissalReason: dismissalReason);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVulnerabilityDismissInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityExternalIssueLinkCreateInput
    extends GVulnerabilityExternalIssueLinkCreateInput {
  @override
  final String? clientMutationId;
  @override
  final GVulnerabilityID id;
  @override
  final GVulnerabilityExternalIssueLinkType linkType;
  @override
  final GVulnerabilityExternalIssueLinkExternalTracker externalTracker;

  factory _$GVulnerabilityExternalIssueLinkCreateInput(
          [void Function(GVulnerabilityExternalIssueLinkCreateInputBuilder)?
              updates]) =>
      (new GVulnerabilityExternalIssueLinkCreateInputBuilder()..update(updates))
          ._build();

  _$GVulnerabilityExternalIssueLinkCreateInput._(
      {this.clientMutationId,
      required this.id,
      required this.linkType,
      required this.externalTracker})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GVulnerabilityExternalIssueLinkCreateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        linkType, r'GVulnerabilityExternalIssueLinkCreateInput', 'linkType');
    BuiltValueNullFieldError.checkNotNull(externalTracker,
        r'GVulnerabilityExternalIssueLinkCreateInput', 'externalTracker');
  }

  @override
  GVulnerabilityExternalIssueLinkCreateInput rebuild(
          void Function(GVulnerabilityExternalIssueLinkCreateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityExternalIssueLinkCreateInputBuilder toBuilder() =>
      new GVulnerabilityExternalIssueLinkCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityExternalIssueLinkCreateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        linkType == other.linkType &&
        externalTracker == other.externalTracker;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
            linkType.hashCode),
        externalTracker.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GVulnerabilityExternalIssueLinkCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('linkType', linkType)
          ..add('externalTracker', externalTracker))
        .toString();
  }
}

class GVulnerabilityExternalIssueLinkCreateInputBuilder
    implements
        Builder<GVulnerabilityExternalIssueLinkCreateInput,
            GVulnerabilityExternalIssueLinkCreateInputBuilder> {
  _$GVulnerabilityExternalIssueLinkCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GVulnerabilityIDBuilder? _id;
  GVulnerabilityIDBuilder get id =>
      _$this._id ??= new GVulnerabilityIDBuilder();
  set id(GVulnerabilityIDBuilder? id) => _$this._id = id;

  GVulnerabilityExternalIssueLinkType? _linkType;
  GVulnerabilityExternalIssueLinkType? get linkType => _$this._linkType;
  set linkType(GVulnerabilityExternalIssueLinkType? linkType) =>
      _$this._linkType = linkType;

  GVulnerabilityExternalIssueLinkExternalTracker? _externalTracker;
  GVulnerabilityExternalIssueLinkExternalTracker? get externalTracker =>
      _$this._externalTracker;
  set externalTracker(
          GVulnerabilityExternalIssueLinkExternalTracker? externalTracker) =>
      _$this._externalTracker = externalTracker;

  GVulnerabilityExternalIssueLinkCreateInputBuilder();

  GVulnerabilityExternalIssueLinkCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _linkType = $v.linkType;
      _externalTracker = $v.externalTracker;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityExternalIssueLinkCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityExternalIssueLinkCreateInput;
  }

  @override
  void update(
      void Function(GVulnerabilityExternalIssueLinkCreateInputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityExternalIssueLinkCreateInput build() => _build();

  _$GVulnerabilityExternalIssueLinkCreateInput _build() {
    _$GVulnerabilityExternalIssueLinkCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GVulnerabilityExternalIssueLinkCreateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              linkType: BuiltValueNullFieldError.checkNotNull(linkType,
                  r'GVulnerabilityExternalIssueLinkCreateInput', 'linkType'),
              externalTracker: BuiltValueNullFieldError.checkNotNull(
                  externalTracker,
                  r'GVulnerabilityExternalIssueLinkCreateInput',
                  'externalTracker'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVulnerabilityExternalIssueLinkCreateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityExternalIssueLinkDestroyInput
    extends GVulnerabilityExternalIssueLinkDestroyInput {
  @override
  final String? clientMutationId;
  @override
  final GVulnerabilitiesExternalIssueLinkID id;

  factory _$GVulnerabilityExternalIssueLinkDestroyInput(
          [void Function(GVulnerabilityExternalIssueLinkDestroyInputBuilder)?
              updates]) =>
      (new GVulnerabilityExternalIssueLinkDestroyInputBuilder()
            ..update(updates))
          ._build();

  _$GVulnerabilityExternalIssueLinkDestroyInput._(
      {this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GVulnerabilityExternalIssueLinkDestroyInput', 'id');
  }

  @override
  GVulnerabilityExternalIssueLinkDestroyInput rebuild(
          void Function(GVulnerabilityExternalIssueLinkDestroyInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityExternalIssueLinkDestroyInputBuilder toBuilder() =>
      new GVulnerabilityExternalIssueLinkDestroyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityExternalIssueLinkDestroyInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GVulnerabilityExternalIssueLinkDestroyInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GVulnerabilityExternalIssueLinkDestroyInputBuilder
    implements
        Builder<GVulnerabilityExternalIssueLinkDestroyInput,
            GVulnerabilityExternalIssueLinkDestroyInputBuilder> {
  _$GVulnerabilityExternalIssueLinkDestroyInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GVulnerabilitiesExternalIssueLinkIDBuilder? _id;
  GVulnerabilitiesExternalIssueLinkIDBuilder get id =>
      _$this._id ??= new GVulnerabilitiesExternalIssueLinkIDBuilder();
  set id(GVulnerabilitiesExternalIssueLinkIDBuilder? id) => _$this._id = id;

  GVulnerabilityExternalIssueLinkDestroyInputBuilder();

  GVulnerabilityExternalIssueLinkDestroyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityExternalIssueLinkDestroyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityExternalIssueLinkDestroyInput;
  }

  @override
  void update(
      void Function(GVulnerabilityExternalIssueLinkDestroyInputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityExternalIssueLinkDestroyInput build() => _build();

  _$GVulnerabilityExternalIssueLinkDestroyInput _build() {
    _$GVulnerabilityExternalIssueLinkDestroyInput _$result;
    try {
      _$result = _$v ??
          new _$GVulnerabilityExternalIssueLinkDestroyInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVulnerabilityExternalIssueLinkDestroyInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityFindingDismissInput
    extends GVulnerabilityFindingDismissInput {
  @override
  final String? clientMutationId;
  @override
  final String? uuid;
  @override
  final String? comment;
  @override
  final GVulnerabilityDismissalReason? dismissalReason;

  factory _$GVulnerabilityFindingDismissInput(
          [void Function(GVulnerabilityFindingDismissInputBuilder)? updates]) =>
      (new GVulnerabilityFindingDismissInputBuilder()..update(updates))
          ._build();

  _$GVulnerabilityFindingDismissInput._(
      {this.clientMutationId, this.uuid, this.comment, this.dismissalReason})
      : super._();

  @override
  GVulnerabilityFindingDismissInput rebuild(
          void Function(GVulnerabilityFindingDismissInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityFindingDismissInputBuilder toBuilder() =>
      new GVulnerabilityFindingDismissInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityFindingDismissInput &&
        clientMutationId == other.clientMutationId &&
        uuid == other.uuid &&
        comment == other.comment &&
        dismissalReason == other.dismissalReason;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), uuid.hashCode),
            comment.hashCode),
        dismissalReason.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilityFindingDismissInput')
          ..add('clientMutationId', clientMutationId)
          ..add('uuid', uuid)
          ..add('comment', comment)
          ..add('dismissalReason', dismissalReason))
        .toString();
  }
}

class GVulnerabilityFindingDismissInputBuilder
    implements
        Builder<GVulnerabilityFindingDismissInput,
            GVulnerabilityFindingDismissInputBuilder> {
  _$GVulnerabilityFindingDismissInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  String? _uuid;
  String? get uuid => _$this._uuid;
  set uuid(String? uuid) => _$this._uuid = uuid;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  GVulnerabilityDismissalReason? _dismissalReason;
  GVulnerabilityDismissalReason? get dismissalReason => _$this._dismissalReason;
  set dismissalReason(GVulnerabilityDismissalReason? dismissalReason) =>
      _$this._dismissalReason = dismissalReason;

  GVulnerabilityFindingDismissInputBuilder();

  GVulnerabilityFindingDismissInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _uuid = $v.uuid;
      _comment = $v.comment;
      _dismissalReason = $v.dismissalReason;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityFindingDismissInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityFindingDismissInput;
  }

  @override
  void update(
      void Function(GVulnerabilityFindingDismissInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityFindingDismissInput build() => _build();

  _$GVulnerabilityFindingDismissInput _build() {
    final _$result = _$v ??
        new _$GVulnerabilityFindingDismissInput._(
            clientMutationId: clientMutationId,
            uuid: uuid,
            comment: comment,
            dismissalReason: dismissalReason);
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityID extends GVulnerabilityID {
  @override
  final String value;

  factory _$GVulnerabilityID(
          [void Function(GVulnerabilityIDBuilder)? updates]) =>
      (new GVulnerabilityIDBuilder()..update(updates))._build();

  _$GVulnerabilityID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GVulnerabilityID', 'value');
  }

  @override
  GVulnerabilityID rebuild(void Function(GVulnerabilityIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityIDBuilder toBuilder() =>
      new GVulnerabilityIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilityID')
          ..add('value', value))
        .toString();
  }
}

class GVulnerabilityIDBuilder
    implements Builder<GVulnerabilityID, GVulnerabilityIDBuilder> {
  _$GVulnerabilityID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GVulnerabilityIDBuilder();

  GVulnerabilityIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityID;
  }

  @override
  void update(void Function(GVulnerabilityIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityID build() => _build();

  _$GVulnerabilityID _build() {
    final _$result = _$v ??
        new _$GVulnerabilityID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GVulnerabilityID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityIdentifierInput extends GVulnerabilityIdentifierInput {
  @override
  final String name;
  @override
  final String url;
  @override
  final String? externalType;
  @override
  final String? externalId;

  factory _$GVulnerabilityIdentifierInput(
          [void Function(GVulnerabilityIdentifierInputBuilder)? updates]) =>
      (new GVulnerabilityIdentifierInputBuilder()..update(updates))._build();

  _$GVulnerabilityIdentifierInput._(
      {required this.name,
      required this.url,
      this.externalType,
      this.externalId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GVulnerabilityIdentifierInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        url, r'GVulnerabilityIdentifierInput', 'url');
  }

  @override
  GVulnerabilityIdentifierInput rebuild(
          void Function(GVulnerabilityIdentifierInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityIdentifierInputBuilder toBuilder() =>
      new GVulnerabilityIdentifierInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityIdentifierInput &&
        name == other.name &&
        url == other.url &&
        externalType == other.externalType &&
        externalId == other.externalId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, name.hashCode), url.hashCode), externalType.hashCode),
        externalId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilityIdentifierInput')
          ..add('name', name)
          ..add('url', url)
          ..add('externalType', externalType)
          ..add('externalId', externalId))
        .toString();
  }
}

class GVulnerabilityIdentifierInputBuilder
    implements
        Builder<GVulnerabilityIdentifierInput,
            GVulnerabilityIdentifierInputBuilder> {
  _$GVulnerabilityIdentifierInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  String? _externalType;
  String? get externalType => _$this._externalType;
  set externalType(String? externalType) => _$this._externalType = externalType;

  String? _externalId;
  String? get externalId => _$this._externalId;
  set externalId(String? externalId) => _$this._externalId = externalId;

  GVulnerabilityIdentifierInputBuilder();

  GVulnerabilityIdentifierInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _url = $v.url;
      _externalType = $v.externalType;
      _externalId = $v.externalId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityIdentifierInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityIdentifierInput;
  }

  @override
  void update(void Function(GVulnerabilityIdentifierInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityIdentifierInput build() => _build();

  _$GVulnerabilityIdentifierInput _build() {
    final _$result = _$v ??
        new _$GVulnerabilityIdentifierInput._(
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GVulnerabilityIdentifierInput', 'name'),
            url: BuiltValueNullFieldError.checkNotNull(
                url, r'GVulnerabilityIdentifierInput', 'url'),
            externalType: externalType,
            externalId: externalId);
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityResolveInput extends GVulnerabilityResolveInput {
  @override
  final String? clientMutationId;
  @override
  final GVulnerabilityID id;

  factory _$GVulnerabilityResolveInput(
          [void Function(GVulnerabilityResolveInputBuilder)? updates]) =>
      (new GVulnerabilityResolveInputBuilder()..update(updates))._build();

  _$GVulnerabilityResolveInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GVulnerabilityResolveInput', 'id');
  }

  @override
  GVulnerabilityResolveInput rebuild(
          void Function(GVulnerabilityResolveInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityResolveInputBuilder toBuilder() =>
      new GVulnerabilityResolveInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityResolveInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilityResolveInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GVulnerabilityResolveInputBuilder
    implements
        Builder<GVulnerabilityResolveInput, GVulnerabilityResolveInputBuilder> {
  _$GVulnerabilityResolveInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GVulnerabilityIDBuilder? _id;
  GVulnerabilityIDBuilder get id =>
      _$this._id ??= new GVulnerabilityIDBuilder();
  set id(GVulnerabilityIDBuilder? id) => _$this._id = id;

  GVulnerabilityResolveInputBuilder();

  GVulnerabilityResolveInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityResolveInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityResolveInput;
  }

  @override
  void update(void Function(GVulnerabilityResolveInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityResolveInput build() => _build();

  _$GVulnerabilityResolveInput _build() {
    _$GVulnerabilityResolveInput _$result;
    try {
      _$result = _$v ??
          new _$GVulnerabilityResolveInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVulnerabilityResolveInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityRevertToDetectedInput
    extends GVulnerabilityRevertToDetectedInput {
  @override
  final String? clientMutationId;
  @override
  final GVulnerabilityID id;

  factory _$GVulnerabilityRevertToDetectedInput(
          [void Function(GVulnerabilityRevertToDetectedInputBuilder)?
              updates]) =>
      (new GVulnerabilityRevertToDetectedInputBuilder()..update(updates))
          ._build();

  _$GVulnerabilityRevertToDetectedInput._(
      {this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GVulnerabilityRevertToDetectedInput', 'id');
  }

  @override
  GVulnerabilityRevertToDetectedInput rebuild(
          void Function(GVulnerabilityRevertToDetectedInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityRevertToDetectedInputBuilder toBuilder() =>
      new GVulnerabilityRevertToDetectedInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityRevertToDetectedInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilityRevertToDetectedInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GVulnerabilityRevertToDetectedInputBuilder
    implements
        Builder<GVulnerabilityRevertToDetectedInput,
            GVulnerabilityRevertToDetectedInputBuilder> {
  _$GVulnerabilityRevertToDetectedInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GVulnerabilityIDBuilder? _id;
  GVulnerabilityIDBuilder get id =>
      _$this._id ??= new GVulnerabilityIDBuilder();
  set id(GVulnerabilityIDBuilder? id) => _$this._id = id;

  GVulnerabilityRevertToDetectedInputBuilder();

  GVulnerabilityRevertToDetectedInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityRevertToDetectedInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityRevertToDetectedInput;
  }

  @override
  void update(
      void Function(GVulnerabilityRevertToDetectedInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityRevertToDetectedInput build() => _build();

  _$GVulnerabilityRevertToDetectedInput _build() {
    _$GVulnerabilityRevertToDetectedInput _$result;
    try {
      _$result = _$v ??
          new _$GVulnerabilityRevertToDetectedInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVulnerabilityRevertToDetectedInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityScannerInput extends GVulnerabilityScannerInput {
  @override
  final String id;
  @override
  final String name;
  @override
  final String url;
  @override
  final GVulnerabilityScannerVendorInput? vendor;
  @override
  final String version;

  factory _$GVulnerabilityScannerInput(
          [void Function(GVulnerabilityScannerInputBuilder)? updates]) =>
      (new GVulnerabilityScannerInputBuilder()..update(updates))._build();

  _$GVulnerabilityScannerInput._(
      {required this.id,
      required this.name,
      required this.url,
      this.vendor,
      required this.version})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GVulnerabilityScannerInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GVulnerabilityScannerInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        url, r'GVulnerabilityScannerInput', 'url');
    BuiltValueNullFieldError.checkNotNull(
        version, r'GVulnerabilityScannerInput', 'version');
  }

  @override
  GVulnerabilityScannerInput rebuild(
          void Function(GVulnerabilityScannerInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityScannerInputBuilder toBuilder() =>
      new GVulnerabilityScannerInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityScannerInput &&
        id == other.id &&
        name == other.name &&
        url == other.url &&
        vendor == other.vendor &&
        version == other.version;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc($jc(0, id.hashCode), name.hashCode), url.hashCode),
            vendor.hashCode),
        version.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilityScannerInput')
          ..add('id', id)
          ..add('name', name)
          ..add('url', url)
          ..add('vendor', vendor)
          ..add('version', version))
        .toString();
  }
}

class GVulnerabilityScannerInputBuilder
    implements
        Builder<GVulnerabilityScannerInput, GVulnerabilityScannerInputBuilder> {
  _$GVulnerabilityScannerInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GVulnerabilityScannerVendorInputBuilder? _vendor;
  GVulnerabilityScannerVendorInputBuilder get vendor =>
      _$this._vendor ??= new GVulnerabilityScannerVendorInputBuilder();
  set vendor(GVulnerabilityScannerVendorInputBuilder? vendor) =>
      _$this._vendor = vendor;

  String? _version;
  String? get version => _$this._version;
  set version(String? version) => _$this._version = version;

  GVulnerabilityScannerInputBuilder();

  GVulnerabilityScannerInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _name = $v.name;
      _url = $v.url;
      _vendor = $v.vendor?.toBuilder();
      _version = $v.version;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityScannerInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityScannerInput;
  }

  @override
  void update(void Function(GVulnerabilityScannerInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityScannerInput build() => _build();

  _$GVulnerabilityScannerInput _build() {
    _$GVulnerabilityScannerInput _$result;
    try {
      _$result = _$v ??
          new _$GVulnerabilityScannerInput._(
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GVulnerabilityScannerInput', 'id'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GVulnerabilityScannerInput', 'name'),
              url: BuiltValueNullFieldError.checkNotNull(
                  url, r'GVulnerabilityScannerInput', 'url'),
              vendor: _vendor?.build(),
              version: BuiltValueNullFieldError.checkNotNull(
                  version, r'GVulnerabilityScannerInput', 'version'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'vendor';
        _vendor?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVulnerabilityScannerInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVulnerabilityScannerVendorInput
    extends GVulnerabilityScannerVendorInput {
  @override
  final String name;

  factory _$GVulnerabilityScannerVendorInput(
          [void Function(GVulnerabilityScannerVendorInputBuilder)? updates]) =>
      (new GVulnerabilityScannerVendorInputBuilder()..update(updates))._build();

  _$GVulnerabilityScannerVendorInput._({required this.name}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GVulnerabilityScannerVendorInput', 'name');
  }

  @override
  GVulnerabilityScannerVendorInput rebuild(
          void Function(GVulnerabilityScannerVendorInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVulnerabilityScannerVendorInputBuilder toBuilder() =>
      new GVulnerabilityScannerVendorInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVulnerabilityScannerVendorInput && name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(0, name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVulnerabilityScannerVendorInput')
          ..add('name', name))
        .toString();
  }
}

class GVulnerabilityScannerVendorInputBuilder
    implements
        Builder<GVulnerabilityScannerVendorInput,
            GVulnerabilityScannerVendorInputBuilder> {
  _$GVulnerabilityScannerVendorInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GVulnerabilityScannerVendorInputBuilder();

  GVulnerabilityScannerVendorInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVulnerabilityScannerVendorInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVulnerabilityScannerVendorInput;
  }

  @override
  void update(void Function(GVulnerabilityScannerVendorInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVulnerabilityScannerVendorInput build() => _build();

  _$GVulnerabilityScannerVendorInput _build() {
    final _$result = _$v ??
        new _$GVulnerabilityScannerVendorInput._(
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GVulnerabilityScannerVendorInput', 'name'));
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemConvertTaskInput extends GWorkItemConvertTaskInput {
  @override
  final int lineNumberEnd;
  @override
  final int lineNumberStart;
  @override
  final int lockVersion;
  @override
  final String title;
  @override
  final GWorkItemsTypeID workItemTypeId;

  factory _$GWorkItemConvertTaskInput(
          [void Function(GWorkItemConvertTaskInputBuilder)? updates]) =>
      (new GWorkItemConvertTaskInputBuilder()..update(updates))._build();

  _$GWorkItemConvertTaskInput._(
      {required this.lineNumberEnd,
      required this.lineNumberStart,
      required this.lockVersion,
      required this.title,
      required this.workItemTypeId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        lineNumberEnd, r'GWorkItemConvertTaskInput', 'lineNumberEnd');
    BuiltValueNullFieldError.checkNotNull(
        lineNumberStart, r'GWorkItemConvertTaskInput', 'lineNumberStart');
    BuiltValueNullFieldError.checkNotNull(
        lockVersion, r'GWorkItemConvertTaskInput', 'lockVersion');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GWorkItemConvertTaskInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        workItemTypeId, r'GWorkItemConvertTaskInput', 'workItemTypeId');
  }

  @override
  GWorkItemConvertTaskInput rebuild(
          void Function(GWorkItemConvertTaskInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemConvertTaskInputBuilder toBuilder() =>
      new GWorkItemConvertTaskInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemConvertTaskInput &&
        lineNumberEnd == other.lineNumberEnd &&
        lineNumberStart == other.lineNumberStart &&
        lockVersion == other.lockVersion &&
        title == other.title &&
        workItemTypeId == other.workItemTypeId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, lineNumberEnd.hashCode), lineNumberStart.hashCode),
                lockVersion.hashCode),
            title.hashCode),
        workItemTypeId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemConvertTaskInput')
          ..add('lineNumberEnd', lineNumberEnd)
          ..add('lineNumberStart', lineNumberStart)
          ..add('lockVersion', lockVersion)
          ..add('title', title)
          ..add('workItemTypeId', workItemTypeId))
        .toString();
  }
}

class GWorkItemConvertTaskInputBuilder
    implements
        Builder<GWorkItemConvertTaskInput, GWorkItemConvertTaskInputBuilder> {
  _$GWorkItemConvertTaskInput? _$v;

  int? _lineNumberEnd;
  int? get lineNumberEnd => _$this._lineNumberEnd;
  set lineNumberEnd(int? lineNumberEnd) =>
      _$this._lineNumberEnd = lineNumberEnd;

  int? _lineNumberStart;
  int? get lineNumberStart => _$this._lineNumberStart;
  set lineNumberStart(int? lineNumberStart) =>
      _$this._lineNumberStart = lineNumberStart;

  int? _lockVersion;
  int? get lockVersion => _$this._lockVersion;
  set lockVersion(int? lockVersion) => _$this._lockVersion = lockVersion;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GWorkItemsTypeIDBuilder? _workItemTypeId;
  GWorkItemsTypeIDBuilder get workItemTypeId =>
      _$this._workItemTypeId ??= new GWorkItemsTypeIDBuilder();
  set workItemTypeId(GWorkItemsTypeIDBuilder? workItemTypeId) =>
      _$this._workItemTypeId = workItemTypeId;

  GWorkItemConvertTaskInputBuilder();

  GWorkItemConvertTaskInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _lineNumberEnd = $v.lineNumberEnd;
      _lineNumberStart = $v.lineNumberStart;
      _lockVersion = $v.lockVersion;
      _title = $v.title;
      _workItemTypeId = $v.workItemTypeId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemConvertTaskInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemConvertTaskInput;
  }

  @override
  void update(void Function(GWorkItemConvertTaskInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemConvertTaskInput build() => _build();

  _$GWorkItemConvertTaskInput _build() {
    _$GWorkItemConvertTaskInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemConvertTaskInput._(
              lineNumberEnd: BuiltValueNullFieldError.checkNotNull(
                  lineNumberEnd, r'GWorkItemConvertTaskInput', 'lineNumberEnd'),
              lineNumberStart: BuiltValueNullFieldError.checkNotNull(
                  lineNumberStart,
                  r'GWorkItemConvertTaskInput',
                  'lineNumberStart'),
              lockVersion: BuiltValueNullFieldError.checkNotNull(
                  lockVersion, r'GWorkItemConvertTaskInput', 'lockVersion'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GWorkItemConvertTaskInput', 'title'),
              workItemTypeId: workItemTypeId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'workItemTypeId';
        workItemTypeId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemConvertTaskInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemCreateFromTaskInput extends GWorkItemCreateFromTaskInput {
  @override
  final String? clientMutationId;
  @override
  final GWorkItemID id;
  @override
  final GWorkItemConvertTaskInput workItemData;

  factory _$GWorkItemCreateFromTaskInput(
          [void Function(GWorkItemCreateFromTaskInputBuilder)? updates]) =>
      (new GWorkItemCreateFromTaskInputBuilder()..update(updates))._build();

  _$GWorkItemCreateFromTaskInput._(
      {this.clientMutationId, required this.id, required this.workItemData})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GWorkItemCreateFromTaskInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        workItemData, r'GWorkItemCreateFromTaskInput', 'workItemData');
  }

  @override
  GWorkItemCreateFromTaskInput rebuild(
          void Function(GWorkItemCreateFromTaskInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemCreateFromTaskInputBuilder toBuilder() =>
      new GWorkItemCreateFromTaskInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemCreateFromTaskInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        workItemData == other.workItemData;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
        workItemData.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemCreateFromTaskInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('workItemData', workItemData))
        .toString();
  }
}

class GWorkItemCreateFromTaskInputBuilder
    implements
        Builder<GWorkItemCreateFromTaskInput,
            GWorkItemCreateFromTaskInputBuilder> {
  _$GWorkItemCreateFromTaskInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GWorkItemIDBuilder? _id;
  GWorkItemIDBuilder get id => _$this._id ??= new GWorkItemIDBuilder();
  set id(GWorkItemIDBuilder? id) => _$this._id = id;

  GWorkItemConvertTaskInputBuilder? _workItemData;
  GWorkItemConvertTaskInputBuilder get workItemData =>
      _$this._workItemData ??= new GWorkItemConvertTaskInputBuilder();
  set workItemData(GWorkItemConvertTaskInputBuilder? workItemData) =>
      _$this._workItemData = workItemData;

  GWorkItemCreateFromTaskInputBuilder();

  GWorkItemCreateFromTaskInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _workItemData = $v.workItemData.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemCreateFromTaskInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemCreateFromTaskInput;
  }

  @override
  void update(void Function(GWorkItemCreateFromTaskInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemCreateFromTaskInput build() => _build();

  _$GWorkItemCreateFromTaskInput _build() {
    _$GWorkItemCreateFromTaskInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemCreateFromTaskInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              workItemData: workItemData.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
        _$failedField = 'workItemData';
        workItemData.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemCreateFromTaskInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemCreateInput extends GWorkItemCreateInput {
  @override
  final String? clientMutationId;
  @override
  final bool? confidential;
  @override
  final String? description;
  @override
  final GWorkItemWidgetHierarchyCreateInput? hierarchyWidget;
  @override
  final String projectPath;
  @override
  final String title;
  @override
  final GWorkItemsTypeID workItemTypeId;

  factory _$GWorkItemCreateInput(
          [void Function(GWorkItemCreateInputBuilder)? updates]) =>
      (new GWorkItemCreateInputBuilder()..update(updates))._build();

  _$GWorkItemCreateInput._(
      {this.clientMutationId,
      this.confidential,
      this.description,
      this.hierarchyWidget,
      required this.projectPath,
      required this.title,
      required this.workItemTypeId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        projectPath, r'GWorkItemCreateInput', 'projectPath');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GWorkItemCreateInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        workItemTypeId, r'GWorkItemCreateInput', 'workItemTypeId');
  }

  @override
  GWorkItemCreateInput rebuild(
          void Function(GWorkItemCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemCreateInputBuilder toBuilder() =>
      new GWorkItemCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemCreateInput &&
        clientMutationId == other.clientMutationId &&
        confidential == other.confidential &&
        description == other.description &&
        hierarchyWidget == other.hierarchyWidget &&
        projectPath == other.projectPath &&
        title == other.title &&
        workItemTypeId == other.workItemTypeId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, clientMutationId.hashCode),
                            confidential.hashCode),
                        description.hashCode),
                    hierarchyWidget.hashCode),
                projectPath.hashCode),
            title.hashCode),
        workItemTypeId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemCreateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('confidential', confidential)
          ..add('description', description)
          ..add('hierarchyWidget', hierarchyWidget)
          ..add('projectPath', projectPath)
          ..add('title', title)
          ..add('workItemTypeId', workItemTypeId))
        .toString();
  }
}

class GWorkItemCreateInputBuilder
    implements Builder<GWorkItemCreateInput, GWorkItemCreateInputBuilder> {
  _$GWorkItemCreateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  bool? _confidential;
  bool? get confidential => _$this._confidential;
  set confidential(bool? confidential) => _$this._confidential = confidential;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GWorkItemWidgetHierarchyCreateInputBuilder? _hierarchyWidget;
  GWorkItemWidgetHierarchyCreateInputBuilder get hierarchyWidget =>
      _$this._hierarchyWidget ??=
          new GWorkItemWidgetHierarchyCreateInputBuilder();
  set hierarchyWidget(
          GWorkItemWidgetHierarchyCreateInputBuilder? hierarchyWidget) =>
      _$this._hierarchyWidget = hierarchyWidget;

  String? _projectPath;
  String? get projectPath => _$this._projectPath;
  set projectPath(String? projectPath) => _$this._projectPath = projectPath;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GWorkItemsTypeIDBuilder? _workItemTypeId;
  GWorkItemsTypeIDBuilder get workItemTypeId =>
      _$this._workItemTypeId ??= new GWorkItemsTypeIDBuilder();
  set workItemTypeId(GWorkItemsTypeIDBuilder? workItemTypeId) =>
      _$this._workItemTypeId = workItemTypeId;

  GWorkItemCreateInputBuilder();

  GWorkItemCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _confidential = $v.confidential;
      _description = $v.description;
      _hierarchyWidget = $v.hierarchyWidget?.toBuilder();
      _projectPath = $v.projectPath;
      _title = $v.title;
      _workItemTypeId = $v.workItemTypeId.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemCreateInput;
  }

  @override
  void update(void Function(GWorkItemCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemCreateInput build() => _build();

  _$GWorkItemCreateInput _build() {
    _$GWorkItemCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemCreateInput._(
              clientMutationId: clientMutationId,
              confidential: confidential,
              description: description,
              hierarchyWidget: _hierarchyWidget?.build(),
              projectPath: BuiltValueNullFieldError.checkNotNull(
                  projectPath, r'GWorkItemCreateInput', 'projectPath'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GWorkItemCreateInput', 'title'),
              workItemTypeId: workItemTypeId.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'hierarchyWidget';
        _hierarchyWidget?.build();

        _$failedField = 'workItemTypeId';
        workItemTypeId.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemDeletedTaskInput extends GWorkItemDeletedTaskInput {
  @override
  final GWorkItemID id;
  @override
  final int lineNumberEnd;
  @override
  final int lineNumberStart;

  factory _$GWorkItemDeletedTaskInput(
          [void Function(GWorkItemDeletedTaskInputBuilder)? updates]) =>
      (new GWorkItemDeletedTaskInputBuilder()..update(updates))._build();

  _$GWorkItemDeletedTaskInput._(
      {required this.id,
      required this.lineNumberEnd,
      required this.lineNumberStart})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GWorkItemDeletedTaskInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        lineNumberEnd, r'GWorkItemDeletedTaskInput', 'lineNumberEnd');
    BuiltValueNullFieldError.checkNotNull(
        lineNumberStart, r'GWorkItemDeletedTaskInput', 'lineNumberStart');
  }

  @override
  GWorkItemDeletedTaskInput rebuild(
          void Function(GWorkItemDeletedTaskInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemDeletedTaskInputBuilder toBuilder() =>
      new GWorkItemDeletedTaskInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemDeletedTaskInput &&
        id == other.id &&
        lineNumberEnd == other.lineNumberEnd &&
        lineNumberStart == other.lineNumberStart;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, id.hashCode), lineNumberEnd.hashCode),
        lineNumberStart.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemDeletedTaskInput')
          ..add('id', id)
          ..add('lineNumberEnd', lineNumberEnd)
          ..add('lineNumberStart', lineNumberStart))
        .toString();
  }
}

class GWorkItemDeletedTaskInputBuilder
    implements
        Builder<GWorkItemDeletedTaskInput, GWorkItemDeletedTaskInputBuilder> {
  _$GWorkItemDeletedTaskInput? _$v;

  GWorkItemIDBuilder? _id;
  GWorkItemIDBuilder get id => _$this._id ??= new GWorkItemIDBuilder();
  set id(GWorkItemIDBuilder? id) => _$this._id = id;

  int? _lineNumberEnd;
  int? get lineNumberEnd => _$this._lineNumberEnd;
  set lineNumberEnd(int? lineNumberEnd) =>
      _$this._lineNumberEnd = lineNumberEnd;

  int? _lineNumberStart;
  int? get lineNumberStart => _$this._lineNumberStart;
  set lineNumberStart(int? lineNumberStart) =>
      _$this._lineNumberStart = lineNumberStart;

  GWorkItemDeletedTaskInputBuilder();

  GWorkItemDeletedTaskInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _lineNumberEnd = $v.lineNumberEnd;
      _lineNumberStart = $v.lineNumberStart;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemDeletedTaskInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemDeletedTaskInput;
  }

  @override
  void update(void Function(GWorkItemDeletedTaskInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemDeletedTaskInput build() => _build();

  _$GWorkItemDeletedTaskInput _build() {
    _$GWorkItemDeletedTaskInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemDeletedTaskInput._(
              id: id.build(),
              lineNumberEnd: BuiltValueNullFieldError.checkNotNull(
                  lineNumberEnd, r'GWorkItemDeletedTaskInput', 'lineNumberEnd'),
              lineNumberStart: BuiltValueNullFieldError.checkNotNull(
                  lineNumberStart,
                  r'GWorkItemDeletedTaskInput',
                  'lineNumberStart'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemDeletedTaskInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemDeleteInput extends GWorkItemDeleteInput {
  @override
  final String? clientMutationId;
  @override
  final GWorkItemID id;

  factory _$GWorkItemDeleteInput(
          [void Function(GWorkItemDeleteInputBuilder)? updates]) =>
      (new GWorkItemDeleteInputBuilder()..update(updates))._build();

  _$GWorkItemDeleteInput._({this.clientMutationId, required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GWorkItemDeleteInput', 'id');
  }

  @override
  GWorkItemDeleteInput rebuild(
          void Function(GWorkItemDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemDeleteInputBuilder toBuilder() =>
      new GWorkItemDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemDeleteInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, clientMutationId.hashCode), id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemDeleteInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id))
        .toString();
  }
}

class GWorkItemDeleteInputBuilder
    implements Builder<GWorkItemDeleteInput, GWorkItemDeleteInputBuilder> {
  _$GWorkItemDeleteInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GWorkItemIDBuilder? _id;
  GWorkItemIDBuilder get id => _$this._id ??= new GWorkItemIDBuilder();
  set id(GWorkItemIDBuilder? id) => _$this._id = id;

  GWorkItemDeleteInputBuilder();

  GWorkItemDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemDeleteInput;
  }

  @override
  void update(void Function(GWorkItemDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemDeleteInput build() => _build();

  _$GWorkItemDeleteInput _build() {
    _$GWorkItemDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemDeleteInput._(
              clientMutationId: clientMutationId, id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemDeleteTaskInput extends GWorkItemDeleteTaskInput {
  @override
  final String? clientMutationId;
  @override
  final GWorkItemID id;
  @override
  final int lockVersion;
  @override
  final GWorkItemDeletedTaskInput taskData;

  factory _$GWorkItemDeleteTaskInput(
          [void Function(GWorkItemDeleteTaskInputBuilder)? updates]) =>
      (new GWorkItemDeleteTaskInputBuilder()..update(updates))._build();

  _$GWorkItemDeleteTaskInput._(
      {this.clientMutationId,
      required this.id,
      required this.lockVersion,
      required this.taskData})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GWorkItemDeleteTaskInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        lockVersion, r'GWorkItemDeleteTaskInput', 'lockVersion');
    BuiltValueNullFieldError.checkNotNull(
        taskData, r'GWorkItemDeleteTaskInput', 'taskData');
  }

  @override
  GWorkItemDeleteTaskInput rebuild(
          void Function(GWorkItemDeleteTaskInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemDeleteTaskInputBuilder toBuilder() =>
      new GWorkItemDeleteTaskInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemDeleteTaskInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        lockVersion == other.lockVersion &&
        taskData == other.taskData;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
            lockVersion.hashCode),
        taskData.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemDeleteTaskInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('lockVersion', lockVersion)
          ..add('taskData', taskData))
        .toString();
  }
}

class GWorkItemDeleteTaskInputBuilder
    implements
        Builder<GWorkItemDeleteTaskInput, GWorkItemDeleteTaskInputBuilder> {
  _$GWorkItemDeleteTaskInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GWorkItemIDBuilder? _id;
  GWorkItemIDBuilder get id => _$this._id ??= new GWorkItemIDBuilder();
  set id(GWorkItemIDBuilder? id) => _$this._id = id;

  int? _lockVersion;
  int? get lockVersion => _$this._lockVersion;
  set lockVersion(int? lockVersion) => _$this._lockVersion = lockVersion;

  GWorkItemDeletedTaskInputBuilder? _taskData;
  GWorkItemDeletedTaskInputBuilder get taskData =>
      _$this._taskData ??= new GWorkItemDeletedTaskInputBuilder();
  set taskData(GWorkItemDeletedTaskInputBuilder? taskData) =>
      _$this._taskData = taskData;

  GWorkItemDeleteTaskInputBuilder();

  GWorkItemDeleteTaskInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _lockVersion = $v.lockVersion;
      _taskData = $v.taskData.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemDeleteTaskInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemDeleteTaskInput;
  }

  @override
  void update(void Function(GWorkItemDeleteTaskInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemDeleteTaskInput build() => _build();

  _$GWorkItemDeleteTaskInput _build() {
    _$GWorkItemDeleteTaskInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemDeleteTaskInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              lockVersion: BuiltValueNullFieldError.checkNotNull(
                  lockVersion, r'GWorkItemDeleteTaskInput', 'lockVersion'),
              taskData: taskData.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'taskData';
        taskData.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemDeleteTaskInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemID extends GWorkItemID {
  @override
  final String value;

  factory _$GWorkItemID([void Function(GWorkItemIDBuilder)? updates]) =>
      (new GWorkItemIDBuilder()..update(updates))._build();

  _$GWorkItemID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GWorkItemID', 'value');
  }

  @override
  GWorkItemID rebuild(void Function(GWorkItemIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemIDBuilder toBuilder() => new GWorkItemIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemID')..add('value', value))
        .toString();
  }
}

class GWorkItemIDBuilder implements Builder<GWorkItemID, GWorkItemIDBuilder> {
  _$GWorkItemID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GWorkItemIDBuilder();

  GWorkItemIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemID;
  }

  @override
  void update(void Function(GWorkItemIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemID build() => _build();

  _$GWorkItemID _build() {
    final _$result = _$v ??
        new _$GWorkItemID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GWorkItemID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemsTypeID extends GWorkItemsTypeID {
  @override
  final String value;

  factory _$GWorkItemsTypeID(
          [void Function(GWorkItemsTypeIDBuilder)? updates]) =>
      (new GWorkItemsTypeIDBuilder()..update(updates))._build();

  _$GWorkItemsTypeID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GWorkItemsTypeID', 'value');
  }

  @override
  GWorkItemsTypeID rebuild(void Function(GWorkItemsTypeIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemsTypeIDBuilder toBuilder() =>
      new GWorkItemsTypeIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemsTypeID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemsTypeID')
          ..add('value', value))
        .toString();
  }
}

class GWorkItemsTypeIDBuilder
    implements Builder<GWorkItemsTypeID, GWorkItemsTypeIDBuilder> {
  _$GWorkItemsTypeID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GWorkItemsTypeIDBuilder();

  GWorkItemsTypeIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemsTypeID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemsTypeID;
  }

  @override
  void update(void Function(GWorkItemsTypeIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemsTypeID build() => _build();

  _$GWorkItemsTypeID _build() {
    final _$result = _$v ??
        new _$GWorkItemsTypeID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GWorkItemsTypeID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemUpdatedTaskInput extends GWorkItemUpdatedTaskInput {
  @override
  final GWorkItemID id;
  @override
  final GWorkItemStateEvent? stateEvent;
  @override
  final String? title;
  @override
  final bool? confidential;
  @override
  final GWorkItemWidgetDescriptionInput? descriptionWidget;
  @override
  final GWorkItemWidgetAssigneesInput? assigneesWidget;
  @override
  final GWorkItemWidgetHierarchyUpdateInput? hierarchyWidget;
  @override
  final GWorkItemWidgetStartAndDueDateUpdateInput? startAndDueDateWidget;

  factory _$GWorkItemUpdatedTaskInput(
          [void Function(GWorkItemUpdatedTaskInputBuilder)? updates]) =>
      (new GWorkItemUpdatedTaskInputBuilder()..update(updates))._build();

  _$GWorkItemUpdatedTaskInput._(
      {required this.id,
      this.stateEvent,
      this.title,
      this.confidential,
      this.descriptionWidget,
      this.assigneesWidget,
      this.hierarchyWidget,
      this.startAndDueDateWidget})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GWorkItemUpdatedTaskInput', 'id');
  }

  @override
  GWorkItemUpdatedTaskInput rebuild(
          void Function(GWorkItemUpdatedTaskInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemUpdatedTaskInputBuilder toBuilder() =>
      new GWorkItemUpdatedTaskInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemUpdatedTaskInput &&
        id == other.id &&
        stateEvent == other.stateEvent &&
        title == other.title &&
        confidential == other.confidential &&
        descriptionWidget == other.descriptionWidget &&
        assigneesWidget == other.assigneesWidget &&
        hierarchyWidget == other.hierarchyWidget &&
        startAndDueDateWidget == other.startAndDueDateWidget;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, id.hashCode), stateEvent.hashCode),
                            title.hashCode),
                        confidential.hashCode),
                    descriptionWidget.hashCode),
                assigneesWidget.hashCode),
            hierarchyWidget.hashCode),
        startAndDueDateWidget.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemUpdatedTaskInput')
          ..add('id', id)
          ..add('stateEvent', stateEvent)
          ..add('title', title)
          ..add('confidential', confidential)
          ..add('descriptionWidget', descriptionWidget)
          ..add('assigneesWidget', assigneesWidget)
          ..add('hierarchyWidget', hierarchyWidget)
          ..add('startAndDueDateWidget', startAndDueDateWidget))
        .toString();
  }
}

class GWorkItemUpdatedTaskInputBuilder
    implements
        Builder<GWorkItemUpdatedTaskInput, GWorkItemUpdatedTaskInputBuilder> {
  _$GWorkItemUpdatedTaskInput? _$v;

  GWorkItemIDBuilder? _id;
  GWorkItemIDBuilder get id => _$this._id ??= new GWorkItemIDBuilder();
  set id(GWorkItemIDBuilder? id) => _$this._id = id;

  GWorkItemStateEvent? _stateEvent;
  GWorkItemStateEvent? get stateEvent => _$this._stateEvent;
  set stateEvent(GWorkItemStateEvent? stateEvent) =>
      _$this._stateEvent = stateEvent;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  bool? _confidential;
  bool? get confidential => _$this._confidential;
  set confidential(bool? confidential) => _$this._confidential = confidential;

  GWorkItemWidgetDescriptionInputBuilder? _descriptionWidget;
  GWorkItemWidgetDescriptionInputBuilder get descriptionWidget =>
      _$this._descriptionWidget ??=
          new GWorkItemWidgetDescriptionInputBuilder();
  set descriptionWidget(
          GWorkItemWidgetDescriptionInputBuilder? descriptionWidget) =>
      _$this._descriptionWidget = descriptionWidget;

  GWorkItemWidgetAssigneesInputBuilder? _assigneesWidget;
  GWorkItemWidgetAssigneesInputBuilder get assigneesWidget =>
      _$this._assigneesWidget ??= new GWorkItemWidgetAssigneesInputBuilder();
  set assigneesWidget(GWorkItemWidgetAssigneesInputBuilder? assigneesWidget) =>
      _$this._assigneesWidget = assigneesWidget;

  GWorkItemWidgetHierarchyUpdateInputBuilder? _hierarchyWidget;
  GWorkItemWidgetHierarchyUpdateInputBuilder get hierarchyWidget =>
      _$this._hierarchyWidget ??=
          new GWorkItemWidgetHierarchyUpdateInputBuilder();
  set hierarchyWidget(
          GWorkItemWidgetHierarchyUpdateInputBuilder? hierarchyWidget) =>
      _$this._hierarchyWidget = hierarchyWidget;

  GWorkItemWidgetStartAndDueDateUpdateInputBuilder? _startAndDueDateWidget;
  GWorkItemWidgetStartAndDueDateUpdateInputBuilder get startAndDueDateWidget =>
      _$this._startAndDueDateWidget ??=
          new GWorkItemWidgetStartAndDueDateUpdateInputBuilder();
  set startAndDueDateWidget(
          GWorkItemWidgetStartAndDueDateUpdateInputBuilder?
              startAndDueDateWidget) =>
      _$this._startAndDueDateWidget = startAndDueDateWidget;

  GWorkItemUpdatedTaskInputBuilder();

  GWorkItemUpdatedTaskInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _stateEvent = $v.stateEvent;
      _title = $v.title;
      _confidential = $v.confidential;
      _descriptionWidget = $v.descriptionWidget?.toBuilder();
      _assigneesWidget = $v.assigneesWidget?.toBuilder();
      _hierarchyWidget = $v.hierarchyWidget?.toBuilder();
      _startAndDueDateWidget = $v.startAndDueDateWidget?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemUpdatedTaskInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemUpdatedTaskInput;
  }

  @override
  void update(void Function(GWorkItemUpdatedTaskInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemUpdatedTaskInput build() => _build();

  _$GWorkItemUpdatedTaskInput _build() {
    _$GWorkItemUpdatedTaskInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemUpdatedTaskInput._(
              id: id.build(),
              stateEvent: stateEvent,
              title: title,
              confidential: confidential,
              descriptionWidget: _descriptionWidget?.build(),
              assigneesWidget: _assigneesWidget?.build(),
              hierarchyWidget: _hierarchyWidget?.build(),
              startAndDueDateWidget: _startAndDueDateWidget?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'descriptionWidget';
        _descriptionWidget?.build();
        _$failedField = 'assigneesWidget';
        _assigneesWidget?.build();
        _$failedField = 'hierarchyWidget';
        _hierarchyWidget?.build();
        _$failedField = 'startAndDueDateWidget';
        _startAndDueDateWidget?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemUpdatedTaskInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemUpdateInput extends GWorkItemUpdateInput {
  @override
  final String? clientMutationId;
  @override
  final GWorkItemID id;
  @override
  final GWorkItemStateEvent? stateEvent;
  @override
  final String? title;
  @override
  final bool? confidential;
  @override
  final GWorkItemWidgetDescriptionInput? descriptionWidget;
  @override
  final GWorkItemWidgetAssigneesInput? assigneesWidget;
  @override
  final GWorkItemWidgetHierarchyUpdateInput? hierarchyWidget;
  @override
  final GWorkItemWidgetStartAndDueDateUpdateInput? startAndDueDateWidget;
  @override
  final GWorkItemWidgetIterationInput? iterationWidget;
  @override
  final GWorkItemWidgetWeightInput? weightWidget;

  factory _$GWorkItemUpdateInput(
          [void Function(GWorkItemUpdateInputBuilder)? updates]) =>
      (new GWorkItemUpdateInputBuilder()..update(updates))._build();

  _$GWorkItemUpdateInput._(
      {this.clientMutationId,
      required this.id,
      this.stateEvent,
      this.title,
      this.confidential,
      this.descriptionWidget,
      this.assigneesWidget,
      this.hierarchyWidget,
      this.startAndDueDateWidget,
      this.iterationWidget,
      this.weightWidget})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GWorkItemUpdateInput', 'id');
  }

  @override
  GWorkItemUpdateInput rebuild(
          void Function(GWorkItemUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemUpdateInputBuilder toBuilder() =>
      new GWorkItemUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemUpdateInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        stateEvent == other.stateEvent &&
        title == other.title &&
        confidential == other.confidential &&
        descriptionWidget == other.descriptionWidget &&
        assigneesWidget == other.assigneesWidget &&
        hierarchyWidget == other.hierarchyWidget &&
        startAndDueDateWidget == other.startAndDueDateWidget &&
        iterationWidget == other.iterationWidget &&
        weightWidget == other.weightWidget;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, clientMutationId.hashCode),
                                            id.hashCode),
                                        stateEvent.hashCode),
                                    title.hashCode),
                                confidential.hashCode),
                            descriptionWidget.hashCode),
                        assigneesWidget.hashCode),
                    hierarchyWidget.hashCode),
                startAndDueDateWidget.hashCode),
            iterationWidget.hashCode),
        weightWidget.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemUpdateInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('stateEvent', stateEvent)
          ..add('title', title)
          ..add('confidential', confidential)
          ..add('descriptionWidget', descriptionWidget)
          ..add('assigneesWidget', assigneesWidget)
          ..add('hierarchyWidget', hierarchyWidget)
          ..add('startAndDueDateWidget', startAndDueDateWidget)
          ..add('iterationWidget', iterationWidget)
          ..add('weightWidget', weightWidget))
        .toString();
  }
}

class GWorkItemUpdateInputBuilder
    implements Builder<GWorkItemUpdateInput, GWorkItemUpdateInputBuilder> {
  _$GWorkItemUpdateInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GWorkItemIDBuilder? _id;
  GWorkItemIDBuilder get id => _$this._id ??= new GWorkItemIDBuilder();
  set id(GWorkItemIDBuilder? id) => _$this._id = id;

  GWorkItemStateEvent? _stateEvent;
  GWorkItemStateEvent? get stateEvent => _$this._stateEvent;
  set stateEvent(GWorkItemStateEvent? stateEvent) =>
      _$this._stateEvent = stateEvent;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  bool? _confidential;
  bool? get confidential => _$this._confidential;
  set confidential(bool? confidential) => _$this._confidential = confidential;

  GWorkItemWidgetDescriptionInputBuilder? _descriptionWidget;
  GWorkItemWidgetDescriptionInputBuilder get descriptionWidget =>
      _$this._descriptionWidget ??=
          new GWorkItemWidgetDescriptionInputBuilder();
  set descriptionWidget(
          GWorkItemWidgetDescriptionInputBuilder? descriptionWidget) =>
      _$this._descriptionWidget = descriptionWidget;

  GWorkItemWidgetAssigneesInputBuilder? _assigneesWidget;
  GWorkItemWidgetAssigneesInputBuilder get assigneesWidget =>
      _$this._assigneesWidget ??= new GWorkItemWidgetAssigneesInputBuilder();
  set assigneesWidget(GWorkItemWidgetAssigneesInputBuilder? assigneesWidget) =>
      _$this._assigneesWidget = assigneesWidget;

  GWorkItemWidgetHierarchyUpdateInputBuilder? _hierarchyWidget;
  GWorkItemWidgetHierarchyUpdateInputBuilder get hierarchyWidget =>
      _$this._hierarchyWidget ??=
          new GWorkItemWidgetHierarchyUpdateInputBuilder();
  set hierarchyWidget(
          GWorkItemWidgetHierarchyUpdateInputBuilder? hierarchyWidget) =>
      _$this._hierarchyWidget = hierarchyWidget;

  GWorkItemWidgetStartAndDueDateUpdateInputBuilder? _startAndDueDateWidget;
  GWorkItemWidgetStartAndDueDateUpdateInputBuilder get startAndDueDateWidget =>
      _$this._startAndDueDateWidget ??=
          new GWorkItemWidgetStartAndDueDateUpdateInputBuilder();
  set startAndDueDateWidget(
          GWorkItemWidgetStartAndDueDateUpdateInputBuilder?
              startAndDueDateWidget) =>
      _$this._startAndDueDateWidget = startAndDueDateWidget;

  GWorkItemWidgetIterationInputBuilder? _iterationWidget;
  GWorkItemWidgetIterationInputBuilder get iterationWidget =>
      _$this._iterationWidget ??= new GWorkItemWidgetIterationInputBuilder();
  set iterationWidget(GWorkItemWidgetIterationInputBuilder? iterationWidget) =>
      _$this._iterationWidget = iterationWidget;

  GWorkItemWidgetWeightInputBuilder? _weightWidget;
  GWorkItemWidgetWeightInputBuilder get weightWidget =>
      _$this._weightWidget ??= new GWorkItemWidgetWeightInputBuilder();
  set weightWidget(GWorkItemWidgetWeightInputBuilder? weightWidget) =>
      _$this._weightWidget = weightWidget;

  GWorkItemUpdateInputBuilder();

  GWorkItemUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _stateEvent = $v.stateEvent;
      _title = $v.title;
      _confidential = $v.confidential;
      _descriptionWidget = $v.descriptionWidget?.toBuilder();
      _assigneesWidget = $v.assigneesWidget?.toBuilder();
      _hierarchyWidget = $v.hierarchyWidget?.toBuilder();
      _startAndDueDateWidget = $v.startAndDueDateWidget?.toBuilder();
      _iterationWidget = $v.iterationWidget?.toBuilder();
      _weightWidget = $v.weightWidget?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemUpdateInput;
  }

  @override
  void update(void Function(GWorkItemUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemUpdateInput build() => _build();

  _$GWorkItemUpdateInput _build() {
    _$GWorkItemUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemUpdateInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              stateEvent: stateEvent,
              title: title,
              confidential: confidential,
              descriptionWidget: _descriptionWidget?.build(),
              assigneesWidget: _assigneesWidget?.build(),
              hierarchyWidget: _hierarchyWidget?.build(),
              startAndDueDateWidget: _startAndDueDateWidget?.build(),
              iterationWidget: _iterationWidget?.build(),
              weightWidget: _weightWidget?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();

        _$failedField = 'descriptionWidget';
        _descriptionWidget?.build();
        _$failedField = 'assigneesWidget';
        _assigneesWidget?.build();
        _$failedField = 'hierarchyWidget';
        _hierarchyWidget?.build();
        _$failedField = 'startAndDueDateWidget';
        _startAndDueDateWidget?.build();
        _$failedField = 'iterationWidget';
        _iterationWidget?.build();
        _$failedField = 'weightWidget';
        _weightWidget?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemUpdateTaskInput extends GWorkItemUpdateTaskInput {
  @override
  final String? clientMutationId;
  @override
  final GWorkItemID id;
  @override
  final GWorkItemUpdatedTaskInput taskData;

  factory _$GWorkItemUpdateTaskInput(
          [void Function(GWorkItemUpdateTaskInputBuilder)? updates]) =>
      (new GWorkItemUpdateTaskInputBuilder()..update(updates))._build();

  _$GWorkItemUpdateTaskInput._(
      {this.clientMutationId, required this.id, required this.taskData})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GWorkItemUpdateTaskInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        taskData, r'GWorkItemUpdateTaskInput', 'taskData');
  }

  @override
  GWorkItemUpdateTaskInput rebuild(
          void Function(GWorkItemUpdateTaskInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemUpdateTaskInputBuilder toBuilder() =>
      new GWorkItemUpdateTaskInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemUpdateTaskInput &&
        clientMutationId == other.clientMutationId &&
        id == other.id &&
        taskData == other.taskData;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, clientMutationId.hashCode), id.hashCode),
        taskData.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemUpdateTaskInput')
          ..add('clientMutationId', clientMutationId)
          ..add('id', id)
          ..add('taskData', taskData))
        .toString();
  }
}

class GWorkItemUpdateTaskInputBuilder
    implements
        Builder<GWorkItemUpdateTaskInput, GWorkItemUpdateTaskInputBuilder> {
  _$GWorkItemUpdateTaskInput? _$v;

  String? _clientMutationId;
  String? get clientMutationId => _$this._clientMutationId;
  set clientMutationId(String? clientMutationId) =>
      _$this._clientMutationId = clientMutationId;

  GWorkItemIDBuilder? _id;
  GWorkItemIDBuilder get id => _$this._id ??= new GWorkItemIDBuilder();
  set id(GWorkItemIDBuilder? id) => _$this._id = id;

  GWorkItemUpdatedTaskInputBuilder? _taskData;
  GWorkItemUpdatedTaskInputBuilder get taskData =>
      _$this._taskData ??= new GWorkItemUpdatedTaskInputBuilder();
  set taskData(GWorkItemUpdatedTaskInputBuilder? taskData) =>
      _$this._taskData = taskData;

  GWorkItemUpdateTaskInputBuilder();

  GWorkItemUpdateTaskInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clientMutationId = $v.clientMutationId;
      _id = $v.id.toBuilder();
      _taskData = $v.taskData.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemUpdateTaskInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemUpdateTaskInput;
  }

  @override
  void update(void Function(GWorkItemUpdateTaskInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemUpdateTaskInput build() => _build();

  _$GWorkItemUpdateTaskInput _build() {
    _$GWorkItemUpdateTaskInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemUpdateTaskInput._(
              clientMutationId: clientMutationId,
              id: id.build(),
              taskData: taskData.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
        _$failedField = 'taskData';
        taskData.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemUpdateTaskInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemWidgetAssigneesInput extends GWorkItemWidgetAssigneesInput {
  @override
  final BuiltList<GUserID> assigneeIds;

  factory _$GWorkItemWidgetAssigneesInput(
          [void Function(GWorkItemWidgetAssigneesInputBuilder)? updates]) =>
      (new GWorkItemWidgetAssigneesInputBuilder()..update(updates))._build();

  _$GWorkItemWidgetAssigneesInput._({required this.assigneeIds}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        assigneeIds, r'GWorkItemWidgetAssigneesInput', 'assigneeIds');
  }

  @override
  GWorkItemWidgetAssigneesInput rebuild(
          void Function(GWorkItemWidgetAssigneesInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemWidgetAssigneesInputBuilder toBuilder() =>
      new GWorkItemWidgetAssigneesInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemWidgetAssigneesInput &&
        assigneeIds == other.assigneeIds;
  }

  @override
  int get hashCode {
    return $jf($jc(0, assigneeIds.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemWidgetAssigneesInput')
          ..add('assigneeIds', assigneeIds))
        .toString();
  }
}

class GWorkItemWidgetAssigneesInputBuilder
    implements
        Builder<GWorkItemWidgetAssigneesInput,
            GWorkItemWidgetAssigneesInputBuilder> {
  _$GWorkItemWidgetAssigneesInput? _$v;

  ListBuilder<GUserID>? _assigneeIds;
  ListBuilder<GUserID> get assigneeIds =>
      _$this._assigneeIds ??= new ListBuilder<GUserID>();
  set assigneeIds(ListBuilder<GUserID>? assigneeIds) =>
      _$this._assigneeIds = assigneeIds;

  GWorkItemWidgetAssigneesInputBuilder();

  GWorkItemWidgetAssigneesInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _assigneeIds = $v.assigneeIds.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemWidgetAssigneesInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemWidgetAssigneesInput;
  }

  @override
  void update(void Function(GWorkItemWidgetAssigneesInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemWidgetAssigneesInput build() => _build();

  _$GWorkItemWidgetAssigneesInput _build() {
    _$GWorkItemWidgetAssigneesInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemWidgetAssigneesInput._(
              assigneeIds: assigneeIds.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'assigneeIds';
        assigneeIds.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemWidgetAssigneesInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemWidgetDescriptionInput
    extends GWorkItemWidgetDescriptionInput {
  @override
  final String description;

  factory _$GWorkItemWidgetDescriptionInput(
          [void Function(GWorkItemWidgetDescriptionInputBuilder)? updates]) =>
      (new GWorkItemWidgetDescriptionInputBuilder()..update(updates))._build();

  _$GWorkItemWidgetDescriptionInput._({required this.description}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        description, r'GWorkItemWidgetDescriptionInput', 'description');
  }

  @override
  GWorkItemWidgetDescriptionInput rebuild(
          void Function(GWorkItemWidgetDescriptionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemWidgetDescriptionInputBuilder toBuilder() =>
      new GWorkItemWidgetDescriptionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemWidgetDescriptionInput &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc(0, description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemWidgetDescriptionInput')
          ..add('description', description))
        .toString();
  }
}

class GWorkItemWidgetDescriptionInputBuilder
    implements
        Builder<GWorkItemWidgetDescriptionInput,
            GWorkItemWidgetDescriptionInputBuilder> {
  _$GWorkItemWidgetDescriptionInput? _$v;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GWorkItemWidgetDescriptionInputBuilder();

  GWorkItemWidgetDescriptionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _description = $v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemWidgetDescriptionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemWidgetDescriptionInput;
  }

  @override
  void update(void Function(GWorkItemWidgetDescriptionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemWidgetDescriptionInput build() => _build();

  _$GWorkItemWidgetDescriptionInput _build() {
    final _$result = _$v ??
        new _$GWorkItemWidgetDescriptionInput._(
            description: BuiltValueNullFieldError.checkNotNull(description,
                r'GWorkItemWidgetDescriptionInput', 'description'));
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemWidgetHierarchyCreateInput
    extends GWorkItemWidgetHierarchyCreateInput {
  @override
  final GWorkItemID? parentId;

  factory _$GWorkItemWidgetHierarchyCreateInput(
          [void Function(GWorkItemWidgetHierarchyCreateInputBuilder)?
              updates]) =>
      (new GWorkItemWidgetHierarchyCreateInputBuilder()..update(updates))
          ._build();

  _$GWorkItemWidgetHierarchyCreateInput._({this.parentId}) : super._();

  @override
  GWorkItemWidgetHierarchyCreateInput rebuild(
          void Function(GWorkItemWidgetHierarchyCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemWidgetHierarchyCreateInputBuilder toBuilder() =>
      new GWorkItemWidgetHierarchyCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemWidgetHierarchyCreateInput &&
        parentId == other.parentId;
  }

  @override
  int get hashCode {
    return $jf($jc(0, parentId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemWidgetHierarchyCreateInput')
          ..add('parentId', parentId))
        .toString();
  }
}

class GWorkItemWidgetHierarchyCreateInputBuilder
    implements
        Builder<GWorkItemWidgetHierarchyCreateInput,
            GWorkItemWidgetHierarchyCreateInputBuilder> {
  _$GWorkItemWidgetHierarchyCreateInput? _$v;

  GWorkItemIDBuilder? _parentId;
  GWorkItemIDBuilder get parentId =>
      _$this._parentId ??= new GWorkItemIDBuilder();
  set parentId(GWorkItemIDBuilder? parentId) => _$this._parentId = parentId;

  GWorkItemWidgetHierarchyCreateInputBuilder();

  GWorkItemWidgetHierarchyCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _parentId = $v.parentId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemWidgetHierarchyCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemWidgetHierarchyCreateInput;
  }

  @override
  void update(
      void Function(GWorkItemWidgetHierarchyCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemWidgetHierarchyCreateInput build() => _build();

  _$GWorkItemWidgetHierarchyCreateInput _build() {
    _$GWorkItemWidgetHierarchyCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemWidgetHierarchyCreateInput._(
              parentId: _parentId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'parentId';
        _parentId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemWidgetHierarchyCreateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemWidgetHierarchyUpdateInput
    extends GWorkItemWidgetHierarchyUpdateInput {
  @override
  final GWorkItemID? parentId;
  @override
  final BuiltList<GWorkItemID>? childrenIds;

  factory _$GWorkItemWidgetHierarchyUpdateInput(
          [void Function(GWorkItemWidgetHierarchyUpdateInputBuilder)?
              updates]) =>
      (new GWorkItemWidgetHierarchyUpdateInputBuilder()..update(updates))
          ._build();

  _$GWorkItemWidgetHierarchyUpdateInput._({this.parentId, this.childrenIds})
      : super._();

  @override
  GWorkItemWidgetHierarchyUpdateInput rebuild(
          void Function(GWorkItemWidgetHierarchyUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemWidgetHierarchyUpdateInputBuilder toBuilder() =>
      new GWorkItemWidgetHierarchyUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemWidgetHierarchyUpdateInput &&
        parentId == other.parentId &&
        childrenIds == other.childrenIds;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, parentId.hashCode), childrenIds.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemWidgetHierarchyUpdateInput')
          ..add('parentId', parentId)
          ..add('childrenIds', childrenIds))
        .toString();
  }
}

class GWorkItemWidgetHierarchyUpdateInputBuilder
    implements
        Builder<GWorkItemWidgetHierarchyUpdateInput,
            GWorkItemWidgetHierarchyUpdateInputBuilder> {
  _$GWorkItemWidgetHierarchyUpdateInput? _$v;

  GWorkItemIDBuilder? _parentId;
  GWorkItemIDBuilder get parentId =>
      _$this._parentId ??= new GWorkItemIDBuilder();
  set parentId(GWorkItemIDBuilder? parentId) => _$this._parentId = parentId;

  ListBuilder<GWorkItemID>? _childrenIds;
  ListBuilder<GWorkItemID> get childrenIds =>
      _$this._childrenIds ??= new ListBuilder<GWorkItemID>();
  set childrenIds(ListBuilder<GWorkItemID>? childrenIds) =>
      _$this._childrenIds = childrenIds;

  GWorkItemWidgetHierarchyUpdateInputBuilder();

  GWorkItemWidgetHierarchyUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _parentId = $v.parentId?.toBuilder();
      _childrenIds = $v.childrenIds?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemWidgetHierarchyUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemWidgetHierarchyUpdateInput;
  }

  @override
  void update(
      void Function(GWorkItemWidgetHierarchyUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemWidgetHierarchyUpdateInput build() => _build();

  _$GWorkItemWidgetHierarchyUpdateInput _build() {
    _$GWorkItemWidgetHierarchyUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemWidgetHierarchyUpdateInput._(
              parentId: _parentId?.build(), childrenIds: _childrenIds?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'parentId';
        _parentId?.build();
        _$failedField = 'childrenIds';
        _childrenIds?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemWidgetHierarchyUpdateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemWidgetIterationInput extends GWorkItemWidgetIterationInput {
  @override
  final GIterationID? iterationId;

  factory _$GWorkItemWidgetIterationInput(
          [void Function(GWorkItemWidgetIterationInputBuilder)? updates]) =>
      (new GWorkItemWidgetIterationInputBuilder()..update(updates))._build();

  _$GWorkItemWidgetIterationInput._({this.iterationId}) : super._();

  @override
  GWorkItemWidgetIterationInput rebuild(
          void Function(GWorkItemWidgetIterationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemWidgetIterationInputBuilder toBuilder() =>
      new GWorkItemWidgetIterationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemWidgetIterationInput &&
        iterationId == other.iterationId;
  }

  @override
  int get hashCode {
    return $jf($jc(0, iterationId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemWidgetIterationInput')
          ..add('iterationId', iterationId))
        .toString();
  }
}

class GWorkItemWidgetIterationInputBuilder
    implements
        Builder<GWorkItemWidgetIterationInput,
            GWorkItemWidgetIterationInputBuilder> {
  _$GWorkItemWidgetIterationInput? _$v;

  GIterationIDBuilder? _iterationId;
  GIterationIDBuilder get iterationId =>
      _$this._iterationId ??= new GIterationIDBuilder();
  set iterationId(GIterationIDBuilder? iterationId) =>
      _$this._iterationId = iterationId;

  GWorkItemWidgetIterationInputBuilder();

  GWorkItemWidgetIterationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _iterationId = $v.iterationId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemWidgetIterationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemWidgetIterationInput;
  }

  @override
  void update(void Function(GWorkItemWidgetIterationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemWidgetIterationInput build() => _build();

  _$GWorkItemWidgetIterationInput _build() {
    _$GWorkItemWidgetIterationInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemWidgetIterationInput._(
              iterationId: _iterationId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'iterationId';
        _iterationId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemWidgetIterationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemWidgetStartAndDueDateUpdateInput
    extends GWorkItemWidgetStartAndDueDateUpdateInput {
  @override
  final GDate? dueDate;
  @override
  final GDate? startDate;

  factory _$GWorkItemWidgetStartAndDueDateUpdateInput(
          [void Function(GWorkItemWidgetStartAndDueDateUpdateInputBuilder)?
              updates]) =>
      (new GWorkItemWidgetStartAndDueDateUpdateInputBuilder()..update(updates))
          ._build();

  _$GWorkItemWidgetStartAndDueDateUpdateInput._({this.dueDate, this.startDate})
      : super._();

  @override
  GWorkItemWidgetStartAndDueDateUpdateInput rebuild(
          void Function(GWorkItemWidgetStartAndDueDateUpdateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemWidgetStartAndDueDateUpdateInputBuilder toBuilder() =>
      new GWorkItemWidgetStartAndDueDateUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemWidgetStartAndDueDateUpdateInput &&
        dueDate == other.dueDate &&
        startDate == other.startDate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, dueDate.hashCode), startDate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GWorkItemWidgetStartAndDueDateUpdateInput')
          ..add('dueDate', dueDate)
          ..add('startDate', startDate))
        .toString();
  }
}

class GWorkItemWidgetStartAndDueDateUpdateInputBuilder
    implements
        Builder<GWorkItemWidgetStartAndDueDateUpdateInput,
            GWorkItemWidgetStartAndDueDateUpdateInputBuilder> {
  _$GWorkItemWidgetStartAndDueDateUpdateInput? _$v;

  GDateBuilder? _dueDate;
  GDateBuilder get dueDate => _$this._dueDate ??= new GDateBuilder();
  set dueDate(GDateBuilder? dueDate) => _$this._dueDate = dueDate;

  GDateBuilder? _startDate;
  GDateBuilder get startDate => _$this._startDate ??= new GDateBuilder();
  set startDate(GDateBuilder? startDate) => _$this._startDate = startDate;

  GWorkItemWidgetStartAndDueDateUpdateInputBuilder();

  GWorkItemWidgetStartAndDueDateUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _dueDate = $v.dueDate?.toBuilder();
      _startDate = $v.startDate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemWidgetStartAndDueDateUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemWidgetStartAndDueDateUpdateInput;
  }

  @override
  void update(
      void Function(GWorkItemWidgetStartAndDueDateUpdateInputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemWidgetStartAndDueDateUpdateInput build() => _build();

  _$GWorkItemWidgetStartAndDueDateUpdateInput _build() {
    _$GWorkItemWidgetStartAndDueDateUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GWorkItemWidgetStartAndDueDateUpdateInput._(
              dueDate: _dueDate?.build(), startDate: _startDate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'dueDate';
        _dueDate?.build();
        _$failedField = 'startDate';
        _startDate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWorkItemWidgetStartAndDueDateUpdateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWorkItemWidgetWeightInput extends GWorkItemWidgetWeightInput {
  @override
  final int? weight;

  factory _$GWorkItemWidgetWeightInput(
          [void Function(GWorkItemWidgetWeightInputBuilder)? updates]) =>
      (new GWorkItemWidgetWeightInputBuilder()..update(updates))._build();

  _$GWorkItemWidgetWeightInput._({this.weight}) : super._();

  @override
  GWorkItemWidgetWeightInput rebuild(
          void Function(GWorkItemWidgetWeightInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWorkItemWidgetWeightInputBuilder toBuilder() =>
      new GWorkItemWidgetWeightInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWorkItemWidgetWeightInput && weight == other.weight;
  }

  @override
  int get hashCode {
    return $jf($jc(0, weight.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWorkItemWidgetWeightInput')
          ..add('weight', weight))
        .toString();
  }
}

class GWorkItemWidgetWeightInputBuilder
    implements
        Builder<GWorkItemWidgetWeightInput, GWorkItemWidgetWeightInputBuilder> {
  _$GWorkItemWidgetWeightInput? _$v;

  int? _weight;
  int? get weight => _$this._weight;
  set weight(int? weight) => _$this._weight = weight;

  GWorkItemWidgetWeightInputBuilder();

  GWorkItemWidgetWeightInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _weight = $v.weight;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWorkItemWidgetWeightInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWorkItemWidgetWeightInput;
  }

  @override
  void update(void Function(GWorkItemWidgetWeightInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWorkItemWidgetWeightInput build() => _build();

  _$GWorkItemWidgetWeightInput _build() {
    final _$result = _$v ?? new _$GWorkItemWidgetWeightInput._(weight: weight);
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: always_put_control_body_on_new_line,always_specify_types,annotate_overrides,avoid_annotating_with_dynamic,avoid_as,avoid_catches_without_on_clauses,avoid_returning_this,deprecated_member_use_from_same_package,lines_longer_than_80_chars,no_leading_underscores_for_local_identifiers,omit_local_variable_types,prefer_expression_function_bodies,sort_constructors_first,test_types_in_equals,unnecessary_const,unnecessary_new,unnecessary_lambdas
